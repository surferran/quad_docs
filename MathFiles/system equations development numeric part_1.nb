(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 10.1' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    455326,       8939]
NotebookOptionsPosition[    452328,       8837]
NotebookOutlinePosition[    452670,       8852]
CellTagsIndexPosition[    452627,       8849]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["numeric investigation", "Chapter",
 CellChangeTimes->{{3.7172257291757402`*^9, 3.7172257352087445`*^9}}],

Cell[BoxData[
 RowBox[{"Quit", "[", "]"}]], "Input",
 CellChangeTimes->{{3.7172257572203655`*^9, 3.717225760081267*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"dispSimp", " ", "=", " ", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{
        SuperscriptBox["devTerm_", "\[Prime]",
         MultilineFunction->None], "[", "t", "]"}], "\[Rule]", 
       OverscriptBox["devTerm", "."]}], ",", 
      RowBox[{
       RowBox[{
        SuperscriptBox["devTerm_", "\[Prime]\[Prime]",
         MultilineFunction->None], "[", "t", "]"}], "\[Rule]", 
       OverscriptBox[
        OverscriptBox["devTerm", "."], "."]}], ",", 
      RowBox[{
       RowBox[{"aTerm_", "[", "t", "]"}], "\[Rule]", "aTerm"}], ",", "  ", 
      RowBox[{
       RowBox[{"Cos", "[", "a_", "]"}], "\[Rule]", 
       RowBox[{"c", "[", "a", "]"}]}], ",", 
      RowBox[{
       RowBox[{"Sin", "[", "a_", "]"}], "\[Rule]", 
       RowBox[{"s", "[", "a", "]"}]}], ",", 
      RowBox[{
       SubscriptBox["\[ImaginaryI]", 
        RowBox[{"i_", ",", "zz"}]], "->", 
       SubscriptBox["I", "i"]}]}], "}"}]}], ";"}], " "}]], "Input",
 CellChangeTimes->{3.7172257849147596`*^9}],

Cell[CellGroupData[{

Cell["equations of motion ", "Subchapter",
 CellChangeTimes->{{3.717232550697135*^9, 3.7172325646564064`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"\[ScriptCapitalX]", "=", 
    RowBox[{"(", GridBox[{
       {
        RowBox[{
         SubscriptBox["x", "p"], "[", "t", "]"}]},
       {
        RowBox[{
         SubscriptBox["y", "p"], "[", "t", "]"}]},
       {
        RowBox[{
         SubscriptBox["\[Theta]", "p"], "[", "t", "]"}]}
      }], ")"}]}], ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{"NonDimEOMmatrixForm", "=", 
       RowBox[{
        RowBox[{
         RowBox[{"D", "[", 
          RowBox[{"\[ScriptCapitalX]", ",", 
           RowBox[{"{", 
            RowBox[{"t", ",", "2"}], "}"}]}], "]"}], "\[Equal]", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"(", GridBox[{
                {"1", "0", "0"},
                {"0", 
                 RowBox[{"-", "1"}], "0"},
                {"0", "0", "\[Alpha]"}
               }], ")"}], 
             SubscriptBox["DX", "1"]}], ")"}], ".", 
           SubscriptBox["\[ScriptCapitalV]", "1"]}], "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"(", GridBox[{
                {"1", "0", "0"},
                {"0", 
                 RowBox[{"-", "1"}], "0"},
                {"0", "0", 
                 RowBox[{"-", "\[Alpha]"}]}
               }], ")"}], 
             SubscriptBox["DX", "2"]}], ")"}], ".", 
           SubscriptBox["\[ScriptCapitalV]", "2"]}], "-", 
          RowBox[{"(", GridBox[{
             {"0"},
             {"\[Gamma]"},
             {"0"}
            }], ")"}], "-", "\[ScriptCapitalA]", "-", "\[ScriptCapitalD]"}]}],
         "//", "Flatten"}]}], ")"}], "/.", "dispSimp"}], "//", "MatrixForm"}],
    "//", "TraditionalForm"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   SubscriptBox["DX", "1"], "=", 
   RowBox[{"1", "-", 
    FractionBox["1", 
     SqrtBox[
      RowBox[{
       SubsuperscriptBox["dx", "1", "2"], "+", 
       SubsuperscriptBox["dy", "1", "2"]}]]]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   SubscriptBox["DX", "2"], "=", 
   RowBox[{"1", "-", 
    FractionBox["1", 
     SqrtBox[
      RowBox[{
       SubsuperscriptBox["dx", "2", "2"], "+", 
       SubsuperscriptBox["dy", "2", "2"]}]]]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Alpha]", "=", 
   RowBox[{
    FractionBox["3", 
     RowBox[{"(", 
      RowBox[{
       SuperscriptBox[
        RowBox[{"(", 
         FractionBox[
          SubscriptBox["h", "p"], 
          SubscriptBox["w", "p"]], ")"}], "2"], "+", "1"}], ")"}]], 
    SuperscriptBox[
     RowBox[{"(", 
      FractionBox["1", 
       SubscriptBox["w", "p"]], ")"}], "2"]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   SubscriptBox["\[ScriptCapitalV]", "1"], "=", 
   RowBox[{"(", GridBox[{
      {
       SubscriptBox["dx", "1"]},
      {
       SubscriptBox["dy", "1"]},
      {"term1"}
     }], ")"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   SubscriptBox["\[ScriptCapitalV]", "2"], "=", 
   RowBox[{"(", GridBox[{
      {
       SubscriptBox["dx", "2"]},
      {
       SubscriptBox["dy", "2"]},
      {"term2"}
     }], ")"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Gamma]", "=", 
   FractionBox[
    RowBox[{"g", " ", 
     SubscriptBox["m", "p"]}], 
    RowBox[{
     SubscriptBox["L0", "1"], 
     SubscriptBox["k", "1"]}]]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   SubscriptBox["\[Omega]", "s"], "=", 
   FractionBox[
    SubscriptBox["k", "1"], 
    SubscriptBox["m", "p"]]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[ScriptCapitalA]", "=", 
   RowBox[{
    RowBox[{"(", GridBox[{
       {
        RowBox[{"\[Rho]", " ", 
         SubscriptBox["C", "D"], " ", 
         SubscriptBox["h", "p"], " ", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "u"}], "+", 
            RowBox[{
             SuperscriptBox[
              SubscriptBox["x", "p"], "\[Prime]",
              MultilineFunction->None], "[", "t", "]"}]}], ")"}], "2"], 
         SuperscriptBox[
          RowBox[{"(", 
           SubscriptBox["L0", "1"], ")"}], "2"], 
         FractionBox["1", 
          SubscriptBox["m", "p"]]}]},
       {
        RowBox[{"\[Rho]", " ", 
         SubscriptBox["C", "D"], " ", 
         SubscriptBox["w", "p"], " ", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "v"}], "+", 
            RowBox[{
             SuperscriptBox[
              SubscriptBox["y", "p"], "\[Prime]",
              MultilineFunction->None], "[", "t", "]"}]}], ")"}], "2"], 
         SuperscriptBox[
          RowBox[{"(", 
           SubscriptBox["L0", "1"], ")"}], "2"], 
         FractionBox["1", 
          SubscriptBox["m", "p"]]}]},
       {"0"}
      }], ")"}], "//", "Flatten"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[ScriptCapitalD]", "=", 
   RowBox[{
    RowBox[{"(", GridBox[{
       {
        RowBox[{
         RowBox[{
          SubscriptBox["c", "x"], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", 
             RowBox[{
              SuperscriptBox[
               SubscriptBox["x", "1"], "\[Prime]",
               MultilineFunction->None], "[", "t", "]"}]}], "+", 
            RowBox[{
             SuperscriptBox[
              SubscriptBox["x", "p"], "\[Prime]",
              MultilineFunction->None], "[", "t", "]"}]}], ")"}], 
          FractionBox["1", 
           SubscriptBox["k", "1"]]}], "+", 
         RowBox[{
          SubscriptBox["c", "x"], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", 
             RowBox[{
              SuperscriptBox[
               SubscriptBox["x", "2"], "\[Prime]",
               MultilineFunction->None], "[", "t", "]"}]}], "+", 
            RowBox[{
             SuperscriptBox[
              SubscriptBox["x", "p"], "\[Prime]",
              MultilineFunction->None], "[", "t", "]"}]}], ")"}], 
          FractionBox["1", 
           SubscriptBox["k", "1"]]}]}]},
       {
        RowBox[{
         RowBox[{
          SubscriptBox["c", "y"], 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", 
             RowBox[{
              SuperscriptBox[
               SubscriptBox["y", "1"], "\[Prime]",
               MultilineFunction->None], "[", "t", "]"}]}], "+", 
            RowBox[{
             SuperscriptBox[
              SubscriptBox["y", "p"], "\[Prime]",
              MultilineFunction->None], "[", "t", "]"}]}], ")"}], 
          FractionBox["1", 
           SubscriptBox["k", "1"]]}], "+", 
         RowBox[{
          SubscriptBox["c", "y"], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", 
             RowBox[{
              SuperscriptBox[
               SubscriptBox["y", "2"], "\[Prime]",
               MultilineFunction->None], "[", "t", "]"}]}], "+", 
            RowBox[{
             SuperscriptBox[
              SubscriptBox["y", "p"], "\[Prime]",
              MultilineFunction->None], "[", "t", "]"}]}], ")"}], 
          FractionBox["1", 
           SubscriptBox["k", "1"]]}]}]},
       {
        RowBox[{
         FractionBox["1", "1"], 
         FractionBox["1", 
          SubscriptBox["k", "1"]], 
         SubscriptBox["c", "\[Theta]"], " ", 
         RowBox[{
          SuperscriptBox[
           SubscriptBox["\[Theta]", "p"], "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}]}
      }], ")"}], "//", "Flatten"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    SubscriptBox["L0", "1"], "=", "1"}], ";"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{"greekTermsGeneralForTest", "=", 
    RowBox[{"{", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       SuperscriptBox[
        SubscriptBox["\[Omega]", "s"], "2"], "\[Rule]", 
       FractionBox[
        SubscriptBox["k", "1"], 
        SubscriptBox["m", "p"]]}], ",", "\[IndentingNewLine]", 
      RowBox[{"\[Alpha]", "\[Rule]", 
       FractionBox[
        RowBox[{"3", 
         SuperscriptBox[
          SubscriptBox["L0", "1"], "2"]}], 
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox[
           SubscriptBox["w", "p"], "2"], "+", 
          SuperscriptBox[
           SubscriptBox["h", "p"], "2"]}], ")"}]]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"\[Gamma]", "->", 
       RowBox[{"(", 
        FractionBox[
         RowBox[{"g", " ", 
          SubscriptBox["m", "p"]}], 
         RowBox[{
          SubscriptBox["L0", "1"], 
          SubscriptBox["k", "1"]}]], ")"}]}]}], "\[IndentingNewLine]", 
     "}"}]}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{"**", "**", "**", "**", "**", "**", "**", "**", "**"}], 
   "*****)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"bigTermsToShort", "=", 
   RowBox[{"{", 
    RowBox[{"(*", 
     RowBox[{
      RowBox[{
       RowBox[{
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"Sin", "[", 
             RowBox[{
              SubscriptBox["\[Theta]", "p"], "[", "t", "]"}], "]"}], " ", 
            SubscriptBox["h", "p"]}], "+", 
           RowBox[{
            RowBox[{"Cos", "[", 
             RowBox[{
              SubscriptBox["\[Theta]", "p"], "[", "t", "]"}], "]"}], " ", 
            SubscriptBox["w", "p"]}], "+", 
           RowBox[{
            SubscriptBox["x", "1"], "[", "t", "]"}], "-", 
           RowBox[{
            SubscriptBox["x", "p"], "[", "t", "]"}]}], ")"}], "2"], "+", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"Cos", "[", 
             RowBox[{
              SubscriptBox["\[Theta]", "p"], "[", "t", "]"}], "]"}], " ", 
            SubscriptBox["h", "p"]}], "-", 
           RowBox[{
            RowBox[{"Sin", "[", 
             RowBox[{
              SubscriptBox["\[Theta]", "p"], "[", "t", "]"}], "]"}], " ", 
            SubscriptBox["w", "p"]}], "-", 
           RowBox[{
            SubscriptBox["y", "1"], "[", "t", "]"}], "+", 
           RowBox[{
            SubscriptBox["y", "p"], "[", "t", "]"}]}], ")"}], "2"]}], 
       "\[Rule]", "l1"}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"Sin", "[", 
             RowBox[{
              SubscriptBox["\[Theta]", "p"], "[", "t", "]"}], "]"}], " ", 
            SubscriptBox["h", "p"]}], "-", 
           RowBox[{
            RowBox[{"Cos", "[", 
             RowBox[{
              SubscriptBox["\[Theta]", "p"], "[", "t", "]"}], "]"}], " ", 
            SubscriptBox["w", "p"]}], "+", 
           RowBox[{
            SubscriptBox["x", "2"], "[", "t", "]"}], "-", 
           RowBox[{
            SubscriptBox["x", "p"], "[", "t", "]"}]}], ")"}], "2"], "+", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"Cos", "[", 
             RowBox[{
              SubscriptBox["\[Theta]", "p"], "[", "t", "]"}], "]"}], " ", 
            SubscriptBox["h", "p"]}], "+", 
           RowBox[{
            RowBox[{"Sin", "[", 
             RowBox[{
              SubscriptBox["\[Theta]", "p"], "[", "t", "]"}], "]"}], " ", 
            SubscriptBox["w", "p"]}], "-", 
           RowBox[{
            SubscriptBox["y", "2"], "[", "t", "]"}], "+", 
           RowBox[{
            SubscriptBox["y", "p"], "[", "t", "]"}]}], ")"}], "2"]}], 
       "\[Rule]", "l2"}], ","}], "*)"}], "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"Sin", "[", 
         RowBox[{
          SubscriptBox["\[Theta]", "p"], "[", "t", "]"}], "]"}], " ", 
        SubscriptBox["h", "p"]}], "+", 
       RowBox[{
        RowBox[{"Cos", "[", 
         RowBox[{
          SubscriptBox["\[Theta]", "p"], "[", "t", "]"}], "]"}], " ", 
        SubscriptBox["w", "p"]}], "+", 
       RowBox[{
        SubscriptBox["x", "1"], "[", "t", "]"}], "-", 
       RowBox[{
        SubscriptBox["x", "p"], "[", "t", "]"}]}], "\[Rule]", 
      SubscriptBox["dx", "1"]}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"Cos", "[", 
          RowBox[{
           SubscriptBox["\[Theta]", "p"], "[", "t", "]"}], "]"}], " ", 
         SubscriptBox["h", "p"]}], "-", 
        RowBox[{
         RowBox[{"Sin", "[", 
          RowBox[{
           SubscriptBox["\[Theta]", "p"], "[", "t", "]"}], "]"}], " ", 
         SubscriptBox["w", "p"]}], "-", 
        RowBox[{
         SubscriptBox["y", "1"], "[", "t", "]"}], "+", 
        RowBox[{
         SubscriptBox["y", "p"], "[", "t", "]"}]}], ")"}], "\[Rule]", 
      SubscriptBox["dy", "1"]}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"Sin", "[", 
         RowBox[{
          SubscriptBox["\[Theta]", "p"], "[", "t", "]"}], "]"}], " ", 
        SubscriptBox["h", "p"]}], "-", 
       RowBox[{
        RowBox[{"Cos", "[", 
         RowBox[{
          SubscriptBox["\[Theta]", "p"], "[", "t", "]"}], "]"}], " ", 
        SubscriptBox["w", "p"]}], "+", 
       RowBox[{
        SubscriptBox["x", "2"], "[", "t", "]"}], "-", 
       RowBox[{
        SubscriptBox["x", "p"], "[", "t", "]"}]}], "\[Rule]", 
      SubscriptBox["dx", "2"]}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"Cos", "[", 
         RowBox[{
          SubscriptBox["\[Theta]", "p"], "[", "t", "]"}], "]"}], " ", 
        SubscriptBox["h", "p"]}], "+", 
       RowBox[{
        RowBox[{"Sin", "[", 
         RowBox[{
          SubscriptBox["\[Theta]", "p"], "[", "t", "]"}], "]"}], " ", 
        SubscriptBox["w", "p"]}], "-", 
       RowBox[{
        SubscriptBox["y", "2"], "[", "t", "]"}], "+", 
       RowBox[{
        SubscriptBox["y", "p"], "[", "t", "]"}]}], "\[Rule]", 
      SubscriptBox["dy", "2"]}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{
        SubscriptBox["w", "p"], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"Sin", "[", 
            RowBox[{
             SubscriptBox["\[Theta]", "p"], "[", "t", "]"}], "]"}], " ", 
           RowBox[{
            SubscriptBox["x", "1"], "[", "t", "]"}]}], "-", 
          RowBox[{
           RowBox[{"Sin", "[", 
            RowBox[{
             SubscriptBox["\[Theta]", "p"], "[", "t", "]"}], "]"}], " ", 
           RowBox[{
            SubscriptBox["x", "p"], "[", "t", "]"}]}], "+", 
          RowBox[{
           RowBox[{"Cos", "[", 
            RowBox[{
             SubscriptBox["\[Theta]", "p"], "[", "t", "]"}], "]"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", 
              RowBox[{
               SubscriptBox["y", "1"], "[", "t", "]"}]}], "+", 
             RowBox[{
              SubscriptBox["y", "p"], "[", "t", "]"}]}], ")"}]}]}], ")"}]}], 
       "+", 
       RowBox[{
        SubscriptBox["h", "p"], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", 
            RowBox[{"Cos", "[", 
             RowBox[{
              SubscriptBox["\[Theta]", "p"], "[", "t", "]"}], "]"}]}], " ", 
           RowBox[{
            SubscriptBox["x", "1"], "[", "t", "]"}]}], "+", 
          RowBox[{
           RowBox[{"Cos", "[", 
            RowBox[{
             SubscriptBox["\[Theta]", "p"], "[", "t", "]"}], "]"}], " ", 
           RowBox[{
            SubscriptBox["x", "p"], "[", "t", "]"}]}], "+", 
          RowBox[{
           RowBox[{"Sin", "[", 
            RowBox[{
             SubscriptBox["\[Theta]", "p"], "[", "t", "]"}], "]"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", 
              RowBox[{
               SubscriptBox["y", "1"], "[", "t", "]"}]}], "+", 
             RowBox[{
              SubscriptBox["y", "p"], "[", "t", "]"}]}], ")"}]}]}], ")"}]}]}],
       "\[Rule]", "term1"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{
        SubscriptBox["h", "p"], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"Cos", "[", 
            RowBox[{
             SubscriptBox["\[Theta]", "p"], "[", "t", "]"}], "]"}], " ", 
           RowBox[{
            SubscriptBox["x", "2"], "[", "t", "]"}]}], "-", 
          RowBox[{
           RowBox[{"Cos", "[", 
            RowBox[{
             SubscriptBox["\[Theta]", "p"], "[", "t", "]"}], "]"}], " ", 
           RowBox[{
            SubscriptBox["x", "p"], "[", "t", "]"}]}], "+", 
          RowBox[{
           RowBox[{"Sin", "[", 
            RowBox[{
             SubscriptBox["\[Theta]", "p"], "[", "t", "]"}], "]"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              SubscriptBox["y", "2"], "[", "t", "]"}], "-", 
             RowBox[{
              SubscriptBox["y", "p"], "[", "t", "]"}]}], ")"}]}]}], ")"}]}], 
       "+", 
       RowBox[{
        SubscriptBox["w", "p"], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"Sin", "[", 
            RowBox[{
             SubscriptBox["\[Theta]", "p"], "[", "t", "]"}], "]"}], " ", 
           RowBox[{
            SubscriptBox["x", "2"], "[", "t", "]"}]}], "-", 
          RowBox[{
           RowBox[{"Sin", "[", 
            RowBox[{
             SubscriptBox["\[Theta]", "p"], "[", "t", "]"}], "]"}], " ", 
           RowBox[{
            SubscriptBox["x", "p"], "[", "t", "]"}]}], "+", 
          RowBox[{
           RowBox[{"Cos", "[", 
            RowBox[{
             SubscriptBox["\[Theta]", "p"], "[", "t", "]"}], "]"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", 
              RowBox[{
               SubscriptBox["y", "2"], "[", "t", "]"}]}], "+", 
             RowBox[{
              SubscriptBox["y", "p"], "[", "t", "]"}]}], ")"}]}]}], ")"}]}]}],
       "\[Rule]", "term2"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"-", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"Cos", "[", 
           RowBox[{
            SubscriptBox["\[Theta]", "p"], "[", "t", "]"}], "]"}], " ", 
          SubscriptBox["h", "p"]}], "-", 
         RowBox[{
          RowBox[{"Sin", "[", 
           RowBox[{
            SubscriptBox["\[Theta]", "p"], "[", "t", "]"}], "]"}], " ", 
          SubscriptBox["w", "p"]}], "-", 
         RowBox[{
          SubscriptBox["y", "1"], "[", "t", "]"}], "+", 
         RowBox[{
          SubscriptBox["y", "p"], "[", "t", "]"}]}], ")"}]}], "\[Rule]", 
      RowBox[{"-", 
       SubscriptBox["dy", "1"]}]}]}], "\[IndentingNewLine]", "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{"dxdytermDetails", "=", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"Rule", "[", 
          RowBox[{
           RowBox[{"bigTermsToShort", "[", 
            RowBox[{"[", 
             RowBox[{"i", ",", "2"}], "]"}], "]"}], " ", ",", 
           RowBox[{"bigTermsToShort", "[", 
            RowBox[{"[", 
             RowBox[{"i", ",", "1"}], "]"}], "]"}]}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "1", ",", 
           RowBox[{"Length", "[", "bigTermsToShort", "]"}]}], "}"}]}], 
        "]"}]}], ")"}], "//.", "dispSimp"}], "//", "MatrixForm"}], "//", 
   "TraditionalForm"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{"**", "**", "**", "**", "**", "**", "**", "**", "**"}], 
   "*****)"}]}], "\[IndentingNewLine]", 
 RowBox[{"NonDimEOMmatrixForm", "//", "TraditionalForm"}]}], "Input",
 CellChangeTimes->{{3.716898375591523*^9, 3.7168984117251787`*^9}, {
   3.716900923605528*^9, 3.7169010210252357`*^9}, {3.716901740197019*^9, 
   3.7169017847336016`*^9}, 3.716901907996804*^9, {3.716902070642125*^9, 
   3.7169022182137213`*^9}, {3.7169023193318853`*^9, 3.716902371670212*^9}, {
   3.7169025354850187`*^9, 3.716902597184207*^9}, {3.71690321993578*^9, 
   3.716903236927066*^9}, {3.716903284677245*^9, 3.7169032871028533`*^9}, {
   3.7169033759318533`*^9, 3.7169034226058545`*^9}, {3.716912550345021*^9, 
   3.7169125560478077`*^9}, {3.7169126846622353`*^9, 3.716912691004446*^9}, 
   3.716912849260778*^9, {3.7169137522270875`*^9, 3.7169137546857195`*^9}, {
   3.716913990622938*^9, 3.7169140265688133`*^9}, {3.716918102455212*^9, 
   3.71691810281345*^9}, {3.7169183576084623`*^9, 3.716918371840917*^9}, {
   3.7169184095359535`*^9, 3.7169184235992966`*^9}, 3.716944541038337*^9, {
   3.7169445723011026`*^9, 3.7169445787643957`*^9}, {3.7169446395278816`*^9, 
   3.7169446875787873`*^9}, 3.716945573242057*^9, {3.716947913681145*^9, 
   3.7169479260913887`*^9}, {3.7169479603851666`*^9, 
   3.7169481324499655`*^9}, {3.716948181423492*^9, 3.7169481871282816`*^9}, {
   3.7169482306417513`*^9, 3.7169482359202576`*^9}, {3.716967187574686*^9, 
   3.7169671889085703`*^9}, {3.7169672611955824`*^9, 3.716967262218264*^9}, {
   3.7169723613820343`*^9, 3.7169724448764863`*^9}, {3.7169816966459055`*^9, 
   3.7169817065094566`*^9}, {3.7169817963541317`*^9, 3.716981823003831*^9}, 
   3.716981859351529*^9, {3.716981932149544*^9, 3.7169819533986597`*^9}, {
   3.716982009792117*^9, 3.7169820156259904`*^9}, {3.7169821062530017`*^9, 
   3.716982213030924*^9}, {3.716982279638631*^9, 3.71698233507646*^9}, {
   3.716982372013283*^9, 3.716982386252741*^9}, 3.716982660504959*^9, {
   3.7169948780946293`*^9, 3.716994895019904*^9}, {3.717225721397572*^9, 
   3.7172257250519996`*^9}, 3.7172257550769415`*^9, {3.7172258011105175`*^9, 
   3.7172258975187063`*^9}, {3.717225995595849*^9, 3.7172259970578203`*^9}, {
   3.7172279060665197`*^9, 3.717227938338956*^9}, 3.717228043210472*^9, {
   3.717228114597887*^9, 3.717228146823291*^9}, {3.717228298829943*^9, 
   3.717228356074561*^9}, {3.7172286214465013`*^9, 3.7172286369798203`*^9}, {
   3.7172290207281113`*^9, 3.7172290764167924`*^9}, {3.7172366507579203`*^9, 
   3.717236656566779*^9}},
 Background->RGBColor[0.88, 1, 0.88]],

Cell[BoxData[
 FormBox[
  TagBox[
   RowBox[{"(", "\[NoBreak]", 
    TagBox[GridBox[{
       {
        RowBox[{
         SubscriptBox["dx", "1"], "\[Rule]", 
         RowBox[{
          RowBox[{
           SubscriptBox["w", "p"], " ", 
           RowBox[{"c", "(", 
            SubscriptBox["\[Theta]", "p"], ")"}]}], "+", 
          RowBox[{
           SubscriptBox["h", "p"], " ", 
           RowBox[{"s", "(", 
            SubscriptBox["\[Theta]", "p"], ")"}]}], "-", 
          SubscriptBox["x", "p"], "+", 
          SubscriptBox["x", "1"]}]}]},
       {
        RowBox[{
         SubscriptBox["dy", "1"], "\[Rule]", 
         RowBox[{
          RowBox[{
           SubscriptBox["h", "p"], " ", 
           RowBox[{"c", "(", 
            SubscriptBox["\[Theta]", "p"], ")"}]}], "-", 
          RowBox[{
           SubscriptBox["w", "p"], " ", 
           RowBox[{"s", "(", 
            SubscriptBox["\[Theta]", "p"], ")"}]}], "+", 
          SubscriptBox["y", "p"], "-", 
          SubscriptBox["y", "1"]}]}]},
       {
        RowBox[{
         SubscriptBox["dx", "2"], "\[Rule]", 
         RowBox[{
          RowBox[{"-", 
           RowBox[{
            SubscriptBox["w", "p"], " ", 
            RowBox[{"c", "(", 
             SubscriptBox["\[Theta]", "p"], ")"}]}]}], "+", 
          RowBox[{
           SubscriptBox["h", "p"], " ", 
           RowBox[{"s", "(", 
            SubscriptBox["\[Theta]", "p"], ")"}]}], "-", 
          SubscriptBox["x", "p"], "+", 
          SubscriptBox["x", "2"]}]}]},
       {
        RowBox[{
         SubscriptBox["dy", "2"], "\[Rule]", 
         RowBox[{
          RowBox[{
           SubscriptBox["h", "p"], " ", 
           RowBox[{"c", "(", 
            SubscriptBox["\[Theta]", "p"], ")"}]}], "+", 
          RowBox[{
           SubscriptBox["w", "p"], " ", 
           RowBox[{"s", "(", 
            SubscriptBox["\[Theta]", "p"], ")"}]}], "+", 
          SubscriptBox["y", "p"], "-", 
          SubscriptBox["y", "2"]}]}]},
       {
        RowBox[{"term1", "\[Rule]", 
         RowBox[{
          RowBox[{
           SubscriptBox["h", "p"], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              SubscriptBox["x", "1"], " ", 
              RowBox[{"(", 
               RowBox[{"-", 
                RowBox[{"c", "(", 
                 SubscriptBox["\[Theta]", "p"], ")"}]}], ")"}]}], "+", 
             RowBox[{
              SubscriptBox["x", "p"], " ", 
              RowBox[{"c", "(", 
               SubscriptBox["\[Theta]", "p"], ")"}]}], "+", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                SubscriptBox["y", "p"], "-", 
                SubscriptBox["y", "1"]}], ")"}], " ", 
              RowBox[{"s", "(", 
               SubscriptBox["\[Theta]", "p"], ")"}]}]}], ")"}]}], "+", 
          RowBox[{
           SubscriptBox["w", "p"], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                SubscriptBox["y", "p"], "-", 
                SubscriptBox["y", "1"]}], ")"}], " ", 
              RowBox[{"c", "(", 
               SubscriptBox["\[Theta]", "p"], ")"}]}], "+", 
             RowBox[{
              SubscriptBox["x", "1"], " ", 
              RowBox[{"s", "(", 
               SubscriptBox["\[Theta]", "p"], ")"}]}], "-", 
             RowBox[{
              SubscriptBox["x", "p"], " ", 
              RowBox[{"s", "(", 
               SubscriptBox["\[Theta]", "p"], ")"}]}]}], ")"}]}]}]}]},
       {
        RowBox[{"term2", "\[Rule]", 
         RowBox[{
          RowBox[{
           SubscriptBox["h", "p"], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              SubscriptBox["x", "2"], " ", 
              RowBox[{"c", "(", 
               SubscriptBox["\[Theta]", "p"], ")"}]}], "-", 
             RowBox[{
              SubscriptBox["x", "p"], " ", 
              RowBox[{"c", "(", 
               SubscriptBox["\[Theta]", "p"], ")"}]}], "+", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                SubscriptBox["y", "2"], "-", 
                SubscriptBox["y", "p"]}], ")"}], " ", 
              RowBox[{"s", "(", 
               SubscriptBox["\[Theta]", "p"], ")"}]}]}], ")"}]}], "+", 
          RowBox[{
           SubscriptBox["w", "p"], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                SubscriptBox["y", "p"], "-", 
                SubscriptBox["y", "2"]}], ")"}], " ", 
              RowBox[{"c", "(", 
               SubscriptBox["\[Theta]", "p"], ")"}]}], "+", 
             RowBox[{
              SubscriptBox["x", "2"], " ", 
              RowBox[{"s", "(", 
               SubscriptBox["\[Theta]", "p"], ")"}]}], "-", 
             RowBox[{
              SubscriptBox["x", "p"], " ", 
              RowBox[{"s", "(", 
               SubscriptBox["\[Theta]", "p"], ")"}]}]}], ")"}]}]}]}]},
       {
        RowBox[{
         RowBox[{"-", 
          SubscriptBox["dy", "1"]}], "\[Rule]", 
         RowBox[{
          RowBox[{
           SubscriptBox["h", "p"], " ", 
           RowBox[{"(", 
            RowBox[{"-", 
             RowBox[{"c", "(", 
              SubscriptBox["\[Theta]", "p"], ")"}]}], ")"}]}], "+", 
          RowBox[{
           SubscriptBox["w", "p"], " ", 
           RowBox[{"s", "(", 
            SubscriptBox["\[Theta]", "p"], ")"}]}], "-", 
          SubscriptBox["y", "p"], "+", 
          SubscriptBox["y", "1"]}]}]}
      },
      GridBoxAlignment->{
       "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
        "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.5599999999999999]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}],
     Column], "\[NoBreak]", ")"}],
   Function[BoxForm`e$, 
    MatrixForm[BoxForm`e$]]], TraditionalForm]], "Output",
 CellChangeTimes->{
  3.717225939607663*^9, {3.7172280955862584`*^9, 3.717228149133827*^9}, {
   3.717228336551*^9, 3.717228360848729*^9}, 3.7172286662932863`*^9, 
   3.7172290851405845`*^9, {3.7172325328672934`*^9, 3.7172325382528706`*^9}, 
   3.7172366723622704`*^9, {3.717237545403114*^9, 3.717237548509177*^9}, {
   3.717242156111374*^9, 3.717242161576002*^9}, {3.717242640263004*^9, 
   3.717242655443085*^9}, 3.71724522961913*^9, {3.7172804962773933`*^9, 
   3.7172804987494516`*^9}}],

Cell[BoxData[
 FormBox[
  RowBox[{
   RowBox[{"(", "\[NoBreak]", GridBox[{
      {
       RowBox[{
        SuperscriptBox[
         SubscriptBox["x", "p"], "\[Prime]\[Prime]",
         MultilineFunction->None], "(", "t", ")"}]},
      {
       RowBox[{
        SuperscriptBox[
         SubscriptBox["y", "p"], "\[Prime]\[Prime]",
         MultilineFunction->None], "(", "t", ")"}]},
      {
       RowBox[{
        SuperscriptBox[
         SubscriptBox["\[Theta]", "p"], "\[Prime]\[Prime]",
         MultilineFunction->None], "(", "t", ")"}]}
     },
     GridBoxAlignment->{
      "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}},
        "RowsIndexed" -> {}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.7]}, 
         Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
         Offset[0.2], {
          Offset[0.4]}, 
         Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}], 
   "\[LongEqual]", 
   RowBox[{"(", "\[NoBreak]", GridBox[{
      {
       RowBox[{
        RowBox[{"-", 
         FractionBox[
          RowBox[{"\[Rho]", " ", 
           SubscriptBox["C", "D"], " ", 
           SubscriptBox["h", "p"], " ", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               SuperscriptBox[
                SubscriptBox["x", "p"], "\[Prime]",
                MultilineFunction->None], "(", "t", ")"}], "-", "u"}], ")"}], 
            "2"]}], 
          SubscriptBox["m", "p"]]}], "+", 
        RowBox[{
         SubscriptBox["dx", "1"], " ", 
         RowBox[{"(", 
          RowBox[{"1", "-", 
           FractionBox["1", 
            SqrtBox[
             RowBox[{
              SubsuperscriptBox["dx", "1", "2"], "+", 
              SubsuperscriptBox["dy", "1", "2"]}]]]}], ")"}]}], "+", 
        RowBox[{
         SubscriptBox["dx", "2"], " ", 
         RowBox[{"(", 
          RowBox[{"1", "-", 
           FractionBox["1", 
            SqrtBox[
             RowBox[{
              SubsuperscriptBox["dx", "2", "2"], "+", 
              SubsuperscriptBox["dy", "2", "2"]}]]]}], ")"}]}], "-", 
        FractionBox[
         RowBox[{
          SubscriptBox["c", "x"], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             SuperscriptBox[
              SubscriptBox["x", "p"], "\[Prime]",
              MultilineFunction->None], "(", "t", ")"}], "-", 
            RowBox[{
             SuperscriptBox[
              SubscriptBox["x", "1"], "\[Prime]",
              MultilineFunction->None], "(", "t", ")"}]}], ")"}]}], 
         SubscriptBox["k", "1"]], "-", 
        FractionBox[
         RowBox[{
          SubscriptBox["c", "x"], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             SuperscriptBox[
              SubscriptBox["x", "p"], "\[Prime]",
              MultilineFunction->None], "(", "t", ")"}], "-", 
            RowBox[{
             SuperscriptBox[
              SubscriptBox["x", "2"], "\[Prime]",
              MultilineFunction->None], "(", "t", ")"}]}], ")"}]}], 
         SubscriptBox["k", "1"]]}]},
      {
       RowBox[{
        RowBox[{"-", 
         FractionBox[
          RowBox[{"\[Rho]", " ", 
           SubscriptBox["C", "D"], " ", 
           SubscriptBox["w", "p"], " ", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               SuperscriptBox[
                SubscriptBox["y", "p"], "\[Prime]",
                MultilineFunction->None], "(", "t", ")"}], "-", "v"}], ")"}], 
            "2"]}], 
          SubscriptBox["m", "p"]]}], "+", 
        RowBox[{
         SubscriptBox["dy", "1"], " ", 
         RowBox[{"(", 
          RowBox[{
           FractionBox["1", 
            SqrtBox[
             RowBox[{
              SubsuperscriptBox["dx", "1", "2"], "+", 
              SubsuperscriptBox["dy", "1", "2"]}]]], "-", "1"}], ")"}]}], "+", 
        RowBox[{
         SubscriptBox["dy", "2"], " ", 
         RowBox[{"(", 
          RowBox[{
           FractionBox["1", 
            SqrtBox[
             RowBox[{
              SubsuperscriptBox["dx", "2", "2"], "+", 
              SubsuperscriptBox["dy", "2", "2"]}]]], "-", "1"}], ")"}]}], "-", 
        FractionBox[
         RowBox[{"g", " ", 
          SubscriptBox["m", "p"]}], 
         SubscriptBox["k", "1"]], "-", 
        FractionBox[
         RowBox[{
          SubscriptBox["c", "y"], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             SuperscriptBox[
              SubscriptBox["y", "p"], "\[Prime]",
              MultilineFunction->None], "(", "t", ")"}], "-", 
            RowBox[{
             SuperscriptBox[
              SubscriptBox["y", "1"], "\[Prime]",
              MultilineFunction->None], "(", "t", ")"}]}], ")"}]}], 
         SubscriptBox["k", "1"]], "-", 
        FractionBox[
         RowBox[{
          SubscriptBox["c", "y"], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             SuperscriptBox[
              SubscriptBox["y", "p"], "\[Prime]",
              MultilineFunction->None], "(", "t", ")"}], "-", 
            RowBox[{
             SuperscriptBox[
              SubscriptBox["y", "2"], "\[Prime]",
              MultilineFunction->None], "(", "t", ")"}]}], ")"}]}], 
         SubscriptBox["k", "1"]]}]},
      {
       RowBox[{
        FractionBox[
         RowBox[{"3", " ", "term1", " ", 
          RowBox[{"(", 
           RowBox[{"1", "-", 
            FractionBox["1", 
             SqrtBox[
              RowBox[{
               SubsuperscriptBox["dx", "1", "2"], "+", 
               SubsuperscriptBox["dy", "1", "2"]}]]]}], ")"}]}], 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            FractionBox[
             SubsuperscriptBox["h", "p", "2"], 
             SubsuperscriptBox["w", "p", "2"]], "+", "1"}], ")"}], " ", 
          SubsuperscriptBox["w", "p", "2"]}]], "-", 
        FractionBox[
         RowBox[{
          SubscriptBox["c", "\[Theta]"], " ", 
          RowBox[{
           SuperscriptBox[
            SubscriptBox["\[Theta]", "p"], "\[Prime]",
            MultilineFunction->None], "(", "t", ")"}]}], 
         SubscriptBox["k", "1"]], "-", 
        FractionBox[
         RowBox[{"3", " ", "term2", " ", 
          RowBox[{"(", 
           RowBox[{"1", "-", 
            FractionBox["1", 
             SqrtBox[
              RowBox[{
               SubsuperscriptBox["dx", "2", "2"], "+", 
               SubsuperscriptBox["dy", "2", "2"]}]]]}], ")"}]}], 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            FractionBox[
             SubsuperscriptBox["h", "p", "2"], 
             SubsuperscriptBox["w", "p", "2"]], "+", "1"}], ")"}], " ", 
          SubsuperscriptBox["w", "p", "2"]}]]}]}
     },
     GridBoxAlignment->{
      "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}},
        "RowsIndexed" -> {}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.7]}, 
         Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
         Offset[0.2], {
          Offset[0.4]}, 
         Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}]}], 
  TraditionalForm]], "Output",
 CellChangeTimes->{
  3.717225939607663*^9, {3.7172280955862584`*^9, 3.717228149133827*^9}, {
   3.717228336551*^9, 3.717228360848729*^9}, 3.7172286662932863`*^9, 
   3.7172290851405845`*^9, {3.7172325328672934`*^9, 3.7172325382528706`*^9}, 
   3.7172366723622704`*^9, {3.717237545403114*^9, 3.717237548509177*^9}, {
   3.717242156111374*^9, 3.717242161576002*^9}, {3.717242640263004*^9, 
   3.717242655443085*^9}, 3.71724522961913*^9, {3.7172804962773933`*^9, 
   3.7172804987574496`*^9}}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["system parameters and inputs", "Subchapter",
 CellChangeTimes->{{3.7172284276631074`*^9, 3.7172284373855658`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"systemVariables", "[", "\[Epsilon]F_", "]"}], ":=", 
  RowBox[{"{", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"cFactor", "=", "0"}], ";", "  ", 
    RowBox[{"(*", " ", 
     RowBox[{"no", " ", "Structural", " ", "Damping"}], " ", "*)"}], 
    "\[IndentingNewLine]", 
    RowBox[{"(*", 
     RowBox[{
      RowBox[{"cFactor", "=", "0.1"}], ";"}], "  ", 
     RowBox[{"(*", " ", 
      RowBox[{"with", " ", "Structural", " ", "Damping"}], " ", "*)"}], 
     "*)"}], "\[IndentingNewLine]", 
    RowBox[{"geometricAndMechanicParameters", " ", "=", " ", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"g", "\[Rule]", "9.81"}], ",", 
          RowBox[{
           SubscriptBox["m", "p"], "\[Rule]", "1"}], ",", 
          RowBox[{
           SubscriptBox["k", "1"], "\[Rule]", "200"}]}], 
         RowBox[{"(*", 
          RowBox[{",", 
           RowBox[{
            SubscriptBox["L0", "1"], "\[Rule]", "1"}]}], "*)"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           SubscriptBox["w", "p"], "\[Rule]", "2"}], ",", 
          RowBox[{
           SubscriptBox["h", "p"], "\[Rule]", "1"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           SubscriptBox["c", "x"], "\[Rule]", "cFactor"}], ",", 
          RowBox[{
           SubscriptBox["c", "y"], "\[Rule]", "cFactor"}], ",", 
          RowBox[{
           SubscriptBox["c", "\[Theta]"], "\[Rule]", "cFactor"}]}], "}"}]}], 
       "}"}], "//", "Flatten"}]}], ";", "\[IndentingNewLine]", 
    RowBox[{"platForceVar", "=", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        SubscriptBox["v", "y"], "\[Rule]", "0"}], ",", 
       RowBox[{"(*", 
        RowBox[{
         RowBox[{"\[Epsilon]F", "\[Rule]", "1"}], ","}], "*)"}], 
       RowBox[{
        SubscriptBox["\[CapitalOmega]", "y"], "\[Rule]", "2"}]}], "}"}]}], 
    ";", "\[IndentingNewLine]", 
    RowBox[{"(*", 
     RowBox[{"platformInputs", "=", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{
           SubscriptBox["x", "1"], "[", "t", "]"}], "\[Rule]", "0"}], ",", 
         RowBox[{
          RowBox[{
           SubscriptBox["y", "1"], "[", "t", "]"}], "\[Rule]", "0"}], ",", 
         RowBox[{
          RowBox[{
           SubscriptBox["x", "2"], "[", "t", "]"}], "\[Rule]", 
          RowBox[{"2", 
           SubscriptBox["w", "p"]}]}], ",", 
         RowBox[{
          RowBox[{
           SubscriptBox["y", "2"], "[", "t", "]"}], "\[Rule]", "0"}]}], "}"}],
        " ", "/.", "geometricAndMechanicParameters"}]}], " ", 
     RowBox[{"(*", 
      RowBox[{"static", " ", "case"}], " ", "*)"}], "*)"}], 
    "\[IndentingNewLine]", 
    RowBox[{"platformInputs", "=", "  ", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{
            RowBox[{
             SubscriptBox["x", "1"], "[", "t", "]"}], "\[Rule]", "0"}], ",", 
           RowBox[{
            RowBox[{
             SubscriptBox["y", "1"], "[", "t", "]"}], "\[Rule]", 
            RowBox[{
             SubscriptBox["v", "y"], "+", 
             RowBox[{"\[Epsilon]F", " ", 
              RowBox[{"Sin", "[", 
               RowBox[{
                SubscriptBox["\[CapitalOmega]", "y"], "t"}], 
               RowBox[{"(*", 
                RowBox[{"/", 
                 SubscriptBox["\[Omega]", "s"]}], "*)"}], "]"}]}]}]}], ",", 
           RowBox[{
            RowBox[{
             SubscriptBox["x", "2"], "[", "t", "]"}], "\[Rule]", 
            RowBox[{"2", 
             SubscriptBox["w", "p"]}]}], ",", 
           RowBox[{
            RowBox[{
             SubscriptBox["y", "2"], "[", "t", "]"}], "\[Rule]", 
            RowBox[{
             SubscriptBox["y", "1"], "[", "t", "]"}]}]}], "}"}], "/.", 
         "platForceVar"}], "//", "Flatten"}], " ", ")"}], "/.", 
      "geometricAndMechanicParameters"}]}], "   ", 
    RowBox[{"(*", " ", 
     RowBox[{"\[CapitalOmega]", "[", "Hz", "]"}], " ", "*)"}], ";", 
    RowBox[{"(*", 
     RowBox[{"symmetric", " ", "elevating", " ", "case"}], " ", "*)"}], 
    "\[IndentingNewLine]", 
    RowBox[{"environmentalParameters", " ", "=", " ", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"\[Rho]", "\[Rule]", "1.225"}], ",", " ", 
       RowBox[{
        SubscriptBox["C", "D"], "\[Rule]", "0"}]}], "}"}]}], " ", 
    RowBox[{"(*", " ", 
     RowBox[{"no", " ", "drag", " ", "forces"}], " ", "*)"}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"(*", 
     RowBox[{"environmentalParameters", " ", "=", " ", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"\[Rho]", "\[Rule]", "1.225"}], ",", " ", 
        RowBox[{
         SubscriptBox["C", "D"], "\[Rule]", "1.1"}]}], "}"}]}], "*)"}], 
    "\[IndentingNewLine]", 
    RowBox[{"(*", " ", 
     RowBox[{"start", " ", "conditions"}], " ", "*)"}], " ", 
    "\[IndentingNewLine]", 
    RowBox[{"payloadEquibLocation", " ", "=", " ", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{
          SubscriptBox["x", "p"], "[", "0", "]"}], "\[Rule]", 
         SubscriptBox["w", "p"]}], ",", 
        RowBox[{
         RowBox[{
          SubscriptBox["y", "p"], "[", "0", "]"}], "\[Rule]", 
         RowBox[{"-", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             FractionBox["1", "2"], "\[Gamma]"}], "+", 
            SubscriptBox["h", "p"], "+", "1"}], ")"}]}]}], ",", 
        RowBox[{
         RowBox[{
          SubscriptBox["\[Theta]", "p"], "[", "0", "]"}], "\[Rule]", "0"}]}], 
       "}"}], "  ", "/.", "geometricAndMechanicParameters"}]}], 
    RowBox[{"(*", " ", 
     RowBox[{"the", " ", "equilibrium", " ", "point"}], " ", "*)"}], ";", 
    "\[IndentingNewLine]", "\[IndentingNewLine]", 
    RowBox[{"allSystemBasicVariables", " ", "=", " ", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "geometricAndMechanicParameters", ",", "platformInputs", ",", 
        "environmentalParameters", ",", "platForceVar"}], "}"}], "//", 
      "Flatten"}]}], ";"}], "\[IndentingNewLine]", "}"}]}]], "Input",
 CellChangeTimes->{{3.717226104058791*^9, 3.717226170899186*^9}, {
   3.7172274144895816`*^9, 3.717227442541898*^9}, {3.7172274843146434`*^9, 
   3.717227634549616*^9}, {3.7172281565637627`*^9, 3.7172282851698723`*^9}, {
   3.7172283701769247`*^9, 3.717228421149783*^9}, 3.717228462337138*^9, {
   3.717228516549146*^9, 3.7172285582074947`*^9}, {3.717228683216527*^9, 
   3.7172286834396744`*^9}, {3.717228773240398*^9, 3.7172288082556562`*^9}, {
   3.717228839359315*^9, 3.7172288418589745`*^9}, {3.7172289102917566`*^9, 
   3.7172289224088063`*^9}, {3.717229273389392*^9, 3.717229385794051*^9}, {
   3.7172295102153673`*^9, 3.7172295539053855`*^9}, {3.7172295997998695`*^9, 
   3.7172296455204897`*^9}, {3.717229865855307*^9, 3.7172298679116745`*^9}, {
   3.7172305449050274`*^9, 3.717230567532056*^9}, 3.7172326138520823`*^9, {
   3.717232693337353*^9, 3.7172327094070244`*^9}, {3.71723275154101*^9, 
   3.7172327874698734`*^9}, {3.717232888988434*^9, 3.7172329295343637`*^9}, {
   3.7172368765774803`*^9, 3.7172368954870396`*^9}, {3.7172369544711957`*^9, 
   3.717236956667655*^9}, {3.7172375966321397`*^9, 3.7172376158789234`*^9}, {
   3.717240013903698*^9, 3.717240078239428*^9}, {3.7172403108476267`*^9, 
   3.7172403110497613`*^9}, {3.7172404097678223`*^9, 3.717240431363166*^9}, {
   3.717240482575183*^9, 3.717240484151228*^9}, {3.7172405299166284`*^9, 
   3.7172405300297003`*^9}, {3.7172415222971973`*^9, 3.7172415557764344`*^9}, 
   3.7172437567269974`*^9, {3.7172833405304184`*^9, 3.717283341595126*^9}}],

Cell[CellGroupData[{

Cell["work functions", "Subsection",
 CellChangeTimes->{{3.717242685510056*^9, 3.7172426878706236`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"calcSol", "[", 
   RowBox[{"Fmag_", 
    RowBox[{"(*", 
     RowBox[{",", "T_"}], "*)"}], ",", "startValues_"}], " ", 
   RowBox[{"(*", 
    RowBox[{"vec", " ", "of", " ", "6"}], "*)"}], "]"}], ":=", 
  RowBox[{"{", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"systemVariables", "[", "Fmag", "]"}], ";", "\[IndentingNewLine]", 
    RowBox[{"(", 
     RowBox[{"numericEOM", " ", "=", " ", 
      RowBox[{
       RowBox[{"NonDimEOMmatrixForm", "//.", "dxdytermDetails"}], "  ", "//.",
        "allSystemBasicVariables"}]}], 
     RowBox[{"(*", 
      RowBox[{
       RowBox[{
        RowBox[{"//.", " ", "platformInputs"}], "//.", 
        "environmentalParameters"}], "//.", " ", 
       "geometricAndMechanicParameters"}], "*)"}], ")"}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"numericEqs", "=", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{
              RowBox[{
               RowBox[{"X1", "'"}], "[", "t", "]"}], "\[Equal]", 
              RowBox[{"X2", "[", "t", "]"}]}], ",", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{
               RowBox[{"X2", "'"}], "[", "t", "]"}], "\[Equal]", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"numericEOM", "[", 
                 RowBox[{"[", 
                  RowBox[{"2", ",", "1"}], "]"}], "]"}], "[", 
                RowBox[{"[", "1", "]"}], "]"}], ")"}]}], ",", 
             "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{
               RowBox[{"X3", "'"}], "[", "t", "]"}], "\[Equal]", 
              RowBox[{"X4", "[", "t", "]"}]}], ",", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{
               RowBox[{"X4", "'"}], "[", "t", "]"}], "\[Equal]", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"numericEOM", "[", 
                 RowBox[{"[", 
                  RowBox[{"2", ",", "2"}], "]"}], "]"}], "[", 
                RowBox[{"[", "1", "]"}], "]"}], ")"}]}], ",", 
             "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{
               RowBox[{"X5", "'"}], "[", "t", "]"}], "\[Equal]", 
              RowBox[{"X6", "[", "t", "]"}]}], ",", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{
               RowBox[{"X6", "'"}], "[", "t", "]"}], "\[Equal]", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"numericEOM", "[", 
                 RowBox[{"[", 
                  RowBox[{"2", ",", "3"}], "]"}], "]"}], "[", 
                RowBox[{"[", "1", "]"}], "]"}], ")"}]}]}], "}"}], "/.", 
           RowBox[{
            RowBox[{
             SubscriptBox["x", "p"], "[", "t", "]"}], "\[Rule]", 
            RowBox[{"X1", "[", "t", "]"}]}]}], "/.", 
          RowBox[{
           RowBox[{
            SubscriptBox["y", "p"], "[", "t", "]"}], "\[Rule]", 
           RowBox[{"X3", "[", "t", "]"}]}]}], "/.", 
         RowBox[{
          RowBox[{
           SubscriptBox["\[Theta]", "p"], "[", "t", "]"}], "\[Rule]", 
          RowBox[{"X5", "[", "t", "]"}]}]}], "/.", 
        RowBox[{
         RowBox[{"D", "[", 
          RowBox[{
           RowBox[{
            SubscriptBox["x", "p"], "[", "t", "]"}], ",", "t"}], "]"}], 
         "\[Rule]", 
         RowBox[{"X2", "[", "t", "]"}]}]}], "/.", 
       RowBox[{
        RowBox[{"D", "[", 
         RowBox[{
          RowBox[{
           SubscriptBox["y", "p"], "[", "t", "]"}], ",", "t"}], "]"}], 
        "\[Rule]", 
        RowBox[{"X4", "[", "t", "]"}]}]}], "/.", 
      RowBox[{
       RowBox[{"D", "[", 
        RowBox[{
         RowBox[{
          SubscriptBox["\[Theta]", "p"], "[", "t", "]"}], ",", "t"}], "]"}], 
       "\[Rule]", 
       RowBox[{"X6", "[", "t", "]"}]}]}]}], ";", "\[IndentingNewLine]", 
    "\[IndentingNewLine]", 
    RowBox[{"(*", 
     RowBox[{
      RowBox[{"Print", "[", "\"\<platformInputs : \>\"", "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"Print", "[", "platformInputs", "]"}], ";"}], "*)"}], 
    "\[IndentingNewLine]", 
    RowBox[{"initValuesEquations", "=", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"X1", "[", "0", "]"}], "\[Equal]", 
        RowBox[{"startValues", "[", 
         RowBox[{"[", "1", "]"}], "]"}]}], ",", 
       RowBox[{
        RowBox[{"X2", "[", "0", "]"}], "==", 
        RowBox[{"startValues", "[", 
         RowBox[{"[", "2", "]"}], "]"}]}], ",", 
       RowBox[{
        RowBox[{"X3", "[", "0", "]"}], "\[Equal]", 
        RowBox[{"startValues", "[", 
         RowBox[{"[", "3", "]"}], "]"}]}], ",", "\t\t\t\t\t", 
       RowBox[{
        RowBox[{"X4", "[", "0", "]"}], "==", 
        RowBox[{"startValues", "[", 
         RowBox[{"[", "4", "]"}], "]"}]}], ",", 
       RowBox[{
        RowBox[{"X5", "[", "0", "]"}], "\[Equal]", 
        RowBox[{"startValues", "[", 
         RowBox[{"[", "5", "]"}], "]"}]}], ",", 
       RowBox[{
        RowBox[{"X6", "[", "0", "]"}], "==", 
        RowBox[{"startValues", "[", 
         RowBox[{"[", "6", "]"}], "]"}]}]}], "}"}]}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<expectedPeriod by Forcing period:\>\"", " ", ",", 
      "\[IndentingNewLine]", " ", 
      RowBox[{"expectedPeriod", "=", 
       RowBox[{
        RowBox[{
         RowBox[{"2", 
          RowBox[{"\[Pi]", "/", 
           RowBox[{"(", 
            SubscriptBox["\[CapitalOmega]", "y"], 
            RowBox[{"(*", " ", 
             RowBox[{"/", 
              SubscriptBox["\[Omega]", "s"]}], "*)"}], ")"}]}]}], "//.", " ", 
         "allSystemBasicVariables"}], "  ", "//", "N"}]}], ",", 
      "\"\<[non-dim time]\>\""}], "}"}], ";", "\[IndentingNewLine]", 
    RowBox[{"(*", 
     RowBox[{"{", 
      RowBox[{
      "\"\<expectedPeriod by Forcing period:\>\"", " ", ",", 
       "\[IndentingNewLine]", " ", 
       RowBox[{"(*", 
        RowBox[{"expectedPeriod", "="}], "*)"}], 
       RowBox[{
        RowBox[{
         RowBox[{"2", 
          RowBox[{"\[Pi]", "/", 
           RowBox[{"(", 
            RowBox[{
             SubscriptBox["\[CapitalOmega]", "y"], " ", "/", 
             SubscriptBox["\[Omega]", "s"]}], ")"}]}]}], "//.", " ", 
         "allSystemBasicVariables"}], "  ", "//", "N"}], ",", 
       "\"\<[sec]\>\""}], "}"}], "*)"}], "\[IndentingNewLine]", 
    "\"\<T set to : \>\"", ";", "\[IndentingNewLine]", 
    RowBox[{"T", "=", 
     RowBox[{"2", "*", "expectedPeriod"}]}], ";", "\[IndentingNewLine]", 
    RowBox[{"sectionTime", "=", 
     RowBox[{
      FractionBox["9", "10"], "T"}]}], ";", "\[IndentingNewLine]", 
    "\[IndentingNewLine]", 
    RowBox[{"sol1", " ", "=", " ", 
     RowBox[{"NDSolve", "[", " ", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"numericEqs", ",", " ", "initValuesEquations"}], "}"}], ",", 
       " ", 
       RowBox[{"{", 
        RowBox[{
        "X1", ",", " ", "X2", ",", "X3", ",", "X4", ",", "X5", ",", "X6"}], 
        "}"}], ",", " ", 
       RowBox[{"{", 
        RowBox[{"t", ",", " ", "0", ",", " ", "T"}], "}"}], ",", 
       RowBox[{"MaxSteps", " ", "->", " ", 
        RowBox[{"Floor", "[", 
         RowBox[{"1000", "*", "T"}], "]"}]}]}], " ", "]"}]}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"sol1", "[", 
     RowBox[{"[", "1", "]"}], "]"}]}], "  ", 
   RowBox[{"(*", " ", 
    RowBox[{"the", " ", 
     RowBox[{"value", "/", "data"}], " ", "to", " ", "return"}], " ", "*)"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   "}"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"poincare", "[", 
   RowBox[{"d_", ",", "ndrop_", ",", "nplot_", ",", "psize_"}], "]"}], ":=", 
  RowBox[{"(", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"gg", "[", "prevStartValues_", "]"}], ":=", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"X1", "[", "T", "]"}], ",", 
          RowBox[{"X2", "[", "T", "]"}], ",", 
          RowBox[{"X3", "[", "T", "]"}], ",", 
          RowBox[{"X4", "[", "T", "]"}], ",", 
          RowBox[{"X5", "[", "T", "]"}], ",", 
          RowBox[{"X6", "[", "T", "]"}]}], "}"}], "/.", "\[InvisibleSpace]", 
        RowBox[{"calcSol", "[", 
         RowBox[{"d", ",", 
          RowBox[{"(*", " ", 
           RowBox[{"T", ","}], "*)"}], "prevStartValues"}], "]"}]}], ")"}], 
      "[", 
      RowBox[{"[", "1", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
    RowBox[{"(*", 
     RowBox[{
      RowBox[{"Print", "[", 
       RowBox[{"calcSol", "[", 
        RowBox[{"d", ",", " ", "T", ",", "startValuesFromStatic"}], "]"}], 
       "]"}], ";"}], "*)"}], "\[IndentingNewLine]", 
    RowBox[{"(*", 
     RowBox[{
      RowBox[{"Print", "[", 
       RowBox[{"gg", "[", 
        RowBox[{"startValuesFromStatic", "[", 
         RowBox[{"[", 
          RowBox[{"All", ",", "2"}], "]"}], "]"}], "]"}], "]"}], ";"}], 
     "*)"}], "\[IndentingNewLine]", 
    RowBox[{"extList", "=", 
     RowBox[{"Drop", "[", 
      RowBox[{
       RowBox[{"NestList", "[", 
        RowBox[{"gg", ",", 
         RowBox[{"startValuesFromEquib", "[", 
          RowBox[{"[", 
           RowBox[{"All", ",", "2"}], "]"}], "]"}], ",", 
         RowBox[{"nplot", "+", "ndrop"}]}], "]"}], ",", "ndrop"}], "]"}]}], 
    ";", "\[IndentingNewLine]", 
    RowBox[{"(*", 
     RowBox[{
      RowBox[{"Print", "[", "extList", "]"}], ";"}], "*)"}], 
    "\[IndentingNewLine]", 
    RowBox[{"pX", "=", 
     RowBox[{"ListPlot", "[", 
      RowBox[{
       RowBox[{"Transpose", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"extList", "[", 
           RowBox[{"[", 
            RowBox[{"All", ",", "1"}], "]"}], "]"}], ",", 
          RowBox[{"extList", "[", 
           RowBox[{"[", 
            RowBox[{"All", ",", "2"}], "]"}], "]"}]}], "}"}], "]"}], ",", 
       RowBox[{"PlotStyle", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"PointSize", "[", "psize", "]"}], ",", 
          RowBox[{"Hue", "[", "0", "]"}]}], "}"}]}], ",", 
       RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
       RowBox[{"AxesLabel", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"\"\<x\>\"", ",", "\"\<x'\>\""}], "}"}]}]}], "]"}]}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"pY", "=", 
     RowBox[{"ListPlot", "[", 
      RowBox[{
       RowBox[{"Transpose", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"extList", "[", 
           RowBox[{"[", 
            RowBox[{"All", ",", "3"}], "]"}], "]"}], ",", 
          RowBox[{"extList", "[", 
           RowBox[{"[", 
            RowBox[{"All", ",", "4"}], "]"}], "]"}]}], "}"}], "]"}], ",", 
       RowBox[{"PlotStyle", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"PointSize", "[", "psize", "]"}], ",", 
          RowBox[{"Hue", "[", "0", "]"}]}], "}"}]}], ",", 
       RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
       RowBox[{"AxesLabel", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"\"\<y\>\"", ",", "\"\<y'\>\""}], "}"}]}]}], "]"}]}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"p\[Theta]", "=", 
     RowBox[{"ListPlot", "[", 
      RowBox[{
       RowBox[{"Transpose", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"extList", "[", 
           RowBox[{"[", 
            RowBox[{"All", ",", "5"}], "]"}], "]"}], ",", 
          RowBox[{"extList", "[", 
           RowBox[{"[", 
            RowBox[{"All", ",", "6"}], "]"}], "]"}]}], "}"}], "]"}], ",", 
       RowBox[{"PlotStyle", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"PointSize", "[", "psize", "]"}], ",", 
          RowBox[{"Hue", "[", "0", "]"}]}], "}"}]}], ",", 
       RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
       RowBox[{"AxesLabel", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"\"\<\[Theta]\>\"", ",", "\"\<\[Theta]'\>\""}], "}"}]}]}], 
      "]"}]}], ";", "\[IndentingNewLine]", 
    RowBox[{"{", 
     RowBox[{"pX", ",", "pY", ",", "p\[Theta]"}], "}"}]}], 
   "\[IndentingNewLine]", ")"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"bifurcation", "[", 
   RowBox[{
   "dmin_", ",", "dmax_", ",", "nd_", ",", "ndrop_", ",", "nplot_", ",", 
    "psize_"}], "]"}], ":=", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{
     RowBox[{"gg", "[", 
      RowBox[{"{", 
       RowBox[{"prevStartValues_", ",", "d_"}], "}"}], "]"}], ":=", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"X1", "[", "T", "]"}], ",", 
            RowBox[{"X2", "[", "T", "]"}], ",", 
            RowBox[{"X3", "[", "T", "]"}], ",", 
            RowBox[{"X4", "[", "T", "]"}], ",", 
            RowBox[{"X5", "[", "T", "]"}], ",", 
            RowBox[{"X6", "[", "T", "]"}]}], "}"}], ",", "d"}], "}"}], "/.", 
        "\[InvisibleSpace]", 
        RowBox[{"calcSol", "[", 
         RowBox[{"d", ",", 
          RowBox[{"(*", " ", 
           RowBox[{"T", ","}], "*)"}], "prevStartValues"}], "]"}]}], ")"}], 
      "[", 
      RowBox[{"[", "1", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"baseList", "[", "d_", "]"}], ":=", 
     RowBox[{"Drop", "[", 
      RowBox[{
       RowBox[{"NestList", "[", 
        RowBox[{"gg", ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"startValuesFromEquib", "[", 
            RowBox[{"[", 
             RowBox[{"All", ",", "2"}], "]"}], "]"}], ",", "d"}], "}"}], ",", 
         RowBox[{"nplot", "+", "ndrop"}]}], "]"}], ",", "ndrop"}], "]"}]}], 
    ";", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"fX", "[", 
      RowBox[{"{", 
       RowBox[{"x_", ",", "d_"}], "}"}], "]"}], ":=", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"xElement", " ", "=", " ", 
        RowBox[{"x", "[", 
         RowBox[{"[", "1", "]"}], "]"}]}], ";", " ", 
       RowBox[{"{", 
        RowBox[{"d", ",", 
         RowBox[{"x", "[", 
          RowBox[{"[", "1", "]"}], "]"}]}], "}"}]}], ")"}]}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"Print", "[", 
     RowBox[{"{", 
      RowBox[{"\"\<number of solution to solve are :\>\"", ",", 
       RowBox[{"nd", 
        RowBox[{"(", 
         RowBox[{"nplot", "+", "ndrop"}], ")"}]}], ",", 
       "\"\<for T long each \>\"", ",", " ", "T"}], "}"}], "]"}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"tableListX", "=", 
     RowBox[{"Flatten", "[", 
      RowBox[{
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"fX", "/@", 
          RowBox[{"(", 
           RowBox[{"baseList", "[", "d", "]"}], ")"}]}], ",", 
         RowBox[{"{", 
          RowBox[{"d", ",", "dmin", ",", "dmax", ",", 
           FractionBox[
            RowBox[{"dmax", "-", "dmin"}], "nd"]}], "}"}]}], "]"}], ",", 
       "1"}], "]"}]}], ";", "\[IndentingNewLine]", 
    RowBox[{"(*", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"tableListX", "=", 
          RowBox[{"Flatten", "[", 
           RowBox[{"Table", "[", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{
               RowBox[{"(", 
                RowBox[{"baseList", "[", "d", "]"}], ")"}], "[", 
               RowBox[{"[", 
                RowBox[{"1", ",", "1"}], "]"}], "]"}], ",", 
              RowBox[{"{", 
               RowBox[{"d", ",", "dmin", ",", "dmax", ",", 
                FractionBox[
                 RowBox[{"dmax", "-", "dmin"}], "nd"]}], "}"}]}]}]}]}]}], 
         "]"}], ",", "1"}], "]"}], ";"}], "*)"}], "\[IndentingNewLine]", 
    RowBox[{"(*", 
     RowBox[{
      RowBox[{"Print", "[", "extList", "]"}], ";"}], "*)"}], 
    "\[IndentingNewLine]", 
    RowBox[{"pX", "=", 
     RowBox[{"ListPlot", "[", 
      RowBox[{"tableListX", ",", 
       RowBox[{"PlotStyle", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"PointSize", "[", "psize", "]"}], ",", 
          RowBox[{"Hue", "[", "0", "]"}]}], "}"}]}], ",", 
       RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
       RowBox[{"AxesLabel", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"\"\<\[Epsilon]F\>\"", ",", "\"\<x\>\""}], "}"}]}]}], 
      "]"}]}], ";", "\[IndentingNewLine]", 
    RowBox[{"(*", 
     RowBox[{
      RowBox[{"pY", "=", 
       RowBox[{"ListPlot", "[", 
        RowBox[{
         RowBox[{"Transpose", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"extList", "[", 
             RowBox[{"[", 
              RowBox[{"All", ",", "3"}], "]"}], "]"}], ",", 
            RowBox[{"extList", "[", 
             RowBox[{"[", 
              RowBox[{"All", ",", "4"}], "]"}], "]"}]}], "}"}], "]"}], ",", 
         RowBox[{"PlotStyle", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"PointSize", "[", "psize", "]"}], ",", 
            RowBox[{"Hue", "[", "0", "]"}]}], "}"}]}], ",", 
         RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
         RowBox[{"AxesLabel", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{"\"\<y\>\"", ",", "\"\<y'\>\""}], "}"}]}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"p\[Theta]", "=", 
       RowBox[{"ListPlot", "[", 
        RowBox[{
         RowBox[{"Transpose", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"extList", "[", 
             RowBox[{"[", 
              RowBox[{"All", ",", "5"}], "]"}], "]"}], ",", 
            RowBox[{"extList", "[", 
             RowBox[{"[", 
              RowBox[{"All", ",", "6"}], "]"}], "]"}]}], "}"}], "]"}], ",", 
         RowBox[{"PlotStyle", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"PointSize", "[", "psize", "]"}], ",", 
            RowBox[{"Hue", "[", "0", "]"}]}], "}"}]}], ",", 
         RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
         RowBox[{"AxesLabel", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{"\"\<\[Theta]\>\"", ",", "\"\<\[Theta]'\>\""}], "}"}]}]}], 
        "]"}]}], ";"}], "\[IndentingNewLine]", "*)"}], 
    RowBox[{"(*", 
     RowBox[{"{", 
      RowBox[{"pX", ",", "pY", ",", "p\[Theta]"}], "}"}], "*)"}], 
    "\[IndentingNewLine]", "pX"}], "\[IndentingNewLine]", ")"}]}]}], "Input",
 CellChangeTimes->{{3.717230466071659*^9, 3.717230468141034*^9}, {
   3.717230600532975*^9, 3.7172306184408703`*^9}, {3.717230677813305*^9, 
   3.7172306846868715`*^9}, {3.717230718954632*^9, 3.717230737059655*^9}, {
   3.71723268495078*^9, 3.7172326863997426`*^9}, {3.7172363504234133`*^9, 
   3.7172363824306726`*^9}, {3.717236470151409*^9, 3.7172364753048325`*^9}, {
   3.7172368370001893`*^9, 3.7172368472229815`*^9}, {3.7172374138782616`*^9, 
   3.717237417912941*^9}, {3.717237476554895*^9, 3.7172374875526886`*^9}, {
   3.7172376936987123`*^9, 3.7172377155842485`*^9}, 3.717238366519404*^9, {
   3.717238836811897*^9, 3.717238840321227*^9}, 3.7172389477256823`*^9, {
   3.7172389810508194`*^9, 3.717238989020114*^9}, {3.717239024351577*^9, 
   3.7172390280630417`*^9}, 3.7172393965155754`*^9, 3.717239672638378*^9, 
   3.71723972285073*^9, {3.71723981562335*^9, 3.717239850344906*^9}, {
   3.7172401361719093`*^9, 3.717240139469098*^9}, {3.717241150847312*^9, 
   3.717241151173525*^9}, 3.717241246600909*^9, 3.717242081598881*^9, 
   3.717242341094761*^9, {3.717242679914339*^9, 3.7172426808169384`*^9}, 
   3.717242908359479*^9, {3.717243846728324*^9, 3.7172439226387424`*^9}, {
   3.717245343740912*^9, 3.717245362150141*^9}, {3.7172855319827285`*^9, 
   3.7172855341731834`*^9}, 3.7172855713755856`*^9}],

Cell[" ", "Text",
 Editable->False,
 Selectable->False,
 CellFrame->{{0, 0}, {0, 0.5}},
 ShowCellBracket->False,
 CellMargins->{{0, 0}, {1, 1}},
 CellElementSpacings->{"CellMinHeight"->1},
 CellFrameMargins->0,
 CellFrameColor->RGBColor[0, 0, 1],
 CellSize->{Inherited, 3}]
}, Open  ]],

Cell[CellGroupData[{

Cell["printing functions", "Subsection",
 CellChangeTimes->{{3.7172306418093925`*^9, 3.7172306462073126`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"plotParametricPlots", "[", "midT_", "]"}], ":=", 
  RowBox[{"{", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"ParametricPlot", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"X1", "[", "t", "]"}], ",", 
           RowBox[{"X2", "[", "t", "]"}]}], "}"}], "/.", "\[InvisibleSpace]", 
         "sol1"}], ",", 
        RowBox[{"{", 
         RowBox[{"t", ",", "0", ",", "midT"}], "}"}], ",", 
        RowBox[{"AxesLabel", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"\"\<x\>\"", ",", "\"\<x'\>\""}], "}"}]}], ",", 
        RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
        RowBox[{"ColorFunction", "->", "\"\<Rainbow\>\""}]}], "]"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"ParametricPlot", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"X3", "[", "t", "]"}], ",", 
           RowBox[{"X4", "[", "t", "]"}]}], "}"}], "/.", "\[InvisibleSpace]", 
         "sol1"}], ",", 
        RowBox[{"{", 
         RowBox[{"t", ",", "0", ",", "midT"}], "}"}], ",", 
        RowBox[{"AxesLabel", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"\"\<y\>\"", ",", "\"\<y'\>\""}], "}"}]}], ",", 
        RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
        RowBox[{"ColorFunction", "->", "\"\<Rainbow\>\""}]}], "]"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"ParametricPlot", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"X5", "[", "t", "]"}], ",", 
           RowBox[{"X6", "[", "t", "]"}]}], "}"}], "/.", "\[InvisibleSpace]", 
         "sol1"}], ",", 
        RowBox[{"{", 
         RowBox[{"t", ",", "0", ",", "midT"}], "}"}], ",", 
        RowBox[{"AxesLabel", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"\"\<\[Theta]\>\"", ",", "\"\<\[Theta]'\>\""}], "}"}]}], 
        ",", 
        RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
        RowBox[{"ColorFunction", "->", "\"\<Rainbow\>\""}]}], "]"}]}], "}"}], 
    ",", "\[IndentingNewLine]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"ParametricPlot", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"X1", "[", "t", "]"}], ",", 
           RowBox[{"X2", "[", "t", "]"}]}], "}"}], "/.", "\[InvisibleSpace]", 
         "sol1"}], ",", 
        RowBox[{"{", 
         RowBox[{"t", ",", "midT", ",", "T"}], "}"}], ",", 
        RowBox[{"AxesLabel", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"\"\<x\>\"", ",", "\"\<x'\>\""}], "}"}]}], ",", 
        RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
        RowBox[{"ColorFunction", "->", "\"\<Rainbow\>\""}]}], "]"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"ParametricPlot", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"X3", "[", "t", "]"}], ",", 
           RowBox[{"X4", "[", "t", "]"}]}], "}"}], "/.", "\[InvisibleSpace]", 
         "sol1"}], ",", 
        RowBox[{"{", 
         RowBox[{"t", ",", "midT", ",", "T"}], "}"}], ",", 
        RowBox[{"AxesLabel", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"\"\<y\>\"", ",", "\"\<y'\>\""}], "}"}]}], ",", 
        RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
        RowBox[{"ColorFunction", "->", "\"\<Rainbow\>\""}]}], "]"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"ParametricPlot", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"X5", "[", "t", "]"}], ",", 
           RowBox[{"X6", "[", "t", "]"}]}], "}"}], "/.", "\[InvisibleSpace]", 
         "sol1"}], ",", 
        RowBox[{"{", 
         RowBox[{"t", ",", "midT", ",", "T"}], "}"}], ",", 
        RowBox[{"AxesLabel", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"\"\<\[Theta]\>\"", ",", "\"\<\[Theta]'\>\""}], "}"}]}], 
        ",", 
        RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
        RowBox[{"ColorFunction", "->", "\"\<Rainbow\>\""}]}], "]"}]}], "}"}], 
    ",", "\[IndentingNewLine]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Plot", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"{", 
          RowBox[{"X1", "[", "t", "]"}], "}"}], "/.", "\[InvisibleSpace]", 
         "sol1"}], ",", 
        RowBox[{"{", 
         RowBox[{"t", ",", "0", ",", "T"}], "}"}], ",", 
        RowBox[{"AxesLabel", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"\"\<t\>\"", ",", "\"\<x\>\""}], "}"}]}], ",", 
        RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
        RowBox[{"ColorFunction", "->", "\"\<Rainbow\>\""}]}], "]"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"Plot", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"{", 
          RowBox[{"X2", "[", "t", "]"}], "}"}], "/.", "\[InvisibleSpace]", 
         "sol1"}], ",", 
        RowBox[{"{", 
         RowBox[{"t", ",", "0", ",", "T"}], "}"}], ",", 
        RowBox[{"AxesLabel", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"\"\<t\>\"", ",", "\"\<x'\>\""}], "}"}]}], ",", 
        RowBox[{"PlotRange", "\[Rule]", "All"}]}], 
       RowBox[{"(*", 
        RowBox[{",", 
         RowBox[{"ColorFunction", "->", "\"\<Rainbow\>\""}]}], "*)"}], "]"}], 
      ",", "\[IndentingNewLine]", 
      RowBox[{"Plot", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"{", 
          RowBox[{"X3", "[", "t", "]"}], "}"}], "/.", "\[InvisibleSpace]", 
         "sol1"}], ",", 
        RowBox[{"{", 
         RowBox[{"t", ",", "0", ",", "T"}], "}"}], ",", 
        RowBox[{"AxesLabel", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"\"\<t\>\"", ",", "\"\<y\>\""}], "}"}]}], ",", 
        RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
        RowBox[{"ColorFunction", "->", "\"\<Rainbow\>\""}]}], "]"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"Plot", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"{", 
          RowBox[{"X4", "[", "t", "]"}], "}"}], "/.", "\[InvisibleSpace]", 
         "sol1"}], ",", 
        RowBox[{"{", 
         RowBox[{"t", ",", "0", ",", "T"}], "}"}], ",", 
        RowBox[{"AxesLabel", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"\"\<t\>\"", ",", "\"\<y'\>\""}], "}"}]}], ",", 
        RowBox[{"PlotRange", "\[Rule]", "All"}]}], 
       RowBox[{"(*", 
        RowBox[{",", 
         RowBox[{"ColorFunction", "->", "\"\<Rainbow\>\""}]}], "*)"}], "]"}], 
      ",", "\[IndentingNewLine]", 
      RowBox[{"Plot", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"{", 
          RowBox[{"X5", "[", "t", "]"}], "}"}], "/.", "\[InvisibleSpace]", 
         "sol1"}], ",", 
        RowBox[{"{", 
         RowBox[{"t", ",", "0", ",", "T"}], "}"}], ",", 
        RowBox[{"AxesLabel", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"\"\<t\>\"", ",", "\"\<\[Theta]\>\""}], "}"}]}], ",", 
        RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
        RowBox[{"ColorFunction", "->", "\"\<Rainbow\>\""}]}], "]"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"Plot", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"{", 
          RowBox[{"X6", "[", "t", "]"}], "}"}], "/.", "\[InvisibleSpace]", 
         "sol1"}], ",", 
        RowBox[{"{", 
         RowBox[{"t", ",", "0", ",", "T"}], "}"}], ",", 
        RowBox[{"AxesLabel", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"\"\<t\>\"", ",", "\"\<\[Theta]'\>\""}], "}"}]}], ",", 
        RowBox[{"PlotRange", "\[Rule]", "All"}]}], 
       RowBox[{"(*", 
        RowBox[{",", 
         RowBox[{"ColorFunction", "->", "\"\<Rainbow\>\""}]}], "*)"}], 
       "]"}]}], "}"}]}], "\[IndentingNewLine]", "}"}]}]], "Input",
 CellChangeTimes->{
  3.717230650316042*^9, 3.7172307746166015`*^9, {3.7172308220130816`*^9, 
   3.717230822851639*^9}, 3.7172397394527597`*^9, {3.717242496387497*^9, 
   3.7172425087046757`*^9}, 3.7172426754253583`*^9, {3.717245374982664*^9, 
   3.7172453753148837`*^9}}],

Cell[" ", "Text",
 Editable->False,
 Selectable->False,
 CellFrame->{{0, 0}, {0, 0.5}},
 ShowCellBracket->False,
 CellMargins->{{0, 0}, {1, 1}},
 CellElementSpacings->{"CellMinHeight"->1},
 CellFrameMargins->0,
 CellFrameColor->RGBColor[0, 0, 1],
 CellSize->{Inherited, 3}]
}, Open  ]],

Cell[CellGroupData[{

Cell["activate solution solver", "Subsection",
 CellChangeTimes->{{3.717230797875049*^9, 3.717230806339672*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"systemVariables", "[", "0", "]"}], ";", 
  "allSystemBasicVariables"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"startdx", "=", "0.00"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"startdy", "=", "0.00"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"startd\[Theta]", "=", "0.01"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"startdvx", "=", "0.00"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"startdvy", "=", "0.00"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"startdv\[Theta]", "=", "0.01"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"startValuesFromEquib", "=", 
  RowBox[{
   RowBox[{"{", "  ", 
    RowBox[{
     RowBox[{
      RowBox[{"X1", "[", "0", "]"}], "\[Equal]", 
      RowBox[{
       RowBox[{"payloadEquibLocation", "[", 
        RowBox[{"[", 
         RowBox[{"1", ",", "2"}], "]"}], "]"}], "+", "startdx"}]}], ",", 
     RowBox[{
      RowBox[{"X2", "[", "0", "]"}], "\[Equal]", 
      RowBox[{"0.0", " ", "+", " ", "startdvx"}]}], ",", 
     "\[IndentingNewLine]", "                                               ", 
     RowBox[{
      RowBox[{"X3", "[", "0", "]"}], "\[Equal]", 
      RowBox[{
       RowBox[{"payloadEquibLocation", "[", 
        RowBox[{"[", 
         RowBox[{"2", ",", "2"}], "]"}], "]"}], "+", "startdy"}]}], ",", 
     RowBox[{
      RowBox[{"X4", "[", "0", "]"}], "\[Equal]", 
      RowBox[{"0.0", " ", "+", " ", "startdvy"}]}], ",", 
     "\[IndentingNewLine]", 
     "                                                ", 
     RowBox[{
      RowBox[{"X5", "[", "0", "]"}], "\[Equal]", 
      RowBox[{
       RowBox[{"payloadEquibLocation", "[", 
        RowBox[{"[", 
         RowBox[{"3", ",", "2"}], "]"}], "]"}], "+", "startd\[Theta]"}]}], 
     ",", 
     RowBox[{
      RowBox[{"X6", "[", "0", "]"}], "\[Equal]", 
      RowBox[{"0.0", " ", "+", " ", "startdv\[Theta]"}]}]}], 
    "\[IndentingNewLine]", "}"}], "/.", 
   "allSystemBasicVariables"}]}]}], "Input",
 CellChangeTimes->{{3.717240652071887*^9, 3.7172407059686832`*^9}, {
   3.717240749397007*^9, 3.717240809240758*^9}, {3.7172411849949903`*^9, 
   3.7172411893638916`*^9}, {3.717241866255727*^9, 3.717242013288512*^9}, {
   3.7172421874827323`*^9, 3.717242200315254*^9}, {3.717284666910265*^9, 
   3.7172846706507483`*^9}, {3.7172848286340165`*^9, 3.717284829793786*^9}, 
   3.717284898401475*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"g", "\[Rule]", "9.81`"}], ",", 
   RowBox[{
    SubscriptBox["m", "p"], "\[Rule]", "1"}], ",", 
   RowBox[{
    SubscriptBox["k", "1"], "\[Rule]", "200"}], ",", 
   RowBox[{
    SubscriptBox["w", "p"], "\[Rule]", "2"}], ",", 
   RowBox[{
    SubscriptBox["h", "p"], "\[Rule]", "1"}], ",", 
   RowBox[{
    SubscriptBox["c", "x"], "\[Rule]", "0"}], ",", 
   RowBox[{
    SubscriptBox["c", "y"], "\[Rule]", "0"}], ",", 
   RowBox[{
    SubscriptBox["c", "\[Theta]"], "\[Rule]", "0"}], ",", 
   RowBox[{
    RowBox[{
     SubscriptBox["x", "1"], "[", "t", "]"}], "\[Rule]", "0"}], ",", 
   RowBox[{
    RowBox[{
     SubscriptBox["y", "1"], "[", "t", "]"}], "\[Rule]", "0"}], ",", 
   RowBox[{
    RowBox[{
     SubscriptBox["x", "2"], "[", "t", "]"}], "\[Rule]", "4"}], ",", 
   RowBox[{
    RowBox[{
     SubscriptBox["y", "2"], "[", "t", "]"}], "\[Rule]", 
    RowBox[{
     SubscriptBox["y", "1"], "[", "t", "]"}]}], ",", 
   RowBox[{"\[Rho]", "\[Rule]", "1.225`"}], ",", 
   RowBox[{
    SubscriptBox["C", "D"], "\[Rule]", "0"}], ",", 
   RowBox[{
    SubscriptBox["v", "y"], "\[Rule]", "0"}], ",", 
   RowBox[{
    SubscriptBox["\[CapitalOmega]", "y"], "\[Rule]", "2"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.7172406534297876`*^9, 3.71724070672219*^9, {3.717240770998356*^9, 
   3.7172408100372906`*^9}, 3.717241175722835*^9, 3.7172412253167777`*^9, {
   3.7172419733278475`*^9, 3.717242014594378*^9}, 3.7172420979907684`*^9, {
   3.7172421706395473`*^9, 3.717242201041738*^9}, 3.7172423472478485`*^9, 
   3.7172427151983776`*^9, 3.7172452462921896`*^9, 3.717245576041803*^9, 
   3.7172836509955764`*^9, 3.71728433224864*^9, 3.717284671315192*^9, 
   3.7172848322194004`*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{"X1", "[", "0", "]"}], "\[Equal]", "2.`"}], ",", 
   RowBox[{
    RowBox[{"X2", "[", "0", "]"}], "\[Equal]", "0.`"}], ",", 
   RowBox[{
    RowBox[{"X3", "[", "0", "]"}], "\[Equal]", 
    RowBox[{"-", "2.024525`"}]}], ",", 
   RowBox[{
    RowBox[{"X4", "[", "0", "]"}], "\[Equal]", "0.`"}], ",", 
   RowBox[{
    RowBox[{"X5", "[", "0", "]"}], "\[Equal]", "0.001`"}], ",", 
   RowBox[{
    RowBox[{"X6", "[", "0", "]"}], "\[Equal]", "0.01`"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.7172406534297876`*^9, 3.71724070672219*^9, {3.717240770998356*^9, 
   3.7172408100372906`*^9}, 3.717241175722835*^9, 3.7172412253167777`*^9, {
   3.7172419733278475`*^9, 3.717242014594378*^9}, 3.7172420979907684`*^9, {
   3.7172421706395473`*^9, 3.717242201041738*^9}, 3.7172423472478485`*^9, 
   3.7172427151983776`*^9, 3.7172452462921896`*^9, 3.717245576041803*^9, 
   3.7172836509955764`*^9, 3.71728433224864*^9, 3.717284671315192*^9, 
   3.7172848322224*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"calcSol", "[", 
  RowBox[{"0.161", ",", 
   RowBox[{"startValuesFromEquib", "[", 
    RowBox[{"[", 
     RowBox[{"All", ",", "2"}], "]"}], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{
  3.717237532195341*^9, {3.717237703151991*^9, 3.717237704428839*^9}, {
   3.717239288603903*^9, 3.7172393074023867`*^9}, 3.717239409011875*^9, {
   3.7172409249431705`*^9, 3.71724093655188*^9}, {3.717241230725364*^9, 
   3.7172412312447095`*^9}, {3.7172428107798615`*^9, 3.717242811999672*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"X1", "\[Rule]", 
     TagBox[
      TemplateBox[{RowBox[{
          StyleBox[
           TagBox["InterpolatingFunction", "SummaryHead"], 
           "NonInterpretableSummary"], 
          StyleBox["[", "NonInterpretableSummary"], 
          DynamicModuleBox[{Typeset`open$$ = False}, 
           PanelBox[
            PaneSelectorBox[{False -> GridBox[{{
                  PaneBox[
                   ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquarePlusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                   Alignment -> {Center, Center}, ImageSize -> 
                   Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                  GraphicsBox[{{{}, {}, {
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1]], 
                    LineBox[CompressedData["
1:eJxTTMoPSmViYGCwAWIQffGu3G/HaTV2DBDgsN02vnaFxS57GL+Fj6f6R9Bp
OF9hy1M1O58rcH7ZFYWMtWdvwfn9m1x7ld49gPMztgr7qFk+gfOzCyqd9516
DudrPT3zbI33azg/T2RnfvCEd3D+u9p5Esd5P8L5z87p5Dhs/QTn7/mzUTQ1
5Aucv5yt+fZlsW9w/rVchSlyu7/D+RIbOTM3N/2E8y0uvpz82fE3nD/bb9pG
/sd/4HzhFX2vS5f/g/PT12vy3FFjcIDxz/3YaLCImxHOX7LBlMHuDYIvM13+
5PG9THD+vGz9Bd8WMMP5B/OWFgiXssD5wQ/E3rC6ssL57+3Xlc5VY4Pzdc+t
/qH0E8Ev9Trf6XuXHc7XMX131HcvB5zf4lf827qPE85/Hipnf76AC85/3a1f
E+DCDefHGdikLBfmgfNvH8qLWvwFwf/ZzO7Ve4wXzlcyPuYus4oPzn8j8Npu
Zh0/nD9pXeuHUnUBOH/L6RUnCmcg+GoM9XOfMArC+XO1M35qliD4PnzntaKe
IPE5XkYw+grB+YE/Rfmq9yH4yxi/7c/WEIbzjQ8Gu7tPQPCPlh8J/cogAuev
cH2RIJWF4E/gkv8seAfBX992OeqLtyicLy9lvd93C4I/ZcnWVZWqYnB+lNvj
STL9CL7qfWWmSYzicL66/iO3T4UIftW04I6TtxD8S1+uBxT7SMD51Vn8YlO2
Ifgz58j5/laUhPMBKX7h3g==
                    "]]}}}, {
                   DisplayFunction -> Identity, AspectRatio -> 1, 
                    Axes -> {False, False}, AxesLabel -> {None, None}, 
                    AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
                    Frame -> {{True, True}, {True, True}}, 
                    FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                    Directive[
                    Opacity[0.5], 
                    Thickness[Tiny], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    FrameTicks -> {{None, None}, {None, None}}, 
                    GridLines -> {None, None}, GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> 
                    Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}], 
                    Method -> {
                    "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
                    AbsolutePointSize[6], "ScalingFunctions" -> None}, 
                    PlotRange -> {{0., 6.283185307179586}, {0., 4.}}, 
                    PlotRangeClipping -> True, PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
                  GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "6.283185307179586`"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                   BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}], True -> GridBox[{{
                  PaneBox[
                   ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquareMinusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                   Alignment -> {Center, Center}, ImageSize -> 
                   Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                  GraphicsBox[{{{}, {}, {
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1]], 
                    LineBox[CompressedData["
1:eJxTTMoPSmViYGCwAWIQffGu3G/HaTV2DBDgsN02vnaFxS57GL+Fj6f6R9Bp
OF9hy1M1O58rcH7ZFYWMtWdvwfn9m1x7ld49gPMztgr7qFk+gfOzCyqd9516
DudrPT3zbI33azg/T2RnfvCEd3D+u9p5Esd5P8L5z87p5Dhs/QTn7/mzUTQ1
5Aucv5yt+fZlsW9w/rVchSlyu7/D+RIbOTM3N/2E8y0uvpz82fE3nD/bb9pG
/sd/4HzhFX2vS5f/g/PT12vy3FFjcIDxz/3YaLCImxHOX7LBlMHuDYIvM13+
5PG9THD+vGz9Bd8WMMP5B/OWFgiXssD5wQ/E3rC6ssL57+3Xlc5VY4Pzdc+t
/qH0E8Ev9Trf6XuXHc7XMX131HcvB5zf4lf827qPE85/Hipnf76AC85/3a1f
E+DCDefHGdikLBfmgfNvH8qLWvwFwf/ZzO7Ve4wXzlcyPuYus4oPzn8j8Npu
Zh0/nD9pXeuHUnUBOH/L6RUnCmcg+GoM9XOfMArC+XO1M35qliD4PnzntaKe
IPE5XkYw+grB+YE/Rfmq9yH4yxi/7c/WEIbzjQ8Gu7tPQPCPlh8J/cogAuev
cH2RIJWF4E/gkv8seAfBX992OeqLtyicLy9lvd93C4I/ZcnWVZWqYnB+lNvj
STL9CL7qfWWmSYzicL66/iO3T4UIftW04I6TtxD8S1+uBxT7SMD51Vn8YlO2
Ifgz58j5/laUhPMBKX7h3g==
                    "]]}}}, {
                   DisplayFunction -> Identity, AspectRatio -> 1, 
                    Axes -> {False, False}, AxesLabel -> {None, None}, 
                    AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
                    Frame -> {{True, True}, {True, True}}, 
                    FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                    Directive[
                    Opacity[0.5], 
                    Thickness[Tiny], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    FrameTicks -> {{None, None}, {None, None}}, 
                    GridLines -> {None, None}, GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> 
                    Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}], 
                    Method -> {
                    "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
                    AbsolutePointSize[6], "ScalingFunctions" -> None}, 
                    PlotRange -> {{0., 6.283185307179586}, {0., 4.}}, 
                    PlotRangeClipping -> True, PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
                  GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "6.283185307179586`"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Order: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Hermite\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Periodic: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["False", "SummaryItem"]}]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                   BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}]}, 
             Dynamic[Typeset`open$$], ImageSize -> Automatic], 
            BaselinePosition -> Baseline], DynamicModuleValues :> {}], 
          StyleBox["]", "NonInterpretableSummary"]}]},
       "CopyTag",
       DisplayFunction->(#& ),
       InterpretationFunction->(
        "InterpolatingFunction[{{0., 6.28319}}, <>]"& )],
      False,
      Editable->False,
      SelectWithContents->True,
      Selectable->False]}], ",", 
    RowBox[{"X2", "\[Rule]", 
     TagBox[
      TemplateBox[{RowBox[{
          StyleBox[
           TagBox["InterpolatingFunction", "SummaryHead"], 
           "NonInterpretableSummary"], 
          StyleBox["[", "NonInterpretableSummary"], 
          DynamicModuleBox[{Typeset`open$$ = False}, 
           PanelBox[
            PaneSelectorBox[{False -> GridBox[{{
                  PaneBox[
                   ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquarePlusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                   Alignment -> {Center, Center}, ImageSize -> 
                   Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                  GraphicsBox[{{{}, {}, {
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1]], 
                    LineBox[CompressedData["
1:eJxTTMoPSmViYGCwAWIQffGu3G/HaTV2DFCw3Ta+doXFLnsYv4WPp/pH0Gk4
X2HLUzU7nytwftkVhYy1Z2/B+f2bXHuV3j2A8zO2CvuoWT6B87MLKp33nXoO
52s9PfNsjfdrOD9PZGd+8IR3cP672nkSx3k/wvnPzunkOGz9BOfv+bNRNDXk
C5y/nK359mWxb3D+tVyFKXK7v8P5Ehs5Mzc3/YTzLS6+nPzZ8TecP9tv2kb+
x3/gfOEVfa9Ll/+D89PXa/LcUWNwgPHP/dhosIibEc5fssGUwe4Ngi8zXf7k
8b1McP68bP0F3xYww/kH85YWCJeywPnBD8TesLqywvnv7deVzlVjg/N1z63+
ofQTwS/1Ot/pe5cdztcxfXfUdy8HnN/iV/zbuo8Tzn8eKmd/voALzn/drV8T
4MIN58cZ2KQsF+aB828fyota/AXB/9nM7tV7jBfOVzI+5i6zig/OfyPw2m5m
HT+cP2ld64dSdQE4f8vpFScKZyD4agz1c58wCsL5c7UzfmqWIPg+fOe1op4g
8TleRjD6CsH5gT9F+ar3IfjLGL/tz9YQhvONDwa7u09A8I+WHwn9yiAC569w
fZEglYXgT+CS/yx4B8Ff33Y56ou3KJwvL2W933cLgj9lydZVlapicH6U2+NJ
Mv0Ivup9ZaZJjOJwvrr+I7dPhQh+1bTgjpO3EPxLX64HFPtIwPnVWfxiU7Yh
+DPnyPn+VpSE8wFw2tLe
                    "]]}}}, {
                   DisplayFunction -> Identity, AspectRatio -> 1, 
                    Axes -> {False, False}, AxesLabel -> {None, None}, 
                    AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
                    Frame -> {{True, True}, {True, True}}, 
                    FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                    Directive[
                    Opacity[0.5], 
                    Thickness[Tiny], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    FrameTicks -> {{None, None}, {None, None}}, 
                    GridLines -> {None, None}, GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> 
                    Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}], 
                    Method -> {
                    "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
                    AbsolutePointSize[6], "ScalingFunctions" -> None}, 
                    PlotRange -> {{0., 6.283185307179586}, {-1., 1.}}, 
                    PlotRangeClipping -> True, PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
                  GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "6.283185307179586`"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                   BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}], True -> GridBox[{{
                  PaneBox[
                   ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquareMinusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                   Alignment -> {Center, Center}, ImageSize -> 
                   Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                  GraphicsBox[{{{}, {}, {
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1]], 
                    LineBox[CompressedData["
1:eJxTTMoPSmViYGCwAWIQffGu3G/HaTV2DFCw3Ta+doXFLnsYv4WPp/pH0Gk4
X2HLUzU7nytwftkVhYy1Z2/B+f2bXHuV3j2A8zO2CvuoWT6B87MLKp33nXoO
52s9PfNsjfdrOD9PZGd+8IR3cP672nkSx3k/wvnPzunkOGz9BOfv+bNRNDXk
C5y/nK359mWxb3D+tVyFKXK7v8P5Ehs5Mzc3/YTzLS6+nPzZ8TecP9tv2kb+
x3/gfOEVfa9Ll/+D89PXa/LcUWNwgPHP/dhosIibEc5fssGUwe4Ngi8zXf7k
8b1McP68bP0F3xYww/kH85YWCJeywPnBD8TesLqywvnv7deVzlVjg/N1z63+
ofQTwS/1Ot/pe5cdztcxfXfUdy8HnN/iV/zbuo8Tzn8eKmd/voALzn/drV8T
4MIN58cZ2KQsF+aB828fyota/AXB/9nM7tV7jBfOVzI+5i6zig/OfyPw2m5m
HT+cP2ld64dSdQE4f8vpFScKZyD4agz1c58wCsL5c7UzfmqWIPg+fOe1op4g
8TleRjD6CsH5gT9F+ar3IfjLGL/tz9YQhvONDwa7u09A8I+WHwn9yiAC569w
fZEglYXgT+CS/yx4B8Ff33Y56ou3KJwvL2W933cLgj9lydZVlapicH6U2+NJ
Mv0Ivup9ZaZJjOJwvrr+I7dPhQh+1bTgjpO3EPxLX64HFPtIwPnVWfxiU7Yh
+DPnyPn+VpSE8wFw2tLe
                    "]]}}}, {
                   DisplayFunction -> Identity, AspectRatio -> 1, 
                    Axes -> {False, False}, AxesLabel -> {None, None}, 
                    AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
                    Frame -> {{True, True}, {True, True}}, 
                    FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                    Directive[
                    Opacity[0.5], 
                    Thickness[Tiny], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    FrameTicks -> {{None, None}, {None, None}}, 
                    GridLines -> {None, None}, GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> 
                    Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}], 
                    Method -> {
                    "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
                    AbsolutePointSize[6], "ScalingFunctions" -> None}, 
                    PlotRange -> {{0., 6.283185307179586}, {-1., 1.}}, 
                    PlotRangeClipping -> True, PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
                  GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "6.283185307179586`"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Order: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Hermite\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Periodic: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["False", "SummaryItem"]}]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                   BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}]}, 
             Dynamic[Typeset`open$$], ImageSize -> Automatic], 
            BaselinePosition -> Baseline], DynamicModuleValues :> {}], 
          StyleBox["]", "NonInterpretableSummary"]}]},
       "CopyTag",
       DisplayFunction->(#& ),
       InterpretationFunction->(
        "InterpolatingFunction[{{0., 6.28319}}, <>]"& )],
      False,
      Editable->False,
      SelectWithContents->True,
      Selectable->False]}], ",", 
    RowBox[{"X3", "\[Rule]", 
     TagBox[
      TemplateBox[{RowBox[{
          StyleBox[
           TagBox["InterpolatingFunction", "SummaryHead"], 
           "NonInterpretableSummary"], 
          StyleBox["[", "NonInterpretableSummary"], 
          DynamicModuleBox[{Typeset`open$$ = False}, 
           PanelBox[
            PaneSelectorBox[{False -> GridBox[{{
                  PaneBox[
                   ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquarePlusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                   Alignment -> {Center, Center}, ImageSize -> 
                   Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                  GraphicsBox[{{{}, {}, {
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1]], 
                    LineBox[CompressedData["
1:eJwB0QMu/CFib1JlAgAAADwAAAACAAAA0d0e+0GWfD6neccpOjIAwLc9X32o
OLo/ngOZ4/0xAMCEDgx7+FLLP1AqvTceMADAILTlJj5M1D83YUaLbCsAwHbU
IGitzdo/0Nb3z+kiAMCPskWNIu7gP3EOOsZSFADAaLUTTCY55D9p2plkGgEA
wGtweUO+yuc/CQ84lvLL/78q5czmrEvrP/SrBa6Miv+/bhS5b1OQ7j992MTx
KET/v+59nhjHDfE/Nwvdfh7w/r/mzixsQLXyP7pJNHyEnf6/vPyxFWVU9D+N
9CqNJUz+v6cGg9vTFvY/5JVoX9D3/b/WbSCUHrv3PxEa9ac4sf2/GLEJabOC
+T/Uwmb2hXL9vzjR6ZPzQfs/Y+nPx8tH/b+bTpaxD+P8P9QgEDWnNP2/E6iO
63Wn/j9gH5PoBDr9v2evKQzcJgBA6Nrf3PpZ/b/O+LEwogsBQEpyQ1ORm/2/
pLA1AD7sAUCNpKnYjvv9vxyXH8nHvQJA2rmnClhw/r+eay+g9qADQByqZxsx
Cv+/wW6lcBN1BEChNUfl5a//v1PgFuwFRQVArl1urVoxAMDvP651nSYGQN9a
NXWRmADALc6r+CL5BkAL/3aMmPsAwHVKz4lN3QdAJw6EXAtmAcAsNe7FTb0I
QBK5jt6fyQHAhE5z+zuOCUDCCgCsgh4CwOdVHj/PcApAdq8CQhhuAsDriy98
UEQLQNcVTfGEqQLAXjA8ZKcTDEDtjTJTSdMCwNvCblqj9AxAAmVbu97rAsD5
gwdKjcYNQHebInvZ7QLAIjPGRxyqDkCKsCDFRdgCwOwQ6z6Zfg9AUuiSZdmt
AsCSroXwdScQQMox738icALAtMuoyHGYEEC1k3SpXRgCwCYAf53kARFAhkoc
vjm1AcCdK2j5KXQRQIC32btjOgHATA7PKlrkEUCcNcl+RrYAwEwI6VgBTRJA
Kse5CtE0AMBR+RUOe74SQI6KysjUTP+/pgH2v2soE0B9igzFJkj+vzPBU0dH
kBNAaBAgFNhV/b/Fd8RV9QAUQAUKcL6yZvy/qEXoYBpqFEDd2uNtd6X7v5AK
H/MR3BRA+HqU8xb8+r+vhtNa9EsVQDmpIkVnhPq/Hxo7v020FUDEpkpFSEL6
v5Sktap5JRZAhjN/JaQu+r9aRuOSHI8WQBShLYi0Tfq/Jd8jApIBF0AcVJtx
zKP6vycv4kbycRdAVo56JgEq+796llOIydoXQAZh2kb9zvu/0vTXUHNMGEBw
aZ0sq6b8v3tqDxaUthhAo3yz32aL/b+ZnB5N+yEZQBOoik7Bhf6/iFrRRw==

                    "]]}}}, {
                   DisplayFunction -> Identity, AspectRatio -> 1, 
                    Axes -> {False, False}, AxesLabel -> {None, None}, 
                    AxesOrigin -> {0, -2.44}, DisplayFunction :> Identity, 
                    Frame -> {{True, True}, {True, True}}, 
                    FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                    Directive[
                    Opacity[0.5], 
                    Thickness[Tiny], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    FrameTicks -> {{None, None}, {None, None}}, 
                    GridLines -> {None, None}, GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> 
                    Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}], 
                    Method -> {
                    "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
                    AbsolutePointSize[6], "ScalingFunctions" -> None}, 
                    PlotRange -> {{0., 
                    6.283185307179586}, {-2.3661374683319383`, \
-1.6363870110246537`}}, PlotRangeClipping -> True, PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
                  GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "6.283185307179586`"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                   BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}], True -> GridBox[{{
                  PaneBox[
                   ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquareMinusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                   Alignment -> {Center, Center}, ImageSize -> 
                   Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                  GraphicsBox[{{{}, {}, {
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1]], 
                    LineBox[CompressedData["
1:eJwB0QMu/CFib1JlAgAAADwAAAACAAAA0d0e+0GWfD6neccpOjIAwLc9X32o
OLo/ngOZ4/0xAMCEDgx7+FLLP1AqvTceMADAILTlJj5M1D83YUaLbCsAwHbU
IGitzdo/0Nb3z+kiAMCPskWNIu7gP3EOOsZSFADAaLUTTCY55D9p2plkGgEA
wGtweUO+yuc/CQ84lvLL/78q5czmrEvrP/SrBa6Miv+/bhS5b1OQ7j992MTx
KET/v+59nhjHDfE/Nwvdfh7w/r/mzixsQLXyP7pJNHyEnf6/vPyxFWVU9D+N
9CqNJUz+v6cGg9vTFvY/5JVoX9D3/b/WbSCUHrv3PxEa9ac4sf2/GLEJabOC
+T/Uwmb2hXL9vzjR6ZPzQfs/Y+nPx8tH/b+bTpaxD+P8P9QgEDWnNP2/E6iO
63Wn/j9gH5PoBDr9v2evKQzcJgBA6Nrf3PpZ/b/O+LEwogsBQEpyQ1ORm/2/
pLA1AD7sAUCNpKnYjvv9vxyXH8nHvQJA2rmnClhw/r+eay+g9qADQByqZxsx
Cv+/wW6lcBN1BEChNUfl5a//v1PgFuwFRQVArl1urVoxAMDvP651nSYGQN9a
NXWRmADALc6r+CL5BkAL/3aMmPsAwHVKz4lN3QdAJw6EXAtmAcAsNe7FTb0I
QBK5jt6fyQHAhE5z+zuOCUDCCgCsgh4CwOdVHj/PcApAdq8CQhhuAsDriy98
UEQLQNcVTfGEqQLAXjA8ZKcTDEDtjTJTSdMCwNvCblqj9AxAAmVbu97rAsD5
gwdKjcYNQHebInvZ7QLAIjPGRxyqDkCKsCDFRdgCwOwQ6z6Zfg9AUuiSZdmt
AsCSroXwdScQQMox738icALAtMuoyHGYEEC1k3SpXRgCwCYAf53kARFAhkoc
vjm1AcCdK2j5KXQRQIC32btjOgHATA7PKlrkEUCcNcl+RrYAwEwI6VgBTRJA
Kse5CtE0AMBR+RUOe74SQI6KysjUTP+/pgH2v2soE0B9igzFJkj+vzPBU0dH
kBNAaBAgFNhV/b/Fd8RV9QAUQAUKcL6yZvy/qEXoYBpqFEDd2uNtd6X7v5AK
H/MR3BRA+HqU8xb8+r+vhtNa9EsVQDmpIkVnhPq/Hxo7v020FUDEpkpFSEL6
v5Sktap5JRZAhjN/JaQu+r9aRuOSHI8WQBShLYi0Tfq/Jd8jApIBF0AcVJtx
zKP6vycv4kbycRdAVo56JgEq+796llOIydoXQAZh2kb9zvu/0vTXUHNMGEBw
aZ0sq6b8v3tqDxaUthhAo3yz32aL/b+ZnB5N+yEZQBOoik7Bhf6/iFrRRw==

                    "]]}}}, {
                   DisplayFunction -> Identity, AspectRatio -> 1, 
                    Axes -> {False, False}, AxesLabel -> {None, None}, 
                    AxesOrigin -> {0, -2.44}, DisplayFunction :> Identity, 
                    Frame -> {{True, True}, {True, True}}, 
                    FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                    Directive[
                    Opacity[0.5], 
                    Thickness[Tiny], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    FrameTicks -> {{None, None}, {None, None}}, 
                    GridLines -> {None, None}, GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> 
                    Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}], 
                    Method -> {
                    "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
                    AbsolutePointSize[6], "ScalingFunctions" -> None}, 
                    PlotRange -> {{0., 
                    6.283185307179586}, {-2.3661374683319383`, \
-1.6363870110246537`}}, PlotRangeClipping -> True, PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
                  GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "6.283185307179586`"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Order: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Hermite\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Periodic: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["False", "SummaryItem"]}]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                   BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}]}, 
             Dynamic[Typeset`open$$], ImageSize -> Automatic], 
            BaselinePosition -> Baseline], DynamicModuleValues :> {}], 
          StyleBox["]", "NonInterpretableSummary"]}]},
       "CopyTag",
       DisplayFunction->(#& ),
       InterpretationFunction->(
        "InterpolatingFunction[{{0., 6.28319}}, <>]"& )],
      False,
      Editable->False,
      SelectWithContents->True,
      Selectable->False]}], ",", 
    RowBox[{"X4", "\[Rule]", 
     TagBox[
      TemplateBox[{RowBox[{
          StyleBox[
           TagBox["InterpolatingFunction", "SummaryHead"], 
           "NonInterpretableSummary"], 
          StyleBox["[", "NonInterpretableSummary"], 
          DynamicModuleBox[{Typeset`open$$ = False}, 
           PanelBox[
            PaneSelectorBox[{False -> GridBox[{{
                  PaneBox[
                   ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquarePlusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                   Alignment -> {Center, Center}, ImageSize -> 
                   Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                  GraphicsBox[{{{}, {}, {
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1]], 
                    LineBox[CompressedData["
1:eJwB0QMu/CFib1JlAgAAADwAAAACAAAA0d0e+0GWfD4AACA+VXEQPbc9X32o
OLo/d1KL+ZSHaz+EDgx7+FLLP169xrgIX40/ILTlJj5M1D8P3OEwKoafP3bU
IGitzdo/pdZJ0+1yqj+PskWNIu7gPwXA+xVy+7M/aLUTTCY55D/E34XKlr66
P2tweUO+yuc//Egw/3IBwT8q5czmrEvrP9L6U0Y5P8Q/bhS5b1OQ7j805nUl
UrjGP+59nhjHDfE/qMpoB+yJyD/mzixsQLXyP7qFv5hXN8k/vPyxFWVU9D9J
ZmWSmMTIP6cGg9vTFvY/wytTHjbrxj/WbSCUHrv3P5K7Nfle3cM/GLEJabOC
+T/ulNbXsT++PzjR6ZPzQfs/PoO/xVk+sj+bTpaxD+P8P3Mw7n5lypM/E6iO
63Wn/j97Eb09y5Omv2evKQzcJgBAY2xpG7qZu7/O+LEwogsBQIaz3YxL6ca/
pLA1AD7sAUBdfYu6x7zPvxyXH8nHvQJA/JZPypa/07+eay+g9qADQCTEu3MU
f9e/wW6lcBN1BED94rgD/GPav1PgFuwFRQVAFSUmgVmD3L/vP651nSYGQJ4k
K3184N2/Lc6r+CL5BkCp+zPJUSvev3VKz4lN3QdALSBD28RY3b8sNe7FTb0I
QEjru02xXNu/hE5z+zuOCUDTtcMeKnvYv+dVHj/PcApAsjqHyhpO1L/riy98
UEQLQEf4zuMTDs+/XjA8ZKcTDECEBvZgLVDEv9vCblqj9AxATegLqJL5rb/5
gwdKjcYNQG4k7vI+nqQ/IjPGRxyqDkBm7CgKNh7DP+wQ6z6Zfg9AIAZXqsTp
zz+SroXwdScQQOhgPymL49U/tMuoyHGYEEBDHIQcK7PbPyYAf53kARFAQQnY
x+kp4D+dK2j5KXQRQFQI8o5GIuI/TA7PKlrkEUAxeM4epXDjP0wI6VgBTRJA
3z+Ya+wK5D9R+RUOe74SQJ4fqFyS/eM/pgH2v2soE0CMVT/hyEXjPzPBU0dH
kBNAqiHFAlf14T/Fd8RV9QAUQGbcBpl7yd8/qEXoYBpqFEDKgiiVqNzaP5AK
H/MR3BRA9PB9G22L1D+vhtNa9EsVQIAVCyo/Kss/Hxo7v020FUDPJkS9XZG6
P5Sktap5JRZAm19TH1+jkb9aRuOSHI8WQOvMsVk9jsC/Jd8jApIBF0A2it4I
2mrPvycv4kbycRdAoaJU1Qdi1r96llOIydoXQLz8R89T1du/0vTXUHNMGEAM
qPJmTFjgv3tqDxaUthhAcTARnt0K4r+ZnB5N+yEZQMryHUGmJeO/xBjPIQ==

                    "]]}}}, {
                   DisplayFunction -> Identity, AspectRatio -> 1, 
                    Axes -> {False, False}, AxesLabel -> {None, None}, 
                    AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
                    Frame -> {{True, True}, {True, True}}, 
                    FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                    Directive[
                    Opacity[0.5], 
                    Thickness[Tiny], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    FrameTicks -> {{None, None}, {None, None}}, 
                    GridLines -> {None, None}, GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> 
                    Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}], 
                    Method -> {
                    "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
                    AbsolutePointSize[6], "ScalingFunctions" -> None}, 
                    PlotRange -> {{0., 
                    6.283185307179586}, {-0.5983458778205997, 
                    0.6263334371051278}}, PlotRangeClipping -> True, 
                    PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
                  GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "6.283185307179586`"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                   BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}], True -> GridBox[{{
                  PaneBox[
                   ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquareMinusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                   Alignment -> {Center, Center}, ImageSize -> 
                   Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                  GraphicsBox[{{{}, {}, {
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1]], 
                    LineBox[CompressedData["
1:eJwB0QMu/CFib1JlAgAAADwAAAACAAAA0d0e+0GWfD4AACA+VXEQPbc9X32o
OLo/d1KL+ZSHaz+EDgx7+FLLP169xrgIX40/ILTlJj5M1D8P3OEwKoafP3bU
IGitzdo/pdZJ0+1yqj+PskWNIu7gPwXA+xVy+7M/aLUTTCY55D/E34XKlr66
P2tweUO+yuc//Egw/3IBwT8q5czmrEvrP9L6U0Y5P8Q/bhS5b1OQ7j805nUl
UrjGP+59nhjHDfE/qMpoB+yJyD/mzixsQLXyP7qFv5hXN8k/vPyxFWVU9D9J
ZmWSmMTIP6cGg9vTFvY/wytTHjbrxj/WbSCUHrv3P5K7Nfle3cM/GLEJabOC
+T/ulNbXsT++PzjR6ZPzQfs/PoO/xVk+sj+bTpaxD+P8P3Mw7n5lypM/E6iO
63Wn/j97Eb09y5Omv2evKQzcJgBAY2xpG7qZu7/O+LEwogsBQIaz3YxL6ca/
pLA1AD7sAUBdfYu6x7zPvxyXH8nHvQJA/JZPypa/07+eay+g9qADQCTEu3MU
f9e/wW6lcBN1BED94rgD/GPav1PgFuwFRQVAFSUmgVmD3L/vP651nSYGQJ4k
K3184N2/Lc6r+CL5BkCp+zPJUSvev3VKz4lN3QdALSBD28RY3b8sNe7FTb0I
QEjru02xXNu/hE5z+zuOCUDTtcMeKnvYv+dVHj/PcApAsjqHyhpO1L/riy98
UEQLQEf4zuMTDs+/XjA8ZKcTDECEBvZgLVDEv9vCblqj9AxATegLqJL5rb/5
gwdKjcYNQG4k7vI+nqQ/IjPGRxyqDkBm7CgKNh7DP+wQ6z6Zfg9AIAZXqsTp
zz+SroXwdScQQOhgPymL49U/tMuoyHGYEEBDHIQcK7PbPyYAf53kARFAQQnY
x+kp4D+dK2j5KXQRQFQI8o5GIuI/TA7PKlrkEUAxeM4epXDjP0wI6VgBTRJA
3z+Ya+wK5D9R+RUOe74SQJ4fqFyS/eM/pgH2v2soE0CMVT/hyEXjPzPBU0dH
kBNAqiHFAlf14T/Fd8RV9QAUQGbcBpl7yd8/qEXoYBpqFEDKgiiVqNzaP5AK
H/MR3BRA9PB9G22L1D+vhtNa9EsVQIAVCyo/Kss/Hxo7v020FUDPJkS9XZG6
P5Sktap5JRZAm19TH1+jkb9aRuOSHI8WQOvMsVk9jsC/Jd8jApIBF0A2it4I
2mrPvycv4kbycRdAoaJU1Qdi1r96llOIydoXQLz8R89T1du/0vTXUHNMGEAM
qPJmTFjgv3tqDxaUthhAcTARnt0K4r+ZnB5N+yEZQMryHUGmJeO/xBjPIQ==

                    "]]}}}, {
                   DisplayFunction -> Identity, AspectRatio -> 1, 
                    Axes -> {False, False}, AxesLabel -> {None, None}, 
                    AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
                    Frame -> {{True, True}, {True, True}}, 
                    FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                    Directive[
                    Opacity[0.5], 
                    Thickness[Tiny], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    FrameTicks -> {{None, None}, {None, None}}, 
                    GridLines -> {None, None}, GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> 
                    Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}], 
                    Method -> {
                    "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
                    AbsolutePointSize[6], "ScalingFunctions" -> None}, 
                    PlotRange -> {{0., 
                    6.283185307179586}, {-0.5983458778205997, 
                    0.6263334371051278}}, PlotRangeClipping -> True, 
                    PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
                  GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "6.283185307179586`"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Order: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Hermite\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Periodic: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["False", "SummaryItem"]}]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                   BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}]}, 
             Dynamic[Typeset`open$$], ImageSize -> Automatic], 
            BaselinePosition -> Baseline], DynamicModuleValues :> {}], 
          StyleBox["]", "NonInterpretableSummary"]}]},
       "CopyTag",
       DisplayFunction->(#& ),
       InterpretationFunction->(
        "InterpolatingFunction[{{0., 6.28319}}, <>]"& )],
      False,
      Editable->False,
      SelectWithContents->True,
      Selectable->False]}], ",", 
    RowBox[{"X5", "\[Rule]", 
     TagBox[
      TemplateBox[{RowBox[{
          StyleBox[
           TagBox["InterpolatingFunction", "SummaryHead"], 
           "NonInterpretableSummary"], 
          StyleBox["[", "NonInterpretableSummary"], 
          DynamicModuleBox[{Typeset`open$$ = False}, 
           PanelBox[
            PaneSelectorBox[{False -> GridBox[{{
                  PaneBox[
                   ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquarePlusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                   Alignment -> {Center, Center}, ImageSize -> 
                   Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                  GraphicsBox[{{{}, {}, {
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1]], 
                    LineBox[CompressedData["
1:eJxTTMoPSmViYGCwAWIQffGu3G/HaTV2DFCw3Ta+doXFLnsYv4WPp/pH0Gk4
X2HLUzU7nytwftkVhYy1Z2/B+f2bXHuV3j2A8zO2CvuoWT6B87MLKp33nXoO
52s9PfNsjfdrOD9PZGd+8IR3cP672nkSx3k/wvnPzunkOGz9BOfv+bNRNDXk
C5y/nK359mWxb3D+tVyFKXK7v8P5Ehs5Mzc3/YTzLS6+nPzZ8TecP9tv2kb+
x3/gfOEVfa9Ll/+D89PXa/LcUWNwgPHP/dhosIibEc5fssGUwe4Ngi8zXf7k
8b1McP68bP0F3xYww/kH85YWCJeywPnBD8TesLqywvnv7deVzlVjg/N1z63+
ofQTwS/1Ot/pe5cdztcxfXfUdy8HnN/iV/zbuo8Tzn8eKmd/voALzn/drV8T
4MIN58cZ2KQsF+aB828fyota/AXB/9nM7tV7jBfOVzI+5i6zig/OfyPw2m5m
HT+cP2ld64dSdQE4f8vpFScKZyD4agz1c58wCsL5c7UzfmqWIPg+fOe1op4g
8TleRjD6CsH5gT9F+ar3IfjLGL/tz9YQhvONDwa7u09A8I+WHwn9yiAC569w
fZEglYXgT+CS/yx4B8Ff33Y56ou3KJwvL2W933cLgj9lydZVlapicH6U2+NJ
Mv0Ivup9ZaZJjOJwvrr+I7dPhQh+1bTgjpO3EPxLX64HFPtIwPnVWfxiU7Yh
+DPnyPn+VpSE8wFw2tLe
                    "]]}}}, {
                   DisplayFunction -> Identity, AspectRatio -> 1, 
                    Axes -> {False, False}, AxesLabel -> {None, None}, 
                    AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
                    Frame -> {{True, True}, {True, True}}, 
                    FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                    Directive[
                    Opacity[0.5], 
                    Thickness[Tiny], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    FrameTicks -> {{None, None}, {None, None}}, 
                    GridLines -> {None, None}, GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> 
                    Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}], 
                    Method -> {
                    "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
                    AbsolutePointSize[6], "ScalingFunctions" -> None}, 
                    PlotRange -> {{0., 6.283185307179586}, {-1., 1.}}, 
                    PlotRangeClipping -> True, PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
                  GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "6.283185307179586`"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                   BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}], True -> GridBox[{{
                  PaneBox[
                   ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquareMinusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                   Alignment -> {Center, Center}, ImageSize -> 
                   Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                  GraphicsBox[{{{}, {}, {
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1]], 
                    LineBox[CompressedData["
1:eJxTTMoPSmViYGCwAWIQffGu3G/HaTV2DFCw3Ta+doXFLnsYv4WPp/pH0Gk4
X2HLUzU7nytwftkVhYy1Z2/B+f2bXHuV3j2A8zO2CvuoWT6B87MLKp33nXoO
52s9PfNsjfdrOD9PZGd+8IR3cP672nkSx3k/wvnPzunkOGz9BOfv+bNRNDXk
C5y/nK359mWxb3D+tVyFKXK7v8P5Ehs5Mzc3/YTzLS6+nPzZ8TecP9tv2kb+
x3/gfOEVfa9Ll/+D89PXa/LcUWNwgPHP/dhosIibEc5fssGUwe4Ngi8zXf7k
8b1McP68bP0F3xYww/kH85YWCJeywPnBD8TesLqywvnv7deVzlVjg/N1z63+
ofQTwS/1Ot/pe5cdztcxfXfUdy8HnN/iV/zbuo8Tzn8eKmd/voALzn/drV8T
4MIN58cZ2KQsF+aB828fyota/AXB/9nM7tV7jBfOVzI+5i6zig/OfyPw2m5m
HT+cP2ld64dSdQE4f8vpFScKZyD4agz1c58wCsL5c7UzfmqWIPg+fOe1op4g
8TleRjD6CsH5gT9F+ar3IfjLGL/tz9YQhvONDwa7u09A8I+WHwn9yiAC569w
fZEglYXgT+CS/yx4B8Ff33Y56ou3KJwvL2W933cLgj9lydZVlapicH6U2+NJ
Mv0Ivup9ZaZJjOJwvrr+I7dPhQh+1bTgjpO3EPxLX64HFPtIwPnVWfxiU7Yh
+DPnyPn+VpSE8wFw2tLe
                    "]]}}}, {
                   DisplayFunction -> Identity, AspectRatio -> 1, 
                    Axes -> {False, False}, AxesLabel -> {None, None}, 
                    AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
                    Frame -> {{True, True}, {True, True}}, 
                    FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                    Directive[
                    Opacity[0.5], 
                    Thickness[Tiny], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    FrameTicks -> {{None, None}, {None, None}}, 
                    GridLines -> {None, None}, GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> 
                    Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}], 
                    Method -> {
                    "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
                    AbsolutePointSize[6], "ScalingFunctions" -> None}, 
                    PlotRange -> {{0., 6.283185307179586}, {-1., 1.}}, 
                    PlotRangeClipping -> True, PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
                  GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "6.283185307179586`"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Order: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Hermite\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Periodic: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["False", "SummaryItem"]}]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                   BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}]}, 
             Dynamic[Typeset`open$$], ImageSize -> Automatic], 
            BaselinePosition -> Baseline], DynamicModuleValues :> {}], 
          StyleBox["]", "NonInterpretableSummary"]}]},
       "CopyTag",
       DisplayFunction->(#& ),
       InterpretationFunction->(
        "InterpolatingFunction[{{0., 6.28319}}, <>]"& )],
      False,
      Editable->False,
      SelectWithContents->True,
      Selectable->False]}], ",", 
    RowBox[{"X6", "\[Rule]", 
     TagBox[
      TemplateBox[{RowBox[{
          StyleBox[
           TagBox["InterpolatingFunction", "SummaryHead"], 
           "NonInterpretableSummary"], 
          StyleBox["[", "NonInterpretableSummary"], 
          DynamicModuleBox[{Typeset`open$$ = False}, 
           PanelBox[
            PaneSelectorBox[{False -> GridBox[{{
                  PaneBox[
                   ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquarePlusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                   Alignment -> {Center, Center}, ImageSize -> 
                   Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                  GraphicsBox[{{{}, {}, {
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1]], 
                    LineBox[CompressedData["
1:eJxTTMoPSmViYGCwAWIQffGu3G/HaTV2DFCw3Ta+doXFLnsYv4WPp/pH0Gk4
X2HLUzU7nytwftkVhYy1Z2/B+f2bXHuV3j2A8zO2CvuoWT6B87MLKp33nXoO
52s9PfNsjfdrOD9PZGd+8IR3cP672nkSx3k/wvnPzunkOGz9BOfv+bNRNDXk
C5y/nK359mWxb3D+tVyFKXK7v8P5Ehs5Mzc3/YTzLS6+nPzZ8TecP9tv2kb+
x3/gfOEVfa9Ll/+D89PXa/LcUWNwgPHP/dhosIibEc5fssGUwe4Ngi8zXf7k
8b1McP68bP0F3xYww/kH85YWCJeywPnBD8TesLqywvnv7deVzlVjg/N1z63+
ofQTwS/1Ot/pe5cdztcxfXfUdy8HnN/iV/zbuo8Tzn8eKmd/voALzn/drV8T
4MIN58cZ2KQsF+aB828fyota/AXB/9nM7tV7jBfOVzI+5i6zig/OfyPw2m5m
HT+cP2ld64dSdQE4f8vpFScKZyD4agz1c58wCsL5c7UzfmqWIPg+fOe1op4g
8TleRjD6CsH5gT9F+ar3IfjLGL/tz9YQhvONDwa7u09A8I+WHwn9yiAC569w
fZEglYXgT+CS/yx4B8Ff33Y56ou3KJwvL2W933cLgj9lydZVlapicH6U2+NJ
Mv0Ivup9ZaZJjOJwvrr+I7dPhQh+1bTgjpO3EPxLX64HFPtIwPnVWfxiU7Yh
+DPnyPn+VpSE8wFw2tLe
                    "]]}}}, {
                   DisplayFunction -> Identity, AspectRatio -> 1, 
                    Axes -> {False, False}, AxesLabel -> {None, None}, 
                    AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
                    Frame -> {{True, True}, {True, True}}, 
                    FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                    Directive[
                    Opacity[0.5], 
                    Thickness[Tiny], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    FrameTicks -> {{None, None}, {None, None}}, 
                    GridLines -> {None, None}, GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> 
                    Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}], 
                    Method -> {
                    "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
                    AbsolutePointSize[6], "ScalingFunctions" -> None}, 
                    PlotRange -> {{0., 6.283185307179586}, {-1., 1.}}, 
                    PlotRangeClipping -> True, PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
                  GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "6.283185307179586`"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                   BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}], True -> GridBox[{{
                  PaneBox[
                   ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquareMinusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                   Alignment -> {Center, Center}, ImageSize -> 
                   Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                  GraphicsBox[{{{}, {}, {
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1]], 
                    LineBox[CompressedData["
1:eJxTTMoPSmViYGCwAWIQffGu3G/HaTV2DFCw3Ta+doXFLnsYv4WPp/pH0Gk4
X2HLUzU7nytwftkVhYy1Z2/B+f2bXHuV3j2A8zO2CvuoWT6B87MLKp33nXoO
52s9PfNsjfdrOD9PZGd+8IR3cP672nkSx3k/wvnPzunkOGz9BOfv+bNRNDXk
C5y/nK359mWxb3D+tVyFKXK7v8P5Ehs5Mzc3/YTzLS6+nPzZ8TecP9tv2kb+
x3/gfOEVfa9Ll/+D89PXa/LcUWNwgPHP/dhosIibEc5fssGUwe4Ngi8zXf7k
8b1McP68bP0F3xYww/kH85YWCJeywPnBD8TesLqywvnv7deVzlVjg/N1z63+
ofQTwS/1Ot/pe5cdztcxfXfUdy8HnN/iV/zbuo8Tzn8eKmd/voALzn/drV8T
4MIN58cZ2KQsF+aB828fyota/AXB/9nM7tV7jBfOVzI+5i6zig/OfyPw2m5m
HT+cP2ld64dSdQE4f8vpFScKZyD4agz1c58wCsL5c7UzfmqWIPg+fOe1op4g
8TleRjD6CsH5gT9F+ar3IfjLGL/tz9YQhvONDwa7u09A8I+WHwn9yiAC569w
fZEglYXgT+CS/yx4B8Ff33Y56ou3KJwvL2W933cLgj9lydZVlapicH6U2+NJ
Mv0Ivup9ZaZJjOJwvrr+I7dPhQh+1bTgjpO3EPxLX64HFPtIwPnVWfxiU7Yh
+DPnyPn+VpSE8wFw2tLe
                    "]]}}}, {
                   DisplayFunction -> Identity, AspectRatio -> 1, 
                    Axes -> {False, False}, AxesLabel -> {None, None}, 
                    AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
                    Frame -> {{True, True}, {True, True}}, 
                    FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                    Directive[
                    Opacity[0.5], 
                    Thickness[Tiny], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    FrameTicks -> {{None, None}, {None, None}}, 
                    GridLines -> {None, None}, GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> 
                    Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}], 
                    Method -> {
                    "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
                    AbsolutePointSize[6], "ScalingFunctions" -> None}, 
                    PlotRange -> {{0., 6.283185307179586}, {-1., 1.}}, 
                    PlotRangeClipping -> True, PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
                  GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "6.283185307179586`"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Order: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Hermite\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Periodic: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["False", "SummaryItem"]}]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                   BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}]}, 
             Dynamic[Typeset`open$$], ImageSize -> Automatic], 
            BaselinePosition -> Baseline], DynamicModuleValues :> {}], 
          StyleBox["]", "NonInterpretableSummary"]}]},
       "CopyTag",
       DisplayFunction->(#& ),
       InterpretationFunction->(
        "InterpolatingFunction[{{0., 6.28319}}, <>]"& )],
      False,
      Editable->False,
      SelectWithContents->True,
      Selectable->False]}]}], "}"}], "}"}]], "Output",
 CellChangeTimes->{
  3.71723880069191*^9, 3.7172388460090055`*^9, 3.717238997229562*^9, {
   3.7172392851265926`*^9, 3.7172393082399445`*^9}, {3.7172394036333055`*^9, 
   3.717239410675983*^9}, {3.7172409161293173`*^9, 3.717240937292376*^9}, {
   3.717241234450839*^9, 3.7172412514101033`*^9}, 3.7172416009434366`*^9, 
   3.7172421032432585`*^9, {3.717242174489103*^9, 3.7172422040957656`*^9}, 
   3.717242348932968*^9, 3.7172427176730213`*^9, 3.717242812748171*^9, 
   3.717245248397586*^9, 3.717245578080158*^9, 3.7172843422682943`*^9, 
   3.7172846734185886`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData["sectionTime"], "Input"],

Cell[BoxData["5.654866776461628`"], "Output",
 CellChangeTimes->{
  3.717239784101413*^9, 3.717241606746292*^9, {3.717242180507103*^9, 
   3.7172422061841545`*^9}, 3.7172423515823193`*^9, 3.717242722744391*^9, 
   3.7172452520630245`*^9, 3.717245581942723*^9, 3.7172843476618795`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Manipulate", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"calcSol", "[", 
     RowBox[{"f", ",", " ", 
      RowBox[{"startValuesFromEquib", "[", 
       RowBox[{"[", 
        RowBox[{"All", ",", "2"}], "]"}], "]"}]}], "]"}], ";", 
    RowBox[{"plotParametricPlots", "[", "sectionTime", "]"}]}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"f", ",", "0.01"}], "}"}], ",", "0.0", ",", "0.085", ",", 
     RowBox[{"Appearance", "\[Rule]", " ", "\"\<Open\>\""}]}], "}"}]}], 
  "]"}]], "Input",
 CellChangeTimes->{
  3.7172394340965385`*^9, {3.7172409664137163`*^9, 3.7172409826134744`*^9}, 
   3.7172416172162457`*^9, {3.7172417138750267`*^9, 3.717241718739255*^9}, 
   3.7172422637133646`*^9, {3.717249117102854*^9, 3.717249117598839*^9}, {
   3.717284362747229*^9, 3.7172844148307495`*^9}, {3.717284468045703*^9, 
   3.717284468262848*^9}}],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`f$$ = 0.04, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{{
       Hold[$CellContext`f$$], 0.01}, 0., 0.085}}, Typeset`size$$ = {
    896.5, {503., 110.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
    Typeset`skipInitDone$$ = True, $CellContext`f$15853$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, "Variables" :> {$CellContext`f$$ = 0.01}, 
      "ControllerVariables" :> {
        Hold[$CellContext`f$$, $CellContext`f$15853$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, 
      "Body" :> ($CellContext`calcSol[$CellContext`f$$, 
         Part[$CellContext`startValuesFromEquib, All, 
          2]]; $CellContext`plotParametricPlots[$CellContext`sectionTime]), 
      "Specifications" :> {{{$CellContext`f$$, 0.01}, 0., 0.085, Appearance -> 
         "Open"}}, "Options" :> {}, "DefaultOptions" :> {}],
     ImageSizeCache->{948., {363., 370.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{
  3.7172394388657064`*^9, {3.7172409571845856`*^9, 3.717240983958368*^9}, {
   3.7172416126582165`*^9, 3.717241617959737*^9}, {3.7172417085604963`*^9, 
   3.717241719444725*^9}, 3.7172422074990263`*^9, {3.717242246093669*^9, 
   3.7172422671166267`*^9}, 3.7172423529802437`*^9, 3.7172427253671317`*^9, 
   3.7172455879387054`*^9, 3.7172491262110434`*^9, 3.7172843543293066`*^9, 
   3.7172844032560606`*^9, 3.71728446974183*^9, 3.7172846770459967`*^9}]
}, Open  ]],

Cell["print plots", "Text",
 CellChangeTimes->{{3.7172307886169004`*^9, 3.717230792675596*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"poincare", "[", 
  RowBox[{"0.0011", ",", "100", ",", "200", ",", "0.02"}], "]"}]], "Input",
 CellChangeTimes->{{3.717245432080183*^9, 3.7172454433296547`*^9}, 
   3.717245489506328*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   GraphicsBox[{{}, {{}, 
      {Hue[0, 1, 1], PointSize[0.02], AbsoluteThickness[1.6], 
       PointBox[CompressedData["
1:eJwVVnk41VsUvWQqcxTJTJIGF5mHfSVjma+bITKm8Ay3KB4NUrmZiyTEK3RT
SfU8GjjxMtajDEm9SKVICiUK7/d2f9zvfuc7Z++z9t5rrfNTCYxyC+Gl0Wjt
+Pv1z+aqx+e+piDLd0Vlw3MtMCnK0zjzg4KYD01MrQhvaNSaT4sTozEU7+Y4
732wBZQc0it8l9EY1tntWwVLWeTc2l6TR58oaEvM0rY6wiR61xYM64YpuBHQ
eFnjij3kEtdqB14ao9as0CPQygcYZs2plhI0hvHZiQGJkq8W6Vp5eUX8NIZB
6NJyu3QfQtfU1VAaoaBzv9/RAz0OpP3p6vKRDxRMXzvNvjHChHKpktr9gjTG
ipBu65G4HTCaE2y6W5zGCH37Y3Jy/xYyLZNVIkejMcqiOjnLJn2IIW1Xteob
Cm7J7dL3z6WTW+NfPhyZouCfAJuM8Wgv2C/07MUc1qMbuzErTtAF3Mf43deL
0BhS2n+bfOxxIfsenXPnfKdg+w92iWbTDmKoeDYz7B0FeT/9z5i36sEk792a
L/MUvLj6xHO7nxecSyguEcB4A5Wjiv2zpjB567fqk4g3t9xPU+MSk9Ci9lz/
Y5IC52z9pgWmC0ktjVPlGafg5d6HzZSWLRSvHDbTwX411fXsbfvOhIG+gWIO
4lvuFdlQFCVFGu9lGD7H/bvqpvn0MXcS4v3NuOkLBRu6yguji4BkKebfvfmV
AkMXxXLj+O0w0Ehp7OCjMarGGQ/GL2wDX3gpvAnxlA6Xu81+NCZ5dVuoT/9R
sLPQszMxxYm0Fb82vYzxl0XNKuSrRMmOqAzx21hf2pGb48Wy9tCbO7T55xIa
4/n5As5SVWPIEdhycT2uXXlTEssjLchL1WuHShcosKgMOPdmhkFeVRy0K/6J
+MY+jCey1sDTbN71gPM5XnB7yYNX5iDuOdgbw0NjCFU/U/KJXQoOkoIBnRQF
zWzXz7oXdAn1gMWxwLXNvhvsQ5LK5JBP/MMleL6bp2v4ia0ybFx+M8Ee892T
7qJq4sRh3+XNr48g3lJRmP8rRIzM1p0REVuk4MTzfzq+J0pCqZ+Q6a/+nZZq
u2HVogAyLMeQPMTP49PhVvBDlcTnfm8cx/hVfP/eY/+rQ6repy5L/YbzavSb
c+LKQtefX57qIR5bTpyh8og5VNutiu8ToDECiwP7v2iuhtI6NaBhv1e7WzIV
3luSyq0VLTwYv0RRNmKZsCmZPVmWlY/z/ySzR/xRkzn0JheJjiMe1YzOyc4N
dpBy7lENHee9clXZbTr/GvL71Z8TY1ivw6UDI/mdTsTxt5Yqb+TLwJmgtqA1
ekR1j31gCPJZduh9Ifu+I5wOWX83G+f78bTxthpJB1itEytdLUxjRB9ZdPF7
aUUGbjALE7C+BzGsNwph7mTP1Irsh8jnYMuAu6EBUhCqnyhhMkuBVoDI0KF9
HkDP5OfVRT6rRs6z3ktYwUjupohyxPfUam96l4wb6b5i2SKD9yds5OHRZ7mT
fLdC1u+ot90aF0rp4VYQviAaHYHzEfLwyBbi9YJXmU4/I1GvgVvHeD3TVWDR
RsFIDfGyV8g1wR1PUsV3DOJR796Rf+v1xzqSP9VDCxPQD4Z7eDItd7tBifYn
xc/oFyxBmz/EdDyhid79bBv6yVl19bTWS2bk4dx02Sz2q/+iW2jAMx8yUD9Z
BuhHpf77D3I1TIhJl6OVzgQFrPp5z5wPnvDUPET2L6zHZNqkYflHN2Cmy5xP
Qr9zHT6ZNiDpQgbD918dnKPg1RXhtptR3kT1tKLzcvTL4fnLej3R6yA6h213
HftV1Jd/5eTvPuC+hOWcLkpj7JTViuXt3Qq0RNb1I5j/bS5Te6Uhi4xmrfB7
h3p1eftifnMnkyTTVK8oYv8PGa3q0W+2hQvhBd2yiN9tbwlfX4oXSDy9/awD
803arvkcryYKEya+l9hYf4nvru10BU8yvLNntzbygdcmofP5qB2x3i64VRj9
WFzdRdd7pyscDlHYxIfnl/bnDh6rdoc3YcFvs5APPrnUsIO1GanbcC/2Hs7H
/iL3ez3Hg0i0D1VXYL7LIvpX2Wc2krB6qeTAGQoU6rNrB4PdoFtdvIeLfI/p
VrJRSLUFpcwMsT9xfl9OmLo6fLUh9l6y2luQXyOHzVa2yziTmT2BdmXId1+d
dTdUtmnC8SmLETfUo+3vOkND5k7AiQ3Xbkd8rxcr2qP30eEVsT57EvUYrRJ6
TKzNhhiECOx6jO/Rj1Oi83IuDGL+se6dJs4jt4b7LemRIdif1a59iPiTgtYf
XPbOEtrmtbt+6Wntq+n7W+bEifNsR2w47nePtvzXr2lOurkpMSp4v/0z6dBm
ZXnSOuNefBD1zDTc++9Cuw6Ejzb3x+B5qnrunuNdZaASfLyD0R8f/1Agslxl
wi+fpvwY1zn6+TntD4VJ2uoDfL/0aTYSdq+SvgrsZkLZc7i2Wdf3PNqYn8Sa
9hs3Yz8Wv945PZioSVpZhlY8iL8iKWd7eqQkJD8slO/F+2o7RlX7+Q2gKGEi
8ib2Q5At19viLgCZiqMu45jviQhNVK/FnASvCLOZQ39WUq3eZXdRl9SrsIzU
cD7lbNFsHY45JIU10B3Rf5acSF2ux2cFE1FKB08I0Rjxz13yUj7RiW/1gsMr
xF/ZbN4nN+xAMqqkDqohX85K6dV8v6FIqpKb/bSQz2k9BrIyzo7A1b577m+M
PzVamd620goS82tmHJbSGApv9aTVU23JgLWwvwW+jwEegQsSbBeyGH4kaPE9
Bf6N7x4/SdaF5JHHCjPY77NB/VMmYUwQTRjl9KGfvJEssODv2gxl84Oth5E/
UxuLpQPz3clxPZUeb8Tj+8EmV83diTy6eOdBPOarDbp8+8ZRB/gqOmL8DfnR
MHdY72QJCxrPCpw3RD/JOHJogI93Dck4JS8Qgfu59WKFZWZe5OXRouQlqK8D
ih/5DVSsiOOaheFfenH0PjQsneoBf130H9THegzD9bMYTkywZou/kcV8qdPy
7QJztoT/1tUESXzPYtzjdl566U0mJESZpUOoN73ppZOnREi5ZBJ7Hfr7dMmU
xk8JH6gV0+F6ol4/1Cmxrl/ZBrVJBR8Csd6Eo0bTx/cwSa7lglAE+uVJyYK9
gU92EHt5nk9x6Ccbiof8T0RawhXXOwe0kI9j++MvcSx2QvfjLJYt4hm5qCaS
vkIPqt5Xn2/EflnujPhSW4H1bR2aLh2jIFkn0KN8wIXUynID7bBfx9JeX/je
4wJFY333qpAPlnEClOIDT9DkL1mXg/7mJWiy2ZKlSyrUdnhHo14KHc93tfh7
k9bz9q7ZGN/+hKYx6AWET1GNHYR+tWDUEq/4mwdYGdJzZZAPionlPy9dcYXi
P2Vk09BPDDjyXLVWW3Knp2K2Bvn++LqI4LlzLFKeYGF8a5QCZZulIh1Sy+Dj
PwWOGqjnn/eNRzuTPcBxUKJ2GfbfweVCsBx9C+S/d6nUx/o6d+9+ptvjRP6t
0FXahfyqnDu8QZLpTNo/LQbPfKbAqPRJR0CKKSzVX/U6GPWTluYgeCfCFVoN
TNWSMX5l3ak2jrMsRHCOJ3/B+so0dvlek3YkpuvPOApgPrFk5c8qMUCepuZu
kEa+L2sNGu8btoSk0do18nj+SebBlHqONWwBwRkD7J93kvDb8N61hCXXxBXG
+zj9eqRq0oocn7CQ2YbfN0F1MgVJiXJktjHw21bU12G/USudDabg/C6jfwfq
1/H8hdIYF22YYmd+C8X4wMqsevUkLcJlfrN8hud7X26itWzeQAzv1zJv4n5H
XsPnjgkJoJtvvCmE8fIz8if9x2Sg95ri+nnko7NlfPEOASFydJOs8xTezyn2
vGQiOGNxYFLtuBGe96j8SheRUIM9K53+cEP8Nb7HNNwj/mvQyJfaeQrzGxt1
d/Pe1iNhGccPbkb/qN63e3G/ySriZGX0QhjnI22ty41dawJ5UQe4LzCeE3Sq
lCViAOdPmBVUof9L3beNaqk1IJkiDW/34LxTe8vUOau3kqGNg1ZKOJ9F7oig
ergCtL5XH1RCvKUOXSMNJg7QQs0+VMV5pxl7Xfbg04Xgt5ERjzGfVph3ytRN
e/I/qLbPzA==
        "]]}, {}}, {}},
    AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
    Axes->{True, True},
    AxesLabel->{
      FormBox["\"x\"", TraditionalForm], 
      FormBox["\"x'\"", TraditionalForm]},
    AxesOrigin->{1.9918484339534455`, 0},
    DisplayFunction->Identity,
    Frame->{{False, False}, {False, False}},
    FrameLabel->{{None, None}, {None, None}},
    FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
    GridLines->{None, None},
    GridLinesStyle->Directive[
      GrayLevel[0.5, 0.4]],
    ImageSize->{240., Automatic},
    Method->{},
    PlotRange->{{1.992096260380147, 
     2.007957151689056}, {-0.001705179492296851, 0.001723894512813568}},
    PlotRangeClipping->True,
    PlotRangePadding->{{
       Scaled[0.02], 
       Scaled[0.02]}, {
       Scaled[0.05], 
       Scaled[0.05]}},
    Ticks->{Automatic, Automatic}], ",", 
   GraphicsBox[{{}, {{}, 
      {Hue[0, 1, 1], PointSize[0.02], AbsoluteThickness[1.6], 
       PointBox[CompressedData["
1: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
        "]]}, {}}, {}},
    AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
    Axes->{True, True},
    AxesLabel->{
      FormBox["\"y\"", TraditionalForm], 
      FormBox["\"y'\"", TraditionalForm]},
    AxesOrigin->{-2.022820869280395, 0},
    DisplayFunction->Identity,
    Frame->{{False, False}, {False, False}},
    FrameLabel->{{None, None}, {None, None}},
    FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
    GridLines->{None, None},
    GridLinesStyle->Directive[
      GrayLevel[0.5, 0.4]],
    ImageSize->{229., Automatic},
    Method->{},
    PlotRange->{{-2.026050719643866, -2.022870559285987}, \
{-0.004434299546861459, 0.00009732067349396181}},
    PlotRangeClipping->True,
    PlotRangePadding->{{
       Scaled[0.02], 
       Scaled[0.02]}, {
       Scaled[0.05], 
       Scaled[0.05]}},
    Ticks->{Automatic, Automatic}], ",", 
   GraphicsBox[{{}, {{}, 
      {Hue[0, 1, 1], PointSize[0.02], AbsoluteThickness[1.6], 
       PointBox[CompressedData["
1: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
BnlHLO58R4PK8nmtQeVg/B9CUkvb
        "]]}, {}}, {}},
    AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
    Axes->{True, True},
    AxesLabel->{
      FormBox["\"\[Theta]\"", TraditionalForm], 
      FormBox["\"\[Theta]'\"", TraditionalForm]},
    AxesOrigin->{0, 0},
    DisplayFunction->Identity,
    Frame->{{False, False}, {False, False}},
    FrameLabel->{{None, None}, {None, None}},
    FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
    GridLines->{None, None},
    GridLinesStyle->Directive[
      GrayLevel[0.5, 0.4]],
    ImageSize->{234., Automatic},
    Method->{},
    PlotRange->{{-0.010946504676707075`, 
     0.010947712987097881`}, {-0.024134661108688248`, 0.02412635949707311}},
    PlotRangeClipping->True,
    PlotRangePadding->{{
       Scaled[0.02], 
       Scaled[0.02]}, {
       Scaled[0.05], 
       Scaled[0.05]}},
    Ticks->{Automatic, Automatic}]}], "}"}]], "Output",
 CellChangeTimes->{3.717245494771823*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"poincare", "[", 
  RowBox[{"0.011", ",", "100", ",", "200", ",", "0.02"}], "]"}]], "Input",
 CellChangeTimes->{{3.717245432080183*^9, 3.7172454433296547`*^9}, 
   3.7172454842928677`*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   GraphicsBox[{{}, {{}, 
      {Hue[0, 1, 1], PointSize[0.02], AbsoluteThickness[1.6], 
       PointBox[CompressedData["
1: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
        "]]}, {}}, {}},
    AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
    Axes->{True, True},
    AxesLabel->{
      FormBox["\"x\"", TraditionalForm], 
      FormBox["\"x'\"", TraditionalForm]},
    AxesOrigin->{1.982049783512199, 0},
    DisplayFunction->Identity,
    Frame->{{False, False}, {False, False}},
    FrameLabel->{{None, None}, {None, None}},
    FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
    GridLines->{None, None},
    GridLinesStyle->Directive[
      GrayLevel[0.5, 0.4]],
    Method->{},
    PlotRange->{{1.9825889332533118`, 
     2.017094516684523}, {-0.003698503592977172, 0.0036774199045566665`}},
    PlotRangeClipping->True,
    PlotRangePadding->{{
       Scaled[0.02], 
       Scaled[0.02]}, {
       Scaled[0.05], 
       Scaled[0.05]}},
    Ticks->{Automatic, Automatic}], ",", 
   GraphicsBox[{{}, {{}, 
      {Hue[0, 1, 1], PointSize[0.02], AbsoluteThickness[1.6], 
       PointBox[CompressedData["
1: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
        "]]}, {}}, {}},
    AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
    Axes->{True, True},
    AxesLabel->{
      FormBox["\"y\"", TraditionalForm], 
      FormBox["\"y'\"", TraditionalForm]},
    AxesOrigin->{-2.008362123142556, 0},
    DisplayFunction->Identity,
    Frame->{{False, False}, {False, False}},
    FrameLabel->{{None, None}, {None, None}},
    FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
    GridLines->{None, None},
    GridLinesStyle->Directive[
      GrayLevel[0.5, 0.4]],
    Method->{},
    PlotRange->{{-2.040055580009596, -2.008849714786664}, \
{-0.04399091681214501, 0.000039437959322313105`}},
    PlotRangeClipping->True,
    PlotRangePadding->{{
       Scaled[0.02], 
       Scaled[0.02]}, {
       Scaled[0.05], 
       Scaled[0.05]}},
    Ticks->{Automatic, Automatic}], ",", 
   GraphicsBox[{{}, {{}, 
      {Hue[0, 1, 1], PointSize[0.02], AbsoluteThickness[1.6], 
       PointBox[CompressedData["
1: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
        "]]}, {}}, {}},
    AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
    Axes->{True, True},
    AxesLabel->{
      FormBox["\"\[Theta]\"", TraditionalForm], 
      FormBox["\"\[Theta]'\"", TraditionalForm]},
    AxesOrigin->{0, 0},
    DisplayFunction->Identity,
    Frame->{{False, False}, {False, False}},
    FrameLabel->{{None, None}, {None, None}},
    FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
    GridLines->{None, None},
    GridLinesStyle->Directive[
      GrayLevel[0.5, 0.4]],
    Method->{},
    PlotRange->{{-0.004610079646861404, 
     0.004621242693408736}, {-0.01016381629029932, 0.01007844458586194}},
    PlotRangeClipping->True,
    PlotRangePadding->{{
       Scaled[0.02], 
       Scaled[0.02]}, {
       Scaled[0.05], 
       Scaled[0.05]}},
    Ticks->{Automatic, Automatic}]}], "}"}]], "Output",
 CellChangeTimes->{{3.717245436600185*^9, 3.717245447433385*^9}, 
   3.7172852402872095`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"poincare", "[", 
  RowBox[{"0.161", ",", "100", ",", "200", ",", "0.02"}], "]"}]], "Input",
 CellChangeTimes->{3.717245428632893*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"poincare", "[", 
  RowBox[{"0.07", ",", "100", ",", "200", ",", "0.02"}], "]"}]], "Input",
 CellChangeTimes->{
  3.717245428632893*^9, {3.717247653710226*^9, 3.717247667022069*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   GraphicsBox[{{}, {{}, 
      {Hue[0, 1, 1], PointSize[0.02], AbsoluteThickness[1.6], 
       PointBox[CompressedData["
1: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
uw7LbOZ3gf8BnbwIEQ==
        "]]}, {}}, {}},
    AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
    Axes->{True, True},
    AxesLabel->{
      FormBox["\"x\"", TraditionalForm], 
      FormBox["\"x'\"", TraditionalForm]},
    AxesOrigin->{1.9140327500329306`, 0},
    DisplayFunction->Identity,
    Frame->{{False, False}, {False, False}},
    FrameLabel->{{None, None}, {None, None}},
    FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
    GridLines->{None, None},
    GridLinesStyle->Directive[
      GrayLevel[0.5, 0.4]],
    Method->{},
    PlotRange->{{1.9166038855458718`, 
     2.081156558374111}, {-0.021697632601416703`, 0.02326818386593348}},
    PlotRangeClipping->True,
    PlotRangePadding->{{
       Scaled[0.02], 
       Scaled[0.02]}, {
       Scaled[0.05], 
       Scaled[0.05]}},
    Ticks->{Automatic, Automatic}], ",", 
   GraphicsBox[{{}, {{}, 
      {Hue[0, 1, 1], PointSize[0.02], AbsoluteThickness[1.6], 
       PointBox[CompressedData["
1:eJwVlnk8Vdsbxle6SchYyXSliErXdc0yZIgiSRkyz1NKijJVSGaVecwQlQgR
hcK7zMd8TiRjynRCLqIU3bN/+/fH/uw/1mevvff6Pu/zPKKOV865MCGEOsjr
/3fm0bkj4x4EGFPPW3ptp4Jkc/O+/74gbPOetUVT5TUs0r1F5foZcFI9sXbX
bD3kNqf19nUjHLYaEWsU3gMjNjccX34mgGv4jwfJ125DeN6RnqDtCMeUVRRn
vKZBWfapZZNahAVDdCvDW/PhxrPAkoH3DNBDP4TlIttAqlvgxMgawjpMBpL9
6W3wWKuCT9CAAGY7JPJnQwF8Y/kS6WyLsHNzyDbGSxpk8gTa811FOH0pbmHK
7Sa4i+c3P5IiwFXCjaKT1AMNgwPRKz8Q/vic628T13oQz/2T/p3OgG9hObls
lNcwIMZyZbAUYW7X+Lb1X30g4+D0QWg3wrXui0lj+/+G9LutYpGYgCGZuNCH
f9FAOXD5aNggwufzyzddpcuA2Tulmr+PAXs6PWpqpZuBbajqbt0swqyKXFs2
ZzqA/ivIXCGMgELlAiG3t8nAJ9l5VEAW4flr0/s5+2lQNfO8cToV4StDEyuZ
7Ekg+0GTU4aJgJ28Y95pJZ2g3ZRg9P03wl/YFRM3vJsgZ3t7cfROAkx1WTnY
fMsh84eCSUcUwhX/MuV6TFKhvDyndFaN/F91d3GFDkMN9tCpKdsbBDwV1lZq
UaSC/yejUuevCO/30L+24+ErmLjTe9CQ/H6Jz5NHGwQB3hzS6TOlked5RLhY
SagHShO/8DF1EzA2rLtXffU2JFsG5O1iRzhFtPDhp2oaWA8FLdVUI+zP/UKh
LuER4Ij4yvwxBiS7Hp1ZO9YOx/m0bfS/I+y11TLbnLkNRnQlOk5pEXC7IIbR
+/IJ3JXdz/LUGeHMpnQt91QaSJ6+9FD8IsLqnFHR2v/5Qgflo/tbJZLnXKe4
PNED6pJKWb6kPg7J3Nox8VcdRE2aTO//xIDo1NSsHxXVsCJFNf5QifCpIpEm
o4Y+aC/gWubiRbiraqLhTM0FeCexet++iwBvy70pj3VoYGgeumrVj7D9xHNR
qnoJ8K5qcCi3MiDJlg+agpvBfU+TpzsdYWFbrZU43w4I2AhebAsl4G/taZkX
I2kQw+vvKaWK8Du9V0wnvtLgvV56cmQ8wkJlN/jGHsfD2FVNj6/MBHDYLQha
HemCodGF0C8/EbY4rL/M/7oRjl2rGNQh11V00s6+kqoAfZH7hwfJ53uSLe3U
+qnA5rPxUUEZYdedoRy3D6lrxJ7Nb1Mj3+/jq20Z60QFP5nP1cfmENb/rr7+
ILkKUk7lTP7dy4BizWBUyIJh7GBTqMwAwpe87sBIQjdMhnjIcbUTcIelxiM6
OQxKWVV3neREuD7vrxMu5HzaiWzSpytI/b/XFN4IyAOlPxR2ZUwzQOt74PG2
4XZo5elVZ/+FsJkFjxOOa4WhgQk/L5KPYKD4F3GhQmD1tB7XIPn57S96GxJK
g6mdiQ2zNgjne+/xf9HjQp77iYzW4wTUrq3Oe9v3gt9iwGXndYQT1Pa6K/i9
hbohT/asCQaocMSUbHLXgkedO+9cDcIncjazK0z7wKzmrcD4DoRzZwtKmBet
gS40Sl2hETA1aTz8+zgN7uRx0K37EN4lm+bhWVgMF+xlk52oDLgvO98fo9AC
nhtfBNnmEXazer+4uUKBg4SQ5zk/AljG64Pk+LKggTuleJcWqX/f+Sy5CRqc
jTVhpkWT82TWozh3LA50rp/oEuIgYO3ZFubs+C7QNTRqYdtE2Cfut2ilciOw
W0oqyq8zgMeXjVPg3wrQ2/MiupOc78ZwPcHyJiqwyDj4N8qT8+zCCNmieFjj
QxQ/Re0eAQGyf0SpJFKh+N83Nhmkf2RyXOJs96iEuzhY+p92BvzUmQrKDcOQ
Ny/Tw0TyLHV9xa9GdEHMbta0qgYCIpLCg7MhEh532j3V5Uc4SLcn6eUwDX5W
a54ULkOYoh3+cUgtB1rkV5DdPAP0Xcoi77hRgBryjXed9MfUkLVLn961wMCB
zn3XjxCg4Mg+KsTyDIxN/zlwxRvh7Uy+24550yDoc+4eHtJ/z8YXBQ1edoeA
FBEbJz0CaCtYMbWjF9r09pbvI/dL3tua7hLyBnj4tvcUDDEg4X53SddGLah9
3pJaXofwZTuqsiG9Fzhj+88ObENYep+/5YEaJwie3eVIGyNAmjCoLXakwS9L
JwM1CsmrVCP1fd8zuPs88jz7AAOkjax7xMZawKKIHlT0L8KGunHj54IpcPXb
NbPSSwTkmh35Ph2VDRmsYhG8pxD2CFkzcHxPA75ibkWJEITnbtZVpl+OgOUi
rQAebgKOWQUaRIx3gYizooMi6bddmdyGkjQM3I5nmyx+M0D24/MPRWcqwdJ5
u57CQ4QlS24+GE6lwsbYG30paYTlxpf6Yu8d0ICrV3284glwOggpImlUSB+L
9dP8TPI8/NvC1+cljBUr70jqYQCjbTTPQbARPIrvrqSPIMxoGMmxq+mCC4n1
jJQXBGgXDnDtnoyFuerQRpZ9pP7Den8rz9PAXF40JO0pwiUv+QMXcjLhgMTh
hauLDHB6l83ZMkCBPvnQdyobZH5u5U/bbtoCb4Zv3OYTIeBMpEZBZVMR3MoD
etR1hJt+bIljt6KBQ2f2rX0WCPPqTKo6FbrA8gyj9pMJATWRFIqUah8Yx9v7
9qwiPG541fK9Yi1EB7MvuX5gQO6SP/0691uIcTFIk6tH+PWbF+eFz/VC0VOj
HSz/ESB6784UjdMTRM3oWg6LBLSqCmRkR9DAdehswyuS56xI6U7egkJwl7n9
MI3Mf/U1MXPLi63gwrVOP72M8EWhJ8V5C+0w8yRhxw9zAh4YWfHaeuRAnH+E
A/sZhLk+Za1zdNHAbY3CpUDyFIqJz/JnDof7PvzMzPwEHPRz668M6gYVtS1E
GDmfuaMjk+taGOpvJ5aKrDLg8MSdnKMmVcDRPHnVJQ9hzRW/pE4HKlzfo5oW
L0n2GU/N03LOOhr09dSoV7kEJNq3voynUOHiWLLlmTGEvykLaP+yrQCRYY6b
mSTPGxHLd8OrGoF+3Gtq7SPCSYPF5VX6XSAv0jbA9IzMa7P7FzBrPBgOWlWw
HETY+r6s58dJsg8F+x36/ojUJ02p0HQmDYJlpAxC5hhw1MJGfKtAB/wzJSFz
i+RZLny5W+FrM+w1vRXQLkrA9zMC5l2sJZC8g1AUvUXmyaiZT8MZGsRWmjd6
nUNYoPqh7/gLS8iQ4TZWtSCgIWhbk3RYH1yjyM5qLiL8hL8mM2ipGu7lmEqf
HGRAGb4weY6tDuZLYsriWhE+ufMHq5NEL1zIbmsUXibA1hfECoV9Ye3TXsuM
TQL2nKKMqxbQoP/LnDZuRHhP6kZc2YMnwMyn55NI7vd19ln/wf5WWNqoldb9
RubPPU6vbJt2SJkpnz9iSsBNfhPeTp5HUKc34ihOfi860stU/IoG8pMH79UH
IvyzWklvwzMMNLOpi+EHSJ4qcWNFq90w53+KU4Xk2fNErvGWDYDkCMfYzBID
Xiy5GFlrvAKjAh0DuccIXxj/k/e5LBXustSz3RNGeFRTebtXzXkN7fyITdUS
Aq6piyVwrVGBt9GFvoPkldJ6xXr0bTnk23HJB5A8AyZad1eZN4Hx7XL3skmE
o05vNVht7YQTT6w8TyQSoPpin8PQcjyYr7FOfj9E9jluWzOLARrMz9ryo1yE
H/u5HXrwZypknDI+u/6D9NvTX01iBjtAUXY4epzk+cZhXczeuBlYa4Y7NQQI
yMrmWfI8XAa7ZLN7OUNJfx381tYiSIOUS+cel+gjrFR30/WmmgpM83Gck3Ml
YIQaZh092gcvKVqBwSTPhm5/qSTWanAydKVYkn2ueZt2wm7Oeri5QIHoTnJd
KDL/00gPnOE6lMJPJ2A5dinCXywAppdkTe22kv7VXLx5pIwGv5uqJBYaEL4x
a1FntVAAOUw/lXxoDHi4KV/UoNEG8hdVvmatIPyPc6Sg+2gbTDe1JO41JkDC
gKskgZ4PzlfcmWqsEK7UlYg8BDT4MDLTL+NL9j/F1NOETDDcclFwo5P5cp4p
jKfYpQea3k3k2JP98Po7Q0f14Xpwcn90kZfUf1Zaib3mltfwPxO/xlA=
        "]]}, {}}, {}},
    AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
    Axes->{True, True},
    AxesLabel->{
      FormBox["\"y\"", TraditionalForm], 
      FormBox["\"y'\"", TraditionalForm]},
    AxesOrigin->{-1.9200194179486973`, 0},
    DisplayFunction->Identity,
    Frame->{{False, False}, {False, False}},
    FrameLabel->{{None, None}, {None, None}},
    FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
    GridLines->{None, None},
    GridLinesStyle->Directive[
      GrayLevel[0.5, 0.4]],
    Method->{},
    PlotRange->{{-2.1235147682530466`, -1.9231501156456872`}, \
{-0.28004575027909795`, 0.0012036394590674213`}},
    PlotRangeClipping->True,
    PlotRangePadding->{{
       Scaled[0.02], 
       Scaled[0.02]}, {
       Scaled[0.05], 
       Scaled[0.05]}},
    Ticks->{Automatic, Automatic}], ",", 
   GraphicsBox[{{}, {{}, 
      {Hue[0, 1, 1], PointSize[0.02], AbsoluteThickness[1.6], 
       PointBox[CompressedData["
1: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
        "]]}, {}}, {}},
    AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
    Axes->{True, True},
    AxesLabel->{
      FormBox["\"\[Theta]\"", TraditionalForm], 
      FormBox["\"\[Theta]'\"", TraditionalForm]},
    AxesOrigin->{0, 0},
    DisplayFunction->Identity,
    Frame->{{False, False}, {False, False}},
    FrameLabel->{{None, None}, {None, None}},
    FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
    GridLines->{None, None},
    GridLinesStyle->Directive[
      GrayLevel[0.5, 0.4]],
    Method->{},
    PlotRange->{{-0.012394270178568575`, 
     0.01188364732056516}, {-0.03558530196406166, 0.03413192822405921}},
    PlotRangeClipping->True,
    PlotRangePadding->{{
       Scaled[0.02], 
       Scaled[0.02]}, {
       Scaled[0.05], 
       Scaled[0.05]}},
    Ticks->{Automatic, Automatic}]}], "}"}]], "Output",
 CellChangeTimes->{3.717245259166738*^9, 3.71724791335075*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"poincare", "[", 
  RowBox[{"0.08", ",", "100", ",", "200", ",", "0.02"}], "]"}]], "Input",
 CellChangeTimes->{
  3.717245428632893*^9, {3.717247653710226*^9, 3.7172476821851416`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   GraphicsBox[{{}, {{}, 
      {Hue[0, 1, 1], PointSize[0.02], AbsoluteThickness[1.6], 
       PointBox[CompressedData["
1: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
qvEhyjf8P+LfYAg=
        "]]}, {}}, {}},
    AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
    Axes->{True, True},
    AxesLabel->{
      FormBox["\"x\"", TraditionalForm], 
      FormBox["\"x'\"", TraditionalForm]},
    AxesOrigin->{0, 0},
    DisplayFunction->Identity,
    Frame->{{False, False}, {False, False}},
    FrameLabel->{{None, None}, {None, None}},
    FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
    GridLines->{None, None},
    GridLinesStyle->Directive[
      GrayLevel[0.5, 0.4]],
    Method->{},
    PlotRange->{{-0.21796365211140076`, 
     3.9982765623526677`}, {-1.7999265519482717`, 1.8671301807673644`}},
    PlotRangeClipping->True,
    PlotRangePadding->{{
       Scaled[0.02], 
       Scaled[0.02]}, {
       Scaled[0.05], 
       Scaled[0.05]}},
    Ticks->{Automatic, Automatic}], ",", 
   GraphicsBox[{{}, {{}, 
      {Hue[0, 1, 1], PointSize[0.02], AbsoluteThickness[1.6], 
       PointBox[CompressedData["
1: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
dA==
        "]]}, {}}, {}},
    AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
    Axes->{True, True},
    AxesLabel->{
      FormBox["\"y\"", TraditionalForm], 
      FormBox["\"y'\"", TraditionalForm]},
    AxesOrigin->{0, 0},
    DisplayFunction->Identity,
    Frame->{{False, False}, {False, False}},
    FrameLabel->{{None, None}, {None, None}},
    FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
    GridLines->{None, None},
    GridLinesStyle->Directive[
      GrayLevel[0.5, 0.4]],
    Method->{},
    PlotRange->{{-3.11902335896692, 
     1.0137834831362942`}, {-1.9794910617859627`, 1.750374315677817}},
    PlotRangeClipping->True,
    PlotRangePadding->{{
       Scaled[0.02], 
       Scaled[0.02]}, {
       Scaled[0.05], 
       Scaled[0.05]}},
    Ticks->{Automatic, Automatic}], ",", 
   GraphicsBox[{{}, {{}, 
      {Hue[0, 1, 1], PointSize[0.02], AbsoluteThickness[1.6], 
       PointBox[CompressedData["
1:eJwVlnk0FIofxUXLK0u8siRrQvJEyfKyfJVoUVHWkkh4KWXJVrTxyBaplJAo
WyFJhNLXvo5ljCFjMMPMGMSMJU/WX78/7rn/3nPuOfdz5Z09z7jy8vDwNP3W
/z26/+Xex6JMXLtksxqf3wdXb0iHKXkQAchyEQP76Ejoc16RP/0ZY1LeTGh7
j8EHZgYr6lc7Tr8oggxrGqbfI2zdmtcA5ptVqf5pDRC7wmRbHXyEQ9/idMOE
KBiulFMw0duAXfuuh93XHQY3f60cVysSqPE1PdzmScGo8BpTpw4mDqrT1D7p
DUKc2pWIodhxcJILvb87g4pJVCHvYykDWFyUJROdNgZm7k8S/Uxo8Pzhhk1/
9Laj9DahQsE7ZCx4tk7oQt0I3NLIMD78vRtEKa2XVBljuKoov+NbIAllc0ls
RhAV9hzM1r6kUoV1rPyYsudkNKcKhW9wZODHqpOtO2No6NwQtenLei50/Nvq
faUlG9YrZa2eDerGrq7NhwV+kMEmTTXpv6xhjAgFgpJaDSqV3LhbSiTCUJ6z
bDd9FJ1I4nrC6q2wUCe3oB0yDdspzhJnDRpxw5Ge5A17pkByd4TKISYZ77+w
jFOOp+G1oPjaJ0p0yJl7+9eiRQ+cKUzNrWz4jkffpPrObHuBDcl/7tj14yMe
OD9zsG2Rhg+m/Vev5NSAwohWlYIaGVVrJSIcQz6Dbl/8ivjpeojcVfmPQ3c6
5pfeaxghNIK99fNVokgLPiKsU1lLq4SjZl8teSaaIH1Q3fNyCQvv5LdqWO2o
xhjbm0YzRhy8lTJjEkpqgOnmR6LS1TTgDkufI1twcf2MpqukXjN0eB2ZdJxg
wnWZq9PmPuN4eHThKXHDJCSwck4ocZvg9Owzx1lTKja5WZp+CaLD8DHmOqUd
Q3hmixeDxCLBCdnXlyKekZDCv01nbzMDFxo2r5fsb4SpslNue/iL8cA097R3
Zia+nj8ZXHCLANkaqs+mbfvwkMwnEVGPLngblSnnuPM90uzNnos4zOKmA89f
CoR2gciyo/5GUyY43okONuRn4NPIDIG3e3ohi7zh6Nk/ikDM4UIWZ6wU/qOY
lgo71MC94/We+hq/85St01P36Yb2sc96ucxCECeqhAgXMPEyV4T7xKUHLKX0
9RdVqfhqSIEmGdYNYZ2Dbd3uFHA11trk09WFaG+9hucyAYqM6PT97yrxOa+3
mqMIGT5rW9spetVj9nWLwn8PTWKXarteG4OMIifAOWmpBUvjxYUiOlkY7LYl
hy+lF8x0U/yu3v6JZ0zudnbO9oJRZ5tANIsFBlVFsDujA2uKK1WE6RygKBpW
X+wZRVWruPWpGgxslrU/G2rfD23n7icEqrBQWzzA79RiNZ6GEvHlqA6IlPXK
1pZiQewgI5qRNox6vvOrX8bYmP+GT6dCfxxiZd7fUvIig6K4nzrFi4uTtd25
11O+oa20XU3fJy78ElKIKohjovmrQm1DVy4SAkI/Vs1zIa5wV+L7Z98xK0K9
dPnREG68V7jgk8eFwrUnU+J8W3BMbovtqc2zmPhusEfc8AvISxo3d2gNwLG2
uPXlHxqR30ywdKCSi1Z1ucsEeyY8mLMecP/QBlf5WnJ2ZDOQepLo7XBoCLR1
dg/YmLXBfatVWqjBMAqoKwwYOSWijLlymOJONtR/pio80m3DUsHH4jGGY/hI
wHvMZU8XfOESftbXDEOcDdmtftcouOiF1OcG9KLaFV/Zo0Hd4OX44lP002HI
e6srFtDejo68S4tb+NrwRfS1aK0LNBQucjffd7cLBfa4+Wcc64bZihhHPTkC
5BgI6j0LfQzFSeG2jRUcwKTy69PEQYyVUn4xP8YC66k2avOtTlQUjzynOstF
W+GdO6ZH6HDLjBre4FOBgqlicIlDhwwP5ZjLQ1wcU3MZ8RQeAKYDIfLLTQ4E
r00568zhoJdfo4XBtiHUuZk/Rfzdg9sRW0H7hiKwSs4tF71GRtdd4enC7hMw
2XfyQenrBnw5cFPCxXMS1xiVqe7WGQGLbXdoFX/3Y5h7+a5PMyQUUpt18Fjk
QvBPFbvdi0T0U5h6d3vTFC75b7gaJTAEzvdgc8PO7yiRYpzIn9cD/PTjtX/u
nwaP5ZSFgWPjSIuTdraRi0Oxq1q61QfpqM1NnXDZ24OXDTCuNKEN5Jf9tI2I
XFy8YTjKGGoAyed33LdUUzAnMESzYfNH7Hhf/D6Cdxh7M5nBtQ96YS5QUCnG
DYH/trb7kt07vEJzb7nmMgqlD2MZyTOf8OmIx3SAxQi0XA49ld5bjhJ6GYSE
5R+Q0vGUaJs8iHd6t++lahGwu6Xe5VV4N9p1BpRPbZzDgEfKVgkf6TAEb/Mj
BljY9wf/xuX4Digv2NdXcn8GjHisftBFR9HcdVgzuJ8D2e2pCZo8LVh0tvvu
5d4hVNV/PPhXVBM6jpaou4jVocqrmWIl7iTwF59f/fWVApGHq1U9q4bR9xrr
lBxwQNRU6kAldKMtXeeJrOEEVO+oy1rxakPuiUkpn1d0XDvwmMRX3A2xi7W0
+fUk8CjL3yUvVwTmu0Hy4dJvHv6zLePT+joQIO5PLpJqRNNl7+nsQgbuTbX+
qdrJBkm+kaA1Tn147sDSsOBrLhR85RSfyaGjoH1zeu5jBnp+eKVYIc2CtZwD
Jv3OI1Ax981B+dd34AvhsbDUH8TcpW13rG6+hyY1wzXVOlyg9oqlRI795ojt
i1YzLhk6xl1iLX7vAtttOqnEow+XfGsqL4mMg+7P7LDOnRP45Smvj7UmA7Y+
yLMzjKnElczL846nasHg1bhUmswU3NxrlojxOaBw3+nas4PD0JqScPeqTjmI
2afans7+AQElIpfkbjCRGTJuEGLORvvbpOMBL8jgaM2W9tBgYlCmf4AEUkD8
l5le461vmJW2sLZWmwW9piprAxMnsIN/TkPpUjFomXzOCotugPfEDP9g0WIs
266aU13Khmfnd7LJcXRcXHwU/GD2O6Zs5PofYdRgTGF04HxUFthdfKccGWmD
3ifoHfmKfThO1iyI2lqBuXaj0xQgIvXX1uYboSQQrPbatZ1MRg9T4wXND3mA
9wL0Xc0nwTGjnZBnT4GXIbnSEq0cjBQN9FY4RIftm2W3kqkTcD5IkVbwphJU
v56nnSVxMbKW6by3sgsy26JihCJmQeb0UnGt8w9cjX+d7HqPijTv3HTyDwJI
sfL4VmyaMfMfspLFtW5wqVeLYJv0g0H/zw41bTb8ben+lmldgjIXhNOH3bsw
kw98xqQJ+Nfz+psCL0l4yunMnvfVQyjBHvOochrEEbWASeOdY7hgXHjn4WYm
DG5Ykjv6tAFj174WFen+hDbm4zzzkz9RtoordrCNAVTekHmjwD44uon3xKgK
FedaBdLijiRC7OT3zNblKixRa57dbv0Nh5TpOuPt6XBe+s/KtjcjqHLlR9ZM
2mdoNbHQ6x0kwRljjW9KTgQo8SxtXDAn4ueomHzczoY11ZbxlpltMHbX2zv0
7mP8z+zVdrV9v//ZmaErDUeSwfohU2GojwQGh2lNAiN5kLL0173M+EpImq29
nbiYibZnpZzs9HNAh7M5tzOoDA6rbGz/pdkCsoVJAvv3M/FXbisl2pcNhSSU
jBUioE18fdhR0gcI9pIRz0yhgMTJLf5uDi34dsfKhQfizehZe/+J/sBryO28
5Kf0ZAi3cpdU7T9MocRFyemel6PwVLUgabqdDfrbdKm8Jymo2rKl095iGHZZ
+OlTk1hw/cnlxfbqaeTSxCuUSipg/8XgdUfPjyDxXIr2FksScuo71yXvnUMv
+1TOvzYMqB/U04w04oDJT/Ualz4m2k+91AfHatj0ObM4aE8jiNvsLF9pncUz
q3+sT3hQBytbY7Z8c5mDErm8GOV6BmoYbwr9e4SNjlkz0Zn8dGhqVVsZm/+O
n+RFVXw5LWAbq5L2pqoKszSluNzySTATvtbDe7EdGfKk6RSNSlgI/OCV8GcW
hPPkWB9XacbuJzStjWJckAy8cpDF2wGu3t9cZHXJMG+Fa6QUOCDgmyEy1zQJ
zhWLub5dbKSW5wyMCyXB6Ro79sN3VWBi+NiMTpzCr8/KGqkyRCy1k6lKS/iA
GrmB/LJeE1A/5mP9OpyDSRQCT3RxMmgfevs1sHMWYsObLTu4EVDJW2cub/wK
eiJcekTK+pGVOu9wN60af1HoTdr724BV49+00XMW/wej18M4
        "]]}, {}}, {}},
    AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
    Axes->{True, True},
    AxesLabel->{
      FormBox["\"\[Theta]\"", TraditionalForm], 
      FormBox["\"\[Theta]'\"", TraditionalForm]},
    AxesOrigin->{0, 0},
    DisplayFunction->Identity,
    Frame->{{False, False}, {False, False}},
    FrameLabel->{{None, None}, {None, None}},
    FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
    GridLines->{None, None},
    GridLinesStyle->Directive[
      GrayLevel[0.5, 0.4]],
    Method->{},
    PlotRange->{{-1.0197347183404837`, 
     1.06073159915785}, {-1.3871107318377047`, 1.3995953334390943`}},
    PlotRangeClipping->True,
    PlotRangePadding->{{
       Scaled[0.02], 
       Scaled[0.02]}, {
       Scaled[0.05], 
       Scaled[0.05]}},
    Ticks->{Automatic, Automatic}]}], "}"}]], "Output",
 CellChangeTimes->{3.7172853381418614`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[" "], "Input",
 CellChangeTimes->{3.7172853326322055`*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   GraphicsBox[{{}, {{}, 
      {Hue[0, 1, 1], PointSize[0.02], AbsoluteThickness[1.6], 
       PointBox[CompressedData["
1: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
PxnVXpdWL/tRBf8DGtJj2w==
        "]]}, {}}, {}},
    AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
    Axes->{True, True},
    AxesLabel->{
      FormBox["\"x\"", TraditionalForm], 
      FormBox["\"x'\"", TraditionalForm]},
    AxesOrigin->{0, 0},
    DisplayFunction->Identity,
    Frame->{{False, False}, {False, False}},
    FrameLabel->{{None, None}, {None, None}},
    FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
    GridLines->{None, None},
    GridLinesStyle->Directive[
      GrayLevel[0.5, 0.4]],
    Method->{},
    PlotRange->{{-0.006079788062636965, 
     4.133488589906849}, {-1.5417723334569862`, 1.9290123039184488`}},
    PlotRangeClipping->True,
    PlotRangePadding->{{
       Scaled[0.02], 
       Scaled[0.02]}, {
       Scaled[0.05], 
       Scaled[0.05]}},
    Ticks->{Automatic, Automatic}], ",", 
   GraphicsBox[{{}, {{}, 
      {Hue[0, 1, 1], PointSize[0.02], AbsoluteThickness[1.6], 
       PointBox[CompressedData["
1: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
        "]]}, {}}, {}},
    AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
    Axes->{True, True},
    AxesLabel->{
      FormBox["\"y\"", TraditionalForm], 
      FormBox["\"y'\"", TraditionalForm]},
    AxesOrigin->{0, 0},
    DisplayFunction->Identity,
    Frame->{{False, False}, {False, False}},
    FrameLabel->{{None, None}, {None, None}},
    FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
    GridLines->{None, None},
    GridLinesStyle->Directive[
      GrayLevel[0.5, 0.4]],
    Method->{},
    PlotRange->{{-3.100902961014771, 
     0.9949081708779691}, {-1.6109423976961021`, 1.7035532238041553`}},
    PlotRangeClipping->True,
    PlotRangePadding->{{
       Scaled[0.02], 
       Scaled[0.02]}, {
       Scaled[0.05], 
       Scaled[0.05]}},
    Ticks->{Automatic, Automatic}], ",", 
   GraphicsBox[{{}, {{}, 
      {Hue[0, 1, 1], PointSize[0.02], AbsoluteThickness[1.6], 
       PointBox[CompressedData["
1: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
65X9qKuaDusn91xZshlBmwfFJyS3MeF/rD27NA==
        "]]}, {}}, {}},
    AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
    Axes->{True, True},
    AxesLabel->{
      FormBox["\"\[Theta]\"", TraditionalForm], 
      FormBox["\"\[Theta]'\"", TraditionalForm]},
    AxesOrigin->{0, 0},
    DisplayFunction->Identity,
    Frame->{{False, False}, {False, False}},
    FrameLabel->{{None, None}, {None, None}},
    FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
    GridLines->{None, None},
    GridLinesStyle->Directive[
      GrayLevel[0.5, 0.4]],
    Method->{},
    PlotRange->{{-1.1301716870840068`, 
     1.0466060839362124`}, {-1.3046434534665978`, 1.299701771820256}},
    PlotRangeClipping->True,
    PlotRangePadding->{{
       Scaled[0.02], 
       Scaled[0.02]}, {
       Scaled[0.05], 
       Scaled[0.05]}},
    Ticks->{Automatic, Automatic}]}], "}"}]], "Output",
 CellChangeTimes->{3.717247917392432*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"bifurcation", "[", 
  RowBox[{
  "0.01", ",", "0.11", ",", "40", ",", "100", ",", "50", ",", "0.02"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.7172455100860395`*^9, 3.7172455260265827`*^9}, {
  3.7172856536808047`*^9, 3.7172856580126805`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"number of solution to solve are :\"\>", ",", "6000", 
   ",", "\<\"for T long each \"\>", ",", "6.283185307179586`"}], 
  "}"}]], "Print",
 CellChangeTimes->{3.7172856585250206`*^9}],

Cell[BoxData[
 GraphicsBox[{{}, {{}, 
    {Hue[0, 1, 1], PointSize[0.02], AbsoluteThickness[1.6], 
     PointBox[CompressedData["
1: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
7yk4749/5AMoPWbQeAfO+d8uHm5G84+/aL0+Tvca1btPD85X8MH9DFDo671W
g/kT3pS8sfoI8xVdzj3dHsmCLLT2kIrdFephZA3JRtNEyLnJI+6vD8H9PWo4
/iLHqBpZ+1ZG+0vVSmQLKy2PGpcFZM0jLtdo38J9WP63K3J/GNzH8WxGbwEG
8CTh4c8QFwrkd+ZXTy0rwP5oayUCJZ6HIEuvtOVZUsH512jdJ3wxhv7WnUPf
TkjSI3eLUugaG9AoHvv342MKmYTAajEaPzYK5LzFDW8mvUDCtoX2msmL+f9C
do87yD9vRY3yOv1tZbUm5MgN7dK0tHPjKP9a/jJ9zL0t5DT+s369j+lR3mSz
VOg9NzHyhtfjnw/jG1De9PFoUGzcArLlzZPzMpowX4jH828Hx6ZQfWGX9n/V
kySozncqLpH0CBmyQOWTo06ijSjvYGx5TXsC5lewKYhXf0+FHB/06+W9RNjv
td1CFJIFs6hf42yNxeuzc8iff9aZWeutwPqdJzoFI2eQ43SLO9zniNB4Boq2
DjanKJFf6pwgLr66hvLJi2n91NykqE7CXn9GQhnWWxXLYqw2uojy33k+BV1y
gPk+OXO6UYXD/VaaHlTXmYPx5S69dTlUNIhMsBCdvaAF+x0O5r6TpwTji4iF
KA98nEcWCOf7nlcD+39f+J1FcgbOR0Hrl4oqO3Zf71QKpzxhPTyhUTuEneA9
TgfzfrFvgPOXjK5Mr2qE/Ur0VtzRm4L6f5WLeZbOcH4z84/H3IYhTyMnzp1R
Bm633IhvUYTzSX1O4qNwBd5L15Fvd7c4YX2Kut+vRtLQKPb/7+f5/973mj9J
c34WYdv8jjfsplWIUP0Pcf0VEn16ZLPW2C+kb5mQMw8XRr/mpUJu5j4f5uY+
gsZ7S9E3prCnBll/LiYh0WkZ2Ud13xeBr9Son+dLgaLDOjMydw2r2mIJBXL9
3bv+6SOrqL+/n4ZMZy4qd9s/bVumjNSaUN3fcypnNHoD2UlgT0eqKi3s7/YF
gqU++K6zL/UjnjmUD04Kaa7bgvn3W2sdOqTYjeouonsf1QnDecU898lbFmBA
nqkiKkq+B/OLDb7veVJRi/xCm2fr7VdSlCdIl12K3DWD6iuzXTcufRlGPtO7
uyO+AMbT/M5A8aoQ+tVkRu21qWC9Ai4WGULOUNd0XJrrvw/n12elU7X5ZRFZ
OlFV0eE47Of+2MESkqNLqE6/1+a2vGQFOu8MEu0fvQfKUT3kACPVAU0Yn7Wx
8iEFNby3TaKjVX7HyZCPmpXcULsKtnf/QFZdvYX6E5Ze5p+8Aee9omxxYf+F
WeSyRIJVzSlYH3fHuVflFbD/rD+WT4s4GZErf9awyTTCe1XZ46liHr6C+vNC
LofRSML7lOc+I5HzZI7g+e/Llx5ZhC7xsq0mMhLFbV89KPohfYwaeYbDxWTi
AzmyZu2hwumvC6hfyfXI2fCmUeTuXj6N99dg/IGsV292NdGj/jv2/sGu+eBg
Qbvic6XEyN9WPbRyeHtRv9kVkYY6XyJUb115rTWY9xvVv3vQrrh3ludue8H8
qWFQOKyHRMbyXfMc7C+40ETyhTYjzPfKLjKOQId8PUg1gkmFGVn/T9nUoXEK
5BOOyatpOjNo/InbY6ZP41qRX+bmeJ1fhf38+cjdEugI68+iGx9MW9uAfqOE
ZJ9HkP8ur9dydRjyg2WrjBwKcF42L4Je5iTAer7aTpiLLcN9LMmsldrsb0Tn
sfw6qXJnVw+qB64Syrfi4Tw0hAxOv96gQhaQsiopfceAPPxs1X8nMcz39zNJ
S7F12P8topbTnZ+a0XxXImraiA5A/XK/qNHLRdjPziI6tVAxmE/u7DnJRRqY
LyBRaupTCtTdz400cOdvovEqxDidv7n1IRtekNspQtGCfIdZSGWfUwdy4qeM
3zd41pAlhVoPXb1NBusRYdzq44D3YDXi9zjiCKzneLj46o0Fhv///weTTah7
+WmxNogZWbrFuqWOiwzZ+PpeXa3v04RtVzGTpA+/jsrdtmVyz+8373tQfahm
jL0wgBj1m68oFuzooUMWJDTFVufB/K+a6Mn2GG6h/pWABpPzU33I9zSWzwVM
lCLP3dKpjRknRf0d3K8FreRgPGdZ5zt8HTD/aHDlyb2Zzah/iulClv54MbLw
66qwPzdhvC4DgTvKCzTIeo13KFglYH0yKSJ5nicLkSv7P0YfPkSE8vvj97YW
8jJBf8IVt4chsJ4WiXzb70tNqF9JO+izjEAnOs+LGtPtnOSzqL439HOCbTYV
6hcXWu5N2tGF6gxuEuJKciSovtHASuHPCfPfaHN01AhkQZ4ZT3SZ1Ibxlkfc
kv5UT8H9Oem1KyTAefYQdC6n/llB9cYhnW/JFXPIrv5fWCyPwnkVik0eu/Rs
ANV1hLrLmR3gfOTnK6lMqyiRlWvCpEnof6P8IeWz6d0fYD9Rj4VvJoXB++Fe
GKlJ4VxCebHgzJJD2H6ozb2PWfLTI1/L+F5yVJMWWfF92xSTLty3bkT7ovY8
rG/NLO+QlvwkGl/rYvDb8qHK3P8DsZmByg==
      "]]}, {}}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{
    FormBox["\"\[Epsilon]F\"", TraditionalForm], 
    FormBox["\"x\"", TraditionalForm]},
  AxesOrigin->{0.0084375, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{},
  PlotRange->{{0.01, 0.11000000000000001`}, {-0.4819400313495168, 
   4.660985197837082}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.717285738038865*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[" "], "Input",
 CellChangeTimes->{3.7172856384116383`*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"number of solution to solve are :\"\>", ",", "7500", 
   ",", "\<\"for T long each \"\>", ",", "6.283185307179586`"}], 
  "}"}]], "Print",
 CellChangeTimes->{3.7172428679648438`*^9, 3.717242924164976*^9, 
  3.717245265871191*^9, 3.7172455285522604`*^9, 3.7172456602428246`*^9}],

Cell[BoxData[
 GraphicsBox[{{}, {{}, 
    {Hue[0, 1, 1], PointSize[0.02], AbsoluteThickness[1.6], 
     PointBox[CompressedData["
1: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
LBmy1L2jcyf//Tx7aCLmyk7X+W00z2Hi3ZFvOpB/3v6q9PoQ3NcHFY6jT3/B
+z2k6N6rsIX1St9TZZLWwXspD0cJPMd6v0A3ki4ZtR3U/5dlaKjvOw2qB4tI
aCWYUyJ/PTlFps4N+z3gnbg4pN+F+m/fuPb4jP4f5I87nQEdlvD+zoLXWQpT
YP3WgxDrJGVS2F91iNXk5irq59DWo5/Ugfyo4YQXsR28TyJXAl8tIeQr93zm
318kQvnVG1HhVGbwvdW7JHcSXPuL0etlD7AR/4DZ+Kojahs+ioyRPX8Tow/1
MzdGFzz//fp+aJZZhfbE4DVUP9uRuUjoto5MQG+3XpVMifJdrIaj/kUwX2sv
wGDnKi6qj/UTrv2iIEBOtEySqenHQ15/JP96lHsT9b83y3Q+2J1HzjCQSPXs
g3xdjLKGEx0OsrE14w5O8SzK15XSfHTIo0B1QnaKcdvWFVTfnu7Jf6wK82h7
PJOsz8N+KcKilymdYX7T9/Y4PukD1H/pvQxnWRARqnsl22Rb4MP8s7etWTmS
iVFdz6rjSZLOOKo3eL57nusJ+wu9eVNj2W4I1WOpxQcMBGG+ywMzSaZ8mG+d
mHacwBzmj0cpUN/3gvoK28WqFgzct7tvwrYtG9xvnZHLexVfMlQfybk26n+p
CdWPPGAzfZZFiOr0/b/Db84so7pHx8a124Wwv8jVkwl/1uF74rms4miAVZ9Y
jyW0J5lA9aTN2wryY3C/9q+PXfmRDus5rLW8cuSCfv16zoFAPzjfGNfIZJnW
PnLMvGJQ5BOoOyVq+hpMYq3/05n1jPw0qs9pfEzcSp1Cpolk206wIlI+kRZT
MDLzAfP8CH3JJ0ViZKUHm1lRaT2YQx90BwfGTo8ht7lLjo4PkqL8R+Lm/rPz
VMiOZ7UC2T7soTxtxM3l8NXvyIv3Upk0/v28emhP+s1zAr+g3+mNffgqBwly
ipI55uS9NZSPVNokW7zyF3mW+qxigzIZrF/6qzq9jgK5TISnBt8B5o0eJT1H
fHoD9Rd6VHXqxVQhv+GeeXA2Exfl9V2PmEy+J4T97JO3y4TBPK6tt5vvWFdQ
P3vEkc/FMemVh47qSRAf7h9FdXvmwfL7CXA/DfVBNTwjsF+vCAoKj9O0yOIF
waTt1+F8i8dzWJ8bwnqTu/wKKt+mkI3cXUe0ZMDhBPkJ+vX4qN9z4tXJb/tw
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
V20pkK/jW79qpILzeLnIbyfS7yGf5L47+/EG9GddvMffLriP6vQ5p80zZalQ
vSM8XkIjkBJ5nsqpa4kC+mUsLpXhvZpA/YtyZJmtJz8hM5pb2DspNKL701aW
xslenIP7o2ETZrlIhObxCbS6M+wSI+eq0HzwZMNH5vdXl756YQH14zGPT5SL
1iE/a8xowNE4QGaftb+zYAn3LTVRKI/LSoPcmzLROeAK3pS4f/1zKOSZRNtn
viZNoXnGv3xeRRFVIW9I31XIuwT3V8+ntN3WAu/fLu9x474HfG+Fdu1hfXSL
KL+Q221IYDaErPpA1kaXEQ/lOV5FFIn6L6E6jvmrpwWnSVFdPKagfLV/FdUt
i1Vex/0qQ44kj1ifk+pDVighGhOZ2UC+YkIyIsBJBudXtS9tj6RR/rpfdGul
oAojEtUua/WEGvk509vmN3L0yPh4NVXrOrTI6cSj1gLzJMjk5y72c7buYg6d
/etgL/tKdeWhHc71MDvZ9CCLC5cYS+SOoLxJl0C9uMUmcr/vg4+KBkRo/ryg
7EF0JyEyvZvzCAUVJTLO7MXXhqzEyGZ8VP03GfCRfY+fSAlxh/50vT1f6psb
aD3fWa1T7VxzyMXfbmcrzKwix1s4im5K/ERWFDr9+vbQErKEZ7/A6zpcND/G
zCyLnOUA1etdrtw/kogH9/s11zLvHMx3il0PuhTVgu5H5yZpv5L1FLK/gzOe
CdMKck3dXoeP8SryX9m8Nnm6OjRPTYbc+Sr1/zVd5uFQ718cx8xgGFukhURS
SMh1lYoRkURJspQtKSkqskQSukVjuUXWRMqSrlSTStmXokRFsiXDyL7v2/Bz
f8/jnOu/1/N+n/M5m2eebwfoDS2ZY+ROzG+cce4Tr+NL8Hv59JziFPkNfDyd
u6fJjQ3qNZTY7nmsEZkpMr7mSh3O95tIgUS4Ku7D9K65okQ2EXio53qN17o5
yP+xPN742E7crxV7F73xNc4jQHRgndpUOdTL3u3FcNatBz3xj+mSQHXcXxdp
cMBPGvdxc9Uufd8Ns8BO1uTcdGdeeK9TzWL7s214z5ZqKrIFaynAj7hJnYdH
sT+/ZnGp0cecWi/aeqLolGLq+Pr7ubqBRGDHnQyLkwtt1GW2Zvy67RA9DMwQ
yK89tfR7uMyX68euvGBngR58yzw2TXcO+KzG8DYaEfMTmnU6Zz0GQL/kQtyo
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
c9T/ASJcB7g=
      "]]}, {}}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{
    FormBox["\"x\"", TraditionalForm], 
    FormBox["\"x'\"", TraditionalForm]},
  AxesOrigin->{0.007812500000000002, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageMargins->0.,
  ImageSize->{660., Automatic},
  Method->{},
  PlotRange->{{0.01, 0.15}, {-1.318302225174848, 4.806315670609958}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.7172428686312885`*^9, 3.7172452205200853`*^9, 
  3.717245423054188*^9, 3.7172455665945272`*^9, 3.7172457568579974`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"bifurcation", "[", 
  RowBox[{
  "0.06", ",", "0.08", ",", "50", ",", "100", ",", "50", ",", "0.02"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.7172455100860395`*^9, 3.7172455260265827`*^9}, {
  3.7172459043719683`*^9, 3.7172459109483385`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"number of solution to solve are :\"\>", ",", "7500", 
   ",", "\<\"for T long each \"\>", ",", "6.283185307179586`"}], 
  "}"}]], "Print",
 CellChangeTimes->{3.7172459115537386`*^9}],

Cell[BoxData[
 GraphicsBox[{{}, {{}, 
    {Hue[0, 1, 1], PointSize[0.02], AbsoluteThickness[1.6], 
     PointBox[CompressedData["
1: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
e5h8u4p+J6lkWbnbo9T/A7spfGE=
      "]]}, {}}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{
    FormBox["\"x\"", TraditionalForm], 
    FormBox["\"x'\"", TraditionalForm]},
  AxesOrigin->{0.059687500000000004`, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{},
  PlotRange->{{0.06, 0.08}, {-0.4215907382256808, 4.457053745826349}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.717246005634819*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"bifurcation", "[", 
  RowBox[{
  "0.0752", ",", "0.0756", ",", "250", ",", "100", ",", "50", ",", "0.02"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.7172455100860395`*^9, 3.7172455260265827`*^9}, {
  3.7172459043719683`*^9, 3.7172459109483385`*^9}, {3.717246498189017*^9, 
  3.717246516507227*^9}, {3.717247062398391*^9, 3.717247062972769*^9}, {
  3.717247427881774*^9, 3.717247436146265*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"number of solution to solve are :\"\>", ",", "37500", 
   ",", "\<\"for T long each \"\>", ",", "6.283185307179586`"}], 
  "}"}]], "Print",
 CellChangeTimes->{{3.7172464994589024`*^9, 3.7172465173667955`*^9}, 
   3.717247065265293*^9, 3.71724743719596*^9}],

Cell[BoxData[
 GraphicsBox[{{}, {{}, 
    {Hue[0, 1, 1], PointSize[0.02], AbsoluteThickness[1.6], 
     PointBox[CompressedData["
1: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
EoVL/9tVwrH+/dhnWSmcWmb98/ANclFym1WpDdu6ZpoaHIKX+t5Rsu5Y27TP
Ee5M8V7kPRNXqHWZ4Py8E9FWkqg3Cj9mbhUDZ56nSiJShevb2jsFHOAbnK/U
uY/h+tzob2mcUoEbtD8utJ2Bkz7RlgibwMLlPh/cGwkszpJD9RBuetAzfNMF
Tj7CHUHzAL7e36ZjWg9/PByUJdMM82nznzY/D+cdsY7SdISbMwrFE5LhZ6n7
r+dRwaekzE/djUK/hz6UGSmSI38q3xCyXIs8zNy6hqEc8233bp/z/w5Hxd8l
KSdFPe3El+In/cidHVq+ku6DF+2++TbVwOR+PjJBfFj/g0PHKTML+XYqCSOq
CdiNU1JY9xjqFd7mR9lOwS3su5dSCa6fP+pege0wXPd2/Wk0Qr+X3p84uCcf
Prrj6WkyebhkNsOQ1hOuZkiLzP8EiyQWz1Skw6JJDgZDobDg6TL+6GyYNMjg
1cQc/CngkbysA7xzSWhBVAr+6do4q+VOJH0qQeIS97opR9530tmuSm34gGqA
WAMv/O6gh7rT+ve9DfNuE7i0+Ap5ya9wHlUauJn1he+hE6j/r/08g1gQPG0d
wxYnA7+7Vn3G3wS+F3lCtvoQrk+4b8zrnCKc0prutU0WPlfEaz2nD0t+7xlP
ewIrTMVqCtfALyLHd8w7w3qOAvudH8CKdDO0exphy/avKxTtsJoUdWG3Dnzd
tKzr+zU4Zo+tm2oWLJDZf1+cFo6ys9TizUa/5s/sVN5uQ97sk36fogs5yYVP
1L71mK97/fudbEswx8UD0uZbUX93S1yU+zDy6lb35v798J/WU3r6VTCnl/oo
My/WMyrxbZdJQV5VpDjEPwjrvnu97zMH6hO2y/R69sFS3jkZHwvg4DX7GolW
+FVD6L27BPM79otVpyQNHi662UMvBd8wiCSPdYWTqLWH+qbgvzb53XEE64W2
x376Fgofd+6YGMiB87dGO1Ivws/OJ8dWu8BxnakVefLwu2YbG9cbRNK/BQXE
pddtUd5AY2K3KrXhZKGDT9144f3NbPFM1Gubbgmy37/Whfz8+CmWBgq42cxs
VuMo6vv1kn6FuMGj6hdTnY7DlFKJjqSasLRY6W05Dlxf0ZH/ritJwxm/H6Sw
icHOfWb97jrwaFjoasgj2NX5aCdnFdwzOcx40Bmu2WsfHf0ALpRY4kt5Bgc1
5B3x6YIT7UWrl/Thv1nnTp7zhIcD1YKbiuAvYlXU5cyw2YmwuNyH6NdgcjQ1
kQH52bujz5NHkJvY3r6Z8RLzZQz7qKhKglx3TZJ/hB4+YqaQ0j6G+u6XHWHa
XLCuUgdLYAXcadnfJcyN9QffZXHHxSIPu9yXN0Cwf5XY1Z3bCfZjWOjaOdAK
/yqWfy+TBGe6aVXUlsOcAjUyq2roN/rSNtuJeHi7jkjuG1GCeWs5J1U6wYpJ
X4Vy38PXNDO3CqfCVH28E2WhMHd85YGRXLjBdn//4E/4qs+SzPvrcPh4iv6b
swT3kzHTrvPr34eqnnMw6K/7ipdv/Jz9qtSG77olX/blhbvKyp78olzbdGSg
TIBcO3J+uakYv7WVTc8JMo+UHED9RAzrTio7+L9aYk0tXljmuXuTtRz8w+pn
XtZuXF9BjvLpnafgLxaHKnqPwaGllby1mvCuC/c491bDcpfrBjrL4cuWLqU8
TrCFmNfzKw/gNo9jLl+bYH0bk7rHL+F+ngWK/4xh4xGl7Jt+8JCxeNy/53PD
owUiq4f3Eax/pFB94wX6ZdasTMhkRe7IMf2U6Svyhcipb0NjmHf5qbHk89uQ
9+j/0jjPBgvcSYvqmER9dIEuXSIPrOa4uPt4OaxM+l6zcT/Wr6kPvHEIR57M
/1SiswVuGot3siRFvT79kjzvQ/hnc9Hv88GwqYHjoMNduPxid9/P0+hXZFgw
wDsC1nUbCNgnDJ8aoFPRsIMtWU/HEY/BafmZFwLuwnbpkU/2hcJXdwjmZ+fB
A3XGE5f+g6c0TrFPe8LPh/itPqnCRBQdqQfXv486WTHOXvv3/rM2vbXVYVVq
0yeJ/xvihe+7BmQzU6xt2vbddH9LM3IvBcPs+P9WNl1/JddMaS/qqeLExNqN
4feeh3cps8Gsvy6ebRGG3U6ofBjbiesbUhnKyToGeywKWx87Aoc1hzWUnoOf
Ph7tMSyD0y9/vc1dClPc/Bz7xQG+kb3mSvYApj49VLWtBd57yfvGw9fwZ71H
XE3mBNdHO/I8Ngh2yMo6bFIHD2+tCEnjgTlzzjEkTKBf4UD6SwtcyI2/Bb+3
X0POuEhzff93zFtbbZ/P0V3ISTLu6vTzwLIOwXSBM6hXMQ6nyDgMX1h07b5a
BguzRjS3sGP9goDNj8Eggv2+mH3a9oSgvrnCmuQHfKvp24xfAdaH7t5x+OB1
gv6yfvWa3ITVa+vFAqTQb2UdU4BHAJx5f0f6HB/8Z/btlKElLDskzz86BPv4
mg+7J8OqlYmv+UPgZwGp+ofz4XjDwmvZf+BH71wrnvrCsSWJ0f3nYfli38IP
iUTSfCRbmm//e73dx1LfO61KbTgg5aJR5CF4lvpNWTDZ2qb1uMdX7jYi7+jc
90VgYWXTH97u5VBnRv1xNz2e7Vow/ZPEXem0sMMS0VunA7DkeHkC7xZc39Zp
VkpePvjC48J6cy54235O2qtn4COS8/f1imCZ80TfxIrhcs3Xia5X4Pqzzy6q
1cDf7vV5z7bAw3GiJwx64fPEy3rSVrCbD9WKWigcE865dqoZbt3e8aLvKHyV
N7BA/Tf6ddxvXKRM0B9VPYn8Tir4nFUG904S1J+k0TmTzQET887pChyD1f1/
807O4XxKZnQuOQjAMvFtZwzLYNf73umXWLE+qtJOnsEPeX2GEcNiFTy8v++J
9Qc4VOmnikEK1vv4ZZdcsIQ7juRbn3OEOQ/sr5w5gf5cbL92c7jDXmr3lW15
YKe53aYrxrCty74YxT74po2wDSvB/Rye60cxcgt++lrYwzQfrrYUzXNbhpPj
tzhJBMCyj7zPOl+ET7VeapJMJ5L+fPdPStG/9+M/Dwblr65Kbdi1iLQg6TCs
c+DNK8n1998Nc7fEG9Q+RT4ifuuN0OzKpp13fmDLpUW9iYmzbvkZOP6TVB0/
BUwmsTSiyEzw+m3hi8Or8I2QuT9RB3C9jbSmv9RYYa+H5k6/ZWGjudujFLlw
nsa98+QFcMHEilazHczMIHtMtZrg9cRMHka3wo/PiXaX98Nhl+qPeNnAS1px
Z7oiYeGXPd1dXfBzynih98fhBt6aZ9/I4YVbOW6NBLk/uWpfMR3M3Rh6rZsB
85CjL2B9cxS+abWVN1AK7v9qMrP0C+ezYLe3dPsJ+MJOY77pMnjs3cSx6D1Y
f49v+Cu5J/K6D21fLt6HF00XZS8NwEWPjYQiIrD+R5aRQcEFWOpTrfFPXdg1
yEac9ij6E+Qu9dK5Ah++1k7ptQ++QNv7mkmX4DyWF5T5u+EoTTd90zj46+f2
HSw3YWNxuanT+bAJ1UHvmRU4Jp/+pxNBPbcZ1+cOA5i/1/a+0vrnubyTX11a
/90fH0U75l1XpTY8xnb1488jcP43316+9Z9vG25TiJPbWof8/N/JS24fVza9
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
NGr897/fv7zh8iW5jH1fcX9MMO55tbSIXKVuKqyR4P6oyFY4m6oP3yKxJL+h
CoeLftsbxoP9YtId3d6IwcX/VW0pJbh/up3zfwTnIZ/qbF7y40C/YhS6RsME
8ylKqVilYIbP+bNEvgwgktZ5VFSh9O95c6199O/zzIad79V4nHi7umkKXofY
ixeQR1d8O+L+Hnms/WkvxfX32w3PRjsUjfUjryrolfxeDb9m+Y/6lT7cbjBu
V3QUPi055teXCZ99Y5+rSYv9wx/frJq5jPzdji+2Z8iQ8zfkkjqHwVNmlK4B
PbBrRFTPr6dwJ+vDQyR7MA/XyQXv11dhbb++hXOJsIaJxjK5EZySp2GamgFP
aoa4V9AQb5rC6byQUiTy1QE/u5pcOFfnht6XQYL9W/4S2XyGlwdtlK/HwxkX
PkvcuA5XUyd+EeyGSQLssrdYwpRxAfNL++CG9lk3cgY45MihlBRGuFjD4dnf
W5hPXhAPRRg5bPWGbs+eV5h/5nbRH54CyImrH2ulpyBXG6GjUJ3H/bF4IvXA
hwXkEvF7np0pg3XtH9cxasJyNO61JZJws8wLwe87sB9NsqIzJScc42OYlnsD
9Wmk/oqF/siVf5YnllATnO/vtBH+v8j7J5+LLZAjZ37cdkx3/fsqg1ZqqMW/
+3lf8S/b9fe3Ddt/olctnl3ddKi6+ZqkMfIysxd0L6aRa0z+Trm3Po8Nk/w8
1aY/hHy7iYEbTw3cTKTzIkcPZonRlO08DJN07LmWkQJPLwbGkFJh/3cnvnAR
rnfb0bPr4094TtvU6OZ11Bcf+56UWQf70b61ri6CVbTOU6huxzx8ZljoBOxg
/pVT9SJRMJnyi77Qi3BsPO2e6HswywPzDK6txJvmEswIMI1Afp9z8KllHlxo
GiXgNwzzPJbhs/kK85qv6GnehTVO7NpO7gO/XImINx2B5y/7H/viCE9/YZ6f
4yc4b0WXExycMFfIJRkTAitpMyw2FGI+4sqPnQpYYDXu+W7Gj5g3Mf3bvv2S
yP8E+dc55yAX0zOSSf6N++NnvxSr4iLyb5FBMXVFcGO7R6CuEjy8OrsmIAjr
2zqsPP0D3/E5UM6+DftLyj6M6SS4P6SVkv3qjJDnsmft8/oAX9QK/yPYDWdf
P9R7aArmb7r2inH9vLu/3Tbz+/d+MWpreExjTWrDe7kKT4aurG66XUHY4rQN
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
cL7XUur5SEywPonofKbmkzjPDafUw28e47xvveZRXdmD72nmfUrNQWfcL5Di
s8Z5BqyHtt58TxbJNOQ5SzlWsk+sA/82SKMuasD+KLpnS9mDkLfaVdpY65sh
/45p6BbTU7xPfy5tCvFkPO9yMndkVDyZUsUpi67+//++NE6d7k9jAD7rS6wZ
vUEJLLFe7kLgsKC4w+WBQ8yB6wPAHxxCjTdaSSBfRyeUdsZgGrz4im55nD56
QsfQLRUtauB5quybKa9XIW811BaVozQIXC12++6IAjHkw5u5nomt0wB7vaEb
Ixhcgzxv0Meo+a1l4IJ219VvzjPAdX8YU96fp4P13X/S3++5QgTcqDQepFvb
i+vZV0soTqCfMfnmwMZICFxr0nnA5jXW93HildftBTzPkEbhZsxhnLeEZKB+
iCkpcNxVcm0yYay38DG3EFsjzst64jJfqz+y5Sj/Bg9RHeTzVFgzblvivAKI
zpZxvcL7O8amYO4vg+uJqTlHE6uxPhFlqY97rMjBDxmZvo1SXQdPVVT4m5AF
798tkNhrVQnnv2Ih3ksZTQBslKkSfIe4HPLUu0wl429TgE+b4VY8woHnf+wk
OLnIhPfn4uM1R1OD+9dInMy0T8Z5Xbi8Wl+hMwx5ZkYBgV+7x4ApVcTStMbx
fYk7MzyYEcX91hZ4i7L+0w/lReXZ4jR8D/KPaJKPteF9HOdxazipvqDoN6Cf
s7nNLZl1YcP7yZV2WIrXPOTmOAmwTYeHmRnHEuQdqIVE5vzXgMsoPg/ypxBA
/leClw2v1Cr4PmljCjoJ3N8+VS4zP5MY+OyirFug1RTkA26aaOY+pgRf3rH/
po7aPHgBL+ddS5eIwAfYEvwd/Yv1OjIpbTIzdUG+/2vVukMhnpd5J1ow88Qv
3I+S2IxLAvfz7YlP0DTB86buN8c/aMX1nmElIiSb2G/biJoTgSNysQxhY4Qm
1iMm31GhsAs59MQXSs+feN7b15QRoeozcF5P8hvTxk84X6UTugTWQ2SQV0+d
jb/xZBx8R45XzMk/OF/uh3trGWwmwPuQufz4PYv3J71opVXthecZEj9qdRjD
835eFjF18toALhG65OlshP1feFGz7zo11l9D8XWDPwvXW3Qfoq2VogL/9Z5S
lmBwL/j5fY9yuwvpsN4CG0nagRXwwkrM/qWem8DyAYPLHjU4309uFLNDQljf
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
9RwimSuBOH9cxuTtrORlyL8SUSYbCMF9cTW+CnH3R34Vr3Hy3i+c35Uhruoe
K/Z/RkLOe7MQ83vMtOcJ9USQV7JJuzm3hHkhhe6Hod6rwMWPRI4t/CCF/B/h
73lsRevgCxWJFGrGcd6s8377j2rg+3jIVfJox+P9JVkty7yl88Dl8oyXqy7h
Pvhv5hAbMOL7z2fRqmWt4H48Gn1GbE/i/bvJq2elJPF9udtyTxQRYb8f6lN6
NEKwP6KGFW83G9zXsbGPnq8N8Xxhko+QAB3252TP3pL+fBY4c/hAbpkyPZw3
VSmZEf2F759kwyhY9Rq/V19mupyUfThPprfI1wlq7O/5mwXzxmnc127rX0Vy
TdTgmzXaKOzklhWmicj/Rm/x8XcJVmE+yCdfFOaZL80BH6sR+vEyilZxm3si
v1m37VwH3yJMJHQzdxhYqrzCPPA2NeTjX868uSRDAfxCToz2gPkvyP8cJeOV
v0gJvo7o12zbDnLgdm3Lx1zfFyAf0nhLzHB6DfvtUqbX1FwEHqByesIfgvNE
XT/P5UK8CjyY8YnLogz7L3326dkHXzK47zGtbMbrfUTARUz+gyv1JMAMnkJc
Wj1Yb/X2kJ+9PZ5fS4l7fGIN6+u0M7GyJmG/h5hp41fnMS8hq6FZbYzzyTDo
+d9jxn2scB4Z1b83BP6cRXTzwkl8j3bdSy/9746D5ze58qN4Dvv1G0kYlDxO
BcxyVPeE9Dzuh+TqI9e/nhPAT1i/G0624ftfC96rzPcc9yEV+evOm31T4H9/
s0i+KE0P3mIj220oGOsVFGVdZ8vC9wz8dcPJnwTn53RaMJ1uqYX86zt7lYzN
0bvLth4edsPz8j5FrGLqOK9Xfwkn3RLuS0OEI+/6GM6nFXptKVoN908W23uR
uocY8p0kTkuev5FjrlO0ZlTj97oaUD2qF7aikPpqMSH7v5+3dzlENVqIFbdZ
Ks725K+75MCOhhRLiTdmIX9ZKKqOauvvk23WzX7gWXkJz1vQT+Z67V6C/MCA
C/vOMTLw342bGCz3zoO/OCU76rpBBL46fXaE1GYdvJDnn9Lk1PfAKxOMR5z8
sZ7BB9KoaGnsR/2bj/c9t2XI20owyj7h2ATuJzCT26fg+Yd0HGsqM3g/zzPG
oH2mI5APSZQ8yqI1hjwU15HXRgH5kre34+P4GYCbSJiuHhLF/u0vHju0Y6ID
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
sAtSYT0So0Wqh4VxXkVt++aHrywq/g9etyk4
      "]]}, {}}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{
    FormBox["\"x\"", TraditionalForm], 
    FormBox["\"x'\"", TraditionalForm]},
  AxesOrigin->{0.07519375, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{},
  PlotRange->{{0.0752, 0.0756}, {-0.7118959914314921, 4.996514491800269}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.717246503305456*^9, 3.7172466157171216`*^9, 
  3.717247161937502*^9, 3.7172479096422853`*^9}]
}, Open  ]],

Cell[" ", "Text",
 Editable->False,
 Selectable->False,
 CellFrame->{{0, 0}, {0, 3}},
 ShowCellBracket->False,
 CellMargins->{{0, 0}, {1, 1}},
 CellElementSpacings->{"CellMinHeight"->1},
 CellFrameMargins->0,
 CellFrameColor->RGBColor[0, 0, 1],
 CellSize->{Inherited, 5}]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1350, 685},
WindowMargins->{{0, Automatic}, {Automatic, 0}},
FrontEndVersion->"10.1 for Microsoft Windows (64-bit) (March 23, 2015)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 110, 1, 72, "Chapter"],
Cell[693, 25, 120, 2, 31, "Input"],
Cell[816, 29, 1041, 29, 41, "Input"],
Cell[CellGroupData[{
Cell[1882, 62, 110, 1, 67, "Subchapter"],
Cell[CellGroupData[{
Cell[2017, 67, 22106, 627, 1174, "Input"],
Cell[24126, 696, 6602, 184, 180, "Output"],
Cell[30731, 882, 7799, 221, 240, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[38579, 1109, 120, 1, 67, "Subchapter"],
Cell[38702, 1112, 7684, 188, 363, "Input"],
Cell[CellGroupData[{
Cell[46411, 1304, 104, 1, 49, "Subsection"],
Cell[46518, 1307, 19469, 508, 1156, "Input"],
Cell[65990, 1817, 273, 9, 5, "Text"]
}, Open  ]],
Cell[CellGroupData[{
Cell[66300, 1831, 110, 1, 49, "Subsection"],
Cell[66413, 1834, 7908, 203, 292, "Input"],
Cell[74324, 2039, 273, 9, 5, "Text"]
}, Open  ]],
Cell[CellGroupData[{
Cell[74634, 2053, 112, 1, 49, "Subsection"],
Cell[CellGroupData[{
Cell[74771, 2058, 2388, 58, 232, "Input"],
Cell[77162, 2118, 1736, 46, 33, "Output"],
Cell[78901, 2166, 1015, 23, 31, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[79953, 2194, 504, 10, 31, "Input"],
Cell[80460, 2206, 64087, 1240, 221, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[144584, 3451, 37, 0, 31, "Input"],
Cell[144624, 3453, 284, 4, 31, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[144945, 3462, 885, 21, 52, "Input"],
Cell[145833, 3485, 2193, 41, 750, "Output"]
}, Open  ]],
Cell[148041, 3529, 95, 1, 30, "Text"],
Cell[CellGroupData[{
Cell[148161, 3534, 210, 4, 31, "Input"],
Cell[148374, 3540, 15526, 292, 171, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[163937, 3837, 211, 4, 31, "Input"],
Cell[164151, 3843, 15657, 292, 138, "Output"]
}, Open  ]],
Cell[179823, 4138, 157, 3, 31, "Input"],
Cell[CellGroupData[{
Cell[180005, 4145, 205, 4, 31, "Input"],
Cell[180213, 4151, 15721, 293, 140, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[195971, 4449, 207, 4, 31, "Input"],
Cell[196181, 4455, 15783, 296, 143, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[212001, 4756, 71, 1, 31, "Input"],
Cell[212075, 4759, 15773, 295, 140, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[227885, 5059, 269, 6, 31, "Input"],
Cell[228157, 5067, 226, 5, 23, "Print"],
Cell[228386, 5074, 23077, 391, 241, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[251500, 5470, 71, 1, 31, "Input"],
Cell[251574, 5473, 321, 6, 23, "Print"],
Cell[251898, 5481, 29407, 495, 427, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[281342, 5981, 269, 6, 31, "Input"],
Cell[281614, 5989, 226, 5, 23, "Print"],
Cell[281843, 5996, 28176, 474, 245, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[310056, 6475, 418, 8, 31, "Input"],
Cell[310477, 6485, 300, 6, 23, "Print"],
Cell[310780, 6493, 141222, 2327, 246, "Output"]
}, Open  ]],
Cell[452017, 8823, 271, 9, 10, "Text"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}
]
*)

(* End of internal cache information *)
