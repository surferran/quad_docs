(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 10.1' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    569500,      12343]
NotebookOptionsPosition[    564550,      12196]
NotebookOutlinePosition[    565044,      12216]
CellTagsIndexPosition[    565001,      12213]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell["numeric simulation", "Text",
 CellChangeTimes->{{3.714958233706908*^9, 3.7149582394636574`*^9}}],

Cell[BoxData[
 RowBox[{"Quit", "[", "]"}]], "Input",
 CellChangeTimes->{{3.712131429857179*^9, 3.712131432176716*^9}, {
   3.7121626821687746`*^9, 3.712162682492755*^9}, 3.712288672336918*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"dispSimp", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"a_", "[", "t", "]"}], "\[Rule]", "a"}], ",", 
     RowBox[{
      RowBox[{"Cos", "[", "a_", "]"}], "\[Rule]", 
      RowBox[{"c", "[", "a", "]"}]}], ",", 
     RowBox[{
      RowBox[{"Sin", "[", "a_", "]"}], "\[Rule]", 
      RowBox[{"s", "[", "a", "]"}]}], ",", 
     RowBox[{
      SubscriptBox["\[ImaginaryI]", 
       RowBox[{"i_", ",", "zz"}]], "->", 
      SubscriptBox["I", "i"]}]}], "}"}]}], ";"}]], "Input"],

Cell["original equations:", "Text",
 CellChangeTimes->{{3.7149591768587537`*^9, 3.714959184978958*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"(", 
    RowBox[{"quadEqNominal", "=", 
     RowBox[{
      RowBox[{"EulerEquations", "[", 
       RowBox[{"L", ",", 
        RowBox[{"{", 
         RowBox[{"(*", 
          RowBox[{
           RowBox[{
            SubscriptBox["x", "1"], "[", "t", "]"}], ",", 
           RowBox[{
            SubscriptBox["y", "1"], "[", "t", "]"}], ",", 
           RowBox[{
            SubscriptBox["\[Theta]", "1"], "[", "t", "]"}], ",", 
           RowBox[{
            SubscriptBox["x", "2"], "[", "t", "]"}], ",", 
           RowBox[{
            SubscriptBox["y", "2"], "[", "t", "]"}], ",", 
           RowBox[{
            SubscriptBox["\[Theta]", "2"], "[", "t", "]"}], ","}], "*)"}], 
         RowBox[{
          RowBox[{
           SubscriptBox["x", "p"], "[", "t", "]"}], ",", 
          RowBox[{
           SubscriptBox["y", "p"], "[", "t", "]"}], ",", 
          RowBox[{
           SubscriptBox["\[Theta]", "p"], "[", "t", "]"}]}], "}"}], ",", 
        "t"}], "]"}], 
      RowBox[{"(*", 
       RowBox[{"[", 
        RowBox[{"[", 
         RowBox[{"All", ",", "1"}], "]"}], "]"}], "*)"}], 
      RowBox[{"(*", 
       RowBox[{"\[Equal]", "Q"}], "*)"}], "//", "Simplify"}]}], ")"}], "//", 
   "MatrixForm"}], "//", "TraditionalForm"}]], "Input",
 CellChangeTimes->{{3.710471318787363*^9, 3.710471343715891*^9}, {
   3.712162409958474*^9, 3.712162464712139*^9}, {3.712247425617641*^9, 
   3.7122474265932856`*^9}, {3.712248396174243*^9, 3.7122484111631737`*^9}, 
   3.712248778153448*^9, {3.7122492978178225`*^9, 3.7122493089952297`*^9}, 
   3.712288997792865*^9, 3.7122892123182693`*^9, {3.7122900791119747`*^9, 
   3.7122900872063375`*^9}},
 Background->RGBColor[1, 1, 0]],

Cell[BoxData[
 FormBox[
  TagBox[
   RowBox[{"(", "\[NoBreak]", 
    TagBox[GridBox[{
       {
        RowBox[{
         RowBox[{
          FractionBox[
           RowBox[{
            SubscriptBox["k", "1"], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               SubscriptBox["h", "p"], " ", 
               RowBox[{"sin", "(", 
                RowBox[{
                 SubscriptBox["\[Theta]", "p"], "(", "t", ")"}], ")"}]}], "+", 
              RowBox[{
               SubscriptBox["l", "p"], " ", 
               RowBox[{"cos", "(", 
                RowBox[{
                 SubscriptBox["\[Theta]", "p"], "(", "t", ")"}], ")"}]}], "-", 
              RowBox[{"2", " ", 
               RowBox[{
                SubscriptBox["x", "p"], "(", "t", ")"}]}], "+", 
              RowBox[{"2", " ", 
               RowBox[{
                SubscriptBox["x", "1"], "(", "t", ")"}]}]}], ")"}], " ", 
            RowBox[{"(", 
             RowBox[{
              SqrtBox[
               RowBox[{
                RowBox[{
                 FractionBox["1", "4"], " ", 
                 SuperscriptBox[
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{
                    SubscriptBox["h", "p"], " ", 
                    RowBox[{"sin", "(", 
                    RowBox[{
                    SubscriptBox["\[Theta]", "p"], "(", "t", ")"}], ")"}]}], 
                    "+", 
                    RowBox[{
                    SubscriptBox["l", "p"], " ", 
                    RowBox[{"cos", "(", 
                    RowBox[{
                    SubscriptBox["\[Theta]", "p"], "(", "t", ")"}], ")"}]}], 
                    "-", 
                    RowBox[{"2", " ", 
                    RowBox[{
                    SubscriptBox["x", "p"], "(", "t", ")"}]}], "+", 
                    RowBox[{"2", " ", 
                    RowBox[{
                    SubscriptBox["x", "1"], "(", "t", ")"}]}]}], ")"}], 
                  "2"]}], "+", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{
                    FractionBox["1", "2"], " ", 
                    SubscriptBox["h", "p"], " ", 
                    RowBox[{"cos", "(", 
                    RowBox[{
                    SubscriptBox["\[Theta]", "p"], "(", "t", ")"}], ")"}]}], 
                   "-", 
                   RowBox[{
                    FractionBox["1", "2"], " ", 
                    SubscriptBox["l", "p"], " ", 
                    RowBox[{"sin", "(", 
                    RowBox[{
                    SubscriptBox["\[Theta]", "p"], "(", "t", ")"}], ")"}]}], 
                   "+", 
                   RowBox[{
                    SubscriptBox["y", "p"], "(", "t", ")"}], "-", 
                   RowBox[{
                    SubscriptBox["y", "1"], "(", "t", ")"}]}], ")"}], "2"]}]],
               "-", 
              SubscriptBox["L0", "1"]}], ")"}]}], 
           RowBox[{"2", " ", 
            SqrtBox[
             RowBox[{
              RowBox[{
               FractionBox["1", "4"], " ", 
               SuperscriptBox[
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   SubscriptBox["h", "p"], " ", 
                   RowBox[{"sin", "(", 
                    RowBox[{
                    SubscriptBox["\[Theta]", "p"], "(", "t", ")"}], ")"}]}], 
                  "+", 
                  RowBox[{
                   SubscriptBox["l", "p"], " ", 
                   RowBox[{"cos", "(", 
                    RowBox[{
                    SubscriptBox["\[Theta]", "p"], "(", "t", ")"}], ")"}]}], 
                  "-", 
                  RowBox[{"2", " ", 
                   RowBox[{
                    SubscriptBox["x", "p"], "(", "t", ")"}]}], "+", 
                  RowBox[{"2", " ", 
                   RowBox[{
                    SubscriptBox["x", "1"], "(", "t", ")"}]}]}], ")"}], 
                "2"]}], "+", 
              SuperscriptBox[
               RowBox[{"(", 
                RowBox[{
                 RowBox[{
                  FractionBox["1", "2"], " ", 
                  SubscriptBox["h", "p"], " ", 
                  RowBox[{"cos", "(", 
                   RowBox[{
                    SubscriptBox["\[Theta]", "p"], "(", "t", ")"}], ")"}]}], 
                 "-", 
                 RowBox[{
                  FractionBox["1", "2"], " ", 
                  SubscriptBox["l", "p"], " ", 
                  RowBox[{"sin", "(", 
                   RowBox[{
                    SubscriptBox["\[Theta]", "p"], "(", "t", ")"}], ")"}]}], 
                 "+", 
                 RowBox[{
                  SubscriptBox["y", "p"], "(", "t", ")"}], "-", 
                 RowBox[{
                  SubscriptBox["y", "1"], "(", "t", ")"}]}], ")"}], 
               "2"]}]]}]], "+", 
          FractionBox[
           RowBox[{
            SubscriptBox["k", "2"], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               FractionBox["1", "2"], " ", 
               SubscriptBox["h", "p"], " ", 
               RowBox[{"sin", "(", 
                RowBox[{
                 SubscriptBox["\[Theta]", "p"], "(", "t", ")"}], ")"}]}], "-", 
              RowBox[{
               FractionBox["1", "2"], " ", 
               SubscriptBox["l", "p"], " ", 
               RowBox[{"cos", "(", 
                RowBox[{
                 SubscriptBox["\[Theta]", "p"], "(", "t", ")"}], ")"}]}], "-", 
              RowBox[{
               SubscriptBox["x", "p"], "(", "t", ")"}], "+", 
              RowBox[{
               SubscriptBox["x", "2"], "(", "t", ")"}]}], ")"}], " ", 
            RowBox[{"(", 
             RowBox[{
              SqrtBox[
               RowBox[{
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{
                    FractionBox["1", "2"], " ", 
                    SubscriptBox["h", "p"], " ", 
                    RowBox[{"sin", "(", 
                    RowBox[{
                    SubscriptBox["\[Theta]", "p"], "(", "t", ")"}], ")"}]}], 
                   "-", 
                   RowBox[{
                    FractionBox["1", "2"], " ", 
                    SubscriptBox["l", "p"], " ", 
                    RowBox[{"cos", "(", 
                    RowBox[{
                    SubscriptBox["\[Theta]", "p"], "(", "t", ")"}], ")"}]}], 
                   "-", 
                   RowBox[{
                    SubscriptBox["x", "p"], "(", "t", ")"}], "+", 
                   RowBox[{
                    SubscriptBox["x", "2"], "(", "t", ")"}]}], ")"}], "2"], 
                "+", 
                RowBox[{
                 FractionBox["1", "4"], " ", 
                 SuperscriptBox[
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{
                    SubscriptBox["h", "p"], " ", 
                    RowBox[{"cos", "(", 
                    RowBox[{
                    SubscriptBox["\[Theta]", "p"], "(", "t", ")"}], ")"}]}], 
                    "+", 
                    RowBox[{
                    SubscriptBox["l", "p"], " ", 
                    RowBox[{"sin", "(", 
                    RowBox[{
                    SubscriptBox["\[Theta]", "p"], "(", "t", ")"}], ")"}]}], 
                    "+", 
                    RowBox[{"2", " ", 
                    RowBox[{
                    SubscriptBox["y", "p"], "(", "t", ")"}]}], "-", 
                    RowBox[{"2", " ", 
                    RowBox[{
                    SubscriptBox["y", "2"], "(", "t", ")"}]}]}], ")"}], 
                  "2"]}]}]], "-", 
              SubscriptBox["L0", "2"]}], ")"}]}], 
           SqrtBox[
            RowBox[{
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{
                RowBox[{
                 FractionBox["1", "2"], " ", 
                 SubscriptBox["h", "p"], " ", 
                 RowBox[{"sin", "(", 
                  RowBox[{
                   SubscriptBox["\[Theta]", "p"], "(", "t", ")"}], ")"}]}], 
                "-", 
                RowBox[{
                 FractionBox["1", "2"], " ", 
                 SubscriptBox["l", "p"], " ", 
                 RowBox[{"cos", "(", 
                  RowBox[{
                   SubscriptBox["\[Theta]", "p"], "(", "t", ")"}], ")"}]}], 
                "-", 
                RowBox[{
                 SubscriptBox["x", "p"], "(", "t", ")"}], "+", 
                RowBox[{
                 SubscriptBox["x", "2"], "(", "t", ")"}]}], ")"}], "2"], "+", 
             RowBox[{
              FractionBox["1", "4"], " ", 
              SuperscriptBox[
               RowBox[{"(", 
                RowBox[{
                 RowBox[{
                  SubscriptBox["h", "p"], " ", 
                  RowBox[{"cos", "(", 
                   RowBox[{
                    SubscriptBox["\[Theta]", "p"], "(", "t", ")"}], ")"}]}], 
                 "+", 
                 RowBox[{
                  SubscriptBox["l", "p"], " ", 
                  RowBox[{"sin", "(", 
                   RowBox[{
                    SubscriptBox["\[Theta]", "p"], "(", "t", ")"}], ")"}]}], 
                 "+", 
                 RowBox[{"2", " ", 
                  RowBox[{
                   SubscriptBox["y", "p"], "(", "t", ")"}]}], "-", 
                 RowBox[{"2", " ", 
                  RowBox[{
                   SubscriptBox["y", "2"], "(", "t", ")"}]}]}], ")"}], 
               "2"]}]}]]]}], "\[LongEqual]", 
         RowBox[{
          SubscriptBox["m", "p"], " ", 
          RowBox[{
           SuperscriptBox[
            SubscriptBox["x", "p"], "\[Prime]\[Prime]",
            MultilineFunction->None], "(", "t", ")"}]}]}]},
       {
        RowBox[{
         RowBox[{
          FractionBox[
           RowBox[{
            SubscriptBox["k", "1"], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", 
               RowBox[{
                FractionBox["1", "2"], " ", 
                SubscriptBox["h", "p"], " ", 
                RowBox[{"cos", "(", 
                 RowBox[{
                  SubscriptBox["\[Theta]", "p"], "(", "t", ")"}], ")"}]}]}], 
              "+", 
              RowBox[{
               FractionBox["1", "2"], " ", 
               SubscriptBox["l", "p"], " ", 
               RowBox[{"sin", "(", 
                RowBox[{
                 SubscriptBox["\[Theta]", "p"], "(", "t", ")"}], ")"}]}], "-", 
              RowBox[{
               SubscriptBox["y", "p"], "(", "t", ")"}], "+", 
              RowBox[{
               SubscriptBox["y", "1"], "(", "t", ")"}]}], ")"}], " ", 
            RowBox[{"(", 
             RowBox[{
              SqrtBox[
               RowBox[{
                RowBox[{
                 FractionBox["1", "4"], " ", 
                 SuperscriptBox[
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{
                    SubscriptBox["h", "p"], " ", 
                    RowBox[{"sin", "(", 
                    RowBox[{
                    SubscriptBox["\[Theta]", "p"], "(", "t", ")"}], ")"}]}], 
                    "+", 
                    RowBox[{
                    SubscriptBox["l", "p"], " ", 
                    RowBox[{"cos", "(", 
                    RowBox[{
                    SubscriptBox["\[Theta]", "p"], "(", "t", ")"}], ")"}]}], 
                    "-", 
                    RowBox[{"2", " ", 
                    RowBox[{
                    SubscriptBox["x", "p"], "(", "t", ")"}]}], "+", 
                    RowBox[{"2", " ", 
                    RowBox[{
                    SubscriptBox["x", "1"], "(", "t", ")"}]}]}], ")"}], 
                  "2"]}], "+", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{
                    FractionBox["1", "2"], " ", 
                    SubscriptBox["h", "p"], " ", 
                    RowBox[{"cos", "(", 
                    RowBox[{
                    SubscriptBox["\[Theta]", "p"], "(", "t", ")"}], ")"}]}], 
                   "-", 
                   RowBox[{
                    FractionBox["1", "2"], " ", 
                    SubscriptBox["l", "p"], " ", 
                    RowBox[{"sin", "(", 
                    RowBox[{
                    SubscriptBox["\[Theta]", "p"], "(", "t", ")"}], ")"}]}], 
                   "+", 
                   RowBox[{
                    SubscriptBox["y", "p"], "(", "t", ")"}], "-", 
                   RowBox[{
                    SubscriptBox["y", "1"], "(", "t", ")"}]}], ")"}], "2"]}]],
               "-", 
              SubscriptBox["L0", "1"]}], ")"}]}], 
           SqrtBox[
            RowBox[{
             RowBox[{
              FractionBox["1", "4"], " ", 
              SuperscriptBox[
               RowBox[{"(", 
                RowBox[{
                 RowBox[{
                  SubscriptBox["h", "p"], " ", 
                  RowBox[{"sin", "(", 
                   RowBox[{
                    SubscriptBox["\[Theta]", "p"], "(", "t", ")"}], ")"}]}], 
                 "+", 
                 RowBox[{
                  SubscriptBox["l", "p"], " ", 
                  RowBox[{"cos", "(", 
                   RowBox[{
                    SubscriptBox["\[Theta]", "p"], "(", "t", ")"}], ")"}]}], 
                 "-", 
                 RowBox[{"2", " ", 
                  RowBox[{
                   SubscriptBox["x", "p"], "(", "t", ")"}]}], "+", 
                 RowBox[{"2", " ", 
                  RowBox[{
                   SubscriptBox["x", "1"], "(", "t", ")"}]}]}], ")"}], "2"]}],
              "+", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{
                RowBox[{
                 FractionBox["1", "2"], " ", 
                 SubscriptBox["h", "p"], " ", 
                 RowBox[{"cos", "(", 
                  RowBox[{
                   SubscriptBox["\[Theta]", "p"], "(", "t", ")"}], ")"}]}], 
                "-", 
                RowBox[{
                 FractionBox["1", "2"], " ", 
                 SubscriptBox["l", "p"], " ", 
                 RowBox[{"sin", "(", 
                  RowBox[{
                   SubscriptBox["\[Theta]", "p"], "(", "t", ")"}], ")"}]}], 
                "+", 
                RowBox[{
                 SubscriptBox["y", "p"], "(", "t", ")"}], "-", 
                RowBox[{
                 SubscriptBox["y", "1"], "(", "t", ")"}]}], ")"}], "2"]}]]], 
          "+", 
          FractionBox[
           RowBox[{
            SubscriptBox["k", "2"], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", 
               RowBox[{
                FractionBox["1", "2"], " ", 
                SubscriptBox["h", "p"], " ", 
                RowBox[{"cos", "(", 
                 RowBox[{
                  SubscriptBox["\[Theta]", "p"], "(", "t", ")"}], ")"}]}]}], 
              "-", 
              RowBox[{
               FractionBox["1", "2"], " ", 
               SubscriptBox["l", "p"], " ", 
               RowBox[{"sin", "(", 
                RowBox[{
                 SubscriptBox["\[Theta]", "p"], "(", "t", ")"}], ")"}]}], "-", 
              RowBox[{
               SubscriptBox["y", "p"], "(", "t", ")"}], "+", 
              RowBox[{
               SubscriptBox["y", "2"], "(", "t", ")"}]}], ")"}], " ", 
            RowBox[{"(", 
             RowBox[{
              SqrtBox[
               RowBox[{
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{
                    FractionBox["1", "2"], " ", 
                    SubscriptBox["h", "p"], " ", 
                    RowBox[{"sin", "(", 
                    RowBox[{
                    SubscriptBox["\[Theta]", "p"], "(", "t", ")"}], ")"}]}], 
                   "-", 
                   RowBox[{
                    FractionBox["1", "2"], " ", 
                    SubscriptBox["l", "p"], " ", 
                    RowBox[{"cos", "(", 
                    RowBox[{
                    SubscriptBox["\[Theta]", "p"], "(", "t", ")"}], ")"}]}], 
                   "-", 
                   RowBox[{
                    SubscriptBox["x", "p"], "(", "t", ")"}], "+", 
                   RowBox[{
                    SubscriptBox["x", "2"], "(", "t", ")"}]}], ")"}], "2"], 
                "+", 
                RowBox[{
                 FractionBox["1", "4"], " ", 
                 SuperscriptBox[
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{
                    SubscriptBox["h", "p"], " ", 
                    RowBox[{"cos", "(", 
                    RowBox[{
                    SubscriptBox["\[Theta]", "p"], "(", "t", ")"}], ")"}]}], 
                    "+", 
                    RowBox[{
                    SubscriptBox["l", "p"], " ", 
                    RowBox[{"sin", "(", 
                    RowBox[{
                    SubscriptBox["\[Theta]", "p"], "(", "t", ")"}], ")"}]}], 
                    "+", 
                    RowBox[{"2", " ", 
                    RowBox[{
                    SubscriptBox["y", "p"], "(", "t", ")"}]}], "-", 
                    RowBox[{"2", " ", 
                    RowBox[{
                    SubscriptBox["y", "2"], "(", "t", ")"}]}]}], ")"}], 
                  "2"]}]}]], "-", 
              SubscriptBox["L0", "2"]}], ")"}]}], 
           SqrtBox[
            RowBox[{
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{
                RowBox[{
                 FractionBox["1", "2"], " ", 
                 SubscriptBox["h", "p"], " ", 
                 RowBox[{"sin", "(", 
                  RowBox[{
                   SubscriptBox["\[Theta]", "p"], "(", "t", ")"}], ")"}]}], 
                "-", 
                RowBox[{
                 FractionBox["1", "2"], " ", 
                 SubscriptBox["l", "p"], " ", 
                 RowBox[{"cos", "(", 
                  RowBox[{
                   SubscriptBox["\[Theta]", "p"], "(", "t", ")"}], ")"}]}], 
                "-", 
                RowBox[{
                 SubscriptBox["x", "p"], "(", "t", ")"}], "+", 
                RowBox[{
                 SubscriptBox["x", "2"], "(", "t", ")"}]}], ")"}], "2"], "+", 
             RowBox[{
              FractionBox["1", "4"], " ", 
              SuperscriptBox[
               RowBox[{"(", 
                RowBox[{
                 RowBox[{
                  SubscriptBox["h", "p"], " ", 
                  RowBox[{"cos", "(", 
                   RowBox[{
                    SubscriptBox["\[Theta]", "p"], "(", "t", ")"}], ")"}]}], 
                 "+", 
                 RowBox[{
                  SubscriptBox["l", "p"], " ", 
                  RowBox[{"sin", "(", 
                   RowBox[{
                    SubscriptBox["\[Theta]", "p"], "(", "t", ")"}], ")"}]}], 
                 "+", 
                 RowBox[{"2", " ", 
                  RowBox[{
                   SubscriptBox["y", "p"], "(", "t", ")"}]}], "-", 
                 RowBox[{"2", " ", 
                  RowBox[{
                   SubscriptBox["y", "2"], "(", "t", ")"}]}]}], ")"}], 
               "2"]}]}]]]}], "\[LongEqual]", 
         RowBox[{
          SubscriptBox["m", "p"], " ", 
          RowBox[{"(", 
           RowBox[{"g", "+", 
            RowBox[{
             SuperscriptBox[
              SubscriptBox["y", "p"], "\[Prime]\[Prime]",
              MultilineFunction->None], "(", "t", ")"}]}], ")"}]}]}]},
       {
        RowBox[{
         RowBox[{
          RowBox[{
           SubscriptBox["\[ImaginaryI]", 
            RowBox[{"p", ",", "zz"}]], " ", 
           RowBox[{
            SuperscriptBox[
             SubscriptBox["\[Theta]", "p"], "\[Prime]\[Prime]",
             MultilineFunction->None], "(", "t", ")"}]}], "+", 
          FractionBox[
           RowBox[{
            SubscriptBox["k", "1"], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               SubscriptBox["h", "p"], " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{
                  RowBox[{
                   SubscriptBox["x", "1"], "(", "t", ")"}], " ", 
                  RowBox[{"cos", "(", 
                   RowBox[{
                    SubscriptBox["\[Theta]", "p"], "(", "t", ")"}], ")"}]}], 
                 "-", 
                 RowBox[{
                  RowBox[{
                   SubscriptBox["x", "p"], "(", "t", ")"}], " ", 
                  RowBox[{"cos", "(", 
                   RowBox[{
                    SubscriptBox["\[Theta]", "p"], "(", "t", ")"}], ")"}]}], 
                 "+", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{
                    SubscriptBox["y", "1"], "(", "t", ")"}], "-", 
                    RowBox[{
                    SubscriptBox["y", "p"], "(", "t", ")"}]}], ")"}], " ", 
                  RowBox[{"sin", "(", 
                   RowBox[{
                    SubscriptBox["\[Theta]", "p"], "(", "t", ")"}], ")"}]}]}],
                 ")"}]}], "+", 
              RowBox[{
               SubscriptBox["l", "p"], " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{
                  RowBox[{
                   SubscriptBox["x", "1"], "(", "t", ")"}], " ", 
                  RowBox[{"(", 
                   RowBox[{"-", 
                    RowBox[{"sin", "(", 
                    RowBox[{
                    SubscriptBox["\[Theta]", "p"], "(", "t", ")"}], ")"}]}], 
                   ")"}]}], "+", 
                 RowBox[{
                  RowBox[{
                   SubscriptBox["x", "p"], "(", "t", ")"}], " ", 
                  RowBox[{"sin", "(", 
                   RowBox[{
                    SubscriptBox["\[Theta]", "p"], "(", "t", ")"}], ")"}]}], 
                 "+", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{
                    SubscriptBox["y", "1"], "(", "t", ")"}], "-", 
                    RowBox[{
                    SubscriptBox["y", "p"], "(", "t", ")"}]}], ")"}], " ", 
                  RowBox[{"cos", "(", 
                   RowBox[{
                    SubscriptBox["\[Theta]", "p"], "(", "t", ")"}], ")"}]}]}],
                 ")"}]}]}], ")"}], " ", 
            RowBox[{"(", 
             RowBox[{
              SqrtBox[
               RowBox[{
                RowBox[{
                 FractionBox["1", "4"], " ", 
                 SuperscriptBox[
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{
                    SubscriptBox["h", "p"], " ", 
                    RowBox[{"sin", "(", 
                    RowBox[{
                    SubscriptBox["\[Theta]", "p"], "(", "t", ")"}], ")"}]}], 
                    "+", 
                    RowBox[{
                    SubscriptBox["l", "p"], " ", 
                    RowBox[{"cos", "(", 
                    RowBox[{
                    SubscriptBox["\[Theta]", "p"], "(", "t", ")"}], ")"}]}], 
                    "-", 
                    RowBox[{"2", " ", 
                    RowBox[{
                    SubscriptBox["x", "p"], "(", "t", ")"}]}], "+", 
                    RowBox[{"2", " ", 
                    RowBox[{
                    SubscriptBox["x", "1"], "(", "t", ")"}]}]}], ")"}], 
                  "2"]}], "+", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{
                    FractionBox["1", "2"], " ", 
                    SubscriptBox["h", "p"], " ", 
                    RowBox[{"cos", "(", 
                    RowBox[{
                    SubscriptBox["\[Theta]", "p"], "(", "t", ")"}], ")"}]}], 
                   "-", 
                   RowBox[{
                    FractionBox["1", "2"], " ", 
                    SubscriptBox["l", "p"], " ", 
                    RowBox[{"sin", "(", 
                    RowBox[{
                    SubscriptBox["\[Theta]", "p"], "(", "t", ")"}], ")"}]}], 
                   "+", 
                   RowBox[{
                    SubscriptBox["y", "p"], "(", "t", ")"}], "-", 
                   RowBox[{
                    SubscriptBox["y", "1"], "(", "t", ")"}]}], ")"}], "2"]}]],
               "-", 
              SubscriptBox["L0", "1"]}], ")"}]}], 
           RowBox[{"2", " ", 
            SqrtBox[
             RowBox[{
              RowBox[{
               FractionBox["1", "4"], " ", 
               SuperscriptBox[
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   SubscriptBox["h", "p"], " ", 
                   RowBox[{"sin", "(", 
                    RowBox[{
                    SubscriptBox["\[Theta]", "p"], "(", "t", ")"}], ")"}]}], 
                  "+", 
                  RowBox[{
                   SubscriptBox["l", "p"], " ", 
                   RowBox[{"cos", "(", 
                    RowBox[{
                    SubscriptBox["\[Theta]", "p"], "(", "t", ")"}], ")"}]}], 
                  "-", 
                  RowBox[{"2", " ", 
                   RowBox[{
                    SubscriptBox["x", "p"], "(", "t", ")"}]}], "+", 
                  RowBox[{"2", " ", 
                   RowBox[{
                    SubscriptBox["x", "1"], "(", "t", ")"}]}]}], ")"}], 
                "2"]}], "+", 
              SuperscriptBox[
               RowBox[{"(", 
                RowBox[{
                 RowBox[{
                  FractionBox["1", "2"], " ", 
                  SubscriptBox["h", "p"], " ", 
                  RowBox[{"cos", "(", 
                   RowBox[{
                    SubscriptBox["\[Theta]", "p"], "(", "t", ")"}], ")"}]}], 
                 "-", 
                 RowBox[{
                  FractionBox["1", "2"], " ", 
                  SubscriptBox["l", "p"], " ", 
                  RowBox[{"sin", "(", 
                   RowBox[{
                    SubscriptBox["\[Theta]", "p"], "(", "t", ")"}], ")"}]}], 
                 "+", 
                 RowBox[{
                  SubscriptBox["y", "p"], "(", "t", ")"}], "-", 
                 RowBox[{
                  SubscriptBox["y", "1"], "(", "t", ")"}]}], ")"}], 
               "2"]}]]}]], "+", 
          FractionBox[
           RowBox[{
            SubscriptBox["k", "2"], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               SubscriptBox["h", "p"], " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{
                  RowBox[{
                   SubscriptBox["x", "2"], "(", "t", ")"}], " ", 
                  RowBox[{"cos", "(", 
                   RowBox[{
                    SubscriptBox["\[Theta]", "p"], "(", "t", ")"}], ")"}]}], 
                 "-", 
                 RowBox[{
                  RowBox[{
                   SubscriptBox["x", "p"], "(", "t", ")"}], " ", 
                  RowBox[{"cos", "(", 
                   RowBox[{
                    SubscriptBox["\[Theta]", "p"], "(", "t", ")"}], ")"}]}], 
                 "+", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{
                    SubscriptBox["y", "2"], "(", "t", ")"}], "-", 
                    RowBox[{
                    SubscriptBox["y", "p"], "(", "t", ")"}]}], ")"}], " ", 
                  RowBox[{"sin", "(", 
                   RowBox[{
                    SubscriptBox["\[Theta]", "p"], "(", "t", ")"}], ")"}]}]}],
                 ")"}]}], "+", 
              RowBox[{
               SubscriptBox["l", "p"], " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{
                  RowBox[{
                   SubscriptBox["x", "2"], "(", "t", ")"}], " ", 
                  RowBox[{"sin", "(", 
                   RowBox[{
                    SubscriptBox["\[Theta]", "p"], "(", "t", ")"}], ")"}]}], 
                 "-", 
                 RowBox[{
                  RowBox[{
                   SubscriptBox["x", "p"], "(", "t", ")"}], " ", 
                  RowBox[{"sin", "(", 
                   RowBox[{
                    SubscriptBox["\[Theta]", "p"], "(", "t", ")"}], ")"}]}], 
                 "+", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{
                    SubscriptBox["y", "p"], "(", "t", ")"}], "-", 
                    RowBox[{
                    SubscriptBox["y", "2"], "(", "t", ")"}]}], ")"}], " ", 
                  RowBox[{"cos", "(", 
                   RowBox[{
                    SubscriptBox["\[Theta]", "p"], "(", "t", ")"}], ")"}]}]}],
                 ")"}]}]}], ")"}], " ", 
            RowBox[{"(", 
             RowBox[{
              SqrtBox[
               RowBox[{
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{
                    FractionBox["1", "2"], " ", 
                    SubscriptBox["h", "p"], " ", 
                    RowBox[{"sin", "(", 
                    RowBox[{
                    SubscriptBox["\[Theta]", "p"], "(", "t", ")"}], ")"}]}], 
                   "-", 
                   RowBox[{
                    FractionBox["1", "2"], " ", 
                    SubscriptBox["l", "p"], " ", 
                    RowBox[{"cos", "(", 
                    RowBox[{
                    SubscriptBox["\[Theta]", "p"], "(", "t", ")"}], ")"}]}], 
                   "-", 
                   RowBox[{
                    SubscriptBox["x", "p"], "(", "t", ")"}], "+", 
                   RowBox[{
                    SubscriptBox["x", "2"], "(", "t", ")"}]}], ")"}], "2"], 
                "+", 
                RowBox[{
                 FractionBox["1", "4"], " ", 
                 SuperscriptBox[
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{
                    SubscriptBox["h", "p"], " ", 
                    RowBox[{"cos", "(", 
                    RowBox[{
                    SubscriptBox["\[Theta]", "p"], "(", "t", ")"}], ")"}]}], 
                    "+", 
                    RowBox[{
                    SubscriptBox["l", "p"], " ", 
                    RowBox[{"sin", "(", 
                    RowBox[{
                    SubscriptBox["\[Theta]", "p"], "(", "t", ")"}], ")"}]}], 
                    "+", 
                    RowBox[{"2", " ", 
                    RowBox[{
                    SubscriptBox["y", "p"], "(", "t", ")"}]}], "-", 
                    RowBox[{"2", " ", 
                    RowBox[{
                    SubscriptBox["y", "2"], "(", "t", ")"}]}]}], ")"}], 
                  "2"]}]}]], "-", 
              SubscriptBox["L0", "2"]}], ")"}]}], 
           RowBox[{"2", " ", 
            SqrtBox[
             RowBox[{
              SuperscriptBox[
               RowBox[{"(", 
                RowBox[{
                 RowBox[{
                  FractionBox["1", "2"], " ", 
                  SubscriptBox["h", "p"], " ", 
                  RowBox[{"sin", "(", 
                   RowBox[{
                    SubscriptBox["\[Theta]", "p"], "(", "t", ")"}], ")"}]}], 
                 "-", 
                 RowBox[{
                  FractionBox["1", "2"], " ", 
                  SubscriptBox["l", "p"], " ", 
                  RowBox[{"cos", "(", 
                   RowBox[{
                    SubscriptBox["\[Theta]", "p"], "(", "t", ")"}], ")"}]}], 
                 "-", 
                 RowBox[{
                  SubscriptBox["x", "p"], "(", "t", ")"}], "+", 
                 RowBox[{
                  SubscriptBox["x", "2"], "(", "t", ")"}]}], ")"}], "2"], "+", 
              RowBox[{
               FractionBox["1", "4"], " ", 
               SuperscriptBox[
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   SubscriptBox["h", "p"], " ", 
                   RowBox[{"cos", "(", 
                    RowBox[{
                    SubscriptBox["\[Theta]", "p"], "(", "t", ")"}], ")"}]}], 
                  "+", 
                  RowBox[{
                   SubscriptBox["l", "p"], " ", 
                   RowBox[{"sin", "(", 
                    RowBox[{
                    SubscriptBox["\[Theta]", "p"], "(", "t", ")"}], ")"}]}], 
                  "+", 
                  RowBox[{"2", " ", 
                   RowBox[{
                    SubscriptBox["y", "p"], "(", "t", ")"}]}], "-", 
                  RowBox[{"2", " ", 
                   RowBox[{
                    SubscriptBox["y", "2"], "(", "t", ")"}]}]}], ")"}], 
                "2"]}]}]]}]]}], "\[LongEqual]", "0"}]}
      },
      GridBoxAlignment->{
       "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
        "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.5599999999999999]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}],
     Column], "\[NoBreak]", ")"}],
   Function[BoxForm`e$, 
    MatrixForm[BoxForm`e$]]], TraditionalForm]], "Output",
 CellChangeTimes->{3.712290090695434*^9, 3.712451494236684*^9, 
  3.7126462873126726`*^9, 3.712792277000323*^9, 3.712831551283332*^9, 
  3.713461594445388*^9, 3.7139480263324814`*^9, 3.7141519266176453`*^9, 
  3.7141710996346645`*^9},
 FontSize->18,
 Background->RGBColor[1, 1, 0]]
}, Open  ]],

Cell[" ", "Text",
 Editable->False,
 Selectable->False,
 CellFrame->{{0, 0}, {0, 0.5}},
 ShowCellBracket->False,
 CellMargins->{{0, 0}, {1, 1}},
 CellElementSpacings->{"CellMinHeight"->1},
 CellFrameMargins->0,
 CellFrameColor->RGBColor[0, 0, 1],
 CellSize->{Inherited, 3}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"non", "-", 
     RowBox[{"conserving", " ", 
      RowBox[{"forces", ":", "\[IndentingNewLine]", "aerodynamic"}]}]}], " ", 
    "=", "  ", 
    RowBox[{"f", 
     RowBox[{"(", 
      RowBox[{
       OverscriptBox[
        SubscriptBox["x", "p"], "."], ",", 
       OverscriptBox[
        SubscriptBox["y", "p"], "."], ",", 
       SubscriptBox["\[Theta]", "p"], ",", " ", 
       SubscriptBox["w", "x"], ",", 
       SubscriptBox["w", "y"]}], ")"}]}]}], " ", ",", " ", 
   RowBox[{
    RowBox[{"w", " ", "for", " ", "wind", " ", 
     RowBox[{"components", "."}]}], " ", "=", " ", 
    RowBox[{"f", 
     RowBox[{"(", 
      RowBox[{
       SubscriptBox["relV", "x"], ",", 
       SubscriptBox["relV", "y"]}], ")"}]}]}], " ", ",", " ", 
   RowBox[{"relV", " ", "is", " ", "relative", " ", "to", " ", "air"}]}], 
  " "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"dumping", " ", 
   RowBox[{"(", "structural", ")"}]}], "=", " ", 
  RowBox[{
   RowBox[{"f", 
    RowBox[{"(", 
     OverscriptBox[
      SubscriptBox["l", "i"], "."], ")"}]}], "=", 
   RowBox[{"f", 
    RowBox[{"(", 
     RowBox[{
      OverscriptBox[
       SubscriptBox["x", "i"], "."], ",", 
      OverscriptBox[
       SubscriptBox["y", "i"], "."], ",", 
      OverscriptBox[
       SubscriptBox["x", "p"], "."], ",", 
      OverscriptBox[
       SubscriptBox["y", "p"], "."]}], ")"}]}]}]}]}], "Input",
 CellChangeTimes->{{3.7126500437307434`*^9, 3.7126501694208355`*^9}, 
   3.7126502290521765`*^9, {3.7126503014117236`*^9, 3.712650331072315*^9}, {
   3.712650702293164*^9, 3.7126507593603816`*^9}, {3.7126556510753436`*^9, 
   3.7126556677774086`*^9}, {3.714959537089729*^9, 3.7149595639332113`*^9}}],

Cell[" ", "Text",
 Editable->False,
 Selectable->False,
 CellFrame->{{0, 0}, {0, 3}},
 ShowCellBracket->False,
 CellMargins->{{0, 0}, {1, 1}},
 CellElementSpacings->{"CellMinHeight"->1},
 CellFrameMargins->0,
 CellFrameColor->RGBColor[0, 0, 1],
 CellSize->{Inherited, 5}],

Cell["non dim the full equations", "Text",
 CellChangeTimes->{{3.714171644963645*^9, 3.714171664303767*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(", 
   RowBox[{"smallEqs", "=", 
    RowBox[{
     RowBox[{"quadEqNominal", "/.", "terms2"}], "/.", "terms3"}]}], ")"}], "//",
   "MatrixForm"}]], "Input",
 CellChangeTimes->{{3.714171736156269*^9, 3.7141717665215025`*^9}, 
   3.7141718235455046`*^9, {3.714171861060299*^9, 3.7141718691564713`*^9}, {
   3.714172046680708*^9, 3.7141720590047817`*^9}},
 FontSize->36,
 Background->RGBColor[0.87, 0.94, 1]],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", 
   TagBox[GridBox[{
      {
       RowBox[{
        RowBox[{
         FractionBox[
          RowBox[{"r1x", " ", 
           SubscriptBox["k", "1"], " ", 
           RowBox[{"(", 
            RowBox[{"a", "-", 
             SubscriptBox["L0", "1"]}], ")"}]}], 
          SqrtBox[
           SuperscriptBox["a", "2"]]], "+", 
         FractionBox[
          RowBox[{"r2x", " ", 
           SubscriptBox["k", "2"], " ", 
           RowBox[{"(", 
            RowBox[{"b", "-", 
             SubscriptBox["L0", "2"]}], ")"}]}], 
          SqrtBox[
           SuperscriptBox["b", "2"]]]}], "\[Equal]", 
        RowBox[{
         SubscriptBox["m", "p"], " ", 
         RowBox[{
          SuperscriptBox[
           SubscriptBox["x", "p"], "\[Prime]\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}]}]},
      {
       RowBox[{
        RowBox[{
         FractionBox[
          RowBox[{"r1y", " ", 
           SubscriptBox["k", "1"], " ", 
           RowBox[{"(", 
            RowBox[{"a", "-", 
             SubscriptBox["L0", "1"]}], ")"}]}], 
          SqrtBox[
           SuperscriptBox["a", "2"]]], "+", 
         FractionBox[
          RowBox[{"r2y", " ", 
           SubscriptBox["k", "2"], " ", 
           RowBox[{"(", 
            RowBox[{"b", "-", 
             SubscriptBox["L0", "2"]}], ")"}]}], 
          SqrtBox[
           SuperscriptBox["b", "2"]]]}], "\[Equal]", 
        RowBox[{
         SubscriptBox["m", "p"], " ", 
         RowBox[{"(", 
          RowBox[{"g", "+", 
           RowBox[{
            SuperscriptBox[
             SubscriptBox["y", "p"], "\[Prime]\[Prime]",
             MultilineFunction->None], "[", "t", "]"}]}], ")"}]}]}]},
      {
       RowBox[{
        RowBox[{
         FractionBox[
          RowBox[{"c1", " ", 
           SubscriptBox["k", "1"], " ", 
           RowBox[{"(", 
            RowBox[{"a", "-", 
             SubscriptBox["L0", "1"]}], ")"}]}], 
          SqrtBox[
           SuperscriptBox["a", "2"]]], "+", 
         FractionBox[
          RowBox[{"c2", " ", 
           SubscriptBox["k", "2"], " ", 
           RowBox[{"(", 
            RowBox[{"b", "-", 
             SubscriptBox["L0", "2"]}], ")"}]}], 
          SqrtBox[
           SuperscriptBox["b", "2"]]], "+", 
         RowBox[{
          SubscriptBox["\[ImaginaryI]", 
           RowBox[{"p", ",", "zz"}]], " ", 
          RowBox[{
           SuperscriptBox[
            SubscriptBox["\[Theta]", "p"], "\[Prime]\[Prime]",
            MultilineFunction->None], "[", "t", "]"}]}]}], "\[Equal]", "0"}]}
     },
     GridBoxAlignment->{
      "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}},
        "RowsIndexed" -> {}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
         Offset[0.2], {
          Offset[0.4]}, 
         Offset[0.2]}, "RowsIndexed" -> {}}],
    Column], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.7141718700444946`*^9, 3.714172059624795*^9},
 FontSize->36,
 Background->RGBColor[0.87, 0.94, 1]]
}, Open  ]],

Cell["NonDimEq manually settings the terms:", "Text",
 CellChangeTimes->{{3.714172252146077*^9, 3.7141722552141523`*^9}, {
  3.714180452805065*^9, 3.714180462773306*^9}},
 FontSize->24],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   OverscriptBox[
    SubscriptBox["y", "p"], "~"], "[", "t", "]"}], "=", 
  RowBox[{
   RowBox[{
    RowBox[{
     SubscriptBox["y", "p"], "[", "t", "]"}], " ", "/", 
    SubscriptBox["L0", "1"]}], "  ", "or", " ", "any", " ", "other", " ", 
   "of", " ", "the", " ", "lengths", " ", "varialbes", " ", 
   RowBox[{"(", 
    RowBox[{
     SubscriptBox["x", "p"], ",", "r1x", ",", "r1y", ",", "r2x", ",", "r2y", 
     ",", 
     SubscriptBox["h", "p"], ",", 
     SubscriptBox["l", "p"]}], ")"}]}]}], "\[IndentingNewLine]", 
 RowBox[{"t", "=", 
  RowBox[{"\[Tau]", "/", 
   SubscriptBox["\[Omega]", "s"]}]}], "\[IndentingNewLine]", 
 RowBox[{
  SuperscriptBox[
   SubscriptBox["\[Omega]", "s"], "2"], "=", 
  RowBox[{
   FractionBox[
    SubscriptBox["k", "1"], 
    SubscriptBox["m", "p"]], "[", 
   RowBox[{
    FractionBox["g", "l"], "=", 
    FractionBox["1", 
     SuperscriptBox["s", "2"]]}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"A", " ", "is", " ", "non"}], "-", 
  RowBox[{"dimentional", "  ", "form", " ", 
   RowBox[{"of", " ", "'"}], 
   RowBox[{"a", "'"}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"B", " ", "is", " ", "non"}], "-", 
  RowBox[{"dimentional", "  ", "form", " ", 
   RowBox[{"of", " ", "'"}], 
   RowBox[{"b", "'"}]}]}]}], "Input",
 CellChangeTimes->{
  3.7143859742405353`*^9, {3.714387097214754*^9, 3.7143871116663647`*^9}, {
   3.7143878062327795`*^9, 3.714387811703418*^9}}],

Cell[BoxData[
 FormBox[
  TagBox[
   RowBox[{"(", "\[NoBreak]", 
    TagBox[GridBox[{
       {
        RowBox[{
         RowBox[{
          FractionBox[
           RowBox[{
            RowBox[{"(", 
             RowBox[{"1", "-", 
              FractionBox["1", "A"]}], ")"}], " ", 
            SubscriptBox["k", "1"], " ", 
            SubscriptBox["L0", "1"], " ", "r1x"}], 
           SubscriptBox["m", "p"]], "+", 
          FractionBox[
           RowBox[{
            SubscriptBox["k", "2"], " ", 
            SubscriptBox["L0", "1"], " ", "r2x", " ", 
            RowBox[{"(", 
             RowBox[{"1", "-", 
              FractionBox[
               SubscriptBox["L0", "2"], 
               RowBox[{"B", " ", 
                SubscriptBox["L0", "1"]}]]}], ")"}]}], 
           SubscriptBox["m", "p"]]}], "\[LongEqual]", 
         RowBox[{
          SubscriptBox["L0", "1"], " ", 
          SubsuperscriptBox["\[Omega]", "s", "2"], " ", 
          RowBox[{
           SuperscriptBox[
            SubscriptBox["x", "p"], "\[Prime]\[Prime]",
            MultilineFunction->None], "(", "t", ")"}]}]}]},
       {
        RowBox[{
         RowBox[{
          FractionBox[
           RowBox[{
            RowBox[{"(", 
             RowBox[{"1", "-", 
              FractionBox["1", "A"]}], ")"}], " ", 
            SubscriptBox["k", "1"], " ", 
            SubscriptBox["L0", "1"], " ", "r1y"}], 
           SubscriptBox["m", "p"]], "+", 
          FractionBox[
           RowBox[{
            SubscriptBox["k", "2"], " ", 
            SubscriptBox["L0", "1"], " ", "r2y", " ", 
            RowBox[{"(", 
             RowBox[{"1", "-", 
              FractionBox[
               SubscriptBox["L0", "2"], 
               RowBox[{"B", " ", 
                SubscriptBox["L0", "1"]}]]}], ")"}]}], 
           SubscriptBox["m", "p"]], "-", "g"}], "\[LongEqual]", 
         RowBox[{
          SubscriptBox["L0", "1"], " ", 
          SubsuperscriptBox["\[Omega]", "s", "2"], " ", 
          RowBox[{
           SuperscriptBox[
            SubscriptBox["y", "p"], "\[Prime]\[Prime]",
            MultilineFunction->None], "(", "t", ")"}]}]}]},
       {
        RowBox[{
         RowBox[{
          RowBox[{"-", 
           FractionBox[
            RowBox[{
             RowBox[{"(", 
              RowBox[{"1", "-", 
               FractionBox["1", "A"]}], ")"}], " ", 
             SubscriptBox["c", "1"], " ", 
             SubscriptBox["k", "1"], " ", 
             SubsuperscriptBox["L0", "1", "2"]}], 
            SubscriptBox["\[ImaginaryI]", 
             RowBox[{"p", ",", "zz"}]]]}], "-", 
          FractionBox[
           RowBox[{
            SubscriptBox["c", "2"], " ", 
            SubscriptBox["k", "2"], " ", 
            SubsuperscriptBox["L0", "1", "2"], " ", 
            RowBox[{"(", 
             RowBox[{"1", "-", 
              FractionBox[
               SubscriptBox["L0", "2"], 
               RowBox[{"B", " ", 
                SubscriptBox["L0", "1"]}]]}], ")"}]}], 
           SubscriptBox["\[ImaginaryI]", 
            RowBox[{"p", ",", "zz"}]]]}], "\[LongEqual]", 
         RowBox[{
          SubsuperscriptBox["\[Omega]", "s", "2"], " ", 
          RowBox[{
           SuperscriptBox[
            SubscriptBox["\[Theta]", "p"], "\[Prime]\[Prime]",
            MultilineFunction->None], "(", "t", ")"}]}]}]}
      },
      GridBoxAlignment->{
       "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
        "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.5599999999999999]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}],
     Column], "\[NoBreak]", ")"}],
   Function[BoxForm`e$, 
    MatrixForm[BoxForm`e$]]], TraditionalForm]], "Output",
 CellChangeTimes->{{3.7141809407776604`*^9, 3.71418096114718*^9}, 
   3.7141810047443304`*^9, {3.7141810445789814`*^9, 3.714181080771454*^9}, 
   3.7143860139705524`*^9, 3.714386467653723*^9, 3.7143874237010694`*^9, {
   3.714389212153591*^9, 3.7143892387212486`*^9}},
 FontSize->24,
 Background->RGBColor[0.94, 0.91, 0.88]]
}, Open  ]],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
   SubscriptBox["Delta", "Equilibrium"], "=", 
   FractionBox[
    RowBox[{
     SubscriptBox["m", "p"], "g"}], 
    SubscriptBox["k", "i"]]}], "*)"}]], "Input",
 CellChangeTimes->{3.71438606382195*^9}],

Cell[BoxData[
 RowBox[{"greekTerms", "=", 
  RowBox[{"{", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     FractionBox[
      SubscriptBox["k", "2"], 
      SubscriptBox["k", "1"]], "\[Rule]", "\[Kappa]"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     FractionBox[
      SubscriptBox["L0", "2"], 
      SubscriptBox["L0", "1"]], "\[Rule]", "\[ScriptCapitalL]"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     FractionBox[
      SubscriptBox["k", "1"], 
      SubscriptBox["m", "p"]], "->", 
     SuperscriptBox[
      SubscriptBox["\[Omega]", "s"], "2"]}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      FractionBox[
       RowBox[{
        SubscriptBox["m", "p"], 
        SuperscriptBox[
         SubscriptBox["L0", "1"], "2"]}], 
       SubscriptBox["I", "p"]], 
      RowBox[{"(", 
       RowBox[{"=", 
        FractionBox[
         RowBox[{
          SuperscriptBox[
           SubscriptBox["L0", "1"], "2"], 
          SubscriptBox["k", "1"]}], 
         RowBox[{
          SubscriptBox["I", "p"], 
          SuperscriptBox[
           SubscriptBox["\[Omega]", "s"], "2"]}]]}], ")"}]}], "\[Rule]", 
     "\[Alpha]"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      FractionBox["g", 
       RowBox[{
        SubscriptBox["L0", "1"], " ", 
        SubsuperscriptBox["\[Omega]", "s", "2"]}]], 
      RowBox[{"(", 
       RowBox[{"=", 
        FractionBox[
         RowBox[{"g", " ", 
          SubscriptBox["m", "p"]}], 
         RowBox[{
          SubscriptBox["L0", "1"], 
          SubscriptBox["k", "1"]}]]}], ")"}]}], "\[Rule]", "\[Gamma]"}]}], 
   "\[IndentingNewLine]", "}"}]}]], "Input",
 CellChangeTimes->{{3.7143879104856024`*^9, 3.7143879494561462`*^9}, 
   3.7143893333946447`*^9, {3.714389447058155*^9, 3.714389537391204*^9}, {
   3.7143896588765364`*^9, 3.7143896974471874`*^9}, {3.714389794051433*^9, 
   3.71438979622888*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"(", 
     RowBox[{"NonDimEq", "=", 
      RowBox[{"{", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{
           SubsuperscriptBox["\[Omega]", "s", "2"], " ", 
           SubscriptBox["L0", "1"], 
           RowBox[{"(", 
            RowBox[{"1", "-", 
             FractionBox["1", "A"]}], ")"}], "r1x"}], " ", "+", 
          RowBox[{"\[Kappa]", " ", 
           SubsuperscriptBox["\[Omega]", "s", "2"], "  ", 
           SubscriptBox["L0", "1"], 
           RowBox[{"(", 
            RowBox[{"1", "-", 
             RowBox[{
              FractionBox["1", "B"], "\[ScriptCapitalL]"}]}], ")"}], 
           "r2x"}]}], " ", "==", 
         RowBox[{
          SubscriptBox["L0", "1"], " ", 
          SubsuperscriptBox["\[Omega]", "s", "2"], 
          RowBox[{
           SuperscriptBox[
            SubscriptBox["x", "p"], "\[Prime]\[Prime]",
            MultilineFunction->None], "[", "t", "]"}]}]}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{
          RowBox[{
           SubsuperscriptBox["\[Omega]", "s", "2"], 
           SubscriptBox["L0", "1"], 
           RowBox[{"(", 
            RowBox[{"1", "-", 
             FractionBox["1", "A"]}], ")"}], "r1y"}], " ", "+", 
          RowBox[{"\[Kappa]", " ", 
           SubsuperscriptBox["\[Omega]", "s", "2"], "  ", 
           SubscriptBox["L0", "1"], 
           RowBox[{"(", 
            RowBox[{"1", "-", 
             RowBox[{
              FractionBox["1", "B"], "\[ScriptCapitalL]"}]}], ")"}], "r2y"}], 
          " ", "-", 
          RowBox[{
           FractionBox["g", 
            RowBox[{
             SubscriptBox["L0", "1"], " ", 
             SubsuperscriptBox["\[Omega]", "s", "2"]}]], 
           SubscriptBox["L0", "1"], " ", 
           SubsuperscriptBox["\[Omega]", "s", "2"]}]}], "==", 
         RowBox[{
          SubscriptBox["L0", "1"], " ", 
          SubsuperscriptBox["\[Omega]", "s", "2"], 
          RowBox[{
           SuperscriptBox[
            SubscriptBox["y", "p"], "\[Prime]\[Prime]",
            MultilineFunction->None], "[", "t", "]"}]}]}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{
          RowBox[{
           FractionBox[
            SubscriptBox["k", "1"], 
            RowBox[{"-", 
             SubscriptBox["\[ImaginaryI]", 
              RowBox[{"p", ",", "zz"}]]}]], " ", 
           FractionBox[
            SuperscriptBox[
             SubscriptBox["L0", "1"], "2"], 
            SubsuperscriptBox["\[Omega]", "s", "2"]], 
           SubsuperscriptBox["\[Omega]", "s", "2"], 
           RowBox[{"(", 
            RowBox[{"1", "-", 
             FractionBox["1", "A"]}], ")"}], 
           SubscriptBox["c", "1"]}], " ", "+", 
          RowBox[{"\[Kappa]", " ", 
           FractionBox[
            SubscriptBox["k", "1"], 
            RowBox[{"-", 
             SubscriptBox["\[ImaginaryI]", 
              RowBox[{"p", ",", "zz"}]]}]], " ", 
           FractionBox[
            SuperscriptBox[
             SubscriptBox["L0", "1"], "2"], 
            SubsuperscriptBox["\[Omega]", "s", "2"]], 
           SubsuperscriptBox["\[Omega]", "s", "2"], 
           RowBox[{"(", 
            RowBox[{"1", "-", 
             RowBox[{
              FractionBox["1", "B"], "\[ScriptCapitalL]"}]}], ")"}], 
           SubscriptBox["c", "2"]}]}], "==", 
         RowBox[{
          SubsuperscriptBox["\[Omega]", "s", "2"], " ", 
          RowBox[{
           SuperscriptBox[
            SubscriptBox["\[Theta]", "p"], "\[Prime]\[Prime]",
            MultilineFunction->None], "[", "t", "]"}]}]}]}], 
       "\[IndentingNewLine]", "}"}]}], ")"}], "//", "Flatten"}], "//", 
   "MatrixForm"}], "//", "TraditionalForm"}]], "Input",
 CellChangeTimes->{{3.7143876348261805`*^9, 3.714387792648102*^9}, {
  3.7143881320989227`*^9, 3.7143881529918175`*^9}, {3.7143883645383368`*^9, 
  3.714388374252798*^9}, {3.714389166022051*^9, 3.7143891926065807`*^9}}],

Cell[BoxData[
 FormBox[
  TagBox[
   RowBox[{"(", "\[NoBreak]", 
    TagBox[GridBox[{
       {
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{"1", "-", 
             FractionBox["1", "A"]}], ")"}], " ", 
           SubscriptBox["L0", "1"], " ", "r1x", " ", 
           SubsuperscriptBox["\[Omega]", "s", "2"]}], "+", 
          RowBox[{"\[Kappa]", " ", 
           SubscriptBox["L0", "1"], " ", "r2x", " ", 
           RowBox[{"(", 
            RowBox[{"1", "-", 
             FractionBox["\[ScriptCapitalL]", "B"]}], ")"}], " ", 
           SubsuperscriptBox["\[Omega]", "s", "2"]}]}], "\[LongEqual]", 
         RowBox[{
          SubscriptBox["L0", "1"], " ", 
          SubsuperscriptBox["\[Omega]", "s", "2"], " ", 
          RowBox[{
           SuperscriptBox[
            SubscriptBox["x", "p"], "\[Prime]\[Prime]",
            MultilineFunction->None], "(", "t", ")"}]}]}]},
       {
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{"1", "-", 
             FractionBox["1", "A"]}], ")"}], " ", 
           SubscriptBox["L0", "1"], " ", "r1y", " ", 
           SubsuperscriptBox["\[Omega]", "s", "2"]}], "+", 
          RowBox[{"\[Kappa]", " ", 
           SubscriptBox["L0", "1"], " ", "r2y", " ", 
           RowBox[{"(", 
            RowBox[{"1", "-", 
             FractionBox["\[ScriptCapitalL]", "B"]}], ")"}], " ", 
           SubsuperscriptBox["\[Omega]", "s", "2"]}], "-", "g"}], 
         "\[LongEqual]", 
         RowBox[{
          SubscriptBox["L0", "1"], " ", 
          SubsuperscriptBox["\[Omega]", "s", "2"], " ", 
          RowBox[{
           SuperscriptBox[
            SubscriptBox["y", "p"], "\[Prime]\[Prime]",
            MultilineFunction->None], "(", "t", ")"}]}]}]},
       {
        RowBox[{
         RowBox[{
          RowBox[{"-", 
           FractionBox[
            RowBox[{
             RowBox[{"(", 
              RowBox[{"1", "-", 
               FractionBox["1", "A"]}], ")"}], " ", 
             SubscriptBox["c", "1"], " ", 
             SubscriptBox["k", "1"], " ", 
             SubsuperscriptBox["L0", "1", "2"]}], 
            SubscriptBox["\[ImaginaryI]", 
             RowBox[{"p", ",", "zz"}]]]}], "-", 
          FractionBox[
           RowBox[{
            SubscriptBox["c", "2"], " ", "\[Kappa]", " ", 
            SubscriptBox["k", "1"], " ", 
            SubsuperscriptBox["L0", "1", "2"], " ", 
            RowBox[{"(", 
             RowBox[{"1", "-", 
              FractionBox["\[ScriptCapitalL]", "B"]}], ")"}]}], 
           SubscriptBox["\[ImaginaryI]", 
            RowBox[{"p", ",", "zz"}]]]}], "\[LongEqual]", 
         RowBox[{
          SubsuperscriptBox["\[Omega]", "s", "2"], " ", 
          RowBox[{
           SuperscriptBox[
            SubscriptBox["\[Theta]", "p"], "\[Prime]\[Prime]",
            MultilineFunction->None], "(", "t", ")"}]}]}]}
      },
      GridBoxAlignment->{
       "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
        "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.5599999999999999]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}],
     Column], "\[NoBreak]", ")"}],
   Function[BoxForm`e$, 
    MatrixForm[BoxForm`e$]]], TraditionalForm]], "Output",
 CellChangeTimes->{{3.7143891476968637`*^9, 3.7143891929508095`*^9}}]
}, Open  ]],

Cell[" ", "Text",
 Editable->False,
 Selectable->False,
 CellFrame->{{0, 0}, {0, 2}},
 ShowCellBracket->False,
 CellMargins->{{0, 0}, {1, 1}},
 CellElementSpacings->{"CellMinHeight"->1},
 CellFrameMargins->0,
 CellFrameColor->RGBColor[0, 0, 1],
 CellSize->{Inherited, 4}],

Cell[BoxData[
 RowBox[{
  OverscriptBox["\[ScriptCapitalX]", ".."], "=", 
  RowBox[{
   RowBox[{
    RowBox[{"(", GridBox[{
       {"1", "0", "0"},
       {"0", "1", "0"},
       {"0", "0", 
        RowBox[{"-", "\[Alpha]"}]}
      }], ")"}], 
    RowBox[{"(", 
     RowBox[{"1", "-", 
      FractionBox["1", "A"]}], ")"}], 
    SubscriptBox["\[ScriptCapitalV]", "1"]}], "+", 
   RowBox[{"\[Kappa]", 
    RowBox[{"(", GridBox[{
       {"1", "0", "0"},
       {"0", "1", "0"},
       {"0", "0", 
        RowBox[{"-", "\[Alpha]"}]}
      }], ")"}], 
    RowBox[{"(", 
     RowBox[{"1", "-", 
      RowBox[{
       FractionBox["1", "B"], "\[ScriptCapitalL]"}]}], ")"}], 
    SubscriptBox["\[ScriptCapitalV]", "2"]}], "-", 
   RowBox[{"(", GridBox[{
      {"0"},
      {"\[Gamma]"},
      {"0"}
     }], ")"}]}]}]], "Input",
 CellChangeTimes->{{3.714389892716267*^9, 3.7143898970131283`*^9}, {
  3.714389965562713*^9, 3.714390009608005*^9}, {3.7143900794907255`*^9, 
  3.7143901818982353`*^9}}],

Cell[" ", "Text",
 Editable->False,
 Selectable->False,
 CellFrame->{{0, 0}, {0, 2}},
 ShowCellBracket->False,
 CellMargins->{{0, 0}, {1, 1}},
 CellElementSpacings->{"CellMinHeight"->1},
 CellFrameMargins->0,
 CellFrameColor->RGBColor[0, 0, 1],
 CellSize->{Inherited, 4}],

Cell[" ", "Text",
 Editable->False,
 Selectable->False,
 CellFrame->{{0, 0}, {0, 0.5}},
 ShowCellBracket->False,
 CellMargins->{{0, 0}, {1, 1}},
 CellElementSpacings->{"CellMinHeight"->1},
 CellFrameMargins->0,
 CellFrameColor->RGBColor[0, 0, 1],
 CellSize->{Inherited, 3}],

Cell[" ", "Text",
 Editable->False,
 Selectable->False,
 CellFrame->{{0, 0}, {0, 2}},
 ShowCellBracket->False,
 CellMargins->{{0, 0}, {1, 1}},
 CellElementSpacings->{"CellMinHeight"->1},
 CellFrameMargins->0,
 CellFrameColor->RGBColor[0, 0, 1],
 CellSize->{Inherited, 4}],

Cell[" ", "Text",
 Editable->False,
 Selectable->False,
 CellFrame->{{0, 0}, {0, 0.5}},
 ShowCellBracket->False,
 CellMargins->{{0, 0}, {1, 1}},
 CellElementSpacings->{"CellMinHeight"->1},
 CellFrameMargins->0,
 CellFrameColor->RGBColor[0, 0, 1],
 CellSize->{Inherited, 3}],

Cell[BoxData[
 RowBox[{"Quit", "[", "]"}]], "Input",
 CellChangeTimes->{{3.715194288843802*^9, 3.715194290570945*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"\[ScriptCapitalX]", "=", 
   RowBox[{"(", GridBox[{
      {
       RowBox[{
        SubscriptBox["x", "p"], "[", "t", "]"}]},
      {
       RowBox[{
        SubscriptBox["y", "p"], "[", "t", "]"}]},
      {
       RowBox[{
        SubscriptBox["\[Theta]", "p"], "[", "t", "]"}]}
     }], ")"}]}], 
  RowBox[{"(*", 
   RowBox[{"//", "Flatten"}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{"greekTermsSymetricCase", "=", 
  RowBox[{"{", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     FractionBox[
      SubscriptBox["k", "2"], 
      SubscriptBox["k", "1"]], "\[Rule]"}], "*)"}], 
   RowBox[{
    RowBox[{"\[Kappa]", "\[Rule]", "1"}], ",", "\[IndentingNewLine]", 
    RowBox[{"(*", 
     RowBox[{
      FractionBox[
       SubscriptBox["L0", "2"], 
       SubscriptBox["L0", "1"]], "\[Rule]"}], "*)"}], 
    RowBox[{"\[ScriptCapitalL]", "\[Rule]", "1"}]}], "\[IndentingNewLine]", 
   "}"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"greekTermsGeneral", "=", 
   RowBox[{"{", "\[IndentingNewLine]", 
    RowBox[{"(*", 
     RowBox[{
      FractionBox[
       SubscriptBox["k", "2"], 
       SubscriptBox["k", "1"]], "\[Rule]"}], "*)"}], 
    RowBox[{
     RowBox[{"\[Kappa]", "\[Rule]", "1"}], ",", "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{
       FractionBox[
        SubscriptBox["L0", "2"], 
        SubscriptBox["L0", "1"]], "\[Rule]"}], "*)"}], 
     RowBox[{"\[ScriptCapitalL]", "\[Rule]", "1"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{
       FractionBox[
        SubscriptBox["k", "1"], 
        SubscriptBox["m", "p"]], "->"}], "*)"}], 
     RowBox[{
      SuperscriptBox[
       SubscriptBox["\[Omega]", "s"], "2"], "\[Rule]", "1"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{
       RowBox[{
        FractionBox[
         RowBox[{
          SubscriptBox["m", "p"], 
          SuperscriptBox[
           SubscriptBox["L0", "1"], "2"]}], 
         SubscriptBox["I", "p"]], 
        RowBox[{"(", 
         RowBox[{"=", 
          FractionBox[
           RowBox[{
            SuperscriptBox[
             SubscriptBox["L0", "1"], "2"], 
            SubscriptBox["k", "1"]}], 
           RowBox[{
            SubscriptBox["I", "p"], 
            SuperscriptBox[
             SubscriptBox["\[Omega]", "s"], "2"]}]]}], ")"}]}], "\[Rule]"}], 
      "*)"}], 
     RowBox[{"\[Alpha]", "\[Rule]", "1"}], ",", "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{
       RowBox[{
        FractionBox["g", 
         RowBox[{
          SubscriptBox["L0", "1"], " ", 
          SubsuperscriptBox["\[Omega]", "s", "2"]}]], 
        RowBox[{"(", 
         RowBox[{"=", 
          FractionBox[
           RowBox[{"g", " ", 
            SubscriptBox["m", "p"]}], 
           RowBox[{
            SubscriptBox["L0", "1"], 
            SubscriptBox["k", "1"]}]]}], ")"}]}], "\[Rule]"}], " ", "*)"}], 
     RowBox[{"\[Gamma]", "\[Rule]", "1"}]}], " ", 
    RowBox[{"(*", " ", 
     RowBox[{
      RowBox[{
      "make", " ", "sure", " ", "it", " ", "is", " ", "not", " ", "over"}], 
      "-", 
      RowBox[{"determined", " ", "constant"}]}], " ", "*)"}], 
    "\[IndentingNewLine]", "\[IndentingNewLine]", "}"}]}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"already", " ", 
     RowBox[{"here", " ", ":", " ", 
      RowBox[{"replacing", " ", 
       StyleBox["all",
        FontWeight->"Plain"], " ", "former", " ", 
       SubscriptBox["h", "p"]}]}]}], ",", 
    RowBox[{
     SubscriptBox["l", "p"], " ", "with", " ", "new", " ", "2", 
     SubscriptBox["h", "p"]}], ",", 
    RowBox[{"2", 
     SubscriptBox["l", "p"]}]}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"A", 
   RowBox[{"(*", 
    RowBox[{"\[Rule]", 
     SqrtBox[
      RowBox[{
       SuperscriptBox["r1x", "2"], "+", 
       SuperscriptBox["r1y", "2"]}]]}], "*)"}], "=", 
   RowBox[{"\[Sqrt]", 
    RowBox[{"(", 
     RowBox[{
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"Sin", "[", 
           RowBox[{
            SubscriptBox["\[Theta]", "p"], "[", "t", "]"}], "]"}], " ", 
          SubscriptBox["h", "p"]}], "+", 
         RowBox[{
          RowBox[{"Cos", "[", 
           RowBox[{
            SubscriptBox["\[Theta]", "p"], "[", "t", "]"}], "]"}], " ", 
          SubscriptBox["l", "p"]}], "+", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            SubscriptBox["x", "1"], "[", "t", "]"}], "-", 
           RowBox[{
            SubscriptBox["x", "p"], "[", "t", "]"}]}], ")"}]}], ")"}], "2"], 
      "+", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"-", " ", 
           RowBox[{"Cos", "[", 
            RowBox[{
             SubscriptBox["\[Theta]", "p"], "[", "t", "]"}], "]"}]}], " ", 
          SubscriptBox["h", "p"]}], "+", " ", 
         RowBox[{
          RowBox[{"Sin", "[", 
           RowBox[{
            SubscriptBox["\[Theta]", "p"], "[", "t", "]"}], "]"}], " ", 
          SubscriptBox["l", "p"]}], "+", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            SubscriptBox["y", "1"], "[", "t", "]"}], "-", 
           RowBox[{
            SubscriptBox["y", "p"], "[", "t", "]"}]}], ")"}]}], ")"}], "2"]}],
      ")"}]}]}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"B", 
   RowBox[{"(*", 
    RowBox[{"\[Rule]", 
     SqrtBox[
      RowBox[{
       SuperscriptBox["r2x", "2"], "+", 
       SuperscriptBox["r2y", "2"]}]]}], "*)"}], "=", 
   RowBox[{"\[Sqrt]", 
    RowBox[{"(", 
     RowBox[{
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"Sin", "[", 
           RowBox[{
            SubscriptBox["\[Theta]", "p"], "[", "t", "]"}], "]"}], " ", 
          SubscriptBox["h", "p"]}], "-", 
         RowBox[{
          RowBox[{"Cos", "[", 
           RowBox[{
            SubscriptBox["\[Theta]", "p"], "[", "t", "]"}], "]"}], " ", 
          SubscriptBox["l", "p"]}], "+", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            SubscriptBox["x", "2"], "[", "t", "]"}], "-", 
           RowBox[{
            SubscriptBox["x", "p"], "[", "t", "]"}]}], ")"}]}], ")"}], "2"], 
      "+", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"-", " ", 
           RowBox[{"Cos", "[", 
            RowBox[{
             SubscriptBox["\[Theta]", "p"], "[", "t", "]"}], "]"}]}], " ", 
          SubscriptBox["h", "p"]}], "-", " ", 
         RowBox[{
          RowBox[{"Sin", "[", 
           RowBox[{
            SubscriptBox["\[Theta]", "p"], "[", "t", "]"}], "]"}], " ", 
          SubscriptBox["l", "p"]}], "+", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            SubscriptBox["y", "2"], "[", "t", "]"}], "-", 
           RowBox[{
            SubscriptBox["y", "p"], "[", "t", "]"}]}], ")"}]}], ")"}], "2"]}],
      ")"}]}]}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    SubscriptBox["c", "1"], 
    RowBox[{"(*", 
     RowBox[{"\[Rule]", 
      RowBox[{"dr1", "+", "dr2"}]}], "*)"}], "=", 
    RowBox[{
     RowBox[{
      RowBox[{
       SubscriptBox["l", "p"], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"-", 
           RowBox[{"Sin", "[", 
            RowBox[{
             SubscriptBox["\[Theta]", "p"], "[", "t", "]"}], "]"}]}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             SubscriptBox["x", "1"], "[", "t", "]"}], "-", " ", 
            RowBox[{
             SubscriptBox["x", "p"], "[", "t", "]"}]}], ")"}]}], "+", 
         RowBox[{
          RowBox[{"Cos", "[", 
           RowBox[{
            SubscriptBox["\[Theta]", "p"], "[", "t", "]"}], "]"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             SubscriptBox["y", "1"], "[", "t", "]"}], "-", 
            RowBox[{
             SubscriptBox["y", "p"], "[", "t", "]"}]}], ")"}]}]}], ")"}]}], 
      "+", 
      RowBox[{
       SubscriptBox["h", "p"], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"Cos", "[", 
           RowBox[{
            SubscriptBox["\[Theta]", "p"], "[", "t", "]"}], "]"}], 
          RowBox[{"(", " ", 
           RowBox[{
            RowBox[{
             SubscriptBox["x", "1"], "[", "t", "]"}], "-", " ", 
            RowBox[{
             SubscriptBox["x", "p"], "[", "t", "]"}]}], ")"}]}], "+", 
         RowBox[{
          RowBox[{"Sin", "[", 
           RowBox[{
            SubscriptBox["\[Theta]", "p"], "[", "t", "]"}], "]"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             SubscriptBox["y", "1"], "[", "t", "]"}], "-", 
            RowBox[{
             SubscriptBox["y", "p"], "[", "t", "]"}]}], ")"}]}]}], ")"}], 
       "\[IndentingNewLine]", 
       SubscriptBox["c", "2"]}]}], 
     RowBox[{"(*", 
      RowBox[{"\[Rule]", 
       RowBox[{"dr3", "+", "dr4"}]}], "*)"}], "=", 
     RowBox[{
      RowBox[{
       SubscriptBox["l", "p"], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"Sin", "[", 
           RowBox[{
            SubscriptBox["\[Theta]", "p"], "[", "t", "]"}], "]"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             SubscriptBox["x", "2"], "[", "t", "]"}], "-", " ", 
            RowBox[{
             SubscriptBox["x", "p"], "[", "t", "]"}]}], ")"}]}], "+", 
         RowBox[{
          RowBox[{"Cos", "[", 
           RowBox[{
            SubscriptBox["\[Theta]", "p"], "[", "t", "]"}], "]"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", 
             RowBox[{
              SubscriptBox["y", "2"], "[", "t", "]"}]}], "+", 
            RowBox[{
             SubscriptBox["y", "p"], "[", "t", "]"}]}], ")"}]}]}], ")"}]}], 
      "+", 
      RowBox[{
       SubscriptBox["h", "p"], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"Cos", "[", 
           RowBox[{
            SubscriptBox["\[Theta]", "p"], "[", "t", "]"}], "]"}], 
          RowBox[{"(", " ", 
           RowBox[{
            RowBox[{
             SubscriptBox["x", "2"], "[", "t", "]"}], "-", " ", 
            RowBox[{
             SubscriptBox["x", "p"], "[", "t", "]"}]}], ")"}]}], "+", 
         RowBox[{
          RowBox[{"Sin", "[", 
           RowBox[{
            SubscriptBox["\[Theta]", "p"], "[", "t", "]"}], "]"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             SubscriptBox["y", "2"], "[", "t", "]"}], "-", 
            RowBox[{
             SubscriptBox["y", "p"], "[", "t", "]"}]}], ")"}]}]}], 
        ")"}]}]}]}]}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  SubscriptBox["\[ScriptCapitalV]", "1"], 
  RowBox[{"(*", 
   RowBox[{"=", 
    RowBox[{"(", GridBox[{
       {"r1x"},
       {"r1y"},
       {
        SubscriptBox["c", "1"]}
      }], ")"}]}], "*)"}], "=", 
  RowBox[{"(", GridBox[{
     {
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"Sin", "[", 
          RowBox[{
           SubscriptBox["\[Theta]", "p"], "[", "t", "]"}], "]"}], " ", 
         SubscriptBox["h", "p"]}], "+", 
        RowBox[{
         RowBox[{"Cos", "[", 
          RowBox[{
           SubscriptBox["\[Theta]", "p"], "[", "t", "]"}], "]"}], " ", 
         SubscriptBox["l", "p"]}], "+", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           SubscriptBox["x", "1"], "[", "t", "]"}], "-", 
          RowBox[{
           SubscriptBox["x", "p"], "[", "t", "]"}]}], ")"}]}], ")"}]},
     {
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"-", " ", 
          RowBox[{"Cos", "[", 
           RowBox[{
            SubscriptBox["\[Theta]", "p"], "[", "t", "]"}], "]"}]}], " ", 
         SubscriptBox["h", "p"]}], "+", " ", 
        RowBox[{
         RowBox[{"Sin", "[", 
          RowBox[{
           SubscriptBox["\[Theta]", "p"], "[", "t", "]"}], "]"}], " ", 
         SubscriptBox["l", "p"]}], "+", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           SubscriptBox["y", "1"], "[", "t", "]"}], "-", 
          RowBox[{
           SubscriptBox["y", "p"], "[", "t", "]"}]}], ")"}]}], ")"}]},
     {
      RowBox[{
       RowBox[{
        SubscriptBox["l", "p"], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", 
            RowBox[{"Sin", "[", 
             RowBox[{
              SubscriptBox["\[Theta]", "p"], "[", "t", "]"}], "]"}]}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              SubscriptBox["x", "1"], "[", "t", "]"}], "-", " ", 
             RowBox[{
              SubscriptBox["x", "p"], "[", "t", "]"}]}], ")"}]}], "+", 
          RowBox[{
           RowBox[{"Cos", "[", 
            RowBox[{
             SubscriptBox["\[Theta]", "p"], "[", "t", "]"}], "]"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              SubscriptBox["y", "1"], "[", "t", "]"}], "-", 
             RowBox[{
              SubscriptBox["y", "p"], "[", "t", "]"}]}], ")"}]}]}], ")"}]}], 
       "+", 
       RowBox[{
        SubscriptBox["h", "p"], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"Cos", "[", 
            RowBox[{
             SubscriptBox["\[Theta]", "p"], "[", "t", "]"}], "]"}], 
           RowBox[{"(", " ", 
            RowBox[{
             RowBox[{
              SubscriptBox["x", "1"], "[", "t", "]"}], "-", " ", 
             RowBox[{
              SubscriptBox["x", "p"], "[", "t", "]"}]}], ")"}]}], "+", 
          RowBox[{
           RowBox[{"Sin", "[", 
            RowBox[{
             SubscriptBox["\[Theta]", "p"], "[", "t", "]"}], "]"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              SubscriptBox["y", "1"], "[", "t", "]"}], "-", 
             RowBox[{
              SubscriptBox["y", "p"], "[", "t", "]"}]}], ")"}]}]}], ")"}]}]}]}
    }], ")"}]}], "\[IndentingNewLine]", 
 RowBox[{
  SubscriptBox["\[ScriptCapitalV]", "2"], 
  RowBox[{"(*", 
   RowBox[{"=", 
    RowBox[{"(", GridBox[{
       {"r2x"},
       {"r2y"},
       {
        SubscriptBox["c", "2"]}
      }], ")"}]}], "*)"}], "=", 
  RowBox[{"(", GridBox[{
     {
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"Sin", "[", 
          RowBox[{
           SubscriptBox["\[Theta]", "p"], "[", "t", "]"}], "]"}], " ", 
         SubscriptBox["h", "p"]}], "-", 
        RowBox[{
         RowBox[{"Cos", "[", 
          RowBox[{
           SubscriptBox["\[Theta]", "p"], "[", "t", "]"}], "]"}], " ", 
         SubscriptBox["l", "p"]}], "+", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           SubscriptBox["x", "2"], "[", "t", "]"}], "-", 
          RowBox[{
           SubscriptBox["x", "p"], "[", "t", "]"}]}], ")"}]}], ")"}]},
     {
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"-", " ", 
          RowBox[{"Cos", "[", 
           RowBox[{
            SubscriptBox["\[Theta]", "p"], "[", "t", "]"}], "]"}]}], " ", 
         SubscriptBox["h", "p"]}], "-", " ", 
        RowBox[{
         RowBox[{"Sin", "[", 
          RowBox[{
           SubscriptBox["\[Theta]", "p"], "[", "t", "]"}], "]"}], " ", 
         SubscriptBox["l", "p"]}], "+", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           SubscriptBox["y", "2"], "[", "t", "]"}], "-", 
          RowBox[{
           SubscriptBox["y", "p"], "[", "t", "]"}]}], ")"}]}], ")"}]},
     {
      RowBox[{
       RowBox[{
        SubscriptBox["l", "p"], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"Sin", "[", 
            RowBox[{
             SubscriptBox["\[Theta]", "p"], "[", "t", "]"}], "]"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              SubscriptBox["x", "2"], "[", "t", "]"}], "-", " ", 
             RowBox[{
              SubscriptBox["x", "p"], "[", "t", "]"}]}], ")"}]}], "+", 
          RowBox[{
           RowBox[{"Cos", "[", 
            RowBox[{
             SubscriptBox["\[Theta]", "p"], "[", "t", "]"}], "]"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", 
              RowBox[{
               SubscriptBox["y", "2"], "[", "t", "]"}]}], "+", 
             RowBox[{
              SubscriptBox["y", "p"], "[", "t", "]"}]}], ")"}]}]}], ")"}]}], 
       "+", 
       RowBox[{
        SubscriptBox["h", "p"], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"Cos", "[", 
            RowBox[{
             SubscriptBox["\[Theta]", "p"], "[", "t", "]"}], "]"}], 
           RowBox[{"(", " ", 
            RowBox[{
             RowBox[{
              SubscriptBox["x", "2"], "[", "t", "]"}], "-", " ", 
             RowBox[{
              SubscriptBox["x", "p"], "[", "t", "]"}]}], ")"}]}], "+", 
          RowBox[{
           RowBox[{"Sin", "[", 
            RowBox[{
             SubscriptBox["\[Theta]", "p"], "[", "t", "]"}], "]"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              SubscriptBox["y", "2"], "[", "t", "]"}], "-", 
             RowBox[{
              SubscriptBox["y", "p"], "[", "t", "]"}]}], ")"}]}]}], ")"}]}]}]}
    }], ")"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"nameChange", "=", 
   RowBox[{"{", 
    RowBox[{
     SubscriptBox["l", "p"], "\[Rule]", 
     SubscriptBox["w", "p"]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", "\"\<equations with no general forces :\>\"", \
"\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"EOM", "=", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"D", "[", 
       RowBox[{"\[ScriptCapitalX]", ",", 
        RowBox[{"{", 
         RowBox[{"t", ",", "2"}], "}"}]}], "]"}], "\[Equal]", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"(", GridBox[{
             {"1", "0", "0"},
             {"0", "1", "0"},
             {"0", "0", 
              RowBox[{"-", "\[Alpha]"}]}
            }], ")"}], 
          RowBox[{"(", 
           RowBox[{"1", "-", 
            FractionBox["1", "A"]}], ")"}]}], ")"}], ".", 
        SubscriptBox["\[ScriptCapitalV]", "1"]}], "+", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"\[Kappa]", 
          RowBox[{"(", GridBox[{
             {"1", "0", "0"},
             {"0", "1", "0"},
             {"0", "0", 
              RowBox[{"-", "\[Alpha]"}]}
            }], ")"}], 
          RowBox[{"(", 
           RowBox[{"1", "-", 
            RowBox[{
             FractionBox["1", "B"], "\[ScriptCapitalL]"}]}], ")"}]}], ")"}], 
        ".", 
        SubscriptBox["\[ScriptCapitalV]", "2"]}], "-", 
       RowBox[{"(", GridBox[{
          {"0"},
          {"\[Gamma]"},
          {"0"}
         }], ")"}]}]}], "//.", "nameChange"}], "//", "Flatten"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->CompressedData["
1:eJxTTMoPSmViYGAQBWIQHbFNVX/xmteOTBe9jUB0qdZp7oNAmoXNUxlEH59l
bA+ir9uGuoNorsCVoSB6xZllqSC6bZteNYj2OWzRAqJ3bKroAtEBjA49IPpk
1qwJILrmwd3JIFrm9bUVIHpT7qO9IPrylx2HQLT7u9ajIPpc4f7rYHuWrrgB
ojmvhz8A0U0Foj9BtMonO9ZDQLorzp4XRBfvyhEG0XmXI0VBtMn3WikQfcrz
GZgWMVDQBdFtfwz1QLSDn8rnU0Ba/VEOmH7z4O0vEH2pv/Q3iP62yW7+JSC9
eEolmD53kWc5iLYpywXTfExxq0H0n4X71oHo6CNcB7TXAdUpmx0F0QDM8sIm

  "]],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     SubscriptBox["x", "p"], "[", "t", "]"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     SubscriptBox["y", "p"], "[", "t", "]"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     SubscriptBox["\[Theta]", "p"], "[", "t", "]"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.7144536492724395`*^9, 3.7144536799711857`*^9}, 
   3.7144537206245394`*^9, 3.7144538764141417`*^9, 3.7144718365986366`*^9, 
   3.7144875486594105`*^9, 3.714487611932694*^9, {3.7144876616370716`*^9, 
   3.7144876705012827`*^9}, 3.714905025566207*^9, 3.71519425986091*^9, 
   3.71519429418734*^9, 3.7151944341850977`*^9, 3.7151964600491085`*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"\[Kappa]", "\[Rule]", "1"}], ",", 
   RowBox[{"\[ScriptCapitalL]", "\[Rule]", "1"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.7144536492724395`*^9, 3.7144536799711857`*^9}, 
   3.7144537206245394`*^9, 3.7144538764141417`*^9, 3.7144718365986366`*^9, 
   3.7144875486594105`*^9, 3.714487611932694*^9, {3.7144876616370716`*^9, 
   3.7144876705012827`*^9}, 3.714905025566207*^9, 3.71519425986091*^9, 
   3.71519429418734*^9, 3.7151944341850977`*^9, 3.715196460055112*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"\[Kappa]", "\[Rule]", "1"}], ",", 
   RowBox[{"\[ScriptCapitalL]", "\[Rule]", "1"}], ",", 
   RowBox[{
    SubsuperscriptBox["\[Omega]", "s", "2"], "\[Rule]", "1"}], ",", 
   RowBox[{"\[Alpha]", "\[Rule]", "1"}], ",", 
   RowBox[{"\[Gamma]", "\[Rule]", "1"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.7144536492724395`*^9, 3.7144536799711857`*^9}, 
   3.7144537206245394`*^9, 3.7144538764141417`*^9, 3.7144718365986366`*^9, 
   3.7144875486594105`*^9, 3.714487611932694*^9, {3.7144876616370716`*^9, 
   3.7144876705012827`*^9}, 3.714905025566207*^9, 3.71519425986091*^9, 
   3.71519429418734*^9, 3.7151944341850977`*^9, 3.715196460065115*^9}],

Cell[BoxData[
 SqrtBox[
  RowBox[{
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"Sin", "[", 
        RowBox[{
         SubscriptBox["\[Theta]", "p"], "[", "t", "]"}], "]"}], " ", 
       SubscriptBox["h", "p"]}], "+", 
      RowBox[{
       RowBox[{"Cos", "[", 
        RowBox[{
         SubscriptBox["\[Theta]", "p"], "[", "t", "]"}], "]"}], " ", 
       SubscriptBox["l", "p"]}], "+", 
      RowBox[{
       SubscriptBox["x", "1"], "[", "t", "]"}], "-", 
      RowBox[{
       SubscriptBox["x", "p"], "[", "t", "]"}]}], ")"}], "2"], "+", 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"-", 
        RowBox[{"Cos", "[", 
         RowBox[{
          SubscriptBox["\[Theta]", "p"], "[", "t", "]"}], "]"}]}], " ", 
       SubscriptBox["h", "p"]}], "+", 
      RowBox[{
       RowBox[{"Sin", "[", 
        RowBox[{
         SubscriptBox["\[Theta]", "p"], "[", "t", "]"}], "]"}], " ", 
       SubscriptBox["l", "p"]}], "+", 
      RowBox[{
       SubscriptBox["y", "1"], "[", "t", "]"}], "-", 
      RowBox[{
       SubscriptBox["y", "p"], "[", "t", "]"}]}], ")"}], "2"]}]]], "Output",
 CellChangeTimes->{{3.7144536492724395`*^9, 3.7144536799711857`*^9}, 
   3.7144537206245394`*^9, 3.7144538764141417`*^9, 3.7144718365986366`*^9, 
   3.7144875486594105`*^9, 3.714487611932694*^9, {3.7144876616370716`*^9, 
   3.7144876705012827`*^9}, 3.714905025566207*^9, 3.71519425986091*^9, 
   3.71519429418734*^9, 3.7151944341850977`*^9, 3.7151964600701184`*^9}],

Cell[BoxData[
 SqrtBox[
  RowBox[{
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"Sin", "[", 
        RowBox[{
         SubscriptBox["\[Theta]", "p"], "[", "t", "]"}], "]"}], " ", 
       SubscriptBox["h", "p"]}], "-", 
      RowBox[{
       RowBox[{"Cos", "[", 
        RowBox[{
         SubscriptBox["\[Theta]", "p"], "[", "t", "]"}], "]"}], " ", 
       SubscriptBox["l", "p"]}], "+", 
      RowBox[{
       SubscriptBox["x", "2"], "[", "t", "]"}], "-", 
      RowBox[{
       SubscriptBox["x", "p"], "[", "t", "]"}]}], ")"}], "2"], "+", 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"-", 
        RowBox[{"Cos", "[", 
         RowBox[{
          SubscriptBox["\[Theta]", "p"], "[", "t", "]"}], "]"}]}], " ", 
       SubscriptBox["h", "p"]}], "-", 
      RowBox[{
       RowBox[{"Sin", "[", 
        RowBox[{
         SubscriptBox["\[Theta]", "p"], "[", "t", "]"}], "]"}], " ", 
       SubscriptBox["l", "p"]}], "+", 
      RowBox[{
       SubscriptBox["y", "2"], "[", "t", "]"}], "-", 
      RowBox[{
       SubscriptBox["y", "p"], "[", "t", "]"}]}], ")"}], "2"]}]]], "Output",
 CellChangeTimes->{{3.7144536492724395`*^9, 3.7144536799711857`*^9}, 
   3.7144537206245394`*^9, 3.7144538764141417`*^9, 3.7144718365986366`*^9, 
   3.7144875486594105`*^9, 3.714487611932694*^9, {3.7144876616370716`*^9, 
   3.7144876705012827`*^9}, 3.714905025566207*^9, 3.71519425986091*^9, 
   3.71519429418734*^9, 3.7151944341850977`*^9, 3.715196460075122*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"Sin", "[", 
       RowBox[{
        SubscriptBox["\[Theta]", "p"], "[", "t", "]"}], "]"}], " ", 
      SubscriptBox["h", "p"]}], "+", 
     RowBox[{
      RowBox[{"Cos", "[", 
       RowBox[{
        SubscriptBox["\[Theta]", "p"], "[", "t", "]"}], "]"}], " ", 
      SubscriptBox["l", "p"]}], "+", 
     RowBox[{
      SubscriptBox["x", "1"], "[", "t", "]"}], "-", 
     RowBox[{
      SubscriptBox["x", "p"], "[", "t", "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"-", 
       RowBox[{"Cos", "[", 
        RowBox[{
         SubscriptBox["\[Theta]", "p"], "[", "t", "]"}], "]"}]}], " ", 
      SubscriptBox["h", "p"]}], "+", 
     RowBox[{
      RowBox[{"Sin", "[", 
       RowBox[{
        SubscriptBox["\[Theta]", "p"], "[", "t", "]"}], "]"}], " ", 
      SubscriptBox["l", "p"]}], "+", 
     RowBox[{
      SubscriptBox["y", "1"], "[", "t", "]"}], "-", 
     RowBox[{
      SubscriptBox["y", "p"], "[", "t", "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      SubscriptBox["l", "p"], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"-", 
          RowBox[{"Sin", "[", 
           RowBox[{
            SubscriptBox["\[Theta]", "p"], "[", "t", "]"}], "]"}]}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            SubscriptBox["x", "1"], "[", "t", "]"}], "-", 
           RowBox[{
            SubscriptBox["x", "p"], "[", "t", "]"}]}], ")"}]}], "+", 
        RowBox[{
         RowBox[{"Cos", "[", 
          RowBox[{
           SubscriptBox["\[Theta]", "p"], "[", "t", "]"}], "]"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            SubscriptBox["y", "1"], "[", "t", "]"}], "-", 
           RowBox[{
            SubscriptBox["y", "p"], "[", "t", "]"}]}], ")"}]}]}], ")"}]}], 
     "+", 
     RowBox[{
      SubscriptBox["h", "p"], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"Cos", "[", 
          RowBox[{
           SubscriptBox["\[Theta]", "p"], "[", "t", "]"}], "]"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            SubscriptBox["x", "1"], "[", "t", "]"}], "-", 
           RowBox[{
            SubscriptBox["x", "p"], "[", "t", "]"}]}], ")"}]}], "+", 
        RowBox[{
         RowBox[{"Sin", "[", 
          RowBox[{
           SubscriptBox["\[Theta]", "p"], "[", "t", "]"}], "]"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            SubscriptBox["y", "1"], "[", "t", "]"}], "-", 
           RowBox[{
            SubscriptBox["y", "p"], "[", "t", "]"}]}], ")"}]}]}], ")"}]}]}], 
    "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.7144536492724395`*^9, 3.7144536799711857`*^9}, 
   3.7144537206245394`*^9, 3.7144538764141417`*^9, 3.7144718365986366`*^9, 
   3.7144875486594105`*^9, 3.714487611932694*^9, {3.7144876616370716`*^9, 
   3.7144876705012827`*^9}, 3.714905025566207*^9, 3.71519425986091*^9, 
   3.71519429418734*^9, 3.7151944341850977`*^9, 3.715196460081126*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"Sin", "[", 
       RowBox[{
        SubscriptBox["\[Theta]", "p"], "[", "t", "]"}], "]"}], " ", 
      SubscriptBox["h", "p"]}], "-", 
     RowBox[{
      RowBox[{"Cos", "[", 
       RowBox[{
        SubscriptBox["\[Theta]", "p"], "[", "t", "]"}], "]"}], " ", 
      SubscriptBox["l", "p"]}], "+", 
     RowBox[{
      SubscriptBox["x", "2"], "[", "t", "]"}], "-", 
     RowBox[{
      SubscriptBox["x", "p"], "[", "t", "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"-", 
       RowBox[{"Cos", "[", 
        RowBox[{
         SubscriptBox["\[Theta]", "p"], "[", "t", "]"}], "]"}]}], " ", 
      SubscriptBox["h", "p"]}], "-", 
     RowBox[{
      RowBox[{"Sin", "[", 
       RowBox[{
        SubscriptBox["\[Theta]", "p"], "[", "t", "]"}], "]"}], " ", 
      SubscriptBox["l", "p"]}], "+", 
     RowBox[{
      SubscriptBox["y", "2"], "[", "t", "]"}], "-", 
     RowBox[{
      SubscriptBox["y", "p"], "[", "t", "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      SubscriptBox["h", "p"], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"Cos", "[", 
          RowBox[{
           SubscriptBox["\[Theta]", "p"], "[", "t", "]"}], "]"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            SubscriptBox["x", "2"], "[", "t", "]"}], "-", 
           RowBox[{
            SubscriptBox["x", "p"], "[", "t", "]"}]}], ")"}]}], "+", 
        RowBox[{
         RowBox[{"Sin", "[", 
          RowBox[{
           SubscriptBox["\[Theta]", "p"], "[", "t", "]"}], "]"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            SubscriptBox["y", "2"], "[", "t", "]"}], "-", 
           RowBox[{
            SubscriptBox["y", "p"], "[", "t", "]"}]}], ")"}]}]}], ")"}]}], 
     "+", 
     RowBox[{
      SubscriptBox["l", "p"], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"Sin", "[", 
          RowBox[{
           SubscriptBox["\[Theta]", "p"], "[", "t", "]"}], "]"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            SubscriptBox["x", "2"], "[", "t", "]"}], "-", 
           RowBox[{
            SubscriptBox["x", "p"], "[", "t", "]"}]}], ")"}]}], "+", 
        RowBox[{
         RowBox[{"Cos", "[", 
          RowBox[{
           SubscriptBox["\[Theta]", "p"], "[", "t", "]"}], "]"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", 
            RowBox[{
             SubscriptBox["y", "2"], "[", "t", "]"}]}], "+", 
           RowBox[{
            SubscriptBox["y", "p"], "[", "t", "]"}]}], ")"}]}]}], ")"}]}]}], 
    "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.7144536492724395`*^9, 3.7144536799711857`*^9}, 
   3.7144537206245394`*^9, 3.7144538764141417`*^9, 3.7144718365986366`*^9, 
   3.7144875486594105`*^9, 3.714487611932694*^9, {3.7144876616370716`*^9, 
   3.7144876705012827`*^9}, 3.714905025566207*^9, 3.71519425986091*^9, 
   3.71519429418734*^9, 3.7151944341850977`*^9, 3.7151964600871305`*^9}],

Cell[BoxData["\<\"equations with no general forces :\"\>"], "Output",
 CellChangeTimes->{{3.7144536492724395`*^9, 3.7144536799711857`*^9}, 
   3.7144537206245394`*^9, 3.7144538764141417`*^9, 3.7144718365986366`*^9, 
   3.7144875486594105`*^9, 3.714487611932694*^9, {3.7144876616370716`*^9, 
   3.7144876705012827`*^9}, 3.714905025566207*^9, 3.71519425986091*^9, 
   3.71519429418734*^9, 3.7151944341850977`*^9, 3.715196460091133*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"dispNoTime", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"a_", "[", "t", "]"}], "\[Rule]", "a"}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"EOM", "/.", "dispNoTime"}], "/.", "greekTermsSymetricCase"}], "//",
    "Flatten"}], 
  RowBox[{"(*", 
   RowBox[{"//", "MatrixForm"}], "*)"}], 
  RowBox[{"(*", 
   RowBox[{"//", "TraditionalForm"}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"EOM", "/.", "dispNoTime"}], "/.", "greekTermsSymetricCase"}], "//",
    "Flatten"}], 
  RowBox[{"(*", 
   RowBox[{"//", "MatrixForm"}], "*)"}], "//", "TraditionalForm"}]}], "Input",
 CellChangeTimes->{{3.714453761395191*^9, 3.714453846304103*^9}, {
   3.714453912086727*^9, 3.7144539729422607`*^9}, {3.714454024995744*^9, 
   3.7144540588455534`*^9}, {3.714487575151579*^9, 3.71448758735921*^9}, {
   3.7144876801904917`*^9, 3.714487682898553*^9}, {3.7149050523712597`*^9, 
   3.714905067243412*^9}, {3.7149051048245344`*^9, 3.714905258218185*^9}, 
   3.7151943627017345`*^9, {3.7151944189339933`*^9, 3.715194432265826*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     SuperscriptBox[
      SubscriptBox["x", "p"], "\[Prime]\[Prime]",
      MultilineFunction->None], "}"}], ",", 
    RowBox[{"{", 
     SuperscriptBox[
      SubscriptBox["y", "p"], "\[Prime]\[Prime]",
      MultilineFunction->None], "}"}], ",", 
    RowBox[{"{", 
     SuperscriptBox[
      SubscriptBox["\[Theta]", "p"], "\[Prime]\[Prime]",
      MultilineFunction->None], "}"}]}], "}"}], "\[Equal]", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"Sin", "[", 
           SubscriptBox["\[Theta]", "p"], "]"}], " ", 
          SubscriptBox["h", "p"]}], "+", 
         RowBox[{
          RowBox[{"Cos", "[", 
           SubscriptBox["\[Theta]", "p"], "]"}], " ", 
          SubscriptBox["w", "p"]}], "+", 
         SubscriptBox["x", "1"], "-", 
         SubscriptBox["x", "p"]}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{"1", "-", 
         FractionBox["1", 
          SqrtBox[
           RowBox[{
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"Sin", "[", 
                 SubscriptBox["\[Theta]", "p"], "]"}], " ", 
                SubscriptBox["h", "p"]}], "+", 
               RowBox[{
                RowBox[{"Cos", "[", 
                 SubscriptBox["\[Theta]", "p"], "]"}], " ", 
                SubscriptBox["w", "p"]}], "+", 
               SubscriptBox["x", "1"], "-", 
               SubscriptBox["x", "p"]}], ")"}], "2"], "+", 
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"-", 
                 RowBox[{"Cos", "[", 
                  SubscriptBox["\[Theta]", "p"], "]"}]}], " ", 
                SubscriptBox["h", "p"]}], "+", 
               RowBox[{
                RowBox[{"Sin", "[", 
                 SubscriptBox["\[Theta]", "p"], "]"}], " ", 
                SubscriptBox["w", "p"]}], "+", 
               SubscriptBox["y", "1"], "-", 
               SubscriptBox["y", "p"]}], ")"}], "2"]}]]]}], ")"}]}], "+", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"Sin", "[", 
           SubscriptBox["\[Theta]", "p"], "]"}], " ", 
          SubscriptBox["h", "p"]}], "-", 
         RowBox[{
          RowBox[{"Cos", "[", 
           SubscriptBox["\[Theta]", "p"], "]"}], " ", 
          SubscriptBox["w", "p"]}], "+", 
         SubscriptBox["x", "2"], "-", 
         SubscriptBox["x", "p"]}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{"1", "-", 
         FractionBox["1", 
          SqrtBox[
           RowBox[{
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"Sin", "[", 
                 SubscriptBox["\[Theta]", "p"], "]"}], " ", 
                SubscriptBox["h", "p"]}], "-", 
               RowBox[{
                RowBox[{"Cos", "[", 
                 SubscriptBox["\[Theta]", "p"], "]"}], " ", 
                SubscriptBox["w", "p"]}], "+", 
               SubscriptBox["x", "2"], "-", 
               SubscriptBox["x", "p"]}], ")"}], "2"], "+", 
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"-", 
                 RowBox[{"Cos", "[", 
                  SubscriptBox["\[Theta]", "p"], "]"}]}], " ", 
                SubscriptBox["h", "p"]}], "-", 
               RowBox[{
                RowBox[{"Sin", "[", 
                 SubscriptBox["\[Theta]", "p"], "]"}], " ", 
                SubscriptBox["w", "p"]}], "+", 
               SubscriptBox["y", "2"], "-", 
               SubscriptBox["y", "p"]}], ")"}], "2"]}]]]}], ")"}]}]}], "}"}], 
    ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "\[Gamma]"}], "+", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"1", "-", 
         FractionBox["1", 
          SqrtBox[
           RowBox[{
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"Sin", "[", 
                 SubscriptBox["\[Theta]", "p"], "]"}], " ", 
                SubscriptBox["h", "p"]}], "+", 
               RowBox[{
                RowBox[{"Cos", "[", 
                 SubscriptBox["\[Theta]", "p"], "]"}], " ", 
                SubscriptBox["w", "p"]}], "+", 
               SubscriptBox["x", "1"], "-", 
               SubscriptBox["x", "p"]}], ")"}], "2"], "+", 
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"-", 
                 RowBox[{"Cos", "[", 
                  SubscriptBox["\[Theta]", "p"], "]"}]}], " ", 
                SubscriptBox["h", "p"]}], "+", 
               RowBox[{
                RowBox[{"Sin", "[", 
                 SubscriptBox["\[Theta]", "p"], "]"}], " ", 
                SubscriptBox["w", "p"]}], "+", 
               SubscriptBox["y", "1"], "-", 
               SubscriptBox["y", "p"]}], ")"}], "2"]}]]]}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"-", 
           RowBox[{"Cos", "[", 
            SubscriptBox["\[Theta]", "p"], "]"}]}], " ", 
          SubscriptBox["h", "p"]}], "+", 
         RowBox[{
          RowBox[{"Sin", "[", 
           SubscriptBox["\[Theta]", "p"], "]"}], " ", 
          SubscriptBox["w", "p"]}], "+", 
         SubscriptBox["y", "1"], "-", 
         SubscriptBox["y", "p"]}], ")"}]}], "+", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"1", "-", 
         FractionBox["1", 
          SqrtBox[
           RowBox[{
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"Sin", "[", 
                 SubscriptBox["\[Theta]", "p"], "]"}], " ", 
                SubscriptBox["h", "p"]}], "-", 
               RowBox[{
                RowBox[{"Cos", "[", 
                 SubscriptBox["\[Theta]", "p"], "]"}], " ", 
                SubscriptBox["w", "p"]}], "+", 
               SubscriptBox["x", "2"], "-", 
               SubscriptBox["x", "p"]}], ")"}], "2"], "+", 
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"-", 
                 RowBox[{"Cos", "[", 
                  SubscriptBox["\[Theta]", "p"], "]"}]}], " ", 
                SubscriptBox["h", "p"]}], "-", 
               RowBox[{
                RowBox[{"Sin", "[", 
                 SubscriptBox["\[Theta]", "p"], "]"}], " ", 
                SubscriptBox["w", "p"]}], "+", 
               SubscriptBox["y", "2"], "-", 
               SubscriptBox["y", "p"]}], ")"}], "2"]}]]]}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"-", 
           RowBox[{"Cos", "[", 
            SubscriptBox["\[Theta]", "p"], "]"}]}], " ", 
          SubscriptBox["h", "p"]}], "-", 
         RowBox[{
          RowBox[{"Sin", "[", 
           SubscriptBox["\[Theta]", "p"], "]"}], " ", 
          SubscriptBox["w", "p"]}], "+", 
         SubscriptBox["y", "2"], "-", 
         SubscriptBox["y", "p"]}], ")"}]}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{"-", "\[Alpha]"}], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          SubscriptBox["w", "p"], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"-", 
              RowBox[{"Sin", "[", 
               SubscriptBox["\[Theta]", "p"], "]"}]}], " ", 
             RowBox[{"(", 
              RowBox[{
               SubscriptBox["x", "1"], "-", 
               SubscriptBox["x", "p"]}], ")"}]}], "+", 
            RowBox[{
             RowBox[{"Cos", "[", 
              SubscriptBox["\[Theta]", "p"], "]"}], " ", 
             RowBox[{"(", 
              RowBox[{
               SubscriptBox["y", "1"], "-", 
               SubscriptBox["y", "p"]}], ")"}]}]}], ")"}]}], "+", 
         RowBox[{
          SubscriptBox["h", "p"], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"Cos", "[", 
              SubscriptBox["\[Theta]", "p"], "]"}], " ", 
             RowBox[{"(", 
              RowBox[{
               SubscriptBox["x", "1"], "-", 
               SubscriptBox["x", "p"]}], ")"}]}], "+", 
            RowBox[{
             RowBox[{"Sin", "[", 
              SubscriptBox["\[Theta]", "p"], "]"}], " ", 
             RowBox[{"(", 
              RowBox[{
               SubscriptBox["y", "1"], "-", 
               SubscriptBox["y", "p"]}], ")"}]}]}], ")"}]}]}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{"1", "-", 
         FractionBox["1", 
          SqrtBox[
           RowBox[{
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"Sin", "[", 
                 SubscriptBox["\[Theta]", "p"], "]"}], " ", 
                SubscriptBox["h", "p"]}], "+", 
               RowBox[{
                RowBox[{"Cos", "[", 
                 SubscriptBox["\[Theta]", "p"], "]"}], " ", 
                SubscriptBox["w", "p"]}], "+", 
               SubscriptBox["x", "1"], "-", 
               SubscriptBox["x", "p"]}], ")"}], "2"], "+", 
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"-", 
                 RowBox[{"Cos", "[", 
                  SubscriptBox["\[Theta]", "p"], "]"}]}], " ", 
                SubscriptBox["h", "p"]}], "+", 
               RowBox[{
                RowBox[{"Sin", "[", 
                 SubscriptBox["\[Theta]", "p"], "]"}], " ", 
                SubscriptBox["w", "p"]}], "+", 
               SubscriptBox["y", "1"], "-", 
               SubscriptBox["y", "p"]}], ")"}], "2"]}]]]}], ")"}]}], "-", 
      RowBox[{"\[Alpha]", " ", 
       RowBox[{"(", 
        RowBox[{"1", "-", 
         FractionBox["1", 
          SqrtBox[
           RowBox[{
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"Sin", "[", 
                 SubscriptBox["\[Theta]", "p"], "]"}], " ", 
                SubscriptBox["h", "p"]}], "-", 
               RowBox[{
                RowBox[{"Cos", "[", 
                 SubscriptBox["\[Theta]", "p"], "]"}], " ", 
                SubscriptBox["w", "p"]}], "+", 
               SubscriptBox["x", "2"], "-", 
               SubscriptBox["x", "p"]}], ")"}], "2"], "+", 
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"-", 
                 RowBox[{"Cos", "[", 
                  SubscriptBox["\[Theta]", "p"], "]"}]}], " ", 
                SubscriptBox["h", "p"]}], "-", 
               RowBox[{
                RowBox[{"Sin", "[", 
                 SubscriptBox["\[Theta]", "p"], "]"}], " ", 
                SubscriptBox["w", "p"]}], "+", 
               SubscriptBox["y", "2"], "-", 
               SubscriptBox["y", "p"]}], ")"}], "2"]}]]]}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          SubscriptBox["h", "p"], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"Cos", "[", 
              SubscriptBox["\[Theta]", "p"], "]"}], " ", 
             RowBox[{"(", 
              RowBox[{
               SubscriptBox["x", "2"], "-", 
               SubscriptBox["x", "p"]}], ")"}]}], "+", 
            RowBox[{
             RowBox[{"Sin", "[", 
              SubscriptBox["\[Theta]", "p"], "]"}], " ", 
             RowBox[{"(", 
              RowBox[{
               SubscriptBox["y", "2"], "-", 
               SubscriptBox["y", "p"]}], ")"}]}]}], ")"}]}], "+", 
         RowBox[{
          SubscriptBox["w", "p"], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"Sin", "[", 
              SubscriptBox["\[Theta]", "p"], "]"}], " ", 
             RowBox[{"(", 
              RowBox[{
               SubscriptBox["x", "2"], "-", 
               SubscriptBox["x", "p"]}], ")"}]}], "+", 
            RowBox[{
             RowBox[{"Cos", "[", 
              SubscriptBox["\[Theta]", "p"], "]"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", 
                SubscriptBox["y", "2"]}], "+", 
               SubscriptBox["y", "p"]}], ")"}]}]}], ")"}]}]}], ")"}]}]}], 
     "}"}]}], "}"}]}]], "Output",
 CellChangeTimes->{{3.714453735637596*^9, 3.714453847136096*^9}, {
   3.714453914190747*^9, 3.7144539743302917`*^9}, {3.7144540552494636`*^9, 
   3.7144540609095993`*^9}, {3.714487559431198*^9, 3.7144876141847486`*^9}, {
   3.71448767321735*^9, 3.714487683246559*^9}, {3.7149050871327753`*^9, 
   3.7149051327692537`*^9}, 3.714905163847361*^9, {3.714905209097106*^9, 
   3.7149052587861977`*^9}, {3.7151942709882793`*^9, 3.715194297444499*^9}, 
   3.7151944385009565`*^9, 3.7151964635624332`*^9}],

Cell[BoxData[
 FormBox[
  RowBox[{
   RowBox[{"(", "\[NoBreak]", GridBox[{
      {
       SuperscriptBox[
        SubscriptBox["x", "p"], "\[Prime]\[Prime]",
        MultilineFunction->None]},
      {
       SuperscriptBox[
        SubscriptBox["y", "p"], "\[Prime]\[Prime]",
        MultilineFunction->None]},
      {
       SuperscriptBox[
        SubscriptBox["\[Theta]", "p"], "\[Prime]\[Prime]",
        MultilineFunction->None]}
     },
     GridBoxAlignment->{
      "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}},
        "RowsIndexed" -> {}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.7]}, 
         Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
         Offset[0.2], {
          Offset[0.4]}, 
         Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}], 
   "\[LongEqual]", 
   RowBox[{"(", "\[NoBreak]", GridBox[{
      {
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"sin", "(", 
             SubscriptBox["\[Theta]", "p"], ")"}], " ", 
            SubscriptBox["h", "p"]}], "+", 
           RowBox[{
            RowBox[{"cos", "(", 
             SubscriptBox["\[Theta]", "p"], ")"}], " ", 
            SubscriptBox["w", "p"]}], "+", 
           SubscriptBox["x", "1"], "-", 
           SubscriptBox["x", "p"]}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{"1", "-", 
           FractionBox["1", 
            SqrtBox[
             RowBox[{
              SuperscriptBox[
               RowBox[{"(", 
                RowBox[{
                 RowBox[{
                  RowBox[{"sin", "(", 
                   SubscriptBox["\[Theta]", "p"], ")"}], " ", 
                  SubscriptBox["h", "p"]}], "+", 
                 RowBox[{
                  RowBox[{"cos", "(", 
                   SubscriptBox["\[Theta]", "p"], ")"}], " ", 
                  SubscriptBox["w", "p"]}], "+", 
                 SubscriptBox["x", "1"], "-", 
                 SubscriptBox["x", "p"]}], ")"}], "2"], "+", 
              SuperscriptBox[
               RowBox[{"(", 
                RowBox[{
                 RowBox[{
                  RowBox[{"-", 
                   RowBox[{"cos", "(", 
                    SubscriptBox["\[Theta]", "p"], ")"}]}], " ", 
                  SubscriptBox["h", "p"]}], "+", 
                 RowBox[{
                  RowBox[{"sin", "(", 
                   SubscriptBox["\[Theta]", "p"], ")"}], " ", 
                  SubscriptBox["w", "p"]}], "+", 
                 SubscriptBox["y", "1"], "-", 
                 SubscriptBox["y", "p"]}], ")"}], "2"]}]]]}], ")"}]}], "+", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"sin", "(", 
             SubscriptBox["\[Theta]", "p"], ")"}], " ", 
            SubscriptBox["h", "p"]}], "-", 
           RowBox[{
            RowBox[{"cos", "(", 
             SubscriptBox["\[Theta]", "p"], ")"}], " ", 
            SubscriptBox["w", "p"]}], "+", 
           SubscriptBox["x", "2"], "-", 
           SubscriptBox["x", "p"]}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{"1", "-", 
           FractionBox["1", 
            SqrtBox[
             RowBox[{
              SuperscriptBox[
               RowBox[{"(", 
                RowBox[{
                 RowBox[{
                  RowBox[{"sin", "(", 
                   SubscriptBox["\[Theta]", "p"], ")"}], " ", 
                  SubscriptBox["h", "p"]}], "-", 
                 RowBox[{
                  RowBox[{"cos", "(", 
                   SubscriptBox["\[Theta]", "p"], ")"}], " ", 
                  SubscriptBox["w", "p"]}], "+", 
                 SubscriptBox["x", "2"], "-", 
                 SubscriptBox["x", "p"]}], ")"}], "2"], "+", 
              SuperscriptBox[
               RowBox[{"(", 
                RowBox[{
                 RowBox[{
                  RowBox[{"-", 
                   RowBox[{"cos", "(", 
                    SubscriptBox["\[Theta]", "p"], ")"}]}], " ", 
                  SubscriptBox["h", "p"]}], "-", 
                 RowBox[{
                  RowBox[{"sin", "(", 
                   SubscriptBox["\[Theta]", "p"], ")"}], " ", 
                  SubscriptBox["w", "p"]}], "+", 
                 SubscriptBox["y", "2"], "-", 
                 SubscriptBox["y", "p"]}], ")"}], "2"]}]]]}], ")"}]}]}]},
      {
       RowBox[{
        RowBox[{"-", "\[Gamma]"}], "+", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"1", "-", 
           FractionBox["1", 
            SqrtBox[
             RowBox[{
              SuperscriptBox[
               RowBox[{"(", 
                RowBox[{
                 RowBox[{
                  RowBox[{"sin", "(", 
                   SubscriptBox["\[Theta]", "p"], ")"}], " ", 
                  SubscriptBox["h", "p"]}], "+", 
                 RowBox[{
                  RowBox[{"cos", "(", 
                   SubscriptBox["\[Theta]", "p"], ")"}], " ", 
                  SubscriptBox["w", "p"]}], "+", 
                 SubscriptBox["x", "1"], "-", 
                 SubscriptBox["x", "p"]}], ")"}], "2"], "+", 
              SuperscriptBox[
               RowBox[{"(", 
                RowBox[{
                 RowBox[{
                  RowBox[{"-", 
                   RowBox[{"cos", "(", 
                    SubscriptBox["\[Theta]", "p"], ")"}]}], " ", 
                  SubscriptBox["h", "p"]}], "+", 
                 RowBox[{
                  RowBox[{"sin", "(", 
                   SubscriptBox["\[Theta]", "p"], ")"}], " ", 
                  SubscriptBox["w", "p"]}], "+", 
                 SubscriptBox["y", "1"], "-", 
                 SubscriptBox["y", "p"]}], ")"}], "2"]}]]]}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"-", 
             RowBox[{"cos", "(", 
              SubscriptBox["\[Theta]", "p"], ")"}]}], " ", 
            SubscriptBox["h", "p"]}], "+", 
           RowBox[{
            RowBox[{"sin", "(", 
             SubscriptBox["\[Theta]", "p"], ")"}], " ", 
            SubscriptBox["w", "p"]}], "+", 
           SubscriptBox["y", "1"], "-", 
           SubscriptBox["y", "p"]}], ")"}]}], "+", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"1", "-", 
           FractionBox["1", 
            SqrtBox[
             RowBox[{
              SuperscriptBox[
               RowBox[{"(", 
                RowBox[{
                 RowBox[{
                  RowBox[{"sin", "(", 
                   SubscriptBox["\[Theta]", "p"], ")"}], " ", 
                  SubscriptBox["h", "p"]}], "-", 
                 RowBox[{
                  RowBox[{"cos", "(", 
                   SubscriptBox["\[Theta]", "p"], ")"}], " ", 
                  SubscriptBox["w", "p"]}], "+", 
                 SubscriptBox["x", "2"], "-", 
                 SubscriptBox["x", "p"]}], ")"}], "2"], "+", 
              SuperscriptBox[
               RowBox[{"(", 
                RowBox[{
                 RowBox[{
                  RowBox[{"-", 
                   RowBox[{"cos", "(", 
                    SubscriptBox["\[Theta]", "p"], ")"}]}], " ", 
                  SubscriptBox["h", "p"]}], "-", 
                 RowBox[{
                  RowBox[{"sin", "(", 
                   SubscriptBox["\[Theta]", "p"], ")"}], " ", 
                  SubscriptBox["w", "p"]}], "+", 
                 SubscriptBox["y", "2"], "-", 
                 SubscriptBox["y", "p"]}], ")"}], "2"]}]]]}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"-", 
             RowBox[{"cos", "(", 
              SubscriptBox["\[Theta]", "p"], ")"}]}], " ", 
            SubscriptBox["h", "p"]}], "-", 
           RowBox[{
            RowBox[{"sin", "(", 
             SubscriptBox["\[Theta]", "p"], ")"}], " ", 
            SubscriptBox["w", "p"]}], "+", 
           SubscriptBox["y", "2"], "-", 
           SubscriptBox["y", "p"]}], ")"}]}]}]},
      {
       RowBox[{
        RowBox[{
         RowBox[{"-", "\[Alpha]"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            SubscriptBox["w", "p"], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"cos", "(", 
                SubscriptBox["\[Theta]", "p"], ")"}], " ", 
               RowBox[{"(", 
                RowBox[{
                 SubscriptBox["y", "1"], "-", 
                 SubscriptBox["y", "p"]}], ")"}]}], "-", 
              RowBox[{
               RowBox[{"sin", "(", 
                SubscriptBox["\[Theta]", "p"], ")"}], " ", 
               RowBox[{"(", 
                RowBox[{
                 SubscriptBox["x", "1"], "-", 
                 SubscriptBox["x", "p"]}], ")"}]}]}], ")"}]}], "+", 
           RowBox[{
            SubscriptBox["h", "p"], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"cos", "(", 
                SubscriptBox["\[Theta]", "p"], ")"}], " ", 
               RowBox[{"(", 
                RowBox[{
                 SubscriptBox["x", "1"], "-", 
                 SubscriptBox["x", "p"]}], ")"}]}], "+", 
              RowBox[{
               RowBox[{"sin", "(", 
                SubscriptBox["\[Theta]", "p"], ")"}], " ", 
               RowBox[{"(", 
                RowBox[{
                 SubscriptBox["y", "1"], "-", 
                 SubscriptBox["y", "p"]}], ")"}]}]}], ")"}]}]}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{"1", "-", 
           FractionBox["1", 
            SqrtBox[
             RowBox[{
              SuperscriptBox[
               RowBox[{"(", 
                RowBox[{
                 RowBox[{
                  RowBox[{"sin", "(", 
                   SubscriptBox["\[Theta]", "p"], ")"}], " ", 
                  SubscriptBox["h", "p"]}], "+", 
                 RowBox[{
                  RowBox[{"cos", "(", 
                   SubscriptBox["\[Theta]", "p"], ")"}], " ", 
                  SubscriptBox["w", "p"]}], "+", 
                 SubscriptBox["x", "1"], "-", 
                 SubscriptBox["x", "p"]}], ")"}], "2"], "+", 
              SuperscriptBox[
               RowBox[{"(", 
                RowBox[{
                 RowBox[{
                  RowBox[{"-", 
                   RowBox[{"cos", "(", 
                    SubscriptBox["\[Theta]", "p"], ")"}]}], " ", 
                  SubscriptBox["h", "p"]}], "+", 
                 RowBox[{
                  RowBox[{"sin", "(", 
                   SubscriptBox["\[Theta]", "p"], ")"}], " ", 
                  SubscriptBox["w", "p"]}], "+", 
                 SubscriptBox["y", "1"], "-", 
                 SubscriptBox["y", "p"]}], ")"}], "2"]}]]]}], ")"}]}], "-", 
        RowBox[{"\[Alpha]", " ", 
         RowBox[{"(", 
          RowBox[{"1", "-", 
           FractionBox["1", 
            SqrtBox[
             RowBox[{
              SuperscriptBox[
               RowBox[{"(", 
                RowBox[{
                 RowBox[{
                  RowBox[{"sin", "(", 
                   SubscriptBox["\[Theta]", "p"], ")"}], " ", 
                  SubscriptBox["h", "p"]}], "-", 
                 RowBox[{
                  RowBox[{"cos", "(", 
                   SubscriptBox["\[Theta]", "p"], ")"}], " ", 
                  SubscriptBox["w", "p"]}], "+", 
                 SubscriptBox["x", "2"], "-", 
                 SubscriptBox["x", "p"]}], ")"}], "2"], "+", 
              SuperscriptBox[
               RowBox[{"(", 
                RowBox[{
                 RowBox[{
                  RowBox[{"-", 
                   RowBox[{"cos", "(", 
                    SubscriptBox["\[Theta]", "p"], ")"}]}], " ", 
                  SubscriptBox["h", "p"]}], "-", 
                 RowBox[{
                  RowBox[{"sin", "(", 
                   SubscriptBox["\[Theta]", "p"], ")"}], " ", 
                  SubscriptBox["w", "p"]}], "+", 
                 SubscriptBox["y", "2"], "-", 
                 SubscriptBox["y", "p"]}], ")"}], "2"]}]]]}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            SubscriptBox["h", "p"], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"cos", "(", 
                SubscriptBox["\[Theta]", "p"], ")"}], " ", 
               RowBox[{"(", 
                RowBox[{
                 SubscriptBox["x", "2"], "-", 
                 SubscriptBox["x", "p"]}], ")"}]}], "+", 
              RowBox[{
               RowBox[{"sin", "(", 
                SubscriptBox["\[Theta]", "p"], ")"}], " ", 
               RowBox[{"(", 
                RowBox[{
                 SubscriptBox["y", "2"], "-", 
                 SubscriptBox["y", "p"]}], ")"}]}]}], ")"}]}], "+", 
           RowBox[{
            SubscriptBox["w", "p"], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"sin", "(", 
                SubscriptBox["\[Theta]", "p"], ")"}], " ", 
               RowBox[{"(", 
                RowBox[{
                 SubscriptBox["x", "2"], "-", 
                 SubscriptBox["x", "p"]}], ")"}]}], "+", 
              RowBox[{
               RowBox[{"cos", "(", 
                SubscriptBox["\[Theta]", "p"], ")"}], " ", 
               RowBox[{"(", 
                RowBox[{
                 SubscriptBox["y", "p"], "-", 
                 SubscriptBox["y", "2"]}], ")"}]}]}], ")"}]}]}], ")"}]}]}]}
     },
     GridBoxAlignment->{
      "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}},
        "RowsIndexed" -> {}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.7]}, 
         Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
         Offset[0.2], {
          Offset[0.4]}, 
         Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}]}], 
  TraditionalForm]], "Output",
 CellChangeTimes->{{3.714453735637596*^9, 3.714453847136096*^9}, {
   3.714453914190747*^9, 3.7144539743302917`*^9}, {3.7144540552494636`*^9, 
   3.7144540609095993`*^9}, {3.714487559431198*^9, 3.7144876141847486`*^9}, {
   3.71448767321735*^9, 3.714487683246559*^9}, {3.7149050871327753`*^9, 
   3.7149051327692537`*^9}, 3.714905163847361*^9, {3.714905209097106*^9, 
   3.7149052587861977`*^9}, {3.7151942709882793`*^9, 3.715194297444499*^9}, 
   3.7151944385009565`*^9, 3.715196463589449*^9}]
}, Open  ]],

Cell[" ", "Text",
 Editable->False,
 Selectable->False,
 CellFrame->{{0, 0}, {0, 0.5}},
 ShowCellBracket->False,
 CellMargins->{{0, 0}, {1, 1}},
 CellElementSpacings->{"CellMinHeight"->1},
 CellFrameMargins->0,
 CellFrameColor->RGBColor[0, 0, 1],
 CellSize->{Inherited, 3}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"numerics", "=", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{
     SubscriptBox["h", "p"], "\[Rule]", "0.1"}], ",", 
    RowBox[{
     SubscriptBox["w", "p"], "\[Rule]", "1"}], ",", 
    RowBox[{
     RowBox[{
      SubscriptBox["x", "1"], "[", "t", "]"}], "\[Rule]", "0"}], ",", 
    RowBox[{
     RowBox[{
      SubscriptBox["y", "1"], "[", "t", "]"}], "\[Rule]", "0"}], ",", 
    RowBox[{
     RowBox[{
      SubscriptBox["x", "2"], "[", "t", "]"}], "\[Rule]", 
     RowBox[{"2", 
      SubscriptBox["w", "p"]}]}], ",", 
    RowBox[{
     RowBox[{
      SubscriptBox["y", "2"], "[", "t", "]"}], "\[Rule]", "0"}], ",", 
    RowBox[{"\[Alpha]", "\[Rule]", "0.04"}], ",", 
    RowBox[{"\[Gamma]", "\[Rule]", "2"}]}], "}"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"EOM", "//.", "greekTermsSymetricCase"}], "//.", "numerics"}], "//",
    "Flatten"}], "//", "TraditionalForm"}]}], "Input",
 CellChangeTimes->{{3.714905364664805*^9, 3.7149054956350822`*^9}, {
  3.714905529255147*^9, 3.7149055385953455`*^9}, {3.7151943222139096`*^9, 
  3.7151943267088933`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    SubscriptBox["h", "p"], "\[Rule]", "0.1`"}], ",", 
   RowBox[{
    SubscriptBox["w", "p"], "\[Rule]", "1"}], ",", 
   RowBox[{
    RowBox[{
     SubscriptBox["x", "1"], "[", "t", "]"}], "\[Rule]", "0"}], ",", 
   RowBox[{
    RowBox[{
     SubscriptBox["y", "1"], "[", "t", "]"}], "\[Rule]", "0"}], ",", 
   RowBox[{
    RowBox[{
     SubscriptBox["x", "2"], "[", "t", "]"}], "\[Rule]", 
    RowBox[{"2", " ", 
     SubscriptBox["w", "p"]}]}], ",", 
   RowBox[{
    RowBox[{
     SubscriptBox["y", "2"], "[", "t", "]"}], "\[Rule]", "0"}], ",", 
   RowBox[{"\[Alpha]", "\[Rule]", "0.04`"}], ",", 
   RowBox[{"\[Gamma]", "\[Rule]", "2"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.714905378777268*^9, 3.7149054040869217`*^9}, 
   3.714905437488462*^9, {3.714905471967207*^9, 3.714905497271117*^9}, 
   3.714905539307361*^9, 3.7151964776217465`*^9}],

Cell[BoxData[
 FormBox[
  RowBox[{
   RowBox[{"(", "\[NoBreak]", GridBox[{
      {
       RowBox[{
        SuperscriptBox[
         SubscriptBox["x", "p"], "\[Prime]\[Prime]",
         MultilineFunction->None], "(", "t", ")"}]},
      {
       RowBox[{
        SuperscriptBox[
         SubscriptBox["y", "p"], "\[Prime]\[Prime]",
         MultilineFunction->None], "(", "t", ")"}]},
      {
       RowBox[{
        SuperscriptBox[
         SubscriptBox["\[Theta]", "p"], "\[Prime]\[Prime]",
         MultilineFunction->None], "(", "t", ")"}]}
     },
     GridBoxAlignment->{
      "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}},
        "RowsIndexed" -> {}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.7]}, 
         Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
         Offset[0.2], {
          Offset[0.4]}, 
         Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}], 
   "\[LongEqual]", 
   RowBox[{"(", "\[NoBreak]", GridBox[{
      {
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", 
            RowBox[{"cos", "(", 
             RowBox[{
              SubscriptBox["\[Theta]", "p"], "(", "t", ")"}], ")"}]}], "+", 
           RowBox[{"0.1`", " ", 
            RowBox[{"sin", "(", 
             RowBox[{
              SubscriptBox["\[Theta]", "p"], "(", "t", ")"}], ")"}]}], "-", 
           RowBox[{
            SubscriptBox["x", "p"], "(", "t", ")"}], "+", "2"}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{"1", "-", 
           FractionBox["1", 
            SqrtBox[
             RowBox[{
              SuperscriptBox[
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", 
                  RowBox[{"cos", "(", 
                   RowBox[{
                    SubscriptBox["\[Theta]", "p"], "(", "t", ")"}], ")"}]}], 
                 "+", 
                 RowBox[{"0.1`", " ", 
                  RowBox[{"sin", "(", 
                   RowBox[{
                    SubscriptBox["\[Theta]", "p"], "(", "t", ")"}], ")"}]}], 
                 "-", 
                 RowBox[{
                  SubscriptBox["x", "p"], "(", "t", ")"}], "+", "2"}], ")"}], 
               "2"], "+", 
              SuperscriptBox[
               RowBox[{"(", 
                RowBox[{
                 RowBox[{
                  RowBox[{"-", "0.1`"}], " ", 
                  RowBox[{"cos", "(", 
                   RowBox[{
                    SubscriptBox["\[Theta]", "p"], "(", "t", ")"}], ")"}]}], 
                 "-", 
                 RowBox[{"sin", "(", 
                  RowBox[{
                   SubscriptBox["\[Theta]", "p"], "(", "t", ")"}], ")"}], "-", 
                 RowBox[{
                  SubscriptBox["y", "p"], "(", "t", ")"}]}], ")"}], 
               "2"]}]]]}], ")"}]}], "+", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"cos", "(", 
            RowBox[{
             SubscriptBox["\[Theta]", "p"], "(", "t", ")"}], ")"}], "+", 
           RowBox[{"0.1`", " ", 
            RowBox[{"sin", "(", 
             RowBox[{
              SubscriptBox["\[Theta]", "p"], "(", "t", ")"}], ")"}]}], "-", 
           RowBox[{
            SubscriptBox["x", "p"], "(", "t", ")"}]}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{"1", "-", 
           FractionBox["1", 
            SqrtBox[
             RowBox[{
              SuperscriptBox[
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"cos", "(", 
                  RowBox[{
                   SubscriptBox["\[Theta]", "p"], "(", "t", ")"}], ")"}], "+", 
                 RowBox[{"0.1`", " ", 
                  RowBox[{"sin", "(", 
                   RowBox[{
                    SubscriptBox["\[Theta]", "p"], "(", "t", ")"}], ")"}]}], 
                 "-", 
                 RowBox[{
                  SubscriptBox["x", "p"], "(", "t", ")"}]}], ")"}], "2"], "+", 
              SuperscriptBox[
               RowBox[{"(", 
                RowBox[{
                 RowBox[{
                  RowBox[{"-", "0.1`"}], " ", 
                  RowBox[{"cos", "(", 
                   RowBox[{
                    SubscriptBox["\[Theta]", "p"], "(", "t", ")"}], ")"}]}], 
                 "+", 
                 RowBox[{"sin", "(", 
                  RowBox[{
                   SubscriptBox["\[Theta]", "p"], "(", "t", ")"}], ")"}], "-", 
                 RowBox[{
                  SubscriptBox["y", "p"], "(", "t", ")"}]}], ")"}], 
               "2"]}]]]}], ")"}]}]}]},
      {
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{"1", "-", 
           FractionBox["1", 
            SqrtBox[
             RowBox[{
              SuperscriptBox[
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", 
                  RowBox[{"cos", "(", 
                   RowBox[{
                    SubscriptBox["\[Theta]", "p"], "(", "t", ")"}], ")"}]}], 
                 "+", 
                 RowBox[{"0.1`", " ", 
                  RowBox[{"sin", "(", 
                   RowBox[{
                    SubscriptBox["\[Theta]", "p"], "(", "t", ")"}], ")"}]}], 
                 "-", 
                 RowBox[{
                  SubscriptBox["x", "p"], "(", "t", ")"}], "+", "2"}], ")"}], 
               "2"], "+", 
              SuperscriptBox[
               RowBox[{"(", 
                RowBox[{
                 RowBox[{
                  RowBox[{"-", "0.1`"}], " ", 
                  RowBox[{"cos", "(", 
                   RowBox[{
                    SubscriptBox["\[Theta]", "p"], "(", "t", ")"}], ")"}]}], 
                 "-", 
                 RowBox[{"sin", "(", 
                  RowBox[{
                   SubscriptBox["\[Theta]", "p"], "(", "t", ")"}], ")"}], "-", 
                 RowBox[{
                  SubscriptBox["y", "p"], "(", "t", ")"}]}], ")"}], 
               "2"]}]]]}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"-", "0.1`"}], " ", 
            RowBox[{"cos", "(", 
             RowBox[{
              SubscriptBox["\[Theta]", "p"], "(", "t", ")"}], ")"}]}], "-", 
           RowBox[{"sin", "(", 
            RowBox[{
             SubscriptBox["\[Theta]", "p"], "(", "t", ")"}], ")"}], "-", 
           RowBox[{
            SubscriptBox["y", "p"], "(", "t", ")"}]}], ")"}]}], "+", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"1", "-", 
           FractionBox["1", 
            SqrtBox[
             RowBox[{
              SuperscriptBox[
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"cos", "(", 
                  RowBox[{
                   SubscriptBox["\[Theta]", "p"], "(", "t", ")"}], ")"}], "+", 
                 RowBox[{"0.1`", " ", 
                  RowBox[{"sin", "(", 
                   RowBox[{
                    SubscriptBox["\[Theta]", "p"], "(", "t", ")"}], ")"}]}], 
                 "-", 
                 RowBox[{
                  SubscriptBox["x", "p"], "(", "t", ")"}]}], ")"}], "2"], "+", 
              SuperscriptBox[
               RowBox[{"(", 
                RowBox[{
                 RowBox[{
                  RowBox[{"-", "0.1`"}], " ", 
                  RowBox[{"cos", "(", 
                   RowBox[{
                    SubscriptBox["\[Theta]", "p"], "(", "t", ")"}], ")"}]}], 
                 "+", 
                 RowBox[{"sin", "(", 
                  RowBox[{
                   SubscriptBox["\[Theta]", "p"], "(", "t", ")"}], ")"}], "-", 
                 RowBox[{
                  SubscriptBox["y", "p"], "(", "t", ")"}]}], ")"}], 
               "2"]}]]]}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"-", "0.1`"}], " ", 
            RowBox[{"cos", "(", 
             RowBox[{
              SubscriptBox["\[Theta]", "p"], "(", "t", ")"}], ")"}]}], "+", 
           RowBox[{"sin", "(", 
            RowBox[{
             SubscriptBox["\[Theta]", "p"], "(", "t", ")"}], ")"}], "-", 
           RowBox[{
            SubscriptBox["y", "p"], "(", "t", ")"}]}], ")"}]}], "-", "2"}]},
      {
       RowBox[{
        RowBox[{
         RowBox[{"-", "0.04`"}], " ", 
         RowBox[{"(", 
          RowBox[{"1", "-", 
           FractionBox["1", 
            SqrtBox[
             RowBox[{
              SuperscriptBox[
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", 
                  RowBox[{"cos", "(", 
                   RowBox[{
                    SubscriptBox["\[Theta]", "p"], "(", "t", ")"}], ")"}]}], 
                 "+", 
                 RowBox[{"0.1`", " ", 
                  RowBox[{"sin", "(", 
                   RowBox[{
                    SubscriptBox["\[Theta]", "p"], "(", "t", ")"}], ")"}]}], 
                 "-", 
                 RowBox[{
                  SubscriptBox["x", "p"], "(", "t", ")"}], "+", "2"}], ")"}], 
               "2"], "+", 
              SuperscriptBox[
               RowBox[{"(", 
                RowBox[{
                 RowBox[{
                  RowBox[{"-", "0.1`"}], " ", 
                  RowBox[{"cos", "(", 
                   RowBox[{
                    SubscriptBox["\[Theta]", "p"], "(", "t", ")"}], ")"}]}], 
                 "-", 
                 RowBox[{"sin", "(", 
                  RowBox[{
                   SubscriptBox["\[Theta]", "p"], "(", "t", ")"}], ")"}], "-", 
                 RowBox[{
                  SubscriptBox["y", "p"], "(", "t", ")"}]}], ")"}], 
               "2"]}]]]}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"sin", "(", 
             RowBox[{
              SubscriptBox["\[Theta]", "p"], "(", "t", ")"}], ")"}], " ", 
            RowBox[{"(", 
             RowBox[{"2", "-", 
              RowBox[{
               SubscriptBox["x", "p"], "(", "t", ")"}]}], ")"}]}], "+", 
           RowBox[{
            RowBox[{"cos", "(", 
             RowBox[{
              SubscriptBox["\[Theta]", "p"], "(", "t", ")"}], ")"}], " ", 
            RowBox[{
             SubscriptBox["y", "p"], "(", "t", ")"}]}], "+", 
           RowBox[{"0.1`", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"cos", "(", 
                RowBox[{
                 SubscriptBox["\[Theta]", "p"], "(", "t", ")"}], ")"}], " ", 
               RowBox[{"(", 
                RowBox[{"2", "-", 
                 RowBox[{
                  SubscriptBox["x", "p"], "(", "t", ")"}]}], ")"}]}], "-", 
              RowBox[{
               RowBox[{"sin", "(", 
                RowBox[{
                 SubscriptBox["\[Theta]", "p"], "(", "t", ")"}], ")"}], " ", 
               RowBox[{
                SubscriptBox["y", "p"], "(", "t", ")"}]}]}], ")"}]}]}], 
          ")"}]}], "-", 
        RowBox[{"0.04`", " ", 
         RowBox[{"(", 
          RowBox[{"1", "-", 
           FractionBox["1", 
            SqrtBox[
             RowBox[{
              SuperscriptBox[
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"cos", "(", 
                  RowBox[{
                   SubscriptBox["\[Theta]", "p"], "(", "t", ")"}], ")"}], "+", 
                 RowBox[{"0.1`", " ", 
                  RowBox[{"sin", "(", 
                   RowBox[{
                    SubscriptBox["\[Theta]", "p"], "(", "t", ")"}], ")"}]}], 
                 "-", 
                 RowBox[{
                  SubscriptBox["x", "p"], "(", "t", ")"}]}], ")"}], "2"], "+", 
              SuperscriptBox[
               RowBox[{"(", 
                RowBox[{
                 RowBox[{
                  RowBox[{"-", "0.1`"}], " ", 
                  RowBox[{"cos", "(", 
                   RowBox[{
                    SubscriptBox["\[Theta]", "p"], "(", "t", ")"}], ")"}]}], 
                 "+", 
                 RowBox[{"sin", "(", 
                  RowBox[{
                   SubscriptBox["\[Theta]", "p"], "(", "t", ")"}], ")"}], "-", 
                 RowBox[{
                  SubscriptBox["y", "p"], "(", "t", ")"}]}], ")"}], 
               "2"]}]]]}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"sin", "(", 
             RowBox[{
              SubscriptBox["\[Theta]", "p"], "(", "t", ")"}], ")"}], " ", 
            RowBox[{
             SubscriptBox["x", "p"], "(", "t", ")"}]}], "-", 
           RowBox[{
            RowBox[{"cos", "(", 
             RowBox[{
              SubscriptBox["\[Theta]", "p"], "(", "t", ")"}], ")"}], " ", 
            RowBox[{
             SubscriptBox["y", "p"], "(", "t", ")"}]}], "+", 
           RowBox[{"0.1`", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"-", 
                RowBox[{"cos", "(", 
                 RowBox[{
                  SubscriptBox["\[Theta]", "p"], "(", "t", ")"}], ")"}]}], 
               " ", 
               RowBox[{
                SubscriptBox["x", "p"], "(", "t", ")"}]}], "-", 
              RowBox[{
               RowBox[{"sin", "(", 
                RowBox[{
                 SubscriptBox["\[Theta]", "p"], "(", "t", ")"}], ")"}], " ", 
               RowBox[{
                SubscriptBox["y", "p"], "(", "t", ")"}]}]}], ")"}]}]}], 
          ")"}]}]}]}
     },
     GridBoxAlignment->{
      "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}},
        "RowsIndexed" -> {}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.7]}, 
         Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
         Offset[0.2], {
          Offset[0.4]}, 
         Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}]}], 
  TraditionalForm]], "Output",
 CellChangeTimes->{{3.714905378777268*^9, 3.7149054040869217`*^9}, 
   3.714905437488462*^9, {3.714905471967207*^9, 3.714905497271117*^9}, 
   3.714905539307361*^9, 3.71519647764176*^9}]
}, Open  ]],

Cell[" ", "Text",
 Editable->False,
 Selectable->False,
 CellFrame->{{0, 0}, {0, 0.5}},
 ShowCellBracket->False,
 CellMargins->{{0, 0}, {1, 1}},
 CellElementSpacings->{"CellMinHeight"->1},
 CellFrameMargins->0,
 CellFrameColor->RGBColor[0, 0, 1],
 CellSize->{Inherited, 3}],

Cell[" ", "Text",
 Editable->False,
 Selectable->False,
 CellFrame->{{0, 0}, {0, 2}},
 ShowCellBracket->False,
 CellMargins->{{0, 0}, {1, 1}},
 CellElementSpacings->{"CellMinHeight"->1},
 CellFrameMargins->0,
 CellFrameColor->RGBColor[0, 0, 1],
 CellSize->{Inherited, 4}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"EquibInputConditions", "=", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{
     RowBox[{
      SubscriptBox["x", "1"], "[", "t", "]"}], "\[Rule]", "0"}], ",", 
    RowBox[{
     RowBox[{
      SubscriptBox["y", "1"], "[", "t", "]"}], "\[Rule]", "0"}], ",", 
    RowBox[{
     RowBox[{
      SubscriptBox["x", "2"], "[", "t", "]"}], "\[Rule]", 
     RowBox[{"2", " ", 
      SubscriptBox["w", "p"]}]}], ",", 
    RowBox[{
     RowBox[{
      SubscriptBox["y", "2"], "[", "t", "]"}], "\[Rule]", 
     RowBox[{
      SubscriptBox["y", "1"], "[", "t", "]"}]}]}], "}"}]}]], "Input",
 CellChangeTimes->{{3.7144542274371877`*^9, 3.714454233992959*^9}, {
   3.7144885653756685`*^9, 3.714488615202901*^9}, {3.714488655868425*^9, 
   3.714488666945746*^9}, {3.714500851158784*^9, 3.7145009061293116`*^9}, 
   3.714557558677371*^9, {3.714558012696953*^9, 3.714558042316923*^9}, 
   3.714558089518324*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{
     SubscriptBox["x", "1"], "[", "t", "]"}], "\[Rule]", "0"}], ",", 
   RowBox[{
    RowBox[{
     SubscriptBox["y", "1"], "[", "t", "]"}], "\[Rule]", "0"}], ",", 
   RowBox[{
    RowBox[{
     SubscriptBox["x", "2"], "[", "t", "]"}], "\[Rule]", 
    RowBox[{"2", " ", 
     SubscriptBox["w", "p"]}]}], ",", 
   RowBox[{
    RowBox[{
     SubscriptBox["y", "2"], "[", "t", "]"}], "\[Rule]", 
    RowBox[{
     SubscriptBox["y", "1"], "[", "t", "]"}]}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.7144886177549553`*^9, 3.714488669069767*^9, 3.714500935062709*^9, 
   3.7145575604065228`*^9, 3.714557959931487*^9, {3.7145580231198874`*^9, 
   3.7145580430514174`*^9}, 3.714558106822803*^9, 3.7151944958580227`*^9, 
   3.715196486614707*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"(", 
    RowBox[{"SymetricEquib", "=", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"EOM", "/.", "nameChange"}], "/.", "greekTermsSymetricCase"}],
        "/.", "equibTerms"}], "//.", "EquibInputConditions"}]}], ")"}], "//", 
   "MatrixForm"}], "//", "TraditionalForm"}]], "Input",
 CellChangeTimes->{{3.714454096231372*^9, 3.7144541165889826`*^9}, {
   3.7144886393920555`*^9, 3.7144887039593287`*^9}, {3.714500969997345*^9, 
   3.714500977397519*^9}, 3.7145010310150747`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ReplaceAll", "::", "reps"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\({equibTerms}\\)\[NoBreak] is neither a \
list of replacement rules nor a valid dispatch table, and so cannot be used \
for replacing. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/ReplaceAll/reps\\\", ButtonNote -> \
\\\"ReplaceAll::reps\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.7151964946200094`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ReplaceAll", "::", "reps"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\({equibTerms}\\)\[NoBreak] is neither a \
list of replacement rules nor a valid dispatch table, and so cannot be used \
for replacing. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/ReplaceAll/reps\\\", ButtonNote -> \
\\\"ReplaceAll::reps\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.7151964946640387`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ReplaceAll", "::", "reps"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\({equibTerms}\\)\[NoBreak] is neither a \
list of replacement rules nor a valid dispatch table, and so cannot be used \
for replacing. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/ReplaceAll/reps\\\", ButtonNote -> \
\\\"ReplaceAll::reps\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.715196494708069*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \
\[NoBreak]\\!\\(\\*StyleBox[\\(ReplaceAll :: reps\\), \\\"MessageName\\\"]\\)\
\[NoBreak] will be suppressed during this calculation. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/stop\\\", \
ButtonNote -> \\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.715196494750097*^9}],

Cell[BoxData[
 FormBox[
  TagBox[
   RowBox[{
    RowBox[{
     RowBox[{"(", "\[NoBreak]", GridBox[{
        {
         RowBox[{
          SuperscriptBox[
           SubscriptBox["x", "p"], "\[Prime]\[Prime]",
           MultilineFunction->None], "(", "t", ")"}]},
        {
         RowBox[{
          SuperscriptBox[
           SubscriptBox["y", "p"], "\[Prime]\[Prime]",
           MultilineFunction->None], "(", "t", ")"}]},
        {
         RowBox[{
          SuperscriptBox[
           SubscriptBox["\[Theta]", "p"], "\[Prime]\[Prime]",
           MultilineFunction->None], "(", "t", ")"}]}
       },
       GridBoxAlignment->{
        "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
         "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
       GridBoxSpacings->{"Columns" -> {
           Offset[0.27999999999999997`], {
            Offset[0.7]}, 
           Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
           Offset[0.2], {
            Offset[0.4]}, 
           Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}], 
     "\[LongEqual]", 
     RowBox[{"(", "\[NoBreak]", GridBox[{
        {
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              SubscriptBox["h", "p"], " ", 
              RowBox[{"sin", "(", 
               RowBox[{
                SubscriptBox["\[Theta]", "p"], "(", "t", ")"}], ")"}]}], "-", 
             RowBox[{
              SubscriptBox["w", "p"], " ", 
              RowBox[{"cos", "(", 
               RowBox[{
                SubscriptBox["\[Theta]", "p"], "(", "t", ")"}], ")"}]}], "-", 
             RowBox[{
              SubscriptBox["x", "p"], "(", "t", ")"}], "+", 
             RowBox[{"2", " ", 
              SubscriptBox["w", "p"]}]}], ")"}], " ", 
           RowBox[{"(", 
            RowBox[{"1", "-", 
             FractionBox["1", 
              SqrtBox[
               RowBox[{
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{
                    SubscriptBox["h", "p"], " ", 
                    RowBox[{"sin", "(", 
                    RowBox[{
                    SubscriptBox["\[Theta]", "p"], "(", "t", ")"}], ")"}]}], 
                   "-", 
                   RowBox[{
                    SubscriptBox["w", "p"], " ", 
                    RowBox[{"cos", "(", 
                    RowBox[{
                    SubscriptBox["\[Theta]", "p"], "(", "t", ")"}], ")"}]}], 
                   "-", 
                   RowBox[{
                    SubscriptBox["x", "p"], "(", "t", ")"}], "+", 
                   RowBox[{"2", " ", 
                    SubscriptBox["w", "p"]}]}], ")"}], "2"], "+", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{
                    SubscriptBox["h", "p"], " ", 
                    RowBox[{"(", 
                    RowBox[{"-", 
                    RowBox[{"cos", "(", 
                    RowBox[{
                    SubscriptBox["\[Theta]", "p"], "(", "t", ")"}], ")"}]}], 
                    ")"}]}], "-", 
                   RowBox[{
                    SubscriptBox["w", "p"], " ", 
                    RowBox[{"sin", "(", 
                    RowBox[{
                    SubscriptBox["\[Theta]", "p"], "(", "t", ")"}], ")"}]}], 
                   "-", 
                   RowBox[{
                    SubscriptBox["y", "p"], "(", "t", ")"}]}], ")"}], 
                 "2"]}]]]}], ")"}]}], "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              SubscriptBox["h", "p"], " ", 
              RowBox[{"sin", "(", 
               RowBox[{
                SubscriptBox["\[Theta]", "p"], "(", "t", ")"}], ")"}]}], "+", 
             RowBox[{
              SubscriptBox["w", "p"], " ", 
              RowBox[{"cos", "(", 
               RowBox[{
                SubscriptBox["\[Theta]", "p"], "(", "t", ")"}], ")"}]}], "-", 
             RowBox[{
              SubscriptBox["x", "p"], "(", "t", ")"}]}], ")"}], " ", 
           RowBox[{"(", 
            RowBox[{"1", "-", 
             FractionBox["1", 
              SqrtBox[
               RowBox[{
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{
                    SubscriptBox["h", "p"], " ", 
                    RowBox[{"sin", "(", 
                    RowBox[{
                    SubscriptBox["\[Theta]", "p"], "(", "t", ")"}], ")"}]}], 
                   "+", 
                   RowBox[{
                    SubscriptBox["w", "p"], " ", 
                    RowBox[{"cos", "(", 
                    RowBox[{
                    SubscriptBox["\[Theta]", "p"], "(", "t", ")"}], ")"}]}], 
                   "-", 
                   RowBox[{
                    SubscriptBox["x", "p"], "(", "t", ")"}]}], ")"}], "2"], 
                "+", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{
                    SubscriptBox["h", "p"], " ", 
                    RowBox[{"(", 
                    RowBox[{"-", 
                    RowBox[{"cos", "(", 
                    RowBox[{
                    SubscriptBox["\[Theta]", "p"], "(", "t", ")"}], ")"}]}], 
                    ")"}]}], "+", 
                   RowBox[{
                    SubscriptBox["w", "p"], " ", 
                    RowBox[{"sin", "(", 
                    RowBox[{
                    SubscriptBox["\[Theta]", "p"], "(", "t", ")"}], ")"}]}], 
                   "-", 
                   RowBox[{
                    SubscriptBox["y", "p"], "(", "t", ")"}]}], ")"}], 
                 "2"]}]]]}], ")"}]}]}]},
        {
         RowBox[{
          RowBox[{"-", "\[Gamma]"}], "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              SubscriptBox["h", "p"], " ", 
              RowBox[{"(", 
               RowBox[{"-", 
                RowBox[{"cos", "(", 
                 RowBox[{
                  SubscriptBox["\[Theta]", "p"], "(", "t", ")"}], ")"}]}], 
               ")"}]}], "-", 
             RowBox[{
              SubscriptBox["w", "p"], " ", 
              RowBox[{"sin", "(", 
               RowBox[{
                SubscriptBox["\[Theta]", "p"], "(", "t", ")"}], ")"}]}], "-", 
             RowBox[{
              SubscriptBox["y", "p"], "(", "t", ")"}]}], ")"}], " ", 
           RowBox[{"(", 
            RowBox[{"1", "-", 
             FractionBox["1", 
              SqrtBox[
               RowBox[{
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{
                    SubscriptBox["h", "p"], " ", 
                    RowBox[{"sin", "(", 
                    RowBox[{
                    SubscriptBox["\[Theta]", "p"], "(", "t", ")"}], ")"}]}], 
                   "-", 
                   RowBox[{
                    SubscriptBox["w", "p"], " ", 
                    RowBox[{"cos", "(", 
                    RowBox[{
                    SubscriptBox["\[Theta]", "p"], "(", "t", ")"}], ")"}]}], 
                   "-", 
                   RowBox[{
                    SubscriptBox["x", "p"], "(", "t", ")"}], "+", 
                   RowBox[{"2", " ", 
                    SubscriptBox["w", "p"]}]}], ")"}], "2"], "+", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{
                    SubscriptBox["h", "p"], " ", 
                    RowBox[{"(", 
                    RowBox[{"-", 
                    RowBox[{"cos", "(", 
                    RowBox[{
                    SubscriptBox["\[Theta]", "p"], "(", "t", ")"}], ")"}]}], 
                    ")"}]}], "-", 
                   RowBox[{
                    SubscriptBox["w", "p"], " ", 
                    RowBox[{"sin", "(", 
                    RowBox[{
                    SubscriptBox["\[Theta]", "p"], "(", "t", ")"}], ")"}]}], 
                   "-", 
                   RowBox[{
                    SubscriptBox["y", "p"], "(", "t", ")"}]}], ")"}], 
                 "2"]}]]]}], ")"}]}], "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              SubscriptBox["h", "p"], " ", 
              RowBox[{"(", 
               RowBox[{"-", 
                RowBox[{"cos", "(", 
                 RowBox[{
                  SubscriptBox["\[Theta]", "p"], "(", "t", ")"}], ")"}]}], 
               ")"}]}], "+", 
             RowBox[{
              SubscriptBox["w", "p"], " ", 
              RowBox[{"sin", "(", 
               RowBox[{
                SubscriptBox["\[Theta]", "p"], "(", "t", ")"}], ")"}]}], "-", 
             RowBox[{
              SubscriptBox["y", "p"], "(", "t", ")"}]}], ")"}], " ", 
           RowBox[{"(", 
            RowBox[{"1", "-", 
             FractionBox["1", 
              SqrtBox[
               RowBox[{
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{
                    SubscriptBox["h", "p"], " ", 
                    RowBox[{"sin", "(", 
                    RowBox[{
                    SubscriptBox["\[Theta]", "p"], "(", "t", ")"}], ")"}]}], 
                   "+", 
                   RowBox[{
                    SubscriptBox["w", "p"], " ", 
                    RowBox[{"cos", "(", 
                    RowBox[{
                    SubscriptBox["\[Theta]", "p"], "(", "t", ")"}], ")"}]}], 
                   "-", 
                   RowBox[{
                    SubscriptBox["x", "p"], "(", "t", ")"}]}], ")"}], "2"], 
                "+", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{
                    SubscriptBox["h", "p"], " ", 
                    RowBox[{"(", 
                    RowBox[{"-", 
                    RowBox[{"cos", "(", 
                    RowBox[{
                    SubscriptBox["\[Theta]", "p"], "(", "t", ")"}], ")"}]}], 
                    ")"}]}], "+", 
                   RowBox[{
                    SubscriptBox["w", "p"], " ", 
                    RowBox[{"sin", "(", 
                    RowBox[{
                    SubscriptBox["\[Theta]", "p"], "(", "t", ")"}], ")"}]}], 
                   "-", 
                   RowBox[{
                    SubscriptBox["y", "p"], "(", "t", ")"}]}], ")"}], 
                 "2"]}]]]}], ")"}]}]}]},
        {
         RowBox[{
          RowBox[{"-", 
           RowBox[{"\[Alpha]", " ", 
            RowBox[{"(", 
             RowBox[{"1", "-", 
              FractionBox["1", 
               SqrtBox[
                RowBox[{
                 SuperscriptBox[
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{
                    SubscriptBox["h", "p"], " ", 
                    RowBox[{"sin", "(", 
                    RowBox[{
                    SubscriptBox["\[Theta]", "p"], "(", "t", ")"}], ")"}]}], 
                    "-", 
                    RowBox[{
                    SubscriptBox["w", "p"], " ", 
                    RowBox[{"cos", "(", 
                    RowBox[{
                    SubscriptBox["\[Theta]", "p"], "(", "t", ")"}], ")"}]}], 
                    "-", 
                    RowBox[{
                    SubscriptBox["x", "p"], "(", "t", ")"}], "+", 
                    RowBox[{"2", " ", 
                    SubscriptBox["w", "p"]}]}], ")"}], "2"], "+", 
                 SuperscriptBox[
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{
                    SubscriptBox["h", "p"], " ", 
                    RowBox[{"(", 
                    RowBox[{"-", 
                    RowBox[{"cos", "(", 
                    RowBox[{
                    SubscriptBox["\[Theta]", "p"], "(", "t", ")"}], ")"}]}], 
                    ")"}]}], "-", 
                    RowBox[{
                    SubscriptBox["w", "p"], " ", 
                    RowBox[{"sin", "(", 
                    RowBox[{
                    SubscriptBox["\[Theta]", "p"], "(", "t", ")"}], ")"}]}], 
                    "-", 
                    RowBox[{
                    SubscriptBox["y", "p"], "(", "t", ")"}]}], ")"}], 
                  "2"]}]]]}], ")"}], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               SubscriptBox["h", "p"], " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{
                  RowBox[{"cos", "(", 
                   RowBox[{
                    SubscriptBox["\[Theta]", "p"], "(", "t", ")"}], ")"}], 
                  " ", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"2", " ", 
                    SubscriptBox["w", "p"]}], "-", 
                    RowBox[{
                    SubscriptBox["x", "p"], "(", "t", ")"}]}], ")"}]}], "-", 
                 RowBox[{
                  RowBox[{
                   SubscriptBox["y", "p"], "(", "t", ")"}], " ", 
                  RowBox[{"sin", "(", 
                   RowBox[{
                    SubscriptBox["\[Theta]", "p"], "(", "t", ")"}], ")"}]}]}],
                 ")"}]}], "+", 
              RowBox[{
               SubscriptBox["w", "p"], " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{
                  RowBox[{"sin", "(", 
                   RowBox[{
                    SubscriptBox["\[Theta]", "p"], "(", "t", ")"}], ")"}], 
                  " ", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"2", " ", 
                    SubscriptBox["w", "p"]}], "-", 
                    RowBox[{
                    SubscriptBox["x", "p"], "(", "t", ")"}]}], ")"}]}], "+", 
                 RowBox[{
                  RowBox[{
                   SubscriptBox["y", "p"], "(", "t", ")"}], " ", 
                  RowBox[{"cos", "(", 
                   RowBox[{
                    SubscriptBox["\[Theta]", "p"], "(", "t", ")"}], ")"}]}]}],
                 ")"}]}]}], ")"}]}]}], "-", 
          RowBox[{"\[Alpha]", " ", 
           RowBox[{"(", 
            RowBox[{"1", "-", 
             FractionBox["1", 
              SqrtBox[
               RowBox[{
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{
                    SubscriptBox["h", "p"], " ", 
                    RowBox[{"sin", "(", 
                    RowBox[{
                    SubscriptBox["\[Theta]", "p"], "(", "t", ")"}], ")"}]}], 
                   "+", 
                   RowBox[{
                    SubscriptBox["w", "p"], " ", 
                    RowBox[{"cos", "(", 
                    RowBox[{
                    SubscriptBox["\[Theta]", "p"], "(", "t", ")"}], ")"}]}], 
                   "-", 
                   RowBox[{
                    SubscriptBox["x", "p"], "(", "t", ")"}]}], ")"}], "2"], 
                "+", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{
                    SubscriptBox["h", "p"], " ", 
                    RowBox[{"(", 
                    RowBox[{"-", 
                    RowBox[{"cos", "(", 
                    RowBox[{
                    SubscriptBox["\[Theta]", "p"], "(", "t", ")"}], ")"}]}], 
                    ")"}]}], "+", 
                   RowBox[{
                    SubscriptBox["w", "p"], " ", 
                    RowBox[{"sin", "(", 
                    RowBox[{
                    SubscriptBox["\[Theta]", "p"], "(", "t", ")"}], ")"}]}], 
                   "-", 
                   RowBox[{
                    SubscriptBox["y", "p"], "(", "t", ")"}]}], ")"}], 
                 "2"]}]]]}], ")"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              SubscriptBox["h", "p"], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{
                 RowBox[{
                  SubscriptBox["x", "p"], "(", "t", ")"}], " ", 
                 RowBox[{"(", 
                  RowBox[{"-", 
                   RowBox[{"cos", "(", 
                    RowBox[{
                    SubscriptBox["\[Theta]", "p"], "(", "t", ")"}], ")"}]}], 
                  ")"}]}], "-", 
                RowBox[{
                 RowBox[{
                  SubscriptBox["y", "p"], "(", "t", ")"}], " ", 
                 RowBox[{"sin", "(", 
                  RowBox[{
                   SubscriptBox["\[Theta]", "p"], "(", "t", ")"}], ")"}]}]}], 
               ")"}]}], "+", 
             RowBox[{
              SubscriptBox["w", "p"], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{
                 RowBox[{
                  SubscriptBox["x", "p"], "(", "t", ")"}], " ", 
                 RowBox[{"sin", "(", 
                  RowBox[{
                   SubscriptBox["\[Theta]", "p"], "(", "t", ")"}], ")"}]}], 
                "-", 
                RowBox[{
                 RowBox[{
                  SubscriptBox["y", "p"], "(", "t", ")"}], " ", 
                 RowBox[{"cos", "(", 
                  RowBox[{
                   SubscriptBox["\[Theta]", "p"], "(", "t", ")"}], ")"}]}]}], 
               ")"}]}]}], ")"}]}]}]}
       },
       GridBoxAlignment->{
        "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
         "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
       GridBoxSpacings->{"Columns" -> {
           Offset[0.27999999999999997`], {
            Offset[0.7]}, 
           Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
           Offset[0.2], {
            Offset[0.4]}, 
           Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}]}], "/.", 
    "\[VeryThinSpace]", "equibTerms"}],
   Function[BoxForm`e$, 
    MatrixForm[BoxForm`e$]]], TraditionalForm]], "Output",
 CellChangeTimes->{{3.714488674553899*^9, 3.714488704303336*^9}, 
   3.7145009790215592`*^9, 3.714501031815095*^9, 3.7145575784505215`*^9, 
   3.7145579633197412`*^9, {3.7145580246168795`*^9, 3.7145580445133843`*^9}, 
   3.7145581081613765`*^9, 3.7151964949432287`*^9}]
}, Open  ]],

Cell[" ", "Text",
 Editable->False,
 Selectable->False,
 CellFrame->{{0, 0}, {0, 0.5}},
 ShowCellBracket->False,
 CellMargins->{{0, 0}, {1, 1}},
 CellElementSpacings->{"CellMinHeight"->1},
 CellFrameMargins->0,
 CellFrameColor->RGBColor[0, 0, 1],
 CellSize->{Inherited, 3}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"NumericParametersTest", "=", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{
     SubscriptBox["k", "1"], "\[Rule]", "200"}], ",", " ", 
    RowBox[{
     SubscriptBox["k", "2"], "\[Rule]", 
     RowBox[{
      SubscriptBox["k", "1"], "+", "0"}]}], ",", 
    RowBox[{
     SubscriptBox["L0", "1"], "\[Rule]", "2"}], ",", 
    RowBox[{
     SubscriptBox["L0", "2"], "\[Rule]", 
     RowBox[{
      SubscriptBox["L0", "1"], "+", "0"}]}], ",", 
    RowBox[{
     SubscriptBox["m", "p"], "\[Rule]", "2"}], ",", 
    RowBox[{
     SubscriptBox["h", "p"], "\[Rule]", "0.1"}], ",", 
    RowBox[{
     SubscriptBox["w", "p"], "\[Rule]", "1"}], ",", 
    RowBox[{"g", "\[Rule]", "9.81"}]}], "}"}]}], "\[IndentingNewLine]", 
 RowBox[{"greekTermsGeneralForTest", "=", 
  RowBox[{"{", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[Kappa]", "\[Rule]", 
     FractionBox[
      SubscriptBox["k", "2"], 
      SubscriptBox["k", "1"]]}], ",", "\[IndentingNewLine]", 
    RowBox[{"\[ScriptCapitalL]", "\[Rule]", 
     FractionBox[
      SubscriptBox["L0", "2"], 
      SubscriptBox["L0", "1"]]}], ",", "\[IndentingNewLine]", 
    RowBox[{
     SuperscriptBox[
      SubscriptBox["\[Omega]", "s"], "2"], "\[Rule]", 
     FractionBox[
      SubscriptBox["k", "1"], 
      SubscriptBox["m", "p"]]}], ",", "\[IndentingNewLine]", 
    RowBox[{"\[Alpha]", "\[Rule]", 
     FractionBox[
      RowBox[{"3", 
       SuperscriptBox[
        SubscriptBox["L0", "1"], "2"]}], 
      RowBox[{"(", 
       RowBox[{
        SuperscriptBox[
         SubscriptBox["w", "p"], "2"], "+", 
        SuperscriptBox[
         SubscriptBox["h", "p"], "2"]}], ")"}]]}], ",", "\[IndentingNewLine]", 
    RowBox[{"\[Gamma]", "->", 
     RowBox[{"(", 
      FractionBox[
       RowBox[{"g", " ", 
        SubscriptBox["m", "p"]}], 
       RowBox[{
        SubscriptBox["L0", "1"], 
        SubscriptBox["k", "1"]}]], ")"}]}]}], "\[IndentingNewLine]", 
   "}"}]}], "\[IndentingNewLine]", 
 RowBox[{
  FractionBox["g", 
   SubscriptBox["L0", "1"]], "/.", 
  "NumericParametersTest"}], "\[IndentingNewLine]", 
 RowBox[{"NumericTestParams", "=", 
  RowBox[{
  "greekTermsGeneralForTest", "//.", "NumericParametersTest"}]}]}], "Input",
 CellChangeTimes->{{3.714537390515764*^9, 3.714537495401929*^9}, {
   3.7145394243169956`*^9, 3.7145395200033665`*^9}, {3.714539561885668*^9, 
   3.714539561925669*^9}, {3.714539600756035*^9, 3.7145396078122044`*^9}, 
   3.714539643430365*^9, {3.7145403822630777`*^9, 3.7145404732888412`*^9}, {
   3.7145406031390085`*^9, 3.714540692345502*^9}, 3.7145407345401635`*^9, {
   3.7145408445533953`*^9, 3.7145408712491493`*^9}, {3.714540943577881*^9, 
   3.7145409544539022`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    SubscriptBox["k", "1"], "\[Rule]", "200"}], ",", 
   RowBox[{
    SubscriptBox["k", "2"], "\[Rule]", 
    SubscriptBox["k", "1"]}], ",", 
   RowBox[{
    SubscriptBox["L0", "1"], "\[Rule]", "2"}], ",", 
   RowBox[{
    SubscriptBox["L0", "2"], "\[Rule]", 
    SubscriptBox["L0", "1"]}], ",", 
   RowBox[{
    SubscriptBox["m", "p"], "\[Rule]", "2"}], ",", 
   RowBox[{
    SubscriptBox["h", "p"], "\[Rule]", "0.1`"}], ",", 
   RowBox[{
    SubscriptBox["w", "p"], "\[Rule]", "1"}], ",", 
   RowBox[{"g", "\[Rule]", "9.81`"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.714540661810577*^9, 3.7145406955766535`*^9, 3.7145407351845913`*^9, {
   3.714540862633419*^9, 3.7145408719466143`*^9}, 3.7145409562140727`*^9, 
   3.714557562366824*^9, 3.7145581689004793`*^9, 3.715194461223075*^9, 
   3.7151964987027164`*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"\[Kappa]", "\[Rule]", 
    FractionBox[
     SubscriptBox["k", "2"], 
     SubscriptBox["k", "1"]]}], ",", 
   RowBox[{"\[ScriptCapitalL]", "\[Rule]", 
    FractionBox[
     SubscriptBox["L0", "2"], 
     SubscriptBox["L0", "1"]]}], ",", 
   RowBox[{
    SubsuperscriptBox["\[Omega]", "s", "2"], "\[Rule]", 
    FractionBox[
     SubscriptBox["k", "1"], 
     SubscriptBox["m", "p"]]}], ",", 
   RowBox[{"\[Alpha]", "\[Rule]", 
    FractionBox[
     RowBox[{"3", " ", 
      SubsuperscriptBox["L0", "1", "2"]}], 
     RowBox[{
      SubsuperscriptBox["h", "p", "2"], "+", 
      SubsuperscriptBox["w", "p", "2"]}]]}], ",", 
   RowBox[{"\[Gamma]", "\[Rule]", 
    FractionBox[
     RowBox[{"g", " ", 
      SubscriptBox["m", "p"]}], 
     RowBox[{
      SubscriptBox["k", "1"], " ", 
      SubscriptBox["L0", "1"]}]]}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.714540661810577*^9, 3.7145406955766535`*^9, 3.7145407351845913`*^9, {
   3.714540862633419*^9, 3.7145408719466143`*^9}, 3.7145409562140727`*^9, 
   3.714557562366824*^9, 3.7145581689004793`*^9, 3.715194461223075*^9, 
   3.7151964987067184`*^9}],

Cell[BoxData["4.905`"], "Output",
 CellChangeTimes->{
  3.714540661810577*^9, 3.7145406955766535`*^9, 3.7145407351845913`*^9, {
   3.714540862633419*^9, 3.7145408719466143`*^9}, 3.7145409562140727`*^9, 
   3.714557562366824*^9, 3.7145581689004793`*^9, 3.715194461223075*^9, 
   3.71519649871172*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"\[Kappa]", "\[Rule]", "1"}], ",", 
   RowBox[{"\[ScriptCapitalL]", "\[Rule]", "1"}], ",", 
   RowBox[{
    SubsuperscriptBox["\[Omega]", "s", "2"], "\[Rule]", "100"}], ",", 
   RowBox[{"\[Alpha]", "\[Rule]", "11.881188118811881`"}], ",", 
   RowBox[{"\[Gamma]", "\[Rule]", "0.04905`"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.714540661810577*^9, 3.7145406955766535`*^9, 3.7145407351845913`*^9, {
   3.714540862633419*^9, 3.7145408719466143`*^9}, 3.7145409562140727`*^9, 
   3.714557562366824*^9, 3.7145581689004793`*^9, 3.715194461223075*^9, 
   3.715196498713722*^9}]
}, Open  ]],

Cell[" ", "Text",
 Editable->False,
 Selectable->False,
 CellFrame->{{0, 0}, {0, 0.5}},
 ShowCellBracket->False,
 CellMargins->{{0, 0}, {1, 1}},
 CellElementSpacings->{"CellMinHeight"->1},
 CellFrameMargins->0,
 CellFrameColor->RGBColor[0, 0, 1],
 CellSize->{Inherited, 3}],

Cell[" ", "Text",
 Editable->False,
 Selectable->False,
 CellFrame->{{0, 0}, {0, 3}},
 ShowCellBracket->False,
 CellMargins->{{0, 0}, {1, 1}},
 CellElementSpacings->{"CellMinHeight"->1},
 CellFrameMargins->0,
 CellFrameColor->RGBColor[0, 0, 1],
 CellSize->{Inherited, 5}],

Cell[" ", "Text",
 Editable->False,
 Selectable->False,
 CellFrame->{{0, 0}, {0, 3}},
 ShowCellBracket->False,
 CellMargins->{{0, 0}, {1, 1}},
 CellElementSpacings->{"CellMinHeight"->1},
 CellFrameMargins->0,
 CellFrameColor->RGBColor[0, 0, 1],
 CellSize->{Inherited, 5}],

Cell[" ", "Text",
 Editable->False,
 Selectable->False,
 CellFrame->{{0, 0}, {0, 0.5}},
 ShowCellBracket->False,
 CellMargins->{{0, 0}, {1, 1}},
 CellElementSpacings->{"CellMinHeight"->1},
 CellFrameMargins->0,
 CellFrameColor->RGBColor[0, 0, 1],
 CellSize->{Inherited, 3}],

Cell[" ", "Text",
 Editable->False,
 Selectable->False,
 CellFrame->{{0, 0}, {0, 3}},
 ShowCellBracket->False,
 CellMargins->{{0, 0}, {1, 1}},
 CellElementSpacings->{"CellMinHeight"->1},
 CellFrameMargins->0,
 CellFrameColor->RGBColor[0, 0, 1],
 CellSize->{Inherited, 5}],

Cell[" ", "Text",
 Editable->False,
 Selectable->False,
 CellFrame->{{0, 0}, {0, 3}},
 ShowCellBracket->False,
 CellMargins->{{0, 0}, {1, 1}},
 CellElementSpacings->{"CellMinHeight"->1},
 CellFrameMargins->0,
 CellFrameColor->RGBColor[0, 0, 1],
 CellSize->{Inherited, 5}],

Cell[" ", "Text",
 Editable->False,
 Selectable->False,
 CellFrame->{{0, 0}, {0, 0.5}},
 ShowCellBracket->False,
 CellMargins->{{0, 0}, {1, 1}},
 CellElementSpacings->{"CellMinHeight"->1},
 CellFrameMargins->0,
 CellFrameColor->RGBColor[0, 0, 1],
 CellSize->{Inherited, 3}],

Cell["simple case testings:", "Text",
 CellChangeTimes->{{3.7143753343649387`*^9, 3.7143753420451508`*^9}}],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
   RowBox[{"trajectory", ":", "\[IndentingNewLine]", "\[Tau]"}], "=", 
   RowBox[{
    RowBox[{"0", ":", " ", 
     OverscriptBox["y", ".."]}], "=", 
    RowBox[{
     RowBox[{"1", 
      RowBox[{"m", "/", 
       SuperscriptBox["s", "2"]}], "  ", "until", " ", 
      SubscriptBox["y", "1"]}], "=", 
     RowBox[{
      SubscriptBox["y", "2"], "=", 
      RowBox[{
       RowBox[{"10", 
        SubscriptBox["L0", "1"], "\[IndentingNewLine]", "    ", 
        OverscriptBox["y", ".."]}], "=", 
       RowBox[{
        RowBox[{
         RowBox[{"-", "1"}], 
         RowBox[{"m", "/", 
          SuperscriptBox["s", "2"]}], " ", "until", " ", 
         OverscriptBox[
          SubscriptBox["y", "1"], "."]}], "=", 
        RowBox[{
         OverscriptBox[
          SubscriptBox["y", "2"], "."], "=", 
         RowBox[{
          RowBox[{"0", "\[IndentingNewLine]", 
           OverscriptBox[
            SubscriptBox["x", "1"], ".."]}], "=", 
          RowBox[{
           OverscriptBox[
            SubscriptBox["x", "2"], ".."], "=", 
           RowBox[{
            RowBox[{"1", 
             RowBox[{"m", "/", 
              SuperscriptBox["s", "2"]}], "  ", "until", " ", 
             OverscriptBox[
              SubscriptBox["x", "1"], "."]}], "=", 
            RowBox[{
             OverscriptBox[
              SubscriptBox["x", "2"], "."], "=", 
             RowBox[{
              RowBox[{"2", 
               RowBox[{"m", "/", "s"}], "\[IndentingNewLine]", "disterbunce", 
               " ", "can", " ", "be", " ", "input", " ", "by", " ", 
               SubscriptBox["x", "1"]}], "+=", 
              RowBox[{"5", 
               SubscriptBox["L0", "1"], " ", "over", " ", 
               FractionBox["1", 
                RowBox[{"100", " ", 
                 SqrtBox[
                  SubscriptBox["\[Omega]", "s"]]}]]}]}]}]}]}]}]}]}]}]}]}]}]}],
   "*)"}]], "Input",
 CellChangeTimes->{{3.7128649918168645`*^9, 3.712864999951256*^9}, {
   3.7128650538669786`*^9, 3.7128653567852306`*^9}, 3.714375349988761*^9}],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.712831792809779*^9, 3.712831794993853*^9}}],

Cell[" ", "Text",
 Editable->False,
 Selectable->False,
 CellFrame->{{0, 0}, {0, 2}},
 ShowCellBracket->False,
 CellMargins->{{0, 0}, {1, 1}},
 CellElementSpacings->{"CellMinHeight"->1},
 CellFrameMargins->0,
 CellFrameColor->RGBColor[0, 0, 1],
 CellSize->{Inherited, 4}],

Cell[" ", "Text",
 Editable->False,
 Selectable->False,
 CellFrame->{{0, 0}, {0, 3}},
 ShowCellBracket->False,
 CellMargins->{{0, 0}, {1, 1}},
 CellElementSpacings->{"CellMinHeight"->1},
 CellFrameMargins->0,
 CellFrameColor->RGBColor[0, 0, 1],
 CellSize->{Inherited, 5}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{
  "greekTermsSymetricCase", "\[IndentingNewLine]", "equibTerms", 
   "\[IndentingNewLine]", "EquibInputConditions"}]}]], "Input",
 CellChangeTimes->{{3.714573038258191*^9, 3.714573090909136*^9}, 
   3.714573318230461*^9, {3.715194234549557*^9, 3.715194246825692*^9}, 
   3.7151943387598715`*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"\[Kappa]", "\[Rule]", "1"}], ",", 
   RowBox[{"\[ScriptCapitalL]", "\[Rule]", "1"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.714573040434246*^9, 3.7145730536113853`*^9}, 
   3.714573091761153*^9, 3.7151942488470306`*^9, 3.715196507529564*^9}],

Cell[BoxData["equibTerms"], "Output",
 CellChangeTimes->{{3.714573040434246*^9, 3.7145730536113853`*^9}, 
   3.714573091761153*^9, 3.7151942488470306`*^9, 3.715196507536568*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{
     SubscriptBox["x", "1"], "[", "t", "]"}], "\[Rule]", "0"}], ",", 
   RowBox[{
    RowBox[{
     SubscriptBox["y", "1"], "[", "t", "]"}], "\[Rule]", "0"}], ",", 
   RowBox[{
    RowBox[{
     SubscriptBox["x", "2"], "[", "t", "]"}], "\[Rule]", 
    RowBox[{"2", " ", 
     SubscriptBox["w", "p"]}]}], ",", 
   RowBox[{
    RowBox[{
     SubscriptBox["y", "2"], "[", "t", "]"}], "\[Rule]", 
    RowBox[{
     SubscriptBox["y", "1"], "[", "t", "]"}]}]}], "}"}]], "Output",
 CellChangeTimes->{{3.714573040434246*^9, 3.7145730536113853`*^9}, 
   3.714573091761153*^9, 3.7151942488470306`*^9, 3.715196507545574*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
   "greekTermsSymetricCase", " ", "must", " ", "be", " ", "used", " ", 
    "again", " ", "because", " ", "this", " ", "is", " ", "where", " ", "the",
     " ", "equilibrium", " ", "point", " ", "is", " ", "refering", " ", 
    RowBox[{"to", " ", ".", "\[IndentingNewLine]", "EquibInputConditions"}], 
    " ", "might", " ", "be", " ", "turned", " ", "of", " ", "later", " ", 
    "for", " ", "better", " ", "investigation"}], " ", "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{"SymetricEOMtoInvestigate", "=", 
       RowBox[{
        RowBox[{"EOM", "/.", "greekTermsSymetricCase"}], "//.", 
        "EquibInputConditions"}]}], ")"}], "/.", "dispNoTime"}], "//", 
    "MatrixForm"}], "//", "TraditionalForm"}]}]], "Input",
 CellChangeTimes->{{3.7145730224935207`*^9, 3.7145730317420354`*^9}, {
  3.714573143376878*^9, 3.714573149965064*^9}, {3.7145731973242517`*^9, 
  3.714573299203663*^9}, {3.715194470232045*^9, 3.715194486098557*^9}}],

Cell[BoxData[
 FormBox[
  TagBox[
   RowBox[{
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {
        SuperscriptBox[
         SubscriptBox["x", "p"], "\[Prime]\[Prime]",
         MultilineFunction->None]},
       {
        SuperscriptBox[
         SubscriptBox["y", "p"], "\[Prime]\[Prime]",
         MultilineFunction->None]},
       {
        SuperscriptBox[
         SubscriptBox["\[Theta]", "p"], "\[Prime]\[Prime]",
         MultilineFunction->None]}
      },
      GridBoxAlignment->{
       "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
        "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}], 
    "\[LongEqual]", 
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"sin", "(", 
              SubscriptBox["\[Theta]", "p"], ")"}], " ", 
             SubscriptBox["h", "p"]}], "-", 
            RowBox[{
             RowBox[{"cos", "(", 
              SubscriptBox["\[Theta]", "p"], ")"}], " ", 
             SubscriptBox["w", "p"]}], "+", 
            RowBox[{"2", " ", 
             SubscriptBox["w", "p"]}], "-", 
            SubscriptBox["x", "p"]}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{"1", "-", 
            FractionBox["1", 
             SqrtBox[
              RowBox[{
               SuperscriptBox[
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"sin", "(", 
                    SubscriptBox["\[Theta]", "p"], ")"}], " ", 
                   SubscriptBox["h", "p"]}], "-", 
                  RowBox[{
                   RowBox[{"cos", "(", 
                    SubscriptBox["\[Theta]", "p"], ")"}], " ", 
                   SubscriptBox["w", "p"]}], "+", 
                  RowBox[{"2", " ", 
                   SubscriptBox["w", "p"]}], "-", 
                  SubscriptBox["x", "p"]}], ")"}], "2"], "+", 
               SuperscriptBox[
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"-", 
                    RowBox[{"cos", "(", 
                    SubscriptBox["\[Theta]", "p"], ")"}]}], " ", 
                   SubscriptBox["h", "p"]}], "-", 
                  RowBox[{
                   RowBox[{"sin", "(", 
                    SubscriptBox["\[Theta]", "p"], ")"}], " ", 
                   SubscriptBox["w", "p"]}], "-", 
                  SubscriptBox["y", "p"]}], ")"}], "2"]}]]]}], ")"}]}], "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"sin", "(", 
              SubscriptBox["\[Theta]", "p"], ")"}], " ", 
             SubscriptBox["h", "p"]}], "+", 
            RowBox[{
             RowBox[{"cos", "(", 
              SubscriptBox["\[Theta]", "p"], ")"}], " ", 
             SubscriptBox["w", "p"]}], "-", 
            SubscriptBox["x", "p"]}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{"1", "-", 
            FractionBox["1", 
             SqrtBox[
              RowBox[{
               SuperscriptBox[
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"sin", "(", 
                    SubscriptBox["\[Theta]", "p"], ")"}], " ", 
                   SubscriptBox["h", "p"]}], "+", 
                  RowBox[{
                   RowBox[{"cos", "(", 
                    SubscriptBox["\[Theta]", "p"], ")"}], " ", 
                   SubscriptBox["w", "p"]}], "-", 
                  SubscriptBox["x", "p"]}], ")"}], "2"], "+", 
               SuperscriptBox[
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"-", 
                    RowBox[{"cos", "(", 
                    SubscriptBox["\[Theta]", "p"], ")"}]}], " ", 
                   SubscriptBox["h", "p"]}], "+", 
                  RowBox[{
                   RowBox[{"sin", "(", 
                    SubscriptBox["\[Theta]", "p"], ")"}], " ", 
                   SubscriptBox["w", "p"]}], "-", 
                  SubscriptBox["y", "p"]}], ")"}], "2"]}]]]}], ")"}]}]}]},
       {
        RowBox[{
         RowBox[{"-", "\[Gamma]"}], "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"1", "-", 
            FractionBox["1", 
             SqrtBox[
              RowBox[{
               SuperscriptBox[
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"sin", "(", 
                    SubscriptBox["\[Theta]", "p"], ")"}], " ", 
                   SubscriptBox["h", "p"]}], "-", 
                  RowBox[{
                   RowBox[{"cos", "(", 
                    SubscriptBox["\[Theta]", "p"], ")"}], " ", 
                   SubscriptBox["w", "p"]}], "+", 
                  RowBox[{"2", " ", 
                   SubscriptBox["w", "p"]}], "-", 
                  SubscriptBox["x", "p"]}], ")"}], "2"], "+", 
               SuperscriptBox[
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"-", 
                    RowBox[{"cos", "(", 
                    SubscriptBox["\[Theta]", "p"], ")"}]}], " ", 
                   SubscriptBox["h", "p"]}], "-", 
                  RowBox[{
                   RowBox[{"sin", "(", 
                    SubscriptBox["\[Theta]", "p"], ")"}], " ", 
                   SubscriptBox["w", "p"]}], "-", 
                  SubscriptBox["y", "p"]}], ")"}], "2"]}]]]}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"-", 
              RowBox[{"cos", "(", 
               SubscriptBox["\[Theta]", "p"], ")"}]}], " ", 
             SubscriptBox["h", "p"]}], "-", 
            RowBox[{
             RowBox[{"sin", "(", 
              SubscriptBox["\[Theta]", "p"], ")"}], " ", 
             SubscriptBox["w", "p"]}], "-", 
            SubscriptBox["y", "p"]}], ")"}]}], "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"1", "-", 
            FractionBox["1", 
             SqrtBox[
              RowBox[{
               SuperscriptBox[
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"sin", "(", 
                    SubscriptBox["\[Theta]", "p"], ")"}], " ", 
                   SubscriptBox["h", "p"]}], "+", 
                  RowBox[{
                   RowBox[{"cos", "(", 
                    SubscriptBox["\[Theta]", "p"], ")"}], " ", 
                   SubscriptBox["w", "p"]}], "-", 
                  SubscriptBox["x", "p"]}], ")"}], "2"], "+", 
               SuperscriptBox[
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"-", 
                    RowBox[{"cos", "(", 
                    SubscriptBox["\[Theta]", "p"], ")"}]}], " ", 
                   SubscriptBox["h", "p"]}], "+", 
                  RowBox[{
                   RowBox[{"sin", "(", 
                    SubscriptBox["\[Theta]", "p"], ")"}], " ", 
                   SubscriptBox["w", "p"]}], "-", 
                  SubscriptBox["y", "p"]}], ")"}], "2"]}]]]}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"-", 
              RowBox[{"cos", "(", 
               SubscriptBox["\[Theta]", "p"], ")"}]}], " ", 
             SubscriptBox["h", "p"]}], "+", 
            RowBox[{
             RowBox[{"sin", "(", 
              SubscriptBox["\[Theta]", "p"], ")"}], " ", 
             SubscriptBox["w", "p"]}], "-", 
            SubscriptBox["y", "p"]}], ")"}]}]}]},
       {
        RowBox[{
         RowBox[{
          RowBox[{"-", "\[Alpha]"}], " ", 
          RowBox[{"(", 
           RowBox[{"1", "-", 
            FractionBox["1", 
             SqrtBox[
              RowBox[{
               SuperscriptBox[
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"sin", "(", 
                    SubscriptBox["\[Theta]", "p"], ")"}], " ", 
                   SubscriptBox["h", "p"]}], "-", 
                  RowBox[{
                   RowBox[{"cos", "(", 
                    SubscriptBox["\[Theta]", "p"], ")"}], " ", 
                   SubscriptBox["w", "p"]}], "+", 
                  RowBox[{"2", " ", 
                   SubscriptBox["w", "p"]}], "-", 
                  SubscriptBox["x", "p"]}], ")"}], "2"], "+", 
               SuperscriptBox[
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"-", 
                    RowBox[{"cos", "(", 
                    SubscriptBox["\[Theta]", "p"], ")"}]}], " ", 
                   SubscriptBox["h", "p"]}], "-", 
                  RowBox[{
                   RowBox[{"sin", "(", 
                    SubscriptBox["\[Theta]", "p"], ")"}], " ", 
                   SubscriptBox["w", "p"]}], "-", 
                  SubscriptBox["y", "p"]}], ")"}], "2"]}]]]}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             SubscriptBox["w", "p"], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"sin", "(", 
                 SubscriptBox["\[Theta]", "p"], ")"}], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"2", " ", 
                   SubscriptBox["w", "p"]}], "-", 
                  SubscriptBox["x", "p"]}], ")"}]}], "+", 
               RowBox[{
                RowBox[{"cos", "(", 
                 SubscriptBox["\[Theta]", "p"], ")"}], " ", 
                SubscriptBox["y", "p"]}]}], ")"}]}], "+", 
            RowBox[{
             SubscriptBox["h", "p"], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"cos", "(", 
                 SubscriptBox["\[Theta]", "p"], ")"}], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"2", " ", 
                   SubscriptBox["w", "p"]}], "-", 
                  SubscriptBox["x", "p"]}], ")"}]}], "-", 
               RowBox[{
                RowBox[{"sin", "(", 
                 SubscriptBox["\[Theta]", "p"], ")"}], " ", 
                SubscriptBox["y", "p"]}]}], ")"}]}]}], ")"}]}], "-", 
         RowBox[{"\[Alpha]", " ", 
          RowBox[{"(", 
           RowBox[{"1", "-", 
            FractionBox["1", 
             SqrtBox[
              RowBox[{
               SuperscriptBox[
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"sin", "(", 
                    SubscriptBox["\[Theta]", "p"], ")"}], " ", 
                   SubscriptBox["h", "p"]}], "+", 
                  RowBox[{
                   RowBox[{"cos", "(", 
                    SubscriptBox["\[Theta]", "p"], ")"}], " ", 
                   SubscriptBox["w", "p"]}], "-", 
                  SubscriptBox["x", "p"]}], ")"}], "2"], "+", 
               SuperscriptBox[
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"-", 
                    RowBox[{"cos", "(", 
                    SubscriptBox["\[Theta]", "p"], ")"}]}], " ", 
                   SubscriptBox["h", "p"]}], "+", 
                  RowBox[{
                   RowBox[{"sin", "(", 
                    SubscriptBox["\[Theta]", "p"], ")"}], " ", 
                   SubscriptBox["w", "p"]}], "-", 
                  SubscriptBox["y", "p"]}], ")"}], "2"]}]]]}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             SubscriptBox["w", "p"], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"sin", "(", 
                 SubscriptBox["\[Theta]", "p"], ")"}], " ", 
                SubscriptBox["x", "p"]}], "-", 
               RowBox[{
                RowBox[{"cos", "(", 
                 SubscriptBox["\[Theta]", "p"], ")"}], " ", 
                SubscriptBox["y", "p"]}]}], ")"}]}], "+", 
            RowBox[{
             SubscriptBox["h", "p"], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"-", 
                 RowBox[{"cos", "(", 
                  SubscriptBox["\[Theta]", "p"], ")"}]}], " ", 
                SubscriptBox["x", "p"]}], "-", 
               RowBox[{
                RowBox[{"sin", "(", 
                 SubscriptBox["\[Theta]", "p"], ")"}], " ", 
                SubscriptBox["y", "p"]}]}], ")"}]}]}], ")"}]}]}]}
      },
      GridBoxAlignment->{
       "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
        "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}]}],
   Function[BoxForm`e$, 
    MatrixForm[BoxForm`e$]]], TraditionalForm]], "Output",
 CellChangeTimes->{3.714573363860479*^9, 3.7151945092709103`*^9, 
  3.715196512828076*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"testValid", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{
       SubscriptBox["x", "p"], "[", "t", "]"}], "\[Rule]", "1"}], ",", 
     RowBox[{
      RowBox[{
       SubscriptBox["y", "p"], "[", "t", "]"}], "\[Rule]", "1"}], ",", 
     RowBox[{
      RowBox[{
       SubscriptBox["\[Theta]", "p"], "[", "t", "]"}], "\[Rule]", "1"}]}], 
    "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"testValid", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{
       SubscriptBox["x", "p"], "[", "t", "]"}], "\[Rule]", "1"}], ",", 
     RowBox[{"(*", 
      RowBox[{
       RowBox[{
        RowBox[{
         SubscriptBox["y", "p"], "[", "t", "]"}], "\[Rule]", "1"}], ","}], 
      "*)"}], 
     RowBox[{
      RowBox[{
       SubscriptBox["\[Theta]", "p"], "[", "t", "]"}], "\[Rule]", "1"}]}], 
    "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"(", 
    RowBox[{"EOMtoSolve", "=", 
     RowBox[{
      RowBox[{"SymetricEOMtoInvestigate", "/.", "NumericTestParams"}], "/.", 
      "NumericParametersTest"}]}], ")"}], 
   RowBox[{"(*", 
    RowBox[{"/.", "testValid"}], "*)"}], "//", "MatrixForm"}], "//", 
  "TraditionalForm"}], "\[IndentingNewLine]", "EOMtoSolve"}], "Input",
 CellChangeTimes->{{3.7145730224935207`*^9, 3.7145730317420354`*^9}, {
  3.714573143376878*^9, 3.714573149965064*^9}, {3.7145731973242517`*^9, 
  3.714573299203663*^9}, {3.715194470232045*^9, 3.715194486098557*^9}, {
  3.71519523241648*^9, 3.7151952739570017`*^9}, {3.715195329333274*^9, 
  3.7151954743625917`*^9}, {3.7151955475443764`*^9, 3.715195578432841*^9}}],

Cell[BoxData[
 FormBox[
  TagBox[
   RowBox[{
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {
        RowBox[{
         SuperscriptBox[
          SubscriptBox["x", "p"], "\[Prime]\[Prime]",
          MultilineFunction->None], "(", "t", ")"}]},
       {
        RowBox[{
         SuperscriptBox[
          SubscriptBox["y", "p"], "\[Prime]\[Prime]",
          MultilineFunction->None], "(", "t", ")"}]},
       {
        RowBox[{
         SuperscriptBox[
          SubscriptBox["\[Theta]", "p"], "\[Prime]\[Prime]",
          MultilineFunction->None], "(", "t", ")"}]}
      },
      GridBoxAlignment->{
       "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
        "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}], 
    "\[LongEqual]", 
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", 
             RowBox[{"cos", "(", 
              RowBox[{
               SubscriptBox["\[Theta]", "p"], "(", "t", ")"}], ")"}]}], "+", 
            RowBox[{"0.1`", " ", 
             RowBox[{"sin", "(", 
              RowBox[{
               SubscriptBox["\[Theta]", "p"], "(", "t", ")"}], ")"}]}], "-", 
            RowBox[{
             SubscriptBox["x", "p"], "(", "t", ")"}], "+", "2"}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{"1", "-", 
            FractionBox["1", 
             SqrtBox[
              RowBox[{
               SuperscriptBox[
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"-", 
                   RowBox[{"cos", "(", 
                    RowBox[{
                    SubscriptBox["\[Theta]", "p"], "(", "t", ")"}], ")"}]}], 
                  "+", 
                  RowBox[{"0.1`", " ", 
                   RowBox[{"sin", "(", 
                    RowBox[{
                    SubscriptBox["\[Theta]", "p"], "(", "t", ")"}], ")"}]}], 
                  "-", 
                  RowBox[{
                   SubscriptBox["x", "p"], "(", "t", ")"}], "+", "2"}], ")"}],
                 "2"], "+", 
               SuperscriptBox[
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"-", "0.1`"}], " ", 
                   RowBox[{"cos", "(", 
                    RowBox[{
                    SubscriptBox["\[Theta]", "p"], "(", "t", ")"}], ")"}]}], 
                  "-", 
                  RowBox[{"sin", "(", 
                   RowBox[{
                    SubscriptBox["\[Theta]", "p"], "(", "t", ")"}], ")"}], 
                  "-", 
                  RowBox[{
                   SubscriptBox["y", "p"], "(", "t", ")"}]}], ")"}], 
                "2"]}]]]}], ")"}]}], "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"cos", "(", 
             RowBox[{
              SubscriptBox["\[Theta]", "p"], "(", "t", ")"}], ")"}], "+", 
            RowBox[{"0.1`", " ", 
             RowBox[{"sin", "(", 
              RowBox[{
               SubscriptBox["\[Theta]", "p"], "(", "t", ")"}], ")"}]}], "-", 
            RowBox[{
             SubscriptBox["x", "p"], "(", "t", ")"}]}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{"1", "-", 
            FractionBox["1", 
             SqrtBox[
              RowBox[{
               SuperscriptBox[
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"cos", "(", 
                   RowBox[{
                    SubscriptBox["\[Theta]", "p"], "(", "t", ")"}], ")"}], 
                  "+", 
                  RowBox[{"0.1`", " ", 
                   RowBox[{"sin", "(", 
                    RowBox[{
                    SubscriptBox["\[Theta]", "p"], "(", "t", ")"}], ")"}]}], 
                  "-", 
                  RowBox[{
                   SubscriptBox["x", "p"], "(", "t", ")"}]}], ")"}], "2"], 
               "+", 
               SuperscriptBox[
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"-", "0.1`"}], " ", 
                   RowBox[{"cos", "(", 
                    RowBox[{
                    SubscriptBox["\[Theta]", "p"], "(", "t", ")"}], ")"}]}], 
                  "+", 
                  RowBox[{"sin", "(", 
                   RowBox[{
                    SubscriptBox["\[Theta]", "p"], "(", "t", ")"}], ")"}], 
                  "-", 
                  RowBox[{
                   SubscriptBox["y", "p"], "(", "t", ")"}]}], ")"}], 
                "2"]}]]]}], ")"}]}]}]},
       {
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{"1", "-", 
            FractionBox["1", 
             SqrtBox[
              RowBox[{
               SuperscriptBox[
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"-", 
                   RowBox[{"cos", "(", 
                    RowBox[{
                    SubscriptBox["\[Theta]", "p"], "(", "t", ")"}], ")"}]}], 
                  "+", 
                  RowBox[{"0.1`", " ", 
                   RowBox[{"sin", "(", 
                    RowBox[{
                    SubscriptBox["\[Theta]", "p"], "(", "t", ")"}], ")"}]}], 
                  "-", 
                  RowBox[{
                   SubscriptBox["x", "p"], "(", "t", ")"}], "+", "2"}], ")"}],
                 "2"], "+", 
               SuperscriptBox[
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"-", "0.1`"}], " ", 
                   RowBox[{"cos", "(", 
                    RowBox[{
                    SubscriptBox["\[Theta]", "p"], "(", "t", ")"}], ")"}]}], 
                  "-", 
                  RowBox[{"sin", "(", 
                   RowBox[{
                    SubscriptBox["\[Theta]", "p"], "(", "t", ")"}], ")"}], 
                  "-", 
                  RowBox[{
                   SubscriptBox["y", "p"], "(", "t", ")"}]}], ")"}], 
                "2"]}]]]}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"-", "0.1`"}], " ", 
             RowBox[{"cos", "(", 
              RowBox[{
               SubscriptBox["\[Theta]", "p"], "(", "t", ")"}], ")"}]}], "-", 
            RowBox[{"sin", "(", 
             RowBox[{
              SubscriptBox["\[Theta]", "p"], "(", "t", ")"}], ")"}], "-", 
            RowBox[{
             SubscriptBox["y", "p"], "(", "t", ")"}]}], ")"}]}], "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"1", "-", 
            FractionBox["1", 
             SqrtBox[
              RowBox[{
               SuperscriptBox[
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"cos", "(", 
                   RowBox[{
                    SubscriptBox["\[Theta]", "p"], "(", "t", ")"}], ")"}], 
                  "+", 
                  RowBox[{"0.1`", " ", 
                   RowBox[{"sin", "(", 
                    RowBox[{
                    SubscriptBox["\[Theta]", "p"], "(", "t", ")"}], ")"}]}], 
                  "-", 
                  RowBox[{
                   SubscriptBox["x", "p"], "(", "t", ")"}]}], ")"}], "2"], 
               "+", 
               SuperscriptBox[
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"-", "0.1`"}], " ", 
                   RowBox[{"cos", "(", 
                    RowBox[{
                    SubscriptBox["\[Theta]", "p"], "(", "t", ")"}], ")"}]}], 
                  "+", 
                  RowBox[{"sin", "(", 
                   RowBox[{
                    SubscriptBox["\[Theta]", "p"], "(", "t", ")"}], ")"}], 
                  "-", 
                  RowBox[{
                   SubscriptBox["y", "p"], "(", "t", ")"}]}], ")"}], 
                "2"]}]]]}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"-", "0.1`"}], " ", 
             RowBox[{"cos", "(", 
              RowBox[{
               SubscriptBox["\[Theta]", "p"], "(", "t", ")"}], ")"}]}], "+", 
            RowBox[{"sin", "(", 
             RowBox[{
              SubscriptBox["\[Theta]", "p"], "(", "t", ")"}], ")"}], "-", 
            RowBox[{
             SubscriptBox["y", "p"], "(", "t", ")"}]}], ")"}]}], "-", 
         "0.04905`"}]},
       {
        RowBox[{
         RowBox[{
          RowBox[{"-", "11.881188118811881`"}], " ", 
          RowBox[{"(", 
           RowBox[{"1", "-", 
            FractionBox["1", 
             SqrtBox[
              RowBox[{
               SuperscriptBox[
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"-", 
                   RowBox[{"cos", "(", 
                    RowBox[{
                    SubscriptBox["\[Theta]", "p"], "(", "t", ")"}], ")"}]}], 
                  "+", 
                  RowBox[{"0.1`", " ", 
                   RowBox[{"sin", "(", 
                    RowBox[{
                    SubscriptBox["\[Theta]", "p"], "(", "t", ")"}], ")"}]}], 
                  "-", 
                  RowBox[{
                   SubscriptBox["x", "p"], "(", "t", ")"}], "+", "2"}], ")"}],
                 "2"], "+", 
               SuperscriptBox[
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"-", "0.1`"}], " ", 
                   RowBox[{"cos", "(", 
                    RowBox[{
                    SubscriptBox["\[Theta]", "p"], "(", "t", ")"}], ")"}]}], 
                  "-", 
                  RowBox[{"sin", "(", 
                   RowBox[{
                    SubscriptBox["\[Theta]", "p"], "(", "t", ")"}], ")"}], 
                  "-", 
                  RowBox[{
                   SubscriptBox["y", "p"], "(", "t", ")"}]}], ")"}], 
                "2"]}]]]}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"sin", "(", 
              RowBox[{
               SubscriptBox["\[Theta]", "p"], "(", "t", ")"}], ")"}], " ", 
             RowBox[{"(", 
              RowBox[{"2", "-", 
               RowBox[{
                SubscriptBox["x", "p"], "(", "t", ")"}]}], ")"}]}], "+", 
            RowBox[{
             RowBox[{"cos", "(", 
              RowBox[{
               SubscriptBox["\[Theta]", "p"], "(", "t", ")"}], ")"}], " ", 
             RowBox[{
              SubscriptBox["y", "p"], "(", "t", ")"}]}], "+", 
            RowBox[{"0.1`", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"cos", "(", 
                 RowBox[{
                  SubscriptBox["\[Theta]", "p"], "(", "t", ")"}], ")"}], " ", 
                RowBox[{"(", 
                 RowBox[{"2", "-", 
                  RowBox[{
                   SubscriptBox["x", "p"], "(", "t", ")"}]}], ")"}]}], "-", 
               RowBox[{
                RowBox[{"sin", "(", 
                 RowBox[{
                  SubscriptBox["\[Theta]", "p"], "(", "t", ")"}], ")"}], " ", 
                RowBox[{
                 SubscriptBox["y", "p"], "(", "t", ")"}]}]}], ")"}]}]}], 
           ")"}]}], "-", 
         RowBox[{"11.881188118811881`", " ", 
          RowBox[{"(", 
           RowBox[{"1", "-", 
            FractionBox["1", 
             SqrtBox[
              RowBox[{
               SuperscriptBox[
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"cos", "(", 
                   RowBox[{
                    SubscriptBox["\[Theta]", "p"], "(", "t", ")"}], ")"}], 
                  "+", 
                  RowBox[{"0.1`", " ", 
                   RowBox[{"sin", "(", 
                    RowBox[{
                    SubscriptBox["\[Theta]", "p"], "(", "t", ")"}], ")"}]}], 
                  "-", 
                  RowBox[{
                   SubscriptBox["x", "p"], "(", "t", ")"}]}], ")"}], "2"], 
               "+", 
               SuperscriptBox[
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"-", "0.1`"}], " ", 
                   RowBox[{"cos", "(", 
                    RowBox[{
                    SubscriptBox["\[Theta]", "p"], "(", "t", ")"}], ")"}]}], 
                  "+", 
                  RowBox[{"sin", "(", 
                   RowBox[{
                    SubscriptBox["\[Theta]", "p"], "(", "t", ")"}], ")"}], 
                  "-", 
                  RowBox[{
                   SubscriptBox["y", "p"], "(", "t", ")"}]}], ")"}], 
                "2"]}]]]}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"sin", "(", 
              RowBox[{
               SubscriptBox["\[Theta]", "p"], "(", "t", ")"}], ")"}], " ", 
             RowBox[{
              SubscriptBox["x", "p"], "(", "t", ")"}]}], "-", 
            RowBox[{
             RowBox[{"cos", "(", 
              RowBox[{
               SubscriptBox["\[Theta]", "p"], "(", "t", ")"}], ")"}], " ", 
             RowBox[{
              SubscriptBox["y", "p"], "(", "t", ")"}]}], "+", 
            RowBox[{"0.1`", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"-", 
                 RowBox[{"cos", "(", 
                  RowBox[{
                   SubscriptBox["\[Theta]", "p"], "(", "t", ")"}], ")"}]}], 
                " ", 
                RowBox[{
                 SubscriptBox["x", "p"], "(", "t", ")"}]}], "-", 
               RowBox[{
                RowBox[{"sin", "(", 
                 RowBox[{
                  SubscriptBox["\[Theta]", "p"], "(", "t", ")"}], ")"}], " ", 
                RowBox[{
                 SubscriptBox["y", "p"], "(", "t", ")"}]}]}], ")"}]}]}], 
           ")"}]}]}]}
      },
      GridBoxAlignment->{
       "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
        "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}]}],
   Function[BoxForm`e$, 
    MatrixForm[BoxForm`e$]]], TraditionalForm]], "Output",
 CellChangeTimes->{
  3.7151952745734086`*^9, 3.7151953621678376`*^9, {3.715195412780658*^9, 
   3.715195475931634*^9}, {3.7151955676136723`*^9, 3.7151955791613226`*^9}, 
   3.7151965163914356`*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      SuperscriptBox[
       SubscriptBox["x", "p"], "\[Prime]\[Prime]",
       MultilineFunction->None], "[", "t", "]"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      SuperscriptBox[
       SubscriptBox["y", "p"], "\[Prime]\[Prime]",
       MultilineFunction->None], "[", "t", "]"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      SuperscriptBox[
       SubscriptBox["\[Theta]", "p"], "\[Prime]\[Prime]",
       MultilineFunction->None], "[", "t", "]"}], "}"}]}], "}"}], "\[Equal]", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{"2", "-", 
         RowBox[{"Cos", "[", 
          RowBox[{
           SubscriptBox["\[Theta]", "p"], "[", "t", "]"}], "]"}], "+", 
         RowBox[{"0.1`", " ", 
          RowBox[{"Sin", "[", 
           RowBox[{
            SubscriptBox["\[Theta]", "p"], "[", "t", "]"}], "]"}]}], "-", 
         RowBox[{
          SubscriptBox["x", "p"], "[", "t", "]"}]}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{"1", "-", 
         FractionBox["1", 
          SqrtBox[
           RowBox[{
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{"2", "-", 
               RowBox[{"Cos", "[", 
                RowBox[{
                 SubscriptBox["\[Theta]", "p"], "[", "t", "]"}], "]"}], "+", 
               RowBox[{"0.1`", " ", 
                RowBox[{"Sin", "[", 
                 RowBox[{
                  SubscriptBox["\[Theta]", "p"], "[", "t", "]"}], "]"}]}], 
               "-", 
               RowBox[{
                SubscriptBox["x", "p"], "[", "t", "]"}]}], ")"}], "2"], "+", 
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"-", "0.1`"}], " ", 
                RowBox[{"Cos", "[", 
                 RowBox[{
                  SubscriptBox["\[Theta]", "p"], "[", "t", "]"}], "]"}]}], 
               "-", 
               RowBox[{"Sin", "[", 
                RowBox[{
                 SubscriptBox["\[Theta]", "p"], "[", "t", "]"}], "]"}], "-", 
               RowBox[{
                SubscriptBox["y", "p"], "[", "t", "]"}]}], ")"}], "2"]}]]]}], 
        ")"}]}], "+", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"Cos", "[", 
          RowBox[{
           SubscriptBox["\[Theta]", "p"], "[", "t", "]"}], "]"}], "+", 
         RowBox[{"0.1`", " ", 
          RowBox[{"Sin", "[", 
           RowBox[{
            SubscriptBox["\[Theta]", "p"], "[", "t", "]"}], "]"}]}], "-", 
         RowBox[{
          SubscriptBox["x", "p"], "[", "t", "]"}]}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{"1", "-", 
         FractionBox["1", 
          SqrtBox[
           RowBox[{
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{
               RowBox[{"Cos", "[", 
                RowBox[{
                 SubscriptBox["\[Theta]", "p"], "[", "t", "]"}], "]"}], "+", 
               RowBox[{"0.1`", " ", 
                RowBox[{"Sin", "[", 
                 RowBox[{
                  SubscriptBox["\[Theta]", "p"], "[", "t", "]"}], "]"}]}], 
               "-", 
               RowBox[{
                SubscriptBox["x", "p"], "[", "t", "]"}]}], ")"}], "2"], "+", 
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"-", "0.1`"}], " ", 
                RowBox[{"Cos", "[", 
                 RowBox[{
                  SubscriptBox["\[Theta]", "p"], "[", "t", "]"}], "]"}]}], 
               "+", 
               RowBox[{"Sin", "[", 
                RowBox[{
                 SubscriptBox["\[Theta]", "p"], "[", "t", "]"}], "]"}], "-", 
               RowBox[{
                SubscriptBox["y", "p"], "[", "t", "]"}]}], ")"}], "2"]}]]]}], 
        ")"}]}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "0.04905`"}], "+", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"1", "-", 
         FractionBox["1", 
          SqrtBox[
           RowBox[{
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{"2", "-", 
               RowBox[{"Cos", "[", 
                RowBox[{
                 SubscriptBox["\[Theta]", "p"], "[", "t", "]"}], "]"}], "+", 
               RowBox[{"0.1`", " ", 
                RowBox[{"Sin", "[", 
                 RowBox[{
                  SubscriptBox["\[Theta]", "p"], "[", "t", "]"}], "]"}]}], 
               "-", 
               RowBox[{
                SubscriptBox["x", "p"], "[", "t", "]"}]}], ")"}], "2"], "+", 
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"-", "0.1`"}], " ", 
                RowBox[{"Cos", "[", 
                 RowBox[{
                  SubscriptBox["\[Theta]", "p"], "[", "t", "]"}], "]"}]}], 
               "-", 
               RowBox[{"Sin", "[", 
                RowBox[{
                 SubscriptBox["\[Theta]", "p"], "[", "t", "]"}], "]"}], "-", 
               RowBox[{
                SubscriptBox["y", "p"], "[", "t", "]"}]}], ")"}], "2"]}]]]}], 
        ")"}], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"-", "0.1`"}], " ", 
          RowBox[{"Cos", "[", 
           RowBox[{
            SubscriptBox["\[Theta]", "p"], "[", "t", "]"}], "]"}]}], "-", 
         RowBox[{"Sin", "[", 
          RowBox[{
           SubscriptBox["\[Theta]", "p"], "[", "t", "]"}], "]"}], "-", 
         RowBox[{
          SubscriptBox["y", "p"], "[", "t", "]"}]}], ")"}]}], "+", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"1", "-", 
         FractionBox["1", 
          SqrtBox[
           RowBox[{
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{
               RowBox[{"Cos", "[", 
                RowBox[{
                 SubscriptBox["\[Theta]", "p"], "[", "t", "]"}], "]"}], "+", 
               RowBox[{"0.1`", " ", 
                RowBox[{"Sin", "[", 
                 RowBox[{
                  SubscriptBox["\[Theta]", "p"], "[", "t", "]"}], "]"}]}], 
               "-", 
               RowBox[{
                SubscriptBox["x", "p"], "[", "t", "]"}]}], ")"}], "2"], "+", 
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"-", "0.1`"}], " ", 
                RowBox[{"Cos", "[", 
                 RowBox[{
                  SubscriptBox["\[Theta]", "p"], "[", "t", "]"}], "]"}]}], 
               "+", 
               RowBox[{"Sin", "[", 
                RowBox[{
                 SubscriptBox["\[Theta]", "p"], "[", "t", "]"}], "]"}], "-", 
               RowBox[{
                SubscriptBox["y", "p"], "[", "t", "]"}]}], ")"}], "2"]}]]]}], 
        ")"}], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"-", "0.1`"}], " ", 
          RowBox[{"Cos", "[", 
           RowBox[{
            SubscriptBox["\[Theta]", "p"], "[", "t", "]"}], "]"}]}], "+", 
         RowBox[{"Sin", "[", 
          RowBox[{
           SubscriptBox["\[Theta]", "p"], "[", "t", "]"}], "]"}], "-", 
         RowBox[{
          SubscriptBox["y", "p"], "[", "t", "]"}]}], ")"}]}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{"-", "11.881188118811881`"}], " ", 
       RowBox[{"(", 
        RowBox[{"1", "-", 
         FractionBox["1", 
          SqrtBox[
           RowBox[{
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{"2", "-", 
               RowBox[{"Cos", "[", 
                RowBox[{
                 SubscriptBox["\[Theta]", "p"], "[", "t", "]"}], "]"}], "+", 
               RowBox[{"0.1`", " ", 
                RowBox[{"Sin", "[", 
                 RowBox[{
                  SubscriptBox["\[Theta]", "p"], "[", "t", "]"}], "]"}]}], 
               "-", 
               RowBox[{
                SubscriptBox["x", "p"], "[", "t", "]"}]}], ")"}], "2"], "+", 
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"-", "0.1`"}], " ", 
                RowBox[{"Cos", "[", 
                 RowBox[{
                  SubscriptBox["\[Theta]", "p"], "[", "t", "]"}], "]"}]}], 
               "-", 
               RowBox[{"Sin", "[", 
                RowBox[{
                 SubscriptBox["\[Theta]", "p"], "[", "t", "]"}], "]"}], "-", 
               RowBox[{
                SubscriptBox["y", "p"], "[", "t", "]"}]}], ")"}], "2"]}]]]}], 
        ")"}], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"Sin", "[", 
           RowBox[{
            SubscriptBox["\[Theta]", "p"], "[", "t", "]"}], "]"}], " ", 
          RowBox[{"(", 
           RowBox[{"2", "-", 
            RowBox[{
             SubscriptBox["x", "p"], "[", "t", "]"}]}], ")"}]}], "+", 
         RowBox[{
          RowBox[{"Cos", "[", 
           RowBox[{
            SubscriptBox["\[Theta]", "p"], "[", "t", "]"}], "]"}], " ", 
          RowBox[{
           SubscriptBox["y", "p"], "[", "t", "]"}]}], "+", 
         RowBox[{"0.1`", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"Cos", "[", 
              RowBox[{
               SubscriptBox["\[Theta]", "p"], "[", "t", "]"}], "]"}], " ", 
             RowBox[{"(", 
              RowBox[{"2", "-", 
               RowBox[{
                SubscriptBox["x", "p"], "[", "t", "]"}]}], ")"}]}], "-", 
            RowBox[{
             RowBox[{"Sin", "[", 
              RowBox[{
               SubscriptBox["\[Theta]", "p"], "[", "t", "]"}], "]"}], " ", 
             RowBox[{
              SubscriptBox["y", "p"], "[", "t", "]"}]}]}], ")"}]}]}], ")"}]}],
       "-", 
      RowBox[{"11.881188118811881`", " ", 
       RowBox[{"(", 
        RowBox[{"1", "-", 
         FractionBox["1", 
          SqrtBox[
           RowBox[{
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{
               RowBox[{"Cos", "[", 
                RowBox[{
                 SubscriptBox["\[Theta]", "p"], "[", "t", "]"}], "]"}], "+", 
               RowBox[{"0.1`", " ", 
                RowBox[{"Sin", "[", 
                 RowBox[{
                  SubscriptBox["\[Theta]", "p"], "[", "t", "]"}], "]"}]}], 
               "-", 
               RowBox[{
                SubscriptBox["x", "p"], "[", "t", "]"}]}], ")"}], "2"], "+", 
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"-", "0.1`"}], " ", 
                RowBox[{"Cos", "[", 
                 RowBox[{
                  SubscriptBox["\[Theta]", "p"], "[", "t", "]"}], "]"}]}], 
               "+", 
               RowBox[{"Sin", "[", 
                RowBox[{
                 SubscriptBox["\[Theta]", "p"], "[", "t", "]"}], "]"}], "-", 
               RowBox[{
                SubscriptBox["y", "p"], "[", "t", "]"}]}], ")"}], "2"]}]]]}], 
        ")"}], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"Sin", "[", 
           RowBox[{
            SubscriptBox["\[Theta]", "p"], "[", "t", "]"}], "]"}], " ", 
          RowBox[{
           SubscriptBox["x", "p"], "[", "t", "]"}]}], "-", 
         RowBox[{
          RowBox[{"Cos", "[", 
           RowBox[{
            SubscriptBox["\[Theta]", "p"], "[", "t", "]"}], "]"}], " ", 
          RowBox[{
           SubscriptBox["y", "p"], "[", "t", "]"}]}], "+", 
         RowBox[{"0.1`", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"-", 
              RowBox[{"Cos", "[", 
               RowBox[{
                SubscriptBox["\[Theta]", "p"], "[", "t", "]"}], "]"}]}], " ", 
             RowBox[{
              SubscriptBox["x", "p"], "[", "t", "]"}]}], "-", 
            RowBox[{
             RowBox[{"Sin", "[", 
              RowBox[{
               SubscriptBox["\[Theta]", "p"], "[", "t", "]"}], "]"}], " ", 
             RowBox[{
              SubscriptBox["y", "p"], "[", "t", "]"}]}]}], ")"}]}]}], 
        ")"}]}]}], "}"}]}], "}"}]}]], "Output",
 CellChangeTimes->{
  3.7151952745734086`*^9, 3.7151953621678376`*^9, {3.715195412780658*^9, 
   3.715195475931634*^9}, {3.7151955676136723`*^9, 3.7151955791613226`*^9}, 
   3.715196516410447*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     SuperscriptBox[
      SubscriptBox["x", "p"], "\[Prime]\[Prime]",
      MultilineFunction->None], "[", "t", "]"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     SuperscriptBox[
      SubscriptBox["y", "p"], "\[Prime]\[Prime]",
      MultilineFunction->None], "[", "t", "]"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     SuperscriptBox[
      SubscriptBox["\[Theta]", "p"], "\[Prime]\[Prime]",
      MultilineFunction->None], "[", "t", "]"}], "}"}]}], "}"}]], "Input"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"EOMtoSolve", "[", 
   RowBox[{"[", 
    RowBox[{"1", ",", "All"}], "]"}], "]"}], " ", 
  RowBox[{"(*", 
   RowBox[{"[", 
    RowBox[{"[", "1", "]"}], "]"}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"EOMtoSolve", "[", 
   RowBox[{"[", 
    RowBox[{"2", ",", "1"}], "]"}], "]"}], "[", 
  RowBox[{"[", "1", "]"}], "]"}]}], "Input",
 CellChangeTimes->{{3.715195715246641*^9, 3.7151957527584944`*^9}, {
  3.7151961207661977`*^9, 3.7151961519808755`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     SuperscriptBox[
      SubscriptBox["x", "p"], "\[Prime]\[Prime]",
      MultilineFunction->None], "[", "t", "]"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     SuperscriptBox[
      SubscriptBox["y", "p"], "\[Prime]\[Prime]",
      MultilineFunction->None], "[", "t", "]"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     SuperscriptBox[
      SubscriptBox["\[Theta]", "p"], "\[Prime]\[Prime]",
      MultilineFunction->None], "[", "t", "]"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.715195716232295*^9, 3.7151957532648306`*^9}, {
  3.715196125758503*^9, 3.715196152925502*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"(", 
    RowBox[{"2", "-", 
     RowBox[{"Cos", "[", 
      RowBox[{
       SubscriptBox["\[Theta]", "p"], "[", "t", "]"}], "]"}], "+", 
     RowBox[{"0.1`", " ", 
      RowBox[{"Sin", "[", 
       RowBox[{
        SubscriptBox["\[Theta]", "p"], "[", "t", "]"}], "]"}]}], "-", 
     RowBox[{
      SubscriptBox["x", "p"], "[", "t", "]"}]}], ")"}], " ", 
   RowBox[{"(", 
    RowBox[{"1", "-", 
     FractionBox["1", 
      SqrtBox[
       RowBox[{
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"2", "-", 
           RowBox[{"Cos", "[", 
            RowBox[{
             SubscriptBox["\[Theta]", "p"], "[", "t", "]"}], "]"}], "+", 
           RowBox[{"0.1`", " ", 
            RowBox[{"Sin", "[", 
             RowBox[{
              SubscriptBox["\[Theta]", "p"], "[", "t", "]"}], "]"}]}], "-", 
           RowBox[{
            SubscriptBox["x", "p"], "[", "t", "]"}]}], ")"}], "2"], "+", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"-", "0.1`"}], " ", 
            RowBox[{"Cos", "[", 
             RowBox[{
              SubscriptBox["\[Theta]", "p"], "[", "t", "]"}], "]"}]}], "-", 
           RowBox[{"Sin", "[", 
            RowBox[{
             SubscriptBox["\[Theta]", "p"], "[", "t", "]"}], "]"}], "-", 
           RowBox[{
            SubscriptBox["y", "p"], "[", "t", "]"}]}], ")"}], "2"]}]]]}], 
    ")"}]}], "+", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     RowBox[{"Cos", "[", 
      RowBox[{
       SubscriptBox["\[Theta]", "p"], "[", "t", "]"}], "]"}], "+", 
     RowBox[{"0.1`", " ", 
      RowBox[{"Sin", "[", 
       RowBox[{
        SubscriptBox["\[Theta]", "p"], "[", "t", "]"}], "]"}]}], "-", 
     RowBox[{
      SubscriptBox["x", "p"], "[", "t", "]"}]}], ")"}], " ", 
   RowBox[{"(", 
    RowBox[{"1", "-", 
     FractionBox["1", 
      SqrtBox[
       RowBox[{
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"Cos", "[", 
            RowBox[{
             SubscriptBox["\[Theta]", "p"], "[", "t", "]"}], "]"}], "+", 
           RowBox[{"0.1`", " ", 
            RowBox[{"Sin", "[", 
             RowBox[{
              SubscriptBox["\[Theta]", "p"], "[", "t", "]"}], "]"}]}], "-", 
           RowBox[{
            SubscriptBox["x", "p"], "[", "t", "]"}]}], ")"}], "2"], "+", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"-", "0.1`"}], " ", 
            RowBox[{"Cos", "[", 
             RowBox[{
              SubscriptBox["\[Theta]", "p"], "[", "t", "]"}], "]"}]}], "+", 
           RowBox[{"Sin", "[", 
            RowBox[{
             SubscriptBox["\[Theta]", "p"], "[", "t", "]"}], "]"}], "-", 
           RowBox[{
            SubscriptBox["y", "p"], "[", "t", "]"}]}], ")"}], "2"]}]]]}], 
    ")"}]}]}]], "Output",
 CellChangeTimes->{{3.715195716232295*^9, 3.7151957532648306`*^9}, {
  3.715196125758503*^9, 3.71519615293451*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"numericEqs", "=", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"X1", "'"}], "[", "t", "]"}], "\[Equal]", 
         RowBox[{"X2", "[", "t", "]"}]}], ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{
          RowBox[{"X2", "'"}], "[", "t", "]"}], "\[Equal]", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"EOMtoSolve", "[", 
            RowBox[{"[", 
             RowBox[{"2", ",", "1"}], "]"}], "]"}], "[", 
           RowBox[{"[", "1", "]"}], "]"}], ")"}]}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{
          RowBox[{"X3", "'"}], "[", "t", "]"}], "\[Equal]", 
         RowBox[{"X4", "[", "t", "]"}]}], ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{
          RowBox[{"X4", "'"}], "[", "t", "]"}], "\[Equal]", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"EOMtoSolve", "[", 
            RowBox[{"[", 
             RowBox[{"2", ",", "2"}], "]"}], "]"}], "[", 
           RowBox[{"[", "1", "]"}], "]"}], ")"}]}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{
          RowBox[{"X5", "'"}], "[", "t", "]"}], "\[Equal]", 
         RowBox[{"X6", "[", "t", "]"}]}], ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{
          RowBox[{"X6", "'"}], "[", "t", "]"}], "\[Equal]", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"EOMtoSolve", "[", 
            RowBox[{"[", 
             RowBox[{"2", ",", "3"}], "]"}], "]"}], "[", 
           RowBox[{"[", "1", "]"}], "]"}], ")"}]}]}], "}"}], "/.", 
      RowBox[{
       RowBox[{
        SubscriptBox["x", "p"], "[", "t", "]"}], "\[Rule]", 
       RowBox[{"X1", "[", "t", "]"}]}]}], "/.", 
     RowBox[{
      RowBox[{
       SubscriptBox["y", "p"], "[", "t", "]"}], "\[Rule]", 
      RowBox[{"X3", "[", "t", "]"}]}]}], "/.", 
    RowBox[{
     RowBox[{
      SubscriptBox["\[Theta]", "p"], "[", "t", "]"}], "\[Rule]", 
     RowBox[{"X5", "[", "t", "]"}]}]}]}], 
  ";"}], "\[IndentingNewLine]", "NumericTestParams", "\[IndentingNewLine]", \
"NumericParametersTest", "\[IndentingNewLine]", 
 RowBox[{"startValues", "=", 
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{"X1", "[", "0", "]"}], "\[Equal]", 
       SubscriptBox["w", "p"]}], ",", 
      RowBox[{
       RowBox[{"X2", "[", "0", "]"}], "==", "0.001"}], ",", 
      RowBox[{
       RowBox[{"X3", "[", "0", "]"}], "\[Equal]", 
       RowBox[{
        RowBox[{"-", "1"}], "-", 
        SubscriptBox["h", "p"], "-", 
        FractionBox["\[Gamma]", "2"]}]}], ",", 
      RowBox[{
       RowBox[{"X4", "[", "0", "]"}], "==", "0.01"}], ",", 
      RowBox[{
       RowBox[{"X5", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
      RowBox[{
       RowBox[{"X6", "[", "0", "]"}], "==", "0.001"}]}], "}"}], "/.", 
    "NumericTestParams"}], "/.", 
   "NumericParametersTest"}]}], "\[IndentingNewLine]", 
 RowBox[{"T", "=", "120"}], "\[IndentingNewLine]", 
 RowBox[{"sol1", " ", "=", " ", 
  RowBox[{"NDSolve", "[", " ", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"numericEqs", ",", " ", "startValues"}], "}"}], ",", " ", 
    RowBox[{"{", 
     RowBox[{
     "X1", ",", " ", "X2", ",", "X3", ",", "X4", ",", "X5", ",", "X6"}], 
     "}"}], ",", " ", 
    RowBox[{"{", 
     RowBox[{"t", ",", " ", "0", ",", " ", "T"}], "}"}]}], " ", 
   "]"}]}]}], "Input",
 CellChangeTimes->{{3.7151956429896145`*^9, 3.7151956983144226`*^9}, {
   3.7151957689011908`*^9, 3.7151957760569324`*^9}, {3.7151959456336617`*^9, 
   3.7151960989317284`*^9}, {3.71519616949548*^9, 3.7151963007035255`*^9}, {
   3.7151963495008574`*^9, 3.7151964040720153`*^9}, {3.715196435651942*^9, 
   3.715196440840378*^9}, {3.715196574947234*^9, 3.7151966136010323`*^9}, {
   3.715196645367077*^9, 3.715196650809683*^9}, 3.7151966914185905`*^9, {
   3.7151967937358932`*^9, 3.715196829596653*^9}, {3.7151968827448683`*^9, 
   3.7151968891461077`*^9}, {3.7151969513829613`*^9, 3.7151969801129956`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"\[Kappa]", "\[Rule]", "1"}], ",", 
   RowBox[{"\[ScriptCapitalL]", "\[Rule]", "1"}], ",", 
   RowBox[{
    SubsuperscriptBox["\[Omega]", "s", "2"], "\[Rule]", "100"}], ",", 
   RowBox[{"\[Alpha]", "\[Rule]", "11.881188118811881`"}], ",", 
   RowBox[{"\[Gamma]", "\[Rule]", "0.04905`"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.715196005734481*^9, 3.715196411904206*^9, 3.715196442289338*^9, 
   3.715196522087208*^9, 3.7151966197440996`*^9, 3.715196651203944*^9, 
   3.7151966919339347`*^9, {3.7151968187124395`*^9, 3.7151968300629606`*^9}, 
   3.7151968898305635`*^9, {3.715196957810219*^9, 3.715196980914527*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    SubscriptBox["k", "1"], "\[Rule]", "200"}], ",", 
   RowBox[{
    SubscriptBox["k", "2"], "\[Rule]", 
    SubscriptBox["k", "1"]}], ",", 
   RowBox[{
    SubscriptBox["L0", "1"], "\[Rule]", "2"}], ",", 
   RowBox[{
    SubscriptBox["L0", "2"], "\[Rule]", 
    SubscriptBox["L0", "1"]}], ",", 
   RowBox[{
    SubscriptBox["m", "p"], "\[Rule]", "2"}], ",", 
   RowBox[{
    SubscriptBox["h", "p"], "\[Rule]", "0.1`"}], ",", 
   RowBox[{
    SubscriptBox["w", "p"], "\[Rule]", "1"}], ",", 
   RowBox[{"g", "\[Rule]", "9.81`"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.715196005734481*^9, 3.715196411904206*^9, 3.715196442289338*^9, 
   3.715196522087208*^9, 3.7151966197440996`*^9, 3.715196651203944*^9, 
   3.7151966919339347`*^9, {3.7151968187124395`*^9, 3.7151968300629606`*^9}, 
   3.7151968898305635`*^9, {3.715196957810219*^9, 3.715196980919532*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{"X1", "[", "0", "]"}], "\[Equal]", "1"}], ",", 
   RowBox[{
    RowBox[{"X2", "[", "0", "]"}], "\[Equal]", "0.001`"}], ",", 
   RowBox[{
    RowBox[{"X3", "[", "0", "]"}], "\[Equal]", 
    RowBox[{"-", "1.124525`"}]}], ",", 
   RowBox[{
    RowBox[{"X4", "[", "0", "]"}], "\[Equal]", "0.01`"}], ",", 
   RowBox[{
    RowBox[{"X5", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
   RowBox[{
    RowBox[{"X6", "[", "0", "]"}], "\[Equal]", "0.001`"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.715196005734481*^9, 3.715196411904206*^9, 3.715196442289338*^9, 
   3.715196522087208*^9, 3.7151966197440996`*^9, 3.715196651203944*^9, 
   3.7151966919339347`*^9, {3.7151968187124395`*^9, 3.7151968300629606`*^9}, 
   3.7151968898305635`*^9, {3.715196957810219*^9, 3.7151969809235325`*^9}}],

Cell[BoxData["120"], "Output",
 CellChangeTimes->{
  3.715196005734481*^9, 3.715196411904206*^9, 3.715196442289338*^9, 
   3.715196522087208*^9, 3.7151966197440996`*^9, 3.715196651203944*^9, 
   3.7151966919339347`*^9, {3.7151968187124395`*^9, 3.7151968300629606`*^9}, 
   3.7151968898305635`*^9, {3.715196957810219*^9, 3.7151969809265356`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"X1", "\[Rule]", 
     TagBox[
      TemplateBox[{RowBox[{
          StyleBox[
           TagBox["InterpolatingFunction", "SummaryHead"], 
           "NonInterpretableSummary"], 
          StyleBox["[", "NonInterpretableSummary"], 
          DynamicModuleBox[{Typeset`open$$ = False}, 
           PanelBox[
            PaneSelectorBox[{False -> GridBox[{{
                  PaneBox[
                   ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquarePlusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                   Alignment -> {Center, Center}, ImageSize -> 
                   Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                  GraphicsBox[{{{}, {}, {
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1]], 
                    LineBox[CompressedData["
1:eJwVz3lQFHQUB/DllohL5BJBPKZFAeWQQjl+j4UElkPY5T5WInJ0OJMrNkQQ
FhZLmNLk0hXYSFAYsgU1ChtESoEJClFEItCGltr195MVd6GN7dcfb958Z96b
9z470nM5H2gzGAxfWv935TaDzGHTIf/b9z6hiaAqv2nfjnAN8nqS1j1lQFAP
8XkwGWkGrGKxrM2EoMKccw/rDtlAz1pu9pbNBEVFOjOrN7aDZcRR/3M034r4
1KrMazc4SiXXFul8ZbpT+r1dTjAasqynY0jQS9csA/YxF9iiGy8R0XsHLJ2d
ithu8CyRNZlJMKofXSHjfh7wlGV+YeM5Rj7JdccCkw9AQPumWtFTjPTFpeU/
xLwNVxQW25g0x+n4y0KDvGFt5Strl0WMlP5Tuq9SD0Est+lrgRyjm+7fDYm5
vtDZqLV3VY3Rj5oi5/x8f2hFxtfU+gS5Ks7kdwYBFMjZg9PGBOnfzd/V7BcA
ws9m+tbNCRKW/dzVEsaCxY8HjvOor+kiR7s1OBBqIr+3umlKEPcSuPclBMHJ
+2FLAdR3ZJ9N7UTGu1BUNqN00CJo1s5WIucdBt/AkqVvVjAyUVZK7HKCYd35
UTv6A6NfXG2qwzND4MWdShPuHEaPyRcVVe+HgpwxnyOfxUjQdoo7nscGG2J3
P2sBo7s9dUqrrDCwjR740l6GUedVw5MflobDTknCrDf1TbrmWE7VRIDF1a1e
AuoTmqrPvlMRCc0Za4RDfdJ5xaPr9UdAxvpnv4j6ZFVn+eaHo+DJ8o7nA9Qn
WDAVTQ5Fwf6O5a32ZgSteIx2W4dEQ6GF9q8hbxDE9GzanTYSDeetR+78qU2Q
297LNW4RHPBmCdZLXmGkNdHP1R7nwL8yhaZhCSPFwcC++BAuGEifWUl+w+jb
Fj2G1wQXbHkGMh71BV+f67OIiIEGM1WD5+8Ydd2QxvCnY+C8a0ul318YuZSd
qM1IjgWFh/nMvnWMilUbb0XNxIJPgU6FsR5BF0886B0+Ggeny4+/yHuToFPC
zjbv+Tjo77V5yKY+Qbaa6Z4UD2y+5KWE+t4LFTTdWIiHwUmVZzP16U3tLPDk
JYBL70+xjUZ0n7t60G8pAYoNoVqsQ5BVs++F0cxEEA+PteS/pvfrGuMTpYkQ
xG8KL5Ri1F2yRz8vNwk2LdaUdVBf1+YJe6E8CYTWueVT1Mdv73J0KkqG8ccC
n6x5jLJVqlth6mRgODjWjy1jxFSn3M4rSYE9aW5nnFQY9b9eFdtrpcJgSp5R
qy5BRlfEqrHTqcAXjXz+N/2P7fCRUqNJBSGzs3SO/v8f3zHMGg==
                    "]]}}}, {
                   DisplayFunction -> Identity, AspectRatio -> 1, 
                    Axes -> {False, False}, AxesLabel -> {None, None}, 
                    AxesOrigin -> {0, 0.9945}, DisplayFunction :> Identity, 
                    Frame -> {{True, True}, {True, True}}, 
                    FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                    Directive[
                    Opacity[0.5], 
                    Thickness[Tiny], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    FrameTicks -> {{None, None}, {None, None}}, 
                    GridLines -> {None, None}, GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> 
                    Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}], 
                    Method -> {
                    "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
                    AbsolutePointSize[6], "ScalingFunctions" -> None}, 
                    PlotRange -> {{0., 120.}, {0.9954065904557324, 
                    1.0045727608072552`}}, PlotRangeClipping -> True, 
                    PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
                  GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "120.`"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                   BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}], True -> GridBox[{{
                  PaneBox[
                   ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquareMinusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                   Alignment -> {Center, Center}, ImageSize -> 
                   Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                  GraphicsBox[{{{}, {}, {
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1]], 
                    LineBox[CompressedData["
1:eJwVz3lQFHQUB/DllohL5BJBPKZFAeWQQjl+j4UElkPY5T5WInJ0OJMrNkQQ
FhZLmNLk0hXYSFAYsgU1ChtESoEJClFEItCGltr195MVd6GN7dcfb958Z96b
9z470nM5H2gzGAxfWv935TaDzGHTIf/b9z6hiaAqv2nfjnAN8nqS1j1lQFAP
8XkwGWkGrGKxrM2EoMKccw/rDtlAz1pu9pbNBEVFOjOrN7aDZcRR/3M034r4
1KrMazc4SiXXFul8ZbpT+r1dTjAasqynY0jQS9csA/YxF9iiGy8R0XsHLJ2d
ithu8CyRNZlJMKofXSHjfh7wlGV+YeM5Rj7JdccCkw9AQPumWtFTjPTFpeU/
xLwNVxQW25g0x+n4y0KDvGFt5Strl0WMlP5Tuq9SD0Est+lrgRyjm+7fDYm5
vtDZqLV3VY3Rj5oi5/x8f2hFxtfU+gS5Ks7kdwYBFMjZg9PGBOnfzd/V7BcA
ws9m+tbNCRKW/dzVEsaCxY8HjvOor+kiR7s1OBBqIr+3umlKEPcSuPclBMHJ
+2FLAdR3ZJ9N7UTGu1BUNqN00CJo1s5WIucdBt/AkqVvVjAyUVZK7HKCYd35
UTv6A6NfXG2qwzND4MWdShPuHEaPyRcVVe+HgpwxnyOfxUjQdoo7nscGG2J3
P2sBo7s9dUqrrDCwjR740l6GUedVw5MflobDTknCrDf1TbrmWE7VRIDF1a1e
AuoTmqrPvlMRCc0Za4RDfdJ5xaPr9UdAxvpnv4j6ZFVn+eaHo+DJ8o7nA9Qn
WDAVTQ5Fwf6O5a32ZgSteIx2W4dEQ6GF9q8hbxDE9GzanTYSDeetR+78qU2Q
297LNW4RHPBmCdZLXmGkNdHP1R7nwL8yhaZhCSPFwcC++BAuGEifWUl+w+jb
Fj2G1wQXbHkGMh71BV+f67OIiIEGM1WD5+8Ydd2QxvCnY+C8a0ul318YuZSd
qM1IjgWFh/nMvnWMilUbb0XNxIJPgU6FsR5BF0886B0+Ggeny4+/yHuToFPC
zjbv+Tjo77V5yKY+Qbaa6Z4UD2y+5KWE+t4LFTTdWIiHwUmVZzP16U3tLPDk
JYBL70+xjUZ0n7t60G8pAYoNoVqsQ5BVs++F0cxEEA+PteS/pvfrGuMTpYkQ
xG8KL5Ri1F2yRz8vNwk2LdaUdVBf1+YJe6E8CYTWueVT1Mdv73J0KkqG8ccC
n6x5jLJVqlth6mRgODjWjy1jxFSn3M4rSYE9aW5nnFQY9b9eFdtrpcJgSp5R
qy5BRlfEqrHTqcAXjXz+N/2P7fCRUqNJBSGzs3SO/v8f3zHMGg==
                    "]]}}}, {
                   DisplayFunction -> Identity, AspectRatio -> 1, 
                    Axes -> {False, False}, AxesLabel -> {None, None}, 
                    AxesOrigin -> {0, 0.9945}, DisplayFunction :> Identity, 
                    Frame -> {{True, True}, {True, True}}, 
                    FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                    Directive[
                    Opacity[0.5], 
                    Thickness[Tiny], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    FrameTicks -> {{None, None}, {None, None}}, 
                    GridLines -> {None, None}, GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> 
                    Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}], 
                    Method -> {
                    "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
                    AbsolutePointSize[6], "ScalingFunctions" -> None}, 
                    PlotRange -> {{0., 120.}, {0.9954065904557324, 
                    1.0045727608072552`}}, PlotRangeClipping -> True, 
                    PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
                  GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "120.`"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Order: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Hermite\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Periodic: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["False", "SummaryItem"]}]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                   BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}]}, 
             Dynamic[Typeset`open$$], ImageSize -> Automatic], 
            BaselinePosition -> Baseline], DynamicModuleValues :> {}], 
          StyleBox["]", "NonInterpretableSummary"]}]},
       "CopyTag",
       DisplayFunction->(#& ),
       InterpretationFunction->("InterpolatingFunction[{{0., 120.}}, <>]"& )],
      False,
      Editable->False,
      SelectWithContents->True,
      Selectable->False]}], ",", 
    RowBox[{"X2", "\[Rule]", 
     TagBox[
      TemplateBox[{RowBox[{
          StyleBox[
           TagBox["InterpolatingFunction", "SummaryHead"], 
           "NonInterpretableSummary"], 
          StyleBox["[", "NonInterpretableSummary"], 
          DynamicModuleBox[{Typeset`open$$ = False}, 
           PanelBox[
            PaneSelectorBox[{False -> GridBox[{{
                  PaneBox[
                   ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquarePlusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                   Alignment -> {Center, Center}, ImageSize -> 
                   Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                  GraphicsBox[{{{}, {}, {
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1]], 
                    LineBox[CompressedData["
1:eJwB0QMu/CFib1JlAgAAADwAAAACAAAA9xwHa8MPwT6So/HSTWJQP4Q91Tyl
TP8/Hp6/JLd1Tj+t8DvJ0E4QQDFewalbbEM/dW6N1I46GECLs/GCRckxP1BO
KyeG/h9ADgdAwmRXKb+3TYwWfjUkQI7HmmqymEO/g2IoYsQjKEAoeYAH1mtM
v/EtbAdKZixAUXfk0UyBUL80FSsodkowQApod51s+U2/j8ry8Mw9MkA7dTOo
w81EvztbjmZDWzRAvnrZQ2kZM78Go3yAv1Q2QGnWmy0hySw/VgM+7ElEOECi
BWHNzk5BP/c+0wT0XTpAPqrivW8rTT+2MbvBo1M8QAdjZjnIXlA/xv92K3Nz
PkC+Yjg7S+hNPy3zgnOoREBAKMXmJQGURj8GwnMjmj1BQCWekQ5NgDM/iH7O
qZtLQkAACs4lr8Akv5mWUgKgR0NAHeMD0EJvQb9TnEAxtFhEQMOSXtHxB02/
Ty4Yic9kRUDvSuzZ0zxQv9obGbPtXkZAQbEloqc2Tr8O94OzG25HQAhopdkF
IUe/0S0YhkxrSEDThHyZ/AYxv9fwlYGEY0lAMCxWTAXDEz+FoX1TzHBKQKfN
iNejz0I/wq2O9xZsS0Dr9u/nLGlLP6inCXJxfExAiXT6BGY7UD/QLW4V04dN
QNBMJ4lzD08/iA/8ijeBTkBErjVbJSpHP+je89arj09AfKVt0FdLND/shIp6
EUZQQHc5azh11RS/heAPntDBUEBtAj+7fb9Bv/IyyqwXSFFAYYQQiGuKSr8n
M5kkYMVRQKgQmvDPT1C/MCqdhzBNUkD3STflR7NPvwHPtVMCzFJAOfTZuBIe
R7/zOUO0V0hTQFEo76mLiTu/uZsFADXPU0DEhKl+La8VP0er3LQTTVRA1JQ9
DTicPj+psehUetVUQCzvHrFknko/LH5piWRbVUBrHPPzAlNQP3f4/iZQ2FVA
cZgrR0KTTz+Wacmvw19WQEyAGJWm4Ec/fYiooTjeVkD5xq9vXhI8P4Vt/Ccx
WldAN1FLLxW1EL9hSYWZseBXQO98Qbm1hDu/BdMidDNeWEBU1IIGWpxKv31T
9Tk95lhAXfbXTSf+T78WmjyUymtZQCeC9IDwQE+/d46YV1noWUBqx2SBSf9J
v6x5KQZwb1pAaOHQZtD+Ob+pEs8diO1aQE0poIRh7+A+eqKpICh2W0DheZVf
3zo9P234+LdL/FtAwx3TX43JSj8n/Fy4cHlcQKVG4FqHq08/tfb1ox0BXUBr
4w5jZppPPwufo/jLf11AIRRvcIUxSj9KHnj3//9dQFMUKxyxojk/oO+umA==

                    "]]}}}, {
                   DisplayFunction -> Identity, AspectRatio -> 1, 
                    Axes -> {False, False}, AxesLabel -> {None, None}, 
                    AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
                    Frame -> {{True, True}, {True, True}}, 
                    FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                    Directive[
                    Opacity[0.5], 
                    Thickness[Tiny], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    FrameTicks -> {{None, None}, {None, None}}, 
                    GridLines -> {None, None}, GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> 
                    Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}], 
                    Method -> {
                    "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
                    AbsolutePointSize[6], "ScalingFunctions" -> None}, 
                    PlotRange -> {{0., 120.}, {-0.0010073900408040413`, 
                    0.000999999999999644}}, PlotRangeClipping -> True, 
                    PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
                  GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "120.`"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                   BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}], True -> GridBox[{{
                  PaneBox[
                   ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquareMinusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                   Alignment -> {Center, Center}, ImageSize -> 
                   Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                  GraphicsBox[{{{}, {}, {
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1]], 
                    LineBox[CompressedData["
1:eJwB0QMu/CFib1JlAgAAADwAAAACAAAA9xwHa8MPwT6So/HSTWJQP4Q91Tyl
TP8/Hp6/JLd1Tj+t8DvJ0E4QQDFewalbbEM/dW6N1I46GECLs/GCRckxP1BO
KyeG/h9ADgdAwmRXKb+3TYwWfjUkQI7HmmqymEO/g2IoYsQjKEAoeYAH1mtM
v/EtbAdKZixAUXfk0UyBUL80FSsodkowQApod51s+U2/j8ry8Mw9MkA7dTOo
w81EvztbjmZDWzRAvnrZQ2kZM78Go3yAv1Q2QGnWmy0hySw/VgM+7ElEOECi
BWHNzk5BP/c+0wT0XTpAPqrivW8rTT+2MbvBo1M8QAdjZjnIXlA/xv92K3Nz
PkC+Yjg7S+hNPy3zgnOoREBAKMXmJQGURj8GwnMjmj1BQCWekQ5NgDM/iH7O
qZtLQkAACs4lr8Akv5mWUgKgR0NAHeMD0EJvQb9TnEAxtFhEQMOSXtHxB02/
Ty4Yic9kRUDvSuzZ0zxQv9obGbPtXkZAQbEloqc2Tr8O94OzG25HQAhopdkF
IUe/0S0YhkxrSEDThHyZ/AYxv9fwlYGEY0lAMCxWTAXDEz+FoX1TzHBKQKfN
iNejz0I/wq2O9xZsS0Dr9u/nLGlLP6inCXJxfExAiXT6BGY7UD/QLW4V04dN
QNBMJ4lzD08/iA/8ijeBTkBErjVbJSpHP+je89arj09AfKVt0FdLND/shIp6
EUZQQHc5azh11RS/heAPntDBUEBtAj+7fb9Bv/IyyqwXSFFAYYQQiGuKSr8n
M5kkYMVRQKgQmvDPT1C/MCqdhzBNUkD3STflR7NPvwHPtVMCzFJAOfTZuBIe
R7/zOUO0V0hTQFEo76mLiTu/uZsFADXPU0DEhKl+La8VP0er3LQTTVRA1JQ9
DTicPj+psehUetVUQCzvHrFknko/LH5piWRbVUBrHPPzAlNQP3f4/iZQ2FVA
cZgrR0KTTz+Wacmvw19WQEyAGJWm4Ec/fYiooTjeVkD5xq9vXhI8P4Vt/Ccx
WldAN1FLLxW1EL9hSYWZseBXQO98Qbm1hDu/BdMidDNeWEBU1IIGWpxKv31T
9Tk95lhAXfbXTSf+T78WmjyUymtZQCeC9IDwQE+/d46YV1noWUBqx2SBSf9J
v6x5KQZwb1pAaOHQZtD+Ob+pEs8diO1aQE0poIRh7+A+eqKpICh2W0DheZVf
3zo9P234+LdL/FtAwx3TX43JSj8n/Fy4cHlcQKVG4FqHq08/tfb1ox0BXUBr
4w5jZppPPwufo/jLf11AIRRvcIUxSj9KHnj3//9dQFMUKxyxojk/oO+umA==

                    "]]}}}, {
                   DisplayFunction -> Identity, AspectRatio -> 1, 
                    Axes -> {False, False}, AxesLabel -> {None, None}, 
                    AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
                    Frame -> {{True, True}, {True, True}}, 
                    FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                    Directive[
                    Opacity[0.5], 
                    Thickness[Tiny], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    FrameTicks -> {{None, None}, {None, None}}, 
                    GridLines -> {None, None}, GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> 
                    Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}], 
                    Method -> {
                    "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
                    AbsolutePointSize[6], "ScalingFunctions" -> None}, 
                    PlotRange -> {{0., 120.}, {-0.0010073900408040413`, 
                    0.000999999999999644}}, PlotRangeClipping -> True, 
                    PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
                  GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "120.`"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Order: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Hermite\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Periodic: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["False", "SummaryItem"]}]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                   BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}]}, 
             Dynamic[Typeset`open$$], ImageSize -> Automatic], 
            BaselinePosition -> Baseline], DynamicModuleValues :> {}], 
          StyleBox["]", "NonInterpretableSummary"]}]},
       "CopyTag",
       DisplayFunction->(#& ),
       InterpretationFunction->("InterpolatingFunction[{{0., 120.}}, <>]"& )],
      False,
      Editable->False,
      SelectWithContents->True,
      Selectable->False]}], ",", 
    RowBox[{"X3", "\[Rule]", 
     TagBox[
      TemplateBox[{RowBox[{
          StyleBox[
           TagBox["InterpolatingFunction", "SummaryHead"], 
           "NonInterpretableSummary"], 
          StyleBox["[", "NonInterpretableSummary"], 
          DynamicModuleBox[{Typeset`open$$ = False}, 
           PanelBox[
            PaneSelectorBox[{False -> GridBox[{{
                  PaneBox[
                   ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquarePlusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                   Alignment -> {Center, Center}, ImageSize -> 
                   Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                  GraphicsBox[{{{}, {}, {
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1]], 
                    LineBox[CompressedData["
1:eJwB0QMu/CFib1JlAgAAADwAAAACAAAA9xwHa8MPwT673bLnDf7xv4Q91Tyl
TP8/NpeLn3Dz8b+t8DvJ0E4QQCaWRtxaDPK/dW6N1I46GEBictOpF+jxv1BO
KyeG/h9ALVy/OooZ8r+3TYwWfjUkQEGwVABn4fG/g2IoYsQjKEAvMvWJYBry
v/EtbAdKZixAMeNINr3i8b80FSsodkowQJVFTZ8jF/K/j8ry8Mw9MkArGSsU
K+zxvztbjmZDWzRABlxhZEIM8r8Go3yAv1Q2QCM5WTBB+fG/VgM+7ElEOEBa
GBHhKvfxv/c+0wT0XTpAjwObW5oJ8r+2MbvBo1M8QMyxHJGs6fG/xv92K3Nz
PkBIG6RRDxXyvy3zgnOoREBA7Cp2QBXk8b8GwnMjmj1BQCkwFSrpGvK/iH7O
qZtLQkD0zV+mKeHxv5mWUgKgR0NAW5PBLycY8r9TnEAxtFhEQGx8hu2r5fG/
Ty4Yic9kRUBaG7gnPxPyv9obGbPtXkZA7hnbCKbx8b8O94OzG25HQAej2WCC
BvK/0S0YhkxrSEBlJefJYf/xv9fwlYGEY0lAnktXQ4Lx8b+FoX1TzHBKQE+y
2B6vDvK/wq2O9xZsS0CXnXowBebxv6inCXJxfExApHIO0QEY8r/QLW4V04dN
QNtFlw8o4vG/iA/8ijeBTkAea7TI0Bryv+je89arj09AeK8SsxLi8b/shIp6
EUZQQB53zzGbFfK/heAPntDBUEClrVAVA+/xv/IyyqwXSFFAqQVbtIYI8r8n
M5kkYMVRQNm+Pbsj/vG/MCqdhzBNUkDIu0GY6fnxvwHPtVMCzFJAJXvFGHsL
8r/zOUO0V0hTQMMn3P6/5/G/uZsFADXPU0CjDk8e+Bbyv0er3LQTTVRApHdv
Tnvh8b+psehUetVUQOwy1zz7GvK/LH5piWRbVUBuDolYXOHxv3f4/iZQ2FVA
Z1KbWTUX8r+Wacmvw19WQMMAp8BI5/G/fYiooTjeVkDCB0ZNTw3yv4Vt/Ccx
WldA6WFPW5L58b9hSYWZseBXQOBpbniR/fG/BdMidDNeWECybNKk4wjyv31T
9Tk95lhAqPkmsqzv8b8WmjyUymtZQHBxiXLvEPK/d46YV1noWUD3s+IzO+Tx
v6x5KQZwb1pA4UQLH5AZ8r+pEs8diO1aQGmDV20Q4fG/eqKpICh2W0DuoePr
mxryv234+LdL/FtAL/Ka3bri8b8n/Fy4cHlcQB1N/QfnE/K/tfb1ox0BXUCS
jlgQJ+vxvwufo/jLf11AWlpLD3kI8r9KHnj3//9dQEMqFBxK/PG/qZHf3Q==

                    "]]}}}, {
                   DisplayFunction -> Identity, AspectRatio -> 1, 
                    Axes -> {False, False}, AxesLabel -> {None, None}, 
                    AxesOrigin -> {0, -1.133}, DisplayFunction :> Identity, 
                    Frame -> {{True, True}, {True, True}}, 
                    FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                    Directive[
                    Opacity[0.5], 
                    Thickness[Tiny], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    FrameTicks -> {{None, None}, {None, None}}, 
                    GridLines -> {None, None}, GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> 
                    Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}], 
                    Method -> {
                    "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
                    AbsolutePointSize[6], "ScalingFunctions" -> None}, 
                    PlotRange -> {{0., 
                    120.}, {-1.1315872551523922`, -1.1174473067441915`}}, 
                    PlotRangeClipping -> True, PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
                  GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "120.`"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                   BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}], True -> GridBox[{{
                  PaneBox[
                   ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquareMinusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                   Alignment -> {Center, Center}, ImageSize -> 
                   Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                  GraphicsBox[{{{}, {}, {
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1]], 
                    LineBox[CompressedData["
1:eJwB0QMu/CFib1JlAgAAADwAAAACAAAA9xwHa8MPwT673bLnDf7xv4Q91Tyl
TP8/NpeLn3Dz8b+t8DvJ0E4QQCaWRtxaDPK/dW6N1I46GEBictOpF+jxv1BO
KyeG/h9ALVy/OooZ8r+3TYwWfjUkQEGwVABn4fG/g2IoYsQjKEAvMvWJYBry
v/EtbAdKZixAMeNINr3i8b80FSsodkowQJVFTZ8jF/K/j8ry8Mw9MkArGSsU
K+zxvztbjmZDWzRABlxhZEIM8r8Go3yAv1Q2QCM5WTBB+fG/VgM+7ElEOEBa
GBHhKvfxv/c+0wT0XTpAjwObW5oJ8r+2MbvBo1M8QMyxHJGs6fG/xv92K3Nz
PkBIG6RRDxXyvy3zgnOoREBA7Cp2QBXk8b8GwnMjmj1BQCkwFSrpGvK/iH7O
qZtLQkD0zV+mKeHxv5mWUgKgR0NAW5PBLycY8r9TnEAxtFhEQGx8hu2r5fG/
Ty4Yic9kRUBaG7gnPxPyv9obGbPtXkZA7hnbCKbx8b8O94OzG25HQAej2WCC
BvK/0S0YhkxrSEBlJefJYf/xv9fwlYGEY0lAnktXQ4Lx8b+FoX1TzHBKQE+y
2B6vDvK/wq2O9xZsS0CXnXowBebxv6inCXJxfExApHIO0QEY8r/QLW4V04dN
QNtFlw8o4vG/iA/8ijeBTkAea7TI0Bryv+je89arj09AeK8SsxLi8b/shIp6
EUZQQB53zzGbFfK/heAPntDBUEClrVAVA+/xv/IyyqwXSFFAqQVbtIYI8r8n
M5kkYMVRQNm+Pbsj/vG/MCqdhzBNUkDIu0GY6fnxvwHPtVMCzFJAJXvFGHsL
8r/zOUO0V0hTQMMn3P6/5/G/uZsFADXPU0CjDk8e+Bbyv0er3LQTTVRApHdv
Tnvh8b+psehUetVUQOwy1zz7GvK/LH5piWRbVUBuDolYXOHxv3f4/iZQ2FVA
Z1KbWTUX8r+Wacmvw19WQMMAp8BI5/G/fYiooTjeVkDCB0ZNTw3yv4Vt/Ccx
WldA6WFPW5L58b9hSYWZseBXQOBpbniR/fG/BdMidDNeWECybNKk4wjyv31T
9Tk95lhAqPkmsqzv8b8WmjyUymtZQHBxiXLvEPK/d46YV1noWUD3s+IzO+Tx
v6x5KQZwb1pA4UQLH5AZ8r+pEs8diO1aQGmDV20Q4fG/eqKpICh2W0DuoePr
mxryv234+LdL/FtAL/Ka3bri8b8n/Fy4cHlcQB1N/QfnE/K/tfb1ox0BXUCS
jlgQJ+vxvwufo/jLf11AWlpLD3kI8r9KHnj3//9dQEMqFBxK/PG/qZHf3Q==

                    "]]}}}, {
                   DisplayFunction -> Identity, AspectRatio -> 1, 
                    Axes -> {False, False}, AxesLabel -> {None, None}, 
                    AxesOrigin -> {0, -1.133}, DisplayFunction :> Identity, 
                    Frame -> {{True, True}, {True, True}}, 
                    FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                    Directive[
                    Opacity[0.5], 
                    Thickness[Tiny], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    FrameTicks -> {{None, None}, {None, None}}, 
                    GridLines -> {None, None}, GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> 
                    Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}], 
                    Method -> {
                    "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
                    AbsolutePointSize[6], "ScalingFunctions" -> None}, 
                    PlotRange -> {{0., 
                    120.}, {-1.1315872551523922`, -1.1174473067441915`}}, 
                    PlotRangeClipping -> True, PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
                  GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "120.`"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Order: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Hermite\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Periodic: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["False", "SummaryItem"]}]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                   BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}]}, 
             Dynamic[Typeset`open$$], ImageSize -> Automatic], 
            BaselinePosition -> Baseline], DynamicModuleValues :> {}], 
          StyleBox["]", "NonInterpretableSummary"]}]},
       "CopyTag",
       DisplayFunction->(#& ),
       InterpretationFunction->("InterpolatingFunction[{{0., 120.}}, <>]"& )],
      False,
      Editable->False,
      SelectWithContents->True,
      Selectable->False]}], ",", 
    RowBox[{"X4", "\[Rule]", 
     TagBox[
      TemplateBox[{RowBox[{
          StyleBox[
           TagBox["InterpolatingFunction", "SummaryHead"], 
           "NonInterpretableSummary"], 
          StyleBox["[", "NonInterpretableSummary"], 
          DynamicModuleBox[{Typeset`open$$ = False}, 
           PanelBox[
            PaneSelectorBox[{False -> GridBox[{{
                  PaneBox[
                   ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquarePlusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                   Alignment -> {Center, Center}, ImageSize -> 
                   Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                  GraphicsBox[{{{}, {}, {
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1]], 
                    LineBox[CompressedData["
1:eJwB0QMu/CFib1JlAgAAADwAAAACAAAA9xwHa8MPwT46oKxH4XqEP4Q91Tyl
TP8/LV6BRYkNg7+t8DvJ0E4QQNIIDj/QzYE/dW6N1I46GEDkuGJSl8N6v1BO
KyeG/h9AfKkWMON2aT+3TYwWfjUkQAn2WQSn+Vi/g2IoYsQjKEDDWpKEEQph
v/EtbAdKZixAqxR+w5g4az80FSsodkowQHS4Dcd8dHS/j8ry8Mw9MkCNTc0q
VCCAPztbjmZDWzRAg6RUZ2XUgb8Go3yAv1Q2QPHx/mlUM4Q/VgM+7ElEOEDm
g5fkG+eDv/c+0wT0XTpAP/sp24nGgj+2MbvBo1M8QCnukArqGn2/xv92K3Nz
PkBLNcwyCON4Py3zgnOoREBAguWt5aswcr8GwnMjmj1BQNb5oHs9u0Y/iH7O
qZtLQkD0hYmYbiVNP5mWUgKgR0NAYD98DKWwcb9TnEAxtFhEQKU3egeLH3Y/
Ty4Yic9kRUBgOkRNyO17v9obGbPtXkZA+L7gDUKDgj8O94OzG25HQMXQce+D
lIO/0S0YhkxrSEANEA6qQHaEP9fwlYGEY0lAwvTcEQd6gr+FoX1TzHBKQLY0
H85OwIA/wq2O9xZsS0Bc/0G5peV2v6inCXJxfExAokxiYLAycj/QLW4V04dN
QGTD+OLREma/iA/8ijeBTkBcg/aKIHlSv+je89arj09AAirhG4qaZT/shIp6
EUZQQIZx6O+exHe/heAPntDBUEDvxNjAmIOBP/IyyqwXSFFAN9IranMZg78n
M5kkYMVRQCSHig9Ze4Q/MCqdhzBNUkDvcbtcOkWEvwHPtVMCzFJAM0iIwA0m
gj/zOUO0V0hTQMPUZ4r3MXq/uZsFADXPU0CDhBN0Csx0P0er3LQTTVRAxgKJ
3eUeXL+psehUetVUQP5DlKHnJz0/LH5piWRbVUAiVisILH1WP3f4/iZQ2FVA
5Al2lHlQdL+Wacmvw19WQMWDDcqRXnk/fYiooTjeVkB36pfbBGWBv4Vt/Ccx
WldAcXGQ2AM+hD9hSYWZseBXQD4ys+x1fIS/BdMidDNeWEDCvdMiOv2CP31T
9Tk95lhAqLtrjf7Igb8WmjyUymtZQGwwlR3vE38/d46YV1noWUCgyx/oJJty
v6x5KQZwb1pAHYSqGYVpaT+pEs8diO1aQO4sQrkETjo/eqKpICh2W0Dhb+Yb
pJRav234+LdL/FtAbqBp5D9Taz8n/Fy4cHlcQMNxB1Fs6Xq/tfb1ox0BXUBr
MDQTbg5/Pwufo/jLf11Aa/RA4j8bg79KHnj3//9dQM1caWkQdIQ/fBO7tg==

                    "]]}}}, {
                   DisplayFunction -> Identity, AspectRatio -> 1, 
                    Axes -> {False, False}, AxesLabel -> {None, None}, 
                    AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
                    Frame -> {{True, True}, {True, True}}, 
                    FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                    Directive[
                    Opacity[0.5], 
                    Thickness[Tiny], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    FrameTicks -> {{None, None}, {None, None}}, 
                    GridLines -> {None, None}, GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> 
                    Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}], 
                    Method -> {
                    "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
                    AbsolutePointSize[6], "ScalingFunctions" -> None}, 
                    PlotRange -> {{0., 120.}, {-0.010003014837274834`, 
                    0.010000892435815319`}}, PlotRangeClipping -> True, 
                    PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
                  GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "120.`"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                   BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}], True -> GridBox[{{
                  PaneBox[
                   ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquareMinusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                   Alignment -> {Center, Center}, ImageSize -> 
                   Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                  GraphicsBox[{{{}, {}, {
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1]], 
                    LineBox[CompressedData["
1:eJwB0QMu/CFib1JlAgAAADwAAAACAAAA9xwHa8MPwT46oKxH4XqEP4Q91Tyl
TP8/LV6BRYkNg7+t8DvJ0E4QQNIIDj/QzYE/dW6N1I46GEDkuGJSl8N6v1BO
KyeG/h9AfKkWMON2aT+3TYwWfjUkQAn2WQSn+Vi/g2IoYsQjKEDDWpKEEQph
v/EtbAdKZixAqxR+w5g4az80FSsodkowQHS4Dcd8dHS/j8ry8Mw9MkCNTc0q
VCCAPztbjmZDWzRAg6RUZ2XUgb8Go3yAv1Q2QPHx/mlUM4Q/VgM+7ElEOEDm
g5fkG+eDv/c+0wT0XTpAP/sp24nGgj+2MbvBo1M8QCnukArqGn2/xv92K3Nz
PkBLNcwyCON4Py3zgnOoREBAguWt5aswcr8GwnMjmj1BQNb5oHs9u0Y/iH7O
qZtLQkD0hYmYbiVNP5mWUgKgR0NAYD98DKWwcb9TnEAxtFhEQKU3egeLH3Y/
Ty4Yic9kRUBgOkRNyO17v9obGbPtXkZA+L7gDUKDgj8O94OzG25HQMXQce+D
lIO/0S0YhkxrSEANEA6qQHaEP9fwlYGEY0lAwvTcEQd6gr+FoX1TzHBKQLY0
H85OwIA/wq2O9xZsS0Bc/0G5peV2v6inCXJxfExAokxiYLAycj/QLW4V04dN
QGTD+OLREma/iA/8ijeBTkBcg/aKIHlSv+je89arj09AAirhG4qaZT/shIp6
EUZQQIZx6O+exHe/heAPntDBUEDvxNjAmIOBP/IyyqwXSFFAN9IranMZg78n
M5kkYMVRQCSHig9Ze4Q/MCqdhzBNUkDvcbtcOkWEvwHPtVMCzFJAM0iIwA0m
gj/zOUO0V0hTQMPUZ4r3MXq/uZsFADXPU0CDhBN0Csx0P0er3LQTTVRAxgKJ
3eUeXL+psehUetVUQP5DlKHnJz0/LH5piWRbVUAiVisILH1WP3f4/iZQ2FVA
5Al2lHlQdL+Wacmvw19WQMWDDcqRXnk/fYiooTjeVkB36pfbBGWBv4Vt/Ccx
WldAcXGQ2AM+hD9hSYWZseBXQD4ys+x1fIS/BdMidDNeWEDCvdMiOv2CP31T
9Tk95lhAqLtrjf7Igb8WmjyUymtZQGwwlR3vE38/d46YV1noWUCgyx/oJJty
v6x5KQZwb1pAHYSqGYVpaT+pEs8diO1aQO4sQrkETjo/eqKpICh2W0Dhb+Yb
pJRav234+LdL/FtAbqBp5D9Taz8n/Fy4cHlcQMNxB1Fs6Xq/tfb1ox0BXUBr
MDQTbg5/Pwufo/jLf11Aa/RA4j8bg79KHnj3//9dQM1caWkQdIQ/fBO7tg==

                    "]]}}}, {
                   DisplayFunction -> Identity, AspectRatio -> 1, 
                    Axes -> {False, False}, AxesLabel -> {None, None}, 
                    AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
                    Frame -> {{True, True}, {True, True}}, 
                    FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                    Directive[
                    Opacity[0.5], 
                    Thickness[Tiny], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    FrameTicks -> {{None, None}, {None, None}}, 
                    GridLines -> {None, None}, GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> 
                    Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}], 
                    Method -> {
                    "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
                    AbsolutePointSize[6], "ScalingFunctions" -> None}, 
                    PlotRange -> {{0., 120.}, {-0.010003014837274834`, 
                    0.010000892435815319`}}, PlotRangeClipping -> True, 
                    PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
                  GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "120.`"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Order: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Hermite\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Periodic: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["False", "SummaryItem"]}]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                   BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}]}, 
             Dynamic[Typeset`open$$], ImageSize -> Automatic], 
            BaselinePosition -> Baseline], DynamicModuleValues :> {}], 
          StyleBox["]", "NonInterpretableSummary"]}]},
       "CopyTag",
       DisplayFunction->(#& ),
       InterpretationFunction->("InterpolatingFunction[{{0., 120.}}, <>]"& )],
      False,
      Editable->False,
      SelectWithContents->True,
      Selectable->False]}], ",", 
    RowBox[{"X5", "\[Rule]", 
     TagBox[
      TemplateBox[{RowBox[{
          StyleBox[
           TagBox["InterpolatingFunction", "SummaryHead"], 
           "NonInterpretableSummary"], 
          StyleBox["[", "NonInterpretableSummary"], 
          DynamicModuleBox[{Typeset`open$$ = False}, 
           PanelBox[
            PaneSelectorBox[{False -> GridBox[{{
                  PaneBox[
                   ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquarePlusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                   Alignment -> {Center, Center}, ImageSize -> 
                   Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                  GraphicsBox[{{{}, {}, {
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1]], 
                    LineBox[CompressedData["
1:eJwB0QMu/CFib1JlAgAAADwAAAACAAAA9xwHa8MPwT4Axj7WlnghPoQ91Tyl
TP8/cqG2Lj259b6t8DvJ0E4QQHszUifkiCg/dW6N1I46GECyLNYoWqwov1BO
KyeG/h9Aa370k+XnKz+3TYwWfjUkQP3Cq4o+5SS/g2IoYsQjKEAReo5DYaYj
P/EtbAdKZixAXHJwqr4cBT80FSsodkowQGZT14HnACe/j8ry8Mw9MkCVAh8R
iMQmPztbjmZDWzRAQ8zThoVUKr8Go3yAv1Q2QPYxAWG+lSQ/VgM+7ElEOEAJ
edmqsrQmv/c+0wT0XTpA/G84GqUU7z62MbvBo1M8QEzu/MuXOt0+xv92K3Nz
PkD08GiMYM4lvy3zgnOoREBAy/SPz0dsKz8GwnMjmj1BQDEqSTGYgSi/iH7O
qZtLQkBvDG0DFCsaP5mWUgKgR0NAppmx6yinB79TnEAxtFhEQOJoviuKNCG/
Ty4Yic9kRUCGjpi59jUrP9obGbPtXkZAhOeMcGKXK78O94OzG25HQAtIMM/z
hhw/0S0YhkxrSEAw5h4CJG0Wv9fwlYGEY0lA6jpFxbd7Dj+FoX1TzHBKQMqG
W31vERg/wq2O9xZsS0AzV+dl/ZEhv6inCXJxfExALrJYwBIWKz/QLW4V04dN
QOsXSqKiBSK/iA/8ijeBTkDeXwkPgeUhP+je89arj09AZlnmnyTGDT/shIp6
EUZQQOjxPBB41BO/heAPntDBUEAc6ynt3kAaP/IyyqwXSFFA8Wtj2+ZbKb8n
M5kkYMVRQE5Z70BoUys/MCqdhzBNUkC7vNgubkskvwHPtVMCzFJArLtsNeri
Gj/zOUO0V0hTQFHIgEiAfBy/uZsFADXPU0Cqq4Fg3y0Xv0er3LQTTVRA3vbW
l158Gj+psehUetVUQB9Cd1fPsCy/LH5piWRbVUAFzQ/4UmwkP3f4/iZQ2FVA
OkHQSb4bIr+Wacmvw19WQLAnMDauEAC/fYiooTjeVkAdjkpKwikYP4Vt/Ccx
WldAXdeeXAcRFL9hSYWZseBXQDK2rx64sCs/BdMidDNeWEDnfhqwOXYqv31T
9Tk95lhAwCyv6sAHJD8WmjyUymtZQJ1aByAqyeK+d46YV1noWUAGJZ7wQ5Dv
vqx5KQZwb1pAZ/x+OMujJD+pEs8diO1aQBGU2em+Iyq/eqKpICh2W0CFntQ/
tEgmP234+LdL/FtAkXXSIy33Cr8n/Fy4cHlcQBC5m63/6fM+tfb1ox0BXUDg
RO8rEd4kPwufo/jLf11AP01P92B3J79KHnj3//9dQMnuy/b/Ci0/FZGwzg==

                    "]]}}}, {
                   DisplayFunction -> Identity, AspectRatio -> 1, 
                    Axes -> {False, False}, AxesLabel -> {None, None}, 
                    AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
                    Frame -> {{True, True}, {True, True}}, 
                    FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                    Directive[
                    Opacity[0.5], 
                    Thickness[Tiny], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    FrameTicks -> {{None, None}, {None, None}}, 
                    GridLines -> {None, None}, GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> 
                    Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}], 
                    Method -> {
                    "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
                    AbsolutePointSize[6], "ScalingFunctions" -> None}, 
                    PlotRange -> {{0., 120.}, {-0.00021889239336171735`, 
                    0.00022158026276729848`}}, PlotRangeClipping -> True, 
                    PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
                  GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "120.`"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                   BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}], True -> GridBox[{{
                  PaneBox[
                   ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquareMinusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                   Alignment -> {Center, Center}, ImageSize -> 
                   Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                  GraphicsBox[{{{}, {}, {
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1]], 
                    LineBox[CompressedData["
1:eJwB0QMu/CFib1JlAgAAADwAAAACAAAA9xwHa8MPwT4Axj7WlnghPoQ91Tyl
TP8/cqG2Lj259b6t8DvJ0E4QQHszUifkiCg/dW6N1I46GECyLNYoWqwov1BO
KyeG/h9Aa370k+XnKz+3TYwWfjUkQP3Cq4o+5SS/g2IoYsQjKEAReo5DYaYj
P/EtbAdKZixAXHJwqr4cBT80FSsodkowQGZT14HnACe/j8ry8Mw9MkCVAh8R
iMQmPztbjmZDWzRAQ8zThoVUKr8Go3yAv1Q2QPYxAWG+lSQ/VgM+7ElEOEAJ
edmqsrQmv/c+0wT0XTpA/G84GqUU7z62MbvBo1M8QEzu/MuXOt0+xv92K3Nz
PkD08GiMYM4lvy3zgnOoREBAy/SPz0dsKz8GwnMjmj1BQDEqSTGYgSi/iH7O
qZtLQkBvDG0DFCsaP5mWUgKgR0NAppmx6yinB79TnEAxtFhEQOJoviuKNCG/
Ty4Yic9kRUCGjpi59jUrP9obGbPtXkZAhOeMcGKXK78O94OzG25HQAtIMM/z
hhw/0S0YhkxrSEAw5h4CJG0Wv9fwlYGEY0lA6jpFxbd7Dj+FoX1TzHBKQMqG
W31vERg/wq2O9xZsS0AzV+dl/ZEhv6inCXJxfExALrJYwBIWKz/QLW4V04dN
QOsXSqKiBSK/iA/8ijeBTkDeXwkPgeUhP+je89arj09AZlnmnyTGDT/shIp6
EUZQQOjxPBB41BO/heAPntDBUEAc6ynt3kAaP/IyyqwXSFFA8Wtj2+ZbKb8n
M5kkYMVRQE5Z70BoUys/MCqdhzBNUkC7vNgubkskvwHPtVMCzFJArLtsNeri
Gj/zOUO0V0hTQFHIgEiAfBy/uZsFADXPU0Cqq4Fg3y0Xv0er3LQTTVRA3vbW
l158Gj+psehUetVUQB9Cd1fPsCy/LH5piWRbVUAFzQ/4UmwkP3f4/iZQ2FVA
OkHQSb4bIr+Wacmvw19WQLAnMDauEAC/fYiooTjeVkAdjkpKwikYP4Vt/Ccx
WldAXdeeXAcRFL9hSYWZseBXQDK2rx64sCs/BdMidDNeWEDnfhqwOXYqv31T
9Tk95lhAwCyv6sAHJD8WmjyUymtZQJ1aByAqyeK+d46YV1noWUAGJZ7wQ5Dv
vqx5KQZwb1pAZ/x+OMujJD+pEs8diO1aQBGU2em+Iyq/eqKpICh2W0CFntQ/
tEgmP234+LdL/FtAkXXSIy33Cr8n/Fy4cHlcQBC5m63/6fM+tfb1ox0BXUDg
RO8rEd4kPwufo/jLf11AP01P92B3J79KHnj3//9dQMnuy/b/Ci0/FZGwzg==

                    "]]}}}, {
                   DisplayFunction -> Identity, AspectRatio -> 1, 
                    Axes -> {False, False}, AxesLabel -> {None, None}, 
                    AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
                    Frame -> {{True, True}, {True, True}}, 
                    FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                    Directive[
                    Opacity[0.5], 
                    Thickness[Tiny], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    FrameTicks -> {{None, None}, {None, None}}, 
                    GridLines -> {None, None}, GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> 
                    Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}], 
                    Method -> {
                    "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
                    AbsolutePointSize[6], "ScalingFunctions" -> None}, 
                    PlotRange -> {{0., 120.}, {-0.00021889239336171735`, 
                    0.00022158026276729848`}}, PlotRangeClipping -> True, 
                    PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
                  GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "120.`"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Order: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Hermite\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Periodic: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["False", "SummaryItem"]}]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                   BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}]}, 
             Dynamic[Typeset`open$$], ImageSize -> Automatic], 
            BaselinePosition -> Baseline], DynamicModuleValues :> {}], 
          StyleBox["]", "NonInterpretableSummary"]}]},
       "CopyTag",
       DisplayFunction->(#& ),
       InterpretationFunction->("InterpolatingFunction[{{0., 120.}}, <>]"& )],
      False,
      Editable->False,
      SelectWithContents->True,
      Selectable->False]}], ",", 
    RowBox[{"X6", "\[Rule]", 
     TagBox[
      TemplateBox[{RowBox[{
          StyleBox[
           TagBox["InterpolatingFunction", "SummaryHead"], 
           "NonInterpretableSummary"], 
          StyleBox["[", "NonInterpretableSummary"], 
          DynamicModuleBox[{Typeset`open$$ = False}, 
           PanelBox[
            PaneSelectorBox[{False -> GridBox[{{
                  PaneBox[
                   ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquarePlusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                   Alignment -> {Center, Center}, ImageSize -> 
                   Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                  GraphicsBox[{{{}, {}, {
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1]], 
                    LineBox[CompressedData["
1:eJwB0QMu/CFib1JlAgAAADwAAAACAAAA9xwHa8MPwT6v1uPSTWJQP4Q91Tyl
TP8/V6R3fqIoUL+t8DvJ0E4QQM3JRd0yL0A/dW6N1I46GECWunxdM90xv1BO
KyeG/h9AZt2iipY8LT+3TYwWfjUkQNjl7XheIkM/g2IoYsQjKECOyQ5f6GpH
v/EtbAdKZixAO0m4nOACUD80FSsodkowQF2Te0l8akK/j8ry8Mw9MkAcPGBM
1zY/PztbjmZDWzRAxg7lhRxnOT8Go3yAv1Q2QMqphRpf30K/VgM+7ElEOEB2
sHpg74hDP/c+0wT0XTpAs1a5Dw9KUL+2MbvBo1M8QLzeEI3GeFA/xv92K3Nz
PkA1anKJYjNCvy3zgnOoREBA7ts35Hl1Jb8GwnMjmj1BQFnWAl784y4/iH7O
qZtLQkA+k3XF35JNv5mWUgKgR0NA1JDiDgfOTz9TnEAxtFhEQJxgMiXDJkm/
Ty4Yic9kRUASVet+0e0OP9obGbPtXkZA8AXPTJGoDD8O94OzG25HQMp3zue+
h0u/0S0YhkxrSEA9cH8V2h1PP9fwlYGEY0lAUUfLsVGWT7+FoX1TzHBKQED+
7wP5Hk0/wq2O9xZsS0AX3zb3SxFKv6inCXJxfExAqlVL3bIpEL/QLW4V04dN
QHou+eklzEg/iA/8ijeBTkBljHISQYNKv+je89arj09AEdL+mjY6UD/shIp6
EUZQQJJeIXZPME6/heAPntDBUEDOgW202OpNP/IyyqwXSFFAMrxTUWzUM78n
M5kkYMVRQJ/eyiyY8yU/MCqdhzBNUkA2y+7rHx1HPwHPtVMCzFJAzO1zCk+E
TL/zOUO0V0hTQEQLiEUPZk0/uZsFADXPU0DhAHGve2tPv0er3LQTTVRAMilz
8aP5TD+psehUetVUQGJnAUeiuAy/LH5piWRbVUDpN48XG4xGv3f4/iZQ2FVA
Aww6L9MwST+Wacmvw19WQDQc/5xhrlC/fYiooTjeVkA5/Iyhl35PP4Vt/Ccx
WldAq9uNtYQTT79hSYWZseBXQLrdLnDyYDU/BdMidDNeWEBbMPzIMD4nv31T
9Tk95lhAcW0R0yf6R78WmjyUymtZQM7fOYH0+lA/d46YV1noWUBtUzJCHA1R
v6x5KQZwb1pAwq3vHul4RD+pEs8diO1aQA1olmvoyD2/eqKpICh2W0C0IUYS
HaJBv234+LdL/FtAs2FOfF22UD8n/Fy4cHlcQLkJzDwt/FC/tfb1ox0BXUCG
0JReKVNHPwufo/jLf11Aki/tBm2rQL9KHnj3//9dQJmkQ0yAFiU/wEayAg==

                    "]]}}}, {
                   DisplayFunction -> Identity, AspectRatio -> 1, 
                    Axes -> {False, False}, AxesLabel -> {None, None}, 
                    AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
                    Frame -> {{True, True}, {True, True}}, 
                    FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                    Directive[
                    Opacity[0.5], 
                    Thickness[Tiny], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    FrameTicks -> {{None, None}, {None, None}}, 
                    GridLines -> {None, None}, GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> 
                    Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}], 
                    Method -> {
                    "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
                    AbsolutePointSize[6], "ScalingFunctions" -> None}, 
                    PlotRange -> {{0., 120.}, {-0.0010407234156321846`, 
                    0.0010363948576053053`}}, PlotRangeClipping -> True, 
                    PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
                  GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "120.`"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                   BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}], True -> GridBox[{{
                  PaneBox[
                   ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquareMinusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                   Alignment -> {Center, Center}, ImageSize -> 
                   Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                  GraphicsBox[{{{}, {}, {
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1]], 
                    LineBox[CompressedData["
1:eJwB0QMu/CFib1JlAgAAADwAAAACAAAA9xwHa8MPwT6v1uPSTWJQP4Q91Tyl
TP8/V6R3fqIoUL+t8DvJ0E4QQM3JRd0yL0A/dW6N1I46GECWunxdM90xv1BO
KyeG/h9AZt2iipY8LT+3TYwWfjUkQNjl7XheIkM/g2IoYsQjKECOyQ5f6GpH
v/EtbAdKZixAO0m4nOACUD80FSsodkowQF2Te0l8akK/j8ry8Mw9MkAcPGBM
1zY/PztbjmZDWzRAxg7lhRxnOT8Go3yAv1Q2QMqphRpf30K/VgM+7ElEOEB2
sHpg74hDP/c+0wT0XTpAs1a5Dw9KUL+2MbvBo1M8QLzeEI3GeFA/xv92K3Nz
PkA1anKJYjNCvy3zgnOoREBA7ts35Hl1Jb8GwnMjmj1BQFnWAl784y4/iH7O
qZtLQkA+k3XF35JNv5mWUgKgR0NA1JDiDgfOTz9TnEAxtFhEQJxgMiXDJkm/
Ty4Yic9kRUASVet+0e0OP9obGbPtXkZA8AXPTJGoDD8O94OzG25HQMp3zue+
h0u/0S0YhkxrSEA9cH8V2h1PP9fwlYGEY0lAUUfLsVGWT7+FoX1TzHBKQED+
7wP5Hk0/wq2O9xZsS0AX3zb3SxFKv6inCXJxfExAqlVL3bIpEL/QLW4V04dN
QHou+eklzEg/iA/8ijeBTkBljHISQYNKv+je89arj09AEdL+mjY6UD/shIp6
EUZQQJJeIXZPME6/heAPntDBUEDOgW202OpNP/IyyqwXSFFAMrxTUWzUM78n
M5kkYMVRQJ/eyiyY8yU/MCqdhzBNUkA2y+7rHx1HPwHPtVMCzFJAzO1zCk+E
TL/zOUO0V0hTQEQLiEUPZk0/uZsFADXPU0DhAHGve2tPv0er3LQTTVRAMilz
8aP5TD+psehUetVUQGJnAUeiuAy/LH5piWRbVUDpN48XG4xGv3f4/iZQ2FVA
Aww6L9MwST+Wacmvw19WQDQc/5xhrlC/fYiooTjeVkA5/Iyhl35PP4Vt/Ccx
WldAq9uNtYQTT79hSYWZseBXQLrdLnDyYDU/BdMidDNeWEBbMPzIMD4nv31T
9Tk95lhAcW0R0yf6R78WmjyUymtZQM7fOYH0+lA/d46YV1noWUBtUzJCHA1R
v6x5KQZwb1pAwq3vHul4RD+pEs8diO1aQA1olmvoyD2/eqKpICh2W0C0IUYS
HaJBv234+LdL/FtAs2FOfF22UD8n/Fy4cHlcQLkJzDwt/FC/tfb1ox0BXUCG
0JReKVNHPwufo/jLf11Aki/tBm2rQL9KHnj3//9dQJmkQ0yAFiU/wEayAg==

                    "]]}}}, {
                   DisplayFunction -> Identity, AspectRatio -> 1, 
                    Axes -> {False, False}, AxesLabel -> {None, None}, 
                    AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
                    Frame -> {{True, True}, {True, True}}, 
                    FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                    Directive[
                    Opacity[0.5], 
                    Thickness[Tiny], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    FrameTicks -> {{None, None}, {None, None}}, 
                    GridLines -> {None, None}, GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> 
                    Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}], 
                    Method -> {
                    "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
                    AbsolutePointSize[6], "ScalingFunctions" -> None}, 
                    PlotRange -> {{0., 120.}, {-0.0010407234156321846`, 
                    0.0010363948576053053`}}, PlotRangeClipping -> True, 
                    PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
                  GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "120.`"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Order: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Hermite\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Periodic: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["False", "SummaryItem"]}]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                   BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}]}, 
             Dynamic[Typeset`open$$], ImageSize -> Automatic], 
            BaselinePosition -> Baseline], DynamicModuleValues :> {}], 
          StyleBox["]", "NonInterpretableSummary"]}]},
       "CopyTag",
       DisplayFunction->(#& ),
       InterpretationFunction->("InterpolatingFunction[{{0., 120.}}, <>]"& )],
      False,
      Editable->False,
      SelectWithContents->True,
      Selectable->False]}]}], "}"}], "}"}]], "Output",
 CellChangeTimes->{
  3.715196005734481*^9, 3.715196411904206*^9, 3.715196442289338*^9, 
   3.715196522087208*^9, 3.7151966197440996`*^9, 3.715196651203944*^9, 
   3.7151966919339347`*^9, {3.7151968187124395`*^9, 3.7151968300629606`*^9}, 
   3.7151968898305635`*^9, {3.715196957810219*^9, 3.715196981136675*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"ParametricPlot", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"X1", "[", "t", "]"}], ",", 
        RowBox[{"X2", "[", "t", "]"}]}], "}"}], "/.", "\[InvisibleSpace]", 
      "sol1"}], ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", "0", ",", "T"}], "}"}], ",", 
     RowBox[{"AxesLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\"\<x\>\"", ",", "\"\<x'\>\""}], "}"}]}]}], "]"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"ParametricPlot", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"X3", "[", "t", "]"}], ",", 
        RowBox[{"X4", "[", "t", "]"}]}], "}"}], "/.", "\[InvisibleSpace]", 
      "sol1"}], ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", "0", ",", "T"}], "}"}], ",", 
     RowBox[{"AxesLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\"\<y\>\"", ",", "\"\<y'\>\""}], "}"}]}]}], "]"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"ParametricPlot", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"X5", "[", "t", "]"}], ",", 
        RowBox[{"X6", "[", "t", "]"}]}], "}"}], "/.", "\[InvisibleSpace]", 
      "sol1"}], ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", "0", ",", "T"}], "}"}], ",", 
     RowBox[{"AxesLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\"\<\[Theta]\>\"", ",", "\"\<\[Theta]'\>\""}], "}"}]}]}], 
    "]"}]}], "}"}]], "Input",
 CellChangeTimes->{{3.7151968713813367`*^9, 3.7151969007097683`*^9}, {
  3.71519698944118*^9, 3.7151970217035537`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   GraphicsBox[{{}, {}, 
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], FaceForm[Opacity[0.3]], LineBox[CompressedData["
1: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
7s7SPHP4P2uonU0=
       "]]}},
    Axes->{True, True},
    AxesLabel->{
      FormBox["\"x\"", TraditionalForm], 
      FormBox["\"x'\"", TraditionalForm]},
    AxesOrigin->{0.996, 0},
    DisplayFunction->Identity,
    FrameLabel->{{None, None}, {None, None}},
    FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
    GridLinesStyle->Directive[
      GrayLevel[0.5, 0.4]],
    ImageSize->{Automatic, 76.75740917230064},
    Method->{"ScalingFunctions" -> None},
    PlotRange->{{0.9953942696935778, 
     1.0045965621113642`}, {-0.0010077310755631024`, 0.0010049071395226601`}},
    PlotRangeClipping->True,
    PlotRangePadding->{{
       Scaled[0.05], 
       Scaled[0.05]}, {
       Scaled[0.05], 
       Scaled[0.05]}},
    Ticks->{Automatic, Automatic}], ",", 
   GraphicsBox[{{}, {}, 
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], FaceForm[Opacity[0.3]], LineBox[CompressedData["
1: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
XvozPtjZ7px2K+QMTVkRllMe+Gxf1KIk+Or3HuHObRIu+MNKu2os9fljYvHT
y3QOeMm6brAW8naB6krHG+bYoDCwfpj683+kfl03M8CfWkseLUN2mPq+M6VK
Dovde/ZoBTJ/AYmw9t8RVKOgX099/hnxonn17y095KUgPUDdbxqePKqm0WyG
TjSekSVD/sv1IVlG2h4ljugPKUC+r333DU3TeZS2slPwExzvwqeEsthv7ujn
CU4FB8g3NC2nFSe8kXzHJ98eON/SxLfjzj/80TVvNrETkIMGQ5yFXIOQbsZa
Zzqsl+H2nPtXDUKQWFpYfxes5/phNXK9cBjyfenZvg3y1bPpb0xmw1G/SZYC
9flzau+AHd/9SKSjaFwmD/V63itu0X8uGrn2hPQoQD1LnGZWYyZjUFjJE7fD
UG9Fcbcz3/2Bx85vdrCDT+MPP7qz/D0eza81Ff6AfvlgN+f/Yx8BhZ9C38qh
nz5u3hA8igmoPYg+1x/6jbVDImLenIj6UX+1MPQjF41FMh4ioqIj4zs7oV+9
NdQfHXMkoYNXme8EQT97aHa2snWRkAdlxzl2uP57TWwz+qlIRs2uR7iJMA/h
TacST10lIz3P+7Oz4NO7prZqrSNkFP3L+aglzJPf2cZKKSEKei7TL1gPPmVJ
YHTVMKEg3SEWzn0wjwcWhboGfCkos95RLwZ8ipvQyjTsN604Hwh9hfmO9B4x
dQGfvuFhnVYFn+7iRSla5ykoJPDrah7w4dgo67cCNQoqeX8/mxaun3nzWabT
mSmItKTC5wt8iZn54a39ioz6zOXqvgF/ponsrxb9yOisiPU7Kp/+yF1ZHmEm
I3MhD3I38ItramTO5SoJhckw73MCvp1RNVfs5gKfsk2+XAKfOj777XUrnojk
EzoKsoGP5+6foUXfCYhuktCqA/w0eZvNevQoAQlN7jKjB77SHFwUpZuMR0oM
K6e6gMeJ41U3r9vEIUMajuxy8GmJtqOGQ2UM+m3KKF8A/G5WsuF6vBSFusUs
VwqA76ff5V1YPRiJ6lMYKh8D/6O63r8vPxGOOnvLRL+AL74XmG7Za4ci7pef
N3khmwYVzd44HowYWZ8MuIFfCMqX/tslEohEGljOvAcfXSv7Ef1n0wdx+BR8
1INsdvLqE8abHuggzURnP/jM+M/1vnlJF7TycndhImTWbOH2onP2yP6F3CXq
+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

       "]]}},
    Axes->{True, True},
    AxesLabel->{
      FormBox["\"y\"", TraditionalForm], 
      FormBox["\"y'\"", TraditionalForm]},
    AxesOrigin->{-1.1320000000000001`, 0},
    DisplayFunction->Identity,
    FrameLabel->{{None, None}, {None, None}},
    FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
    GridLinesStyle->Directive[
      GrayLevel[0.5, 0.4]],
    ImageSize->{Automatic, 218.92139967338863`},
    Method->{"ScalingFunctions" -> None},
    PlotRange->{{-1.1315983147072177`, -1.1174427605080903`}, \
{-0.010004189303190535`, 0.010004880394861028`}},
    PlotRangeClipping->True,
    PlotRangePadding->{{
       Scaled[0.05], 
       Scaled[0.05]}, {
       Scaled[0.05], 
       Scaled[0.05]}},
    Ticks->{Automatic, Automatic}], ",", 
   GraphicsBox[{{}, {}, 
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], FaceForm[Opacity[0.3]], LineBox[CompressedData["
1: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
7Mu4SZ2HCBXaZuJuqARbYmyViSbDlQzpB17Ub3Kzw7vi3l/sHqgDlO6XeExx
RpEolS2tnUog6NWML+TcUdPwCvm5niTcPOuqtmGOhT70yOzh28vg4kn2RNk7
zn4/U7UNEvvIXj+2pjxS1BObrujz14vx48Pc0Z1PCwmM2pb9faFKBhUCT7s/
9GDhirwjHmNiapgg21d1VcMNrf5dzO/R0cTEPYfblCYd8cSicTn1tDZ6ZWee
qvpgg+oLZBGqNA3VeI8kvGWswUcikunUAjqKPRUYbFpPx7D0Ux5xZgy0GCh9
f+r+EJtbITNstJaObx7tmgwsoUBJrE/xB1caGjetFPUcMgXVQ0JMs35tLPI6
dnrW1gaOJCqkz53XRMb2w2pREY6w88nqtfxpajgmd6rA+54rqIic/5nTIYtf
npIKUic9QOzUyvPcOwUx4pLHaO4RAtz5qet3kkfZibY7Tr//TQBFtnvotuw/
5jbVk/PYSMCupzvzggbF4dVUkKj6AguqZQruNJ9UBNGgzKBHhu5gd7O65beU
Olj0nw07vd4Z5K3rbhg91IIvh9d/EzhtB7xRccnBqZx58IrsKVjOBGoGFq6I
oMEm30NfLzfrgYQod76OBx2MT2h040tJ0AvfN5C0ig7/Ls0unzZSQ8GNE7f4
BGjwzLx90azXEAcUFvWivmtDfNp/Yk1RVnj3TdzxjGEOT/Z+/m9Fqz0efSvM
9UiWBC+PqDlXhbsg44++bI+9PNzVE9Jv4fVAq8Pvk040iIDBruPOx+0InOoY
GJO4PsV80L874/v/99/pxh8dgzm2zAqvvb0zBNp8zFFK8RbD50QyVWILgSn+
cz3mbgroqjHyS2ejB9plVa8SvUNCyP8zurbXBY/dcQpJTtdCFc+vQee3OOCm
h3H3h+9QMJFP4S5DzBpfm/0zHh+i4b2yXJatlTFmvHg5nqvNwLvel/mjlTWQ
Xa4vpB7KwEvr63ychgXhi/fev1uv0nH4WMmZreG6IN58SOvWOyoqxTg/ufnY
AgbpyTcyVbSx5p2zYM2CLVQeZcvcO6eBwnnnxEIHnYDAJ+xTRSo43HtiIeWD
G8zUvG0tqJHGt1a0Y41XWUDOlXDgClqJWYahL9eVELBlzOe/X6RP7H359/SS
OL6x8zUlIaXhH9O9r3K15FsCnjscS98aIA5r86eT2kUIDgUqjBvtVoAgkYN7
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
4QoKMNAmzLs3S14MEq8eaPbYSsfSGX3hfAk9sBpaW99zhorPjlQxc/Zbwq5w
yzHGS44vueBThW12MFwol5RC1kAfF+H8grXOMHnq+vt9ecrYFT8ho+3uDls/
m/WrD0ri1j/95lFyBNSsoi6738iNry++8LvE8dfJ73cXdTs6mbuKjRJ5aJ7w
fKGyxihgJQwoJ6nnIwFBBTVJM3tl4Hl4+L+3USxQNtShmvxShf+i7O+t03WD
jBtVNQqKmjBeGPu2bsQRnv5oqPPZpw2bVqQ+fcC2AVpiGX/LEhVoSvb6mfVm
8O30YOerE3Tg+X35Y4MpDb51mN5/KsoAq8GjWfwHctnhndTa38fpMHzhmXWN
Hw2v0CU94v9RISQiSGBVixk2dQtdW75XGwLD/3x6wrZBpe13ars5PttfEDk+
e8YRB0u8b/ucVYPOs98LVa67Ykx/8zav/XJwwsJ6c+VLD7SMkOpmq4mAC636
P7cEAvtVf/C2XJ1mXv8QVDvJuX/TreNjm+9MsT8XXsxy5vbETpUbWbo3hDEz
/F/29jgCTZo2kDZbyKEp135nyQoPXBI9HFMTrYYn3kWzrE+44tpmtf3zBppI
87AlDex2xKX+i3DCUxsl5oduXM2zwRm56idXiql48pYer1zoGowoVhk8qUfH
3q2/fau9dNCw6mHC83Y6Jg7fltl1hQcjn5y340unIynJVmd5qQbMk44KxgfR
MHvbhcneNiN4svGX1VV/CroURUbwnbKCS4N5j02OamFv8zs+uQJ7uGnk9WH7
Egl9l30NI4u5wNThch3XakXcsD51dVOOOzDqYnIbLkvgiRf+gdYqBLRQa8u7
bi/DQ3nf55s5fhsoJ6+SP9POLLy0TOOChifcHy6ysLy8AqJXfWPfbiOgUe+R
8hsuaUioenncfowF5Gc6/HcEVUDF/L2Kk447iG4MPwTiGvD86e3G1XudIXTO
ytLyEBkWNS/+O/TbDjpar+wONaNCGTHkrnoaoM/75CovDTqInm5pu0cxBNKG
+kvaqxnQcGgseMhEDbrtrdpY3gwwfpYavL9JDNVlf1Q3nqVD5C31FYlbdLGO
f73VszEq6Ofx9FXxWODxazIUdrw2sE+pqH3bYotp0r48ZkxNOF3Rsi5M2QlN
Xm65joFqQGz3fjwh4YZV6Uav/nHJwcpIadYnVY7v+uoYlv4VAvneOwGxFwhU
yVS+Kqvyi6knILgnVdwTvWIilp8ymWV3aVb9XcXliSEXneoLPorgsb7mkKVA
Avddc0+dapTDJumaHOUED2w1/bH7WqEanhp+v/H5alfU4aLLPQ7QxESRpYiV
KxzxbEuEyLIobeQiq7r5K9vguI9wptV9KnaPlchcsjDD0Us3NqWp0VEoV/ur
1HsaHmnSdv9dRMeopp+bdWp/sYu9E88IudMxreNm7DomGQSi9H/m8dPwQeSy
GS4xE5jcOCYg+F0bX92bWdNAsgbFDDbpHrcWSr2wC8ta5QBqe/8+8IkgYaZn
Yt7BVBdwLA2taI5TwIB3PcpPl9whMd+istJAHHVSZTsrrAnY23CstHnHIlu1
sos7epGAgyt3bVvGNcwsU1aXHeLAuGTzIb3b2fwQJnd56+23BJRrtus2c/Lk
RhHxZ89rFhCEMo98oir8u8xftWnKDUbv/ljrwNaAWYWKE9kMZ7i68SSqkLQh
oCUrdedFOzhfWxRx9xUVdlybrMkuYcKHK1T+d410uLD505+IFj3oFU3+5PiA
AVWYpnxmTgxaXLk0+fYxoPHQ70tj8+rItst3D9emgwnXom5JhzG+9PJIta2m
QKvT83Wt163Rfzfz9NFgLTC9/1m4T9kRT5NLX/7RJcFaTeXDUsWunB7lD7pZ
JAeLVpu3pimysDLk1ks/QSHY7QIp/jcIvPIyoNJK8Cvzwrxf1VERTyx0kAxx
yebC3xc9y/kbCDy/e4txpowkMqIW7gfdZuFvl97FpyuU8ZvP1OD1XW64rpRk
xdurjlnbotY/V3HCorXXPxpEkPGBylvXxDc2WPl532EZHipWKM9+9oo2w7UC
V20PnKXhjt2XJ0ViKZjWVgHKPHQ8I2YS9vbbHHPqoEmo3VoaUhq/HazxWgV8
2bfDLh6joFBEgpKRuQUUjPefsnmohfut/6zJl7GDwPnNlwRnScjm6YlYbuMM
XaT4njufFPC1bouR+TZOn1xtD3C7I4YS9SEPDPU5/TA8FKDwdJZ97XufdfdK
T3jzSHrW7+gs84G9duJ6XU8IOe7drtgmBkdST1zWuk3AwtXsR/z/KYKIRtir
mCEPUGvLfvDisDqQb57/85PpChM+1FfBeWSwkDm7e9dBB1gVq5jP+EyF9sAH
K1p7rODTo/rcF2QG3Ix5T48VM4LL4R8khn10YPmAToOXhwpkn99GPxWiAzHi
vu2Xujh7x7+zd7MXA6Qs7qX/qTLAk0VJLb40GqzPlXyXbWGFfyps3F9ya8OH
re+H9H/Zo1/T4R2kBXVI+LKmI/eFC6736S1KP6gEa8+J5Pole6DW4Yvl+lwS
sM7toe+mZAJ1s6B7+el55pgL4+48hyc/XhU1zjr6k51DsMeWL3Hu++rvhPsV
IvjlfwFXAaj+xERpkjVQv+cmHP5Dmhm/N7UheJiJTb/UAUog+FghvzUjSuhK
d0m/qOyrRdEiJb/MeJPnS15Ev+gQML+lAyi/uBFwaY7mPL/C/n/Uw90pv6pA
nTBazS+/CwIFFhueKr/m7QSQjRkCv5N/rCQUPSq/RUrmPyXuJj88mMQuir4o
v5SJYfx6ujg/XQJEYeYxJr96zeTPBn9CP2HF212KsSK/k0jpiZHhRz+R/y6w
BsMcv+lqaLsITUw/8sXCLz3dEr/k3aRg6JNPP2cBGcDDLwC/vprZ7B7KUD+O
gBpsTezoPvKMHtuvHFE/sjgYjxeeDD8NnULcW75QP/nbD0TvCBk/LfbqBtdl
Tz9mUnemJ24hP9r5Kg1FCkw/ClpJRcaxJT80s66QuYxHP3orp5c+Iyk/Maos
x20bQj/P1k3B7p4rPxfO1vz73Dc/u2pexgILLT80NI0WKBYlP9crwrI=
       "]]}},
    Axes->{True, True},
    AxesLabel->{
      FormBox["\"\[Theta]\"", TraditionalForm], 
      FormBox["\"\[Theta]'\"", TraditionalForm]},
    AxesOrigin->{0, 0},
    DisplayFunction->Identity,
    FrameLabel->{{None, None}, {None, None}},
    FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
    GridLinesStyle->Directive[
      GrayLevel[0.5, 0.4]],
    ImageSize->{Automatic, 311.1102813846719},
    Method->{"ScalingFunctions" -> None},
    PlotRange->{{-0.00022486183991944186`, 
     0.00022424910794885825`}, {-0.0010456664641519515`, 
     0.0010491250801475229`}},
    PlotRangeClipping->True,
    PlotRangePadding->{{
       Scaled[0.05], 
       Scaled[0.05]}, {
       Scaled[0.05], 
       Scaled[0.05]}},
    Ticks->{Automatic, Automatic}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.7151969013091655`*^9, 3.7151969606801205`*^9, {3.715197009857704*^9, 
   3.715197022423031*^9}}]
}, Open  ]],

Cell[" ", "Text",
 Editable->False,
 Selectable->False,
 CellFrame->{{0, 0}, {0, 3}},
 ShowCellBracket->False,
 CellMargins->{{0, 0}, {1, 1}},
 CellElementSpacings->{"CellMinHeight"->1},
 CellFrameMargins->0,
 CellFrameColor->RGBColor[0, 0, 1],
 CellSize->{Inherited, 5}],

Cell[BoxData[
 RowBox[{" ", 
  RowBox[{
  "add", " ", "both", " ", "a", " ", "driving", " ", "force", " ", "and", " ",
    "damping"}]}]], "Input",
 CellChangeTimes->{{3.7151971026862116`*^9, 3.7151971026962166`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.7151968713813367`*^9, 3.7151969219088144`*^9}, 
   3.715196987772071*^9}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
    1.], FaceForm[Opacity[0.3]], LineBox[CompressedData["
1:eJwc3Hc8Vf8fB3BlllnZQkOSGYXK+CBbmdkZ2Xvvfe89lYQIIaEhKiqzFPog
lYpKVjsqklHdi+Jr9Huf3189ng/njnPvuZ/P+31f991Wj1Br77VMTEyu7ExM
5L/fM2VmuFfpOJH/ltFoAoHS1zWX9K7QseeOLdXV4OvyKWZZ4BLmtQr84OLQ
myuHwM77DzYJxRMoJj+3gQvc+KfJ6E4sgY6nxYb0LNPxKxrbxK9oArUGFill
grvkd13qiiTQ+sCdC2bg6CL7tL3hBBJwPfaUE7x2UO4MCiEQxwK14vkSHWdX
Br8dCyCQm2B3xmmw4kvn6J2+BPq0GJRsBg4/5RDF4kmgjj83kznBiTwvxpNc
CbR69HHm8//ouOmi3FiOI4HWiNCrT4MvF9MzdI7A/ZkFSnKBV6ue7Io0JpDP
O6WYnkU67rRMc/ijS6CTkb9HM8FvRYwuCmgQyDfQdIUbvA8Z8O6SJ9Arcbvb
Lxbo+EJjeZq4FIEqKHqJZ8CnkszLb4kRSGzNRe8NYBliJL5qHYHGtyafeP2X
jj2cpzN5mQi0JC3wOA9s8Zttlf8PDdEXTSoFwdMllJ6FERpKeJTJJfGHjsuo
3R921dMQbfOK/sg8Hctue9ZAvUpD1Xfbr14G39PvvJFQREMGq0xjO8Gqmtyr
xsk05Fmcnbh3jo6nDBrifPRoaHt9o9DCLB0Lj5pcwyo0ZMtUMNYCDrldo3h/
Gw1F79slpg+2idqRlL+GhmRUV7jtGXQsv9z8c/w+FbXvMXDYDH541LnT5hoV
vTUM/zhKh/M5c7vQq4CKOCyXLgSD79Qb3YsMoaLbIiZ86b/pWOD7iIr1ZipK
QF9an/6k49s9WxmBvhR05ktPVTa4KZUzUfMwBTnqnZy2AR+4n9l+TYWCDJpr
0z/P0LFPjNOc3XIa+qjeuntpmo6Tz92SFjudhlYsVngegje+jO59F5yGWr/E
WZ0GNzm1a2hYpiGfSGEOcbDsJ0Gl0U1paN3WbleDKTpud7jgdV0hFRkQ1yh8
4GPJKk3OMyno+9/yjR8m6fijPVubU00K+uUbQ4sCi4luYDaQSUF/Xyp33PhB
x8EGDh/nhJKRaOXVGwoTdLy3+/tb8TcJSENJW50JPDn05aRtVgL6ld14sP87
HWdaTOvP6iagxxsMRhLAGuGevb7X49GFAxwHX43T8fPHN6g+4XFIZYZ9shLc
ZHX6+r+tcYhwuC2cAt4ZHPaL63UsMh25yacIVv9qz3t6dyxaqpQj8sfg/RI6
HWHyPRpd2HySEgquTOBjvpsXjV7/OMttBn767MHJKhSNbDSYB5nBO1xbeUXO
RSGNjPPqSd/ouN68jStKKxK1Pn/b7gyO3GQhrTQegTQyOT5rgIvo/PeSsiOQ
0mehjytf6VjBx2ff8MdwdGGv+Gw6WHr2KXtnbBgitJnXhYLXHvfrNd0ehiRq
g6/agnPSjDexlIYii7zOSClwe32YPqtxCHp4ZTmy+wsd48bXq3/OBSKr+Zjn
9WDrilo/8x8BqMFK5mbpF/J6yR0V1whA/e/e80V/Id/vyC6Vj34oRqnHSxZM
TWP+mS/mg06dVBARATcZsWVyB3ij8NiXThxgyl4fJtFmL3Rzh/rJiVE6VnNq
Cl229kT2Oy9FvAX3eq0Nf1vugaS0zkw/A38KveniMH0MPRDbkHUbLLz4a7cp
4Y4GypUbL4Ml3Ud90svdkHnNr4Bz4BQplfoPqq7IRgqlp4LdLNwLOt2dUfr3
/b+iwM+0P5zwmHdE3H9qxwPACyENHqmnHNCp7i8nHcBMF1uKDtXaol+uLCqW
4BPygVacB48gOw6fYGPwLf+L9Z6D1qjji8wBXXAz5dnCUV8rZPkiuOgAeNyE
9+Ey3QJtq7ZN3wsuY58+UsZ/GNk5rlmvBI4q9d12U80Ucd7LFZcFrw96UKnu
YIQmUqUe7gB3Nz23PRSvj451PvtvK5hnza6bi8W6aDj0bJcE+NxcQ8iFKC10
M/bUls3gbK1HK7WN6kjvaRuPKPjocNZm8zll9J+N1hlhcEG8XPtWXxmU9FXw
shD5+g1c9Xd8JoKWz9kbkWa6abwQpjSufenUQgrp31estmRo8+OCsV/G5O25
mF1TD1/agf8N7LkqAi76dWldVO5uvJ56P0+MfD5lFMsZKzX8STCBn3x+Yglf
UuY3aOIrbX47yed/LaYG353QwcTFpB4p8O06TQnJ7oP4+o9q5l3k420PstxW
ZYglmaZ7FMD7Nc531x83weaft8vsAdNOOf/X4XkIy1UqCOwHjzDHxejqWuAy
pq95CJxafNBvA68Vzj4vXmEIHrLgeyGXbI1HJe8amIO1fwTfmZi0wWmap+Ls
wGtlZaZ0HGzx/imtXD+wVMOoe6WyA17zrPVgBNhzrjOLes4R26ftoySBh/Wf
OH/5zwmbau+7cBacWWj+eUOnC36z73B8Gdh8yYR/QMoN39+SNHIDLLExOjr1
oDv+aad26BH47HfB1/cqjuGOck3LfrCppeqmN0c88JojTh9Hwf8p5uqUsnhi
6buPc5ng83E1W4+N19MLZ/H/cNIHu0Zuct0j5osDWn3K7cAjxLk18t2+mLM5
KcAfrFxKF66L8sP3HTnycsCL+8tO2PT447uv/20bA++jmlmURQfhrc3tuUvg
aAEpj3KJYCws85e2ET7/suLFKxufBGO1ET66LrketNUt6guG4vF0wdFKcBrf
alXbUBj2Uh9x7QAr3/s6+F4mHH+ScDn6AXyY7+i1yoRwvNksamATrE/9u5OW
NMQjcMo/gRvp4L7mWKcDrpF4+dpTwSrw3LG9sWdvRuJ7P96vPgI/1epbyFiO
xNu21GmzwnpYNFy2z744Cv+9vjvoFPjn7WS+PS+isVrA+8vV4L1eN557icbg
2Ts/LV6Ai3WEdsr5xGAJq8vrBWA9zgxqYglbjsGCBWG/qsBHSjsC6rfH4YDZ
h8NfYL1f2B2l+9U5AVOM/13lhf1BY4Y4e6IyAVflfqNrgscbZE/n/k7AYedq
V4vAc8fru4apifhSFf9LO9hvop3E9RbKk3BxUkfwSfDuHeu1q8eSMItfJ6UZ
7EMJ/9ssm4wH+0xYN8N+1bzzRPGn+mT8rJLmNAFeJ62qsqslBYt4SBKbYb+7
s5run76Ugls7F0SswCUJ9qlqGqnY+13P8RZwmh+7T3xzKg6R3KhZAPvnAU/E
csA2DS8/ZOF1hv35xRmmhQxVChbwSggoAIe/+PF0xIKCfeesJV6BlXMqr/T7
U3DlIfopw1/w+BX/NmdfoOAXvflm6lAPPDZOv2S4QsFu+5gNosB7RVeXo/ip
WCdna2Yd+HLFyj8NOSpWcGWsyEM9EWESMZ9rT8U+kvomO6H+sNVM7LeopmLl
yIxTPqTPv7iqiqk4vtyDqxK82K5pVvuaiq9lig3sgHom7oq1vccCFbsFSQj6
gL1T8VTRehoWWL+cXwnmnUm+5rGZhhXfpx+UgXrJ8D+x5ZvaNByrZB3mDzb9
Jd6naEHDztvlB26A3UxUDHXdaDgfa2ooQr3lI/X7gkgKDd+yuOSiDvWacZrM
uew7NFzTYV8RDQ6bv8vU3EnDhPVrvkbwnpS6dakvaPjMjv12ylDv1cx3rRv7
RsM3Eu/Ih4H5T/Hk0H7R8KlOYanbYMNNmYMPFmlY9dzVMAWoJ9+YObxez03g
99ZHHwaBla+NSosJEni4gkelBnxR4F/8EwkCu7hFu8pBvSprqxIxqwjHj9eK
BILv9qU/ilAjsDean7oBfqFMi8vSIvDusMuvZKEeDt3/n3++KYHXfc8eCQC/
4/npnWZJYHMiY201OFtRQJfdjsD/0u1Up8BWLGs/yjgTWEq1MVYO6u+ez4fE
xtwIfG6rZ3cgOHdH9HcNLwL7W22TrgHf9EncreBH4OX7dWemwZU9tz43BxKY
3aqPWQHq/7dE8qdPIfD8WhAlGPxVxnFreTiBg8Nb2G6BhwotyxYjCSyZxpz3
E6xCjTX8GQ3H/xySUoL+o+r0Qc7kWAIzDc/eDwXvoTPNXI0jcEG48JFacGuI
3KRfPIGvWzP/+g1OLvBbegR+xBOZoQz9T+0fF5E2cPAB6R0R4OztdZrmpNXe
t9WDQ4z2BMbD/R1Vs7SZBS8yq93RhscLrTj4bc8/Ol7h3rG1DJ6P1lRkaBRY
94r17UJ4vi7R5bON4Iw1G7zk4HyEmY6HzoO/XeswdoTz3eH2bVSViYF3HVFI
3Aqvh8OVJJMY8I2qgfWEL4F/PeK6egc88SWZleJJYOl2m9k/YA+DX3HC8HrX
PeTbo76GgR8WPI8ydSKw1TVWz1jwiXE+SSFbAl/QmaXcBatPbSlIsSDwxLF7
J9XXMjD9ULCBxEECGzluDIoFiyVur7XTJLBaie+Bu+CX9Dd2sqoEzmbjz1Fj
ZmD9K/orV3YQ+OfxX/wx4NVbZgdNxQmsm9if0gRm5G73yOQnsITPs+U9LAzM
ue/3j29r4HpI9eaJBHt+33tt6S8Nm/23makeLD6x5++tGRpOJNamKrEysNyZ
GbnpYRrur0rolmFj4Nrpt32Pq2iYjZE+HghO3tZicrOYhr9+Ot9/C9yWjLds
PU3DrSP3+feyM/A5uVzP+iAa1r2ox6HJwcDNbxQGCFkaVrafj0wG7371z3xE
mIY3Zp29/ABslf1OpIeNht+WXtDTWcfAxbEJ5najVFwYU+els56BbfjccnRz
qXjiXdCDVHDVJ+1ncklUrK9g//IBmCHG/Ou6DxVTfozxaXIycErk2LDnASpm
y9kypcLFwEq+VdUfPlDwjhLToVBwKk+8X1QXBX9ZMAmuAS8WVGhUVFNwp+ih
YiluBq6+5Rj3Io6C9ao3P+TjYWBJlPLChYeC/5y+N24KHk1j73zMSMNbpOyr
CXDlRNGFnqE0HMRiuPEv+IFSdXZdaRo++jtfZZiXgY1MA4YY0mmYf3vdfh4+
Bm4XOWtpy5GGDR3jh/XBLe0S3I2vU7Fp2JbXtWAh/t9854+kYufYgEu0DQwc
luER9N4iBeetv6BxF/x7wfjdNFcK/v6622MS7Jvkesb8aTJ+aXLMxmIjA3et
1WVw6CRjXsfC0k2bGFhhlyHj+I4krClZ+ongh/NdZzDH8zoeN++I/XMb/Jsi
umJxIh7P/WjIfgdG6zfvWHMgHj8bKNFUFGBgtY3yeffL43BBT2jUSzCr1rbU
e16xOICCo/+ArzWeUqvmj8Uj8gd/bxZkYMMSw0HRrhgc7hR22A98JMv+ZcLW
GFzLezF3AfyHcmFX2FAUPlsQYiAmxMBrr4oY0qhRmOnPfKAW2HDFGW9TjMIz
z1V50sDC24VUeYhIzDuVmbcKHrzft7lHNgIfGpnq3izMwB/0XXBMfzjeusYp
8AD425zgx9bEcGw7NjIXCRZvCrfb/jwM1//HuW4E/JfVoEnyeQg2Gw8vWARv
U3ZZKBYMwcfEN2ZsFGHgJL475wKOBeMTGkPX9cDB9ZbjEvOB2OrUt35HsOub
HUXrtQOxffEarzDwvqDwq0dPBOAKj7DGEnDns6//HRTwx5tufIqsBf/eKxEx
6uyHd6ofL+wi/XA8d/6SLy5XuLNuCsxh8kzurLwPduSNy9otysBU/8KLvJqe
2K231kMH/Cgh/Ohgige+KThfZAEOD/F+qtJxDNeKWe4MAqsMPvB7pO+Ob+EH
KfHgXr+gCVYuNwwrjOoJcPmFoUd9WS44jE+rsxT8zcsyJvmME77lwTh3Dbyw
aqoVwuuIbyv6PKsHy+xyO9+XbY8nWo4dbQWPuLSw1XLb4X6rW4cegdOFspc2
ZB7BY+oCJb3gzFesjH/rbHBhk5vRINiW2cqTetIKKz+xt/oAru2SfXaJxRJ/
Fxtq/gKOuuHv0rv2MA6zLpScIP/+6+Z/L5VM8fa4lwvTYG+JPf1WR43wik2A
Ph2cE9DR5Z6uj5drbNbOg+U5tt5c36iLJUxjVRbAvnZ7B+4/0MLHGO0D/4H1
eCfre/n34c6gzT+WwaOXZ+v8A1Qw11BM6Cr41WTBTtvUXVgo47nvP/AE65P7
tdab8cs0idekRxSH31YU/XmQ9SryFukP2xcFktk2oJtnXi6Tt399ypni/3Y7
OjWg2rYC1q76r2GvkhJKarrxa4n8u1G80V49VfTZWCV/EbxvTgH7TB9AvFdf
3fhDvp+DeUvrzXSQTv7pPbPgbXa7+PIkDyLxtljFX2BVav69tlkDVB5WVzIJ
npou2ZL8xBix8NkmjoErsgNDHp43Q+nLKb2fwZ1uSj3UYHPkU2h29i35+tec
qhsqt0QyLtpRz8E3+6LD2MJtEGFamvsQPMsQ49709giq3LJhWwtYcfL2uXs6
dmjn098XyOvBturRj2YeR7Q1rPtkGdjUtXgtS7QTqiumjueB5fqunO9954w+
2cUwJYObg0O/t1e4okvvxVrDwJHTH6JDWNyRwaPEaU/yeu6QZle8446+39av
MQZrfSmUbhT2QAnqipoHwLfYb36LfOqB2A681ZUDt99aKR6O90Sn9O7c5gTX
+2xNSn7rhR7mnhJegs8Le8AHenO6N0r86b7wA/yj//LvDHUfNOHhKvEYrN2+
VWwszxfF/mjjigN3WD915jcKQD/3c6l7gm1dtqVWMgLQ5LT++8Pgm7v/ljeW
BiK141vytoLNqDLd6owg1Mui1NMJ68OBxjLVlPxQlP/1TN91cK69V+Az8TD0
zMb5SA64/FDbA7bwMCQuozfgDK7tLpTMFAxHOS4dz6dhvSq487ey1CUCre98
aN0LljNW+2nTFIGO0Lcb3ATvN3ByLOOKRF8jlkICwc1Sq73f70WinbsHpkdg
vTxGp3oI8UYj4xvG31rBTGc23tnnGY2eKJgdLgJflI7t+nQnGuVXScceBiuG
+gTVHY1Bkr539epgfb4gkxysdTkWdT6O+pQO1hsSyLRkxKKzm+4x3MBy7IE3
3+rGobBu/3QuMFPcoXrDz3FoibmL6gb7gfFg5S6nTQnoZHF63gzsL9WGQ3t/
uCahrCPW8m3g1bUqhzOvJqFs1ebDmeCqkOuGGVNJKPzSY8VdYLlzVsU50cno
Xq7fKRfYr7Jf7MotoaSgATHixC7wgMra+MnOFGT0wEZgHvY/7sHBjenMqehd
Sfd0Bng9z92M69RU5Oz9sKIO9lOG7+Z5Rc009DVfxCoBPFq3arDimIa6fd8V
6YF7L0g6BMemoZmaC//6YD+OXykW2F2Xhg6/+HB4Gvb3+gnuRYUtFBS1oX4D
H+z/nElckdQpCnqqyb9lGOqH81pU97w1VBR1nf9HKZhtzuujiRAVPdGLvC0L
5vZPeHNVl4o8I3UUdKH+kAifFuc5S0UTxzV2s4Er+Nq+oqtUpC4/++cZ1DM7
nvis4W+motYx/QEb8Gvf8YFLH6jI+5fcLw+ofw5SNV+bbKWhv369u6XBp7PH
HAhlGmLKKEA/oJ7Kz2dEuerSUO15/6chYIFNkVq/3WgoPOajoTJY4gWzdVUI
DY32GZ2bhXqMk2NPz3ISDWX/9/J2LDgiGHdQimhIQsUxaT847apHde1VGlJX
bZBcgnqPtYYYSaqnoYMfH/1KBiewd2pPP4Pbh74fpkB9yKqQabDlLw01PziW
rAe+eySAfc8aAr3gKmRmBqdIWBqOrifQeV++uzSoP33mD5zhFSfQPZvB8YPg
OWnDg2d2EKh41XSZGfxhzrP7ugKB/C1MP9Kgvj1/62vxLU0CzW2xrT4INj0V
nlt0kEDlCwJezOBrC8Ktm00JdMXiFcdDqJ+5AzKXDlgSaLPxk/NU8MCCwe5Z
WwINB2uL6YGnBHW0DJwJ1LQQf3oNOM18mEPZHf6u+GC6Hep13tKb8Xe8CJR8
3EInDZxkfi5u0I9Ax9giTyLwSvUSPSuIQLdeBT9chf4gwvDS68+hBFordHy+
DRwXr73ueQSBbqSsSiSDtcYt0i2iCbS9S1JXE5wq0qkXHEvA9a/osgT9yavD
qgpS8QT6szk86j74s6WqTlQCgdptFNLjwUfCBqNcEgn0TPB68T4w638WXZ/B
O07I3vgL/ZEsYlVcApuwLNy/A/4kHNpwG1w/a98bDdZ0Z7dbgfsbvpPzZS/Y
/aeR0Dd4vD1mE0uz0J/xt40uesbB8XsrRBvAkb7h7MkxBHritV4nAoyaWA8p
RcHr8Rw3qICJ7Xlhp8IJ1GVnsnsW+kOOb7u/pYUQSGTm7Z0G8JBVXr1AIIGY
fa8YR5H94762aSNfAl1rHR7fCz7aMVIl5EmgoPlrZ+ehP0W7Di8SrgRSlZ4U
igXvCTnYuO8IHM/SNqsOHnx3wizVnECW3+mjC9APX5QvfudpTKAHLAf/SwD/
FGF2YdcgkO4YltYE56x9kv14D4HcotwCVqDfnrjrpCYlD8fnPtBIAy94hRIt
YgRq2/TuuS64VpUjeX4jgWJ2v4plJvOi895ZL9YRiPf+v50nob83dvK86vqH
hsanziiagBvW/uMWnKah+Y3VtpzgFyX1xsGjNDTxSm59zh86Nir5ybwMnw+N
D1+KrcG7PjTN78E0NJbx3FwAPL5il8vVQEMssa/kS+bpuGO6qf5iMQ0t3Hjx
9tocHdfZbct19qChFk7dhiDwQ9WqmnIbGnq9i7dlN/g87XvcCX0akpw0cro3
S8fdN7W0tXbQEDU37k8Pg443DDxWcPhCRWl3D3icBRfyvN5z/xUV9U8cYnUA
t/31d+14AH/fj+e/0uHxb9uktxdT0T/rI2Wrv+lQl3qZZ5pRUZAQ/9dH4HPO
4alb1alIxvilbxb4fdaOdtdtVBTdFqUqDhbeurK+/y8FndcT+4d+0XGA4UeO
W2UU9PnQ1T15M3Q8YJfcn/UhDclfHjvpBPZqr9t7pT0NubSMHdgGPhuR5+FY
kYaE6lQ666fp+NBG0ZIbAWnosl1C3JspOm42keQYG0tFOsaHxi6Dk2R7KDrX
UlHX3/P3g8FBiWwSE/6p6MTrqCssYKMQE5WtUymIjWfbGfVJOm69f/7asbFk
5Lrhrjsr+FdlraXB5WSUYfLnSv8POvZItzuf5pqM1Irf0MLBO1bfirIMJiHj
0U9P6ifo+P5Di13+9xNR2YMvpoe+0/HVTg9NXr945Dxve2crWF2YKJcRi0dv
fny/8necjqO+yVg39MahgVOi666Cl/KP5W1XjkP/DpoIsIETXndbXKTHoFhN
perPY3ScR2/jjr4Yg5buH312D7wYVqb81DwGXVnzpYrMi6Tz9Bh/rkcj+RjD
P6Pf6PiAw6MfJU5R6Jq5/AwGC6Glw+WsUchN9EFkGXjby7qx3bWRKOL6ExUX
MLvpE3s2lki0Jj8/c/QrXA8jtuO3K8ORee9r/i7wWGPVVSfzcJRbYadSBV5z
0pT9ynwY2hpVokTmRdOyidX8B8OQuUqFPhtYgu3QPe+GYNS9mU/u1xd4vRwX
lbTXBSNBdLzwDfgSeyDrSdcghJlsWG6CTWUzl2LYA5Fl4xnWIvDlqcJaKecA
1L1yNpsG1skan7O45Y/OxnntPwou2yxULW/jh6pYfzqbgGclj378VuGL1rE2
sauDQxztJGX++KAM64jlTeArMyFWLoXeKNxkrdfAKLzf5WOaowMeKFlo6i35
fXun6Z5+y+0eqODuxfd3ybzHO7TJJ/wYIiTO00rJvOT0+IY8Lnc0eMZZNhds
lSw/4t7gitIDplyOgzf+O9fNfNgFrdlmHxQK3lt8YLw0xQndP3bFyBtcaPPs
32VBRxTzqqzWGTzAy8Mjf8seBaUkV1mDWa65/kMGdsjOykfeFKz72ezF2Psj
6HNeMtIjj78SmywVYYMacr6PkHkR6zcaLzOHNUo5281H5kX22RtPppdaopmv
+i/JPER76+neWG9zVPMybbMMGNcnexifMUORPhcXtpF5hXjxi5xmY7RKafEk
8xftp07CbqMGqDZsxIXMg37fwEc61h1EjW7i3wXJPOitUPEjZR2kmpT2bxM4
543P/Gz9AeQyK1S1Aaw/1yX+do0qgrXjIy942W+g+uZFRWRVubmCBzyWPZOz
UWs7+qFRucgNbr9tstbbixfJ3y/8RFrnxK45BYflB9Jqk9bk8WFphQvbP4nj
ww15duT9HXqiJ99vLYsFVTN+8IGjx+bTON6r4LkHDznJ57O606vIJHMfPnpE
rU0AfGdG/g6fljbuWhheIfOo9CSOdxf/6OKLt8t6yfxL98SEqvsLfcylkyZP
5k0lvlmOzVeN8FKln6g02OvNzh0lSab4y4BaoRyZt/0XlvOf9WHM2999WRk8
PbH9kBe/JX51Y1lzH/hU/aMLSylWOMK71pvMl4ijWfs0f1hjPa7OzUZgiv+k
uKTNEZx9jdfDgsyPjh4yK221xUeTB88dI/PA0x6xFtkOuOD5wvFA8vrpa06I
/uOIQ+Oq1saAM8KevBN1dcbFdfhKJrjt0/zCEzlXHMSysb8Y/PZKScLT2244
rbmsqgr8L+ev6alid+x2TgeR1/dni74dNWIeeFDn7ppBsHPK3ytbP3jgYztE
/cbAT4quu+y64ImRLZskmbd6Sd2W+STqjfuS2kNEwZJulEzqW2+8fK7bXQH8
R/jjq6pCH7xjn5SsLbhy//aLnhv9MO2rkkENeHz3IqfMmkB8tLDu/EOwtJs/
p3NLIN40fy37PTgvW715OioIHzj2zYIb1ovFgk9SYuPBWII3cGccuKlCr1TI
PQzr2rx0zwf3i8ZJhN8PwwdMGHvqwIFFXw/784fjpXtPKqbBJosnzyo8CceV
buWlAWTeLRcy37MzEtdp9ueeBnMuqKh/TYnEy9d3id4EGw/kc6cPRmLrmh3f
6OD11/wroilR+OUWBSMqrKcKv86w3eiPxr6dhx9XgWc8/yWvSsfgTfeF+nvB
Yb1Y9HV8DB6d23dWDNbrJ0dY9v8Sj8WiMjlZbWC8K0Wj1y0OczlIHPsOdpHa
Pjh+Kw47BG5o2QD7AbuD8uewlTgs8sBq1Rd87ftDsZdF8VDHZVSKwn4yzLgq
SetOwCGt+Fwh7Ddl8c2PzNYnY9PHX4O6wcZx5rVO5sm48XFI4yLYRofF6lFu
Ms77aJPnAvvXlTutv6oEU7BadW64LOx3/MmftBOEUzEtX7zRFVz9tjdF2z4V
R/fIueWBE6RleWwKUrH7rPjkCjgjbuZ7A3saNruSVj8M++2ZK8u+Wclp+KGT
rjAv7MehyTx6EufTcA8r90dD8F67jZzWd9LwiY6XKXfBhw8ls16cScOx5w8x
lf6E9QW1feiyp2DxgRsaw+Cdh+5GHA2nYM1QoZ4NUA9sdhbQPZtBwWVaP8ZP
gtVkFHyHWij4sxf3SCzUD4X8Iv/ViVDxEj2+vBF8cl1MrPxuKs7YQrlOB589
F/tPx5CKI2X/FgZBvaJRYGSvFk7F8UHXmr2hnqmc3Ktl0EnFE6ZcVRXg4mxR
BdogFTMVyQ1+ZZB59Yss+wkqTrq6YcoD6qXp1th/HVw0LOkZOeQJ9RR6oXXp
rCUNb9G6VVIBzkuW5Il3p2GJgZCCMbCo0Z9RRigN+8m92uIH9Vrn8TDP8iwa
Ttpw7vZ18O/mLP++EhoedZcNngKr9+pnFFyn4Te9yyGhUO+JfpQae/2QhkPD
7WvrwE//LJ02e0XDlW+aRefAE/K+O20/0LDWxwde8VBP4mA+RdFZGiY+x+q2
gn1Gtm0eXKHhrUoeuv/ALV2bVyU5CPzRcLriONSrN3b0NHuJEfioqk5CFzi4
K3308XYCv34h488M9fDy7fx3j+UI3G83mU0BfzGqrC4/QOCN550ftoOvpHVq
xekS2KM3j4sJ6u2M93E8P40I7EelvUkBb93At1prQ+CWkVcOD8CSN1y/rjgQ
+KfEhh8rYJF9PnnfXQg895cnXQvqe/cMYj7Yg8AR1Ly9yeAtQlYLOT4ENrzk
O9MKvuf9NMMygMCm6kfqlsGZK5MlNcHw/HduS9WE/mLBu0H0ahiBHY6ct00C
u0lv+bM/ksBxE8f3tILvmM5uDowmcLz3baFl8N/SCMq+WAJrsH5m0oT+ZkXi
iuTlOALvyPowk0j+Pm5P7lxVPIHLO0M/toC7dUxWTBLg/APdXyyRrhlWSweP
m8VgDeivmD4al3mA/xTH304ETycG7n4Lt08J31vaAt7bNT0zBfev7xB6kuzf
hu6Yfz4Pjz+cxQjSgP5OUbmCexyeX5fViUOJ4GI+JmovPP+SrwypFrJfVIk2
sAon8ASVaf4/sECU4LHwEAJbfoltOQD9ZQHH6U8KgQR+7L89NgE8JDD44oQv
gc07eqTvg/kMWY2TPAlsHK31dBEsfNfAnceNwJs2Ipf90M8+OdGuoOVEYG6p
ktE48Ozr8scctgQuUBezbQZH3ePWDbcgcM2pU3f+gr0s+BpjTAh8NsZDOwb6
6QscjcyOmgS+zuvt0QQedKmWVlOF18/tROgc+NaDyme1CgSOZbbViYB+/etA
wLZUcbj/rPNr6sDBjxU29/MT2OmHctUv8NOmSdlHnASW8ik8H8TCwEUhWyyI
BRpuU2EbvwE2cCjvtvpJw+93cGz4AS5t4pV88JWGe4bY1nizMvADzj7ZqF4a
3qNT8fAyuF1KRv9BBw1XKAoeGyG/j+CTZbnWBJ/P5Oc7ndng/Jpyo50v0DDz
ljbzIrCj/rfqHWdoePnXB7NB8JmUguwcCg3fuc7cZc7OwKIpDA8TbxqWL4k/
jcj8SZu/zFyGhr3Kcs3TwP1L2h4PBWn484v0wXbwxmMt9c9YaHiay3qX7joG
7llZKD37mYq3z65p115P5lcx8ptyqDj57WB8MjiVw2l1ZyIVX+7YMt0C/vQ5
b/i1N6xHPqfn1DkZmFYxkz+9n4rtIh8Fy3Mx8P64/QytjxSs7RjR5Qe2F+h8
zveIgtdJ53dXgP+4JuDkGgru9xjtF+Nm4LqYL2oyCRSspWzZx8oD14+Wh/JL
PgrmDT6o383LwG1J5SNTcmlY0ERxcBXMX+mhUcUN63fx8upePgb2xRU83J9S
sZqEn/BF8M2nl919j6ViHvXNuuEbGHicasza7JaCdXddj60Aa/+T4i8QT8Ev
t1dqDYOvvdcJefQuGQcy/CM1NjJwh8paTmmbZMw8NOSzCv7JEXBrg2YSPhpY
sqiwiYGLZez7G+YS8XUu5k0u4IvBljeaahKxWE/m4D2wixmd/kk0EQ9uPpYU
zM/AG+Kcz8//isc3eOojWwUYWHMy4tGtlFg8VWThNAreHSryIXZPLObrvvOU
VRBeX+kYvt7vMfgE/xod8vvOo42/GrdaxOC8jt8xQ+DW0JWTpcLR+FKMZc5f
Mo8KPH2A/jQK/0flVBAWYmCFhRdCHxOi8N60/2bsyXwpMTOG9j4S+1S6J/WB
77ElGagVReDgs7vLf4J1X1T1xRhGYNsb6TqcwgwcOsMQPDoXjoOCact6YM/q
aDkxi3A8n19hWgOWuZBcW8QUhgfDj1s/Ak+c/HnEwSEUywW1DnwEP2yqaPly
KwR7JSsacovA+bqVsSo5BePRruJX3uDQt2sn1t4IwDlOh8oSwP2exVmXl/2x
v+XTL9lgockp/3Zzf1zzKP5FE9g0LlifoPti7YjfUd3ga5SCjcp6vpiWWJvz
jvz+2+f1Xf+zPphyuUZ6BbxpOvpwprI39sT7LnKLMnDyltdbktO8sLn6rSxx
8FpHxVz2l574+p81DzXIfCk/dMPfAA/cbmuz3hTMuV5f2LP5GF7V9uuyB/Ob
3b0Sw3oM+6W+ORNO5iuSpmf1tdyw7YO6i2Q+MMEx+Zg66ILH7Uy3nwK3mYqz
yQcfxZLX7ySR+ULlzafX3593xFPxIjZk/mDc57Pr924H3Ddy7HwdOK5Qcuz0
Yztc8pwlsRPssxrhG/3bBg8u8/I/A7OL2Dr2Edb4rYSHeB94+enox1fCVtgy
vf/cMPi/kniBPw4WeOKMZtpHMo94uGnqZuohfC825i2ZRy1x8oQOXzXBfjp+
l7+Ds/htGWnPDbHmMeb3U2CWa19am38fxOvz9tPIfCZGgEMgS0AXm+iXDjHI
87vLxd27qIGZjh5JI/Op3JqnOh+eqOLR24fS/oKLvsYrvZFVwhcEoobIvIpp
tLlb99E2/MWjmUrmQ/mZv7v/Jq3D8nlcx0kzmecq3hDjQAE28R/J4+Osp7/8
DNqGuFi5M8n7i6sW8j3xWhER64ZyyMfbKd+n2liiivQ7v0yRz8d9F8u2yl4N
9CBHt5R8vlLedMuEfzrIc4jpKnk+X44X3G4T0keVc4rM5Pkeje5dc1rJCK0U
QfsM9mQKEX1laIqUzGUevgc/+cfUn+ByGOmVHdxB5ntWFoezWvdbIl3Xo5/I
/E8U94Ud7bJC+z0v/STzwS+Selz55jZIjapr1wa+3/na3unNEaSfEyjQCE5d
uGtWecwOhXiYy98gr6eN0iMhk/bo8ZhwSTn4zrQEd3WEI/pY7kJJJ99Psdy9
TpSjKOta5GIi+LPouE0Luyviiyt4FgKmfZ/SCcpyQ/f99sVbg/30GJOHzI6h
mHR7+4PgICsPm7XcHkgl6MGZPeA6/qLnh194INWmVr6NYCNHL8kCCy+kGSLr
xETmd49fq6TzeqOy8th/M/B5YcT5N/974Y2sGsLdnoCVaLTSgEO+KHf/P9EG
sP2Tdm3b9X5ofZrC3jKwgMz5wfonfshNRokSAX5766Nvk04AKqhbbHIGf/HJ
b7RaDkCLDa6m+uAV3YDrFncD0aSAXv4mMm9ecj3jJheM+n9Ett6A9eLSm597
aljDUKe88Go2eNQgOf2RexiS5l28EgFmUd7TktIShmjBGpL7yONFn5/qDg1H
Zqa+31tg/SotfXkmrT8CnbqX6VoC3naZJcdNLhINOmagBLBsU+vGF9RI5OjH
q6cGvlMReNZqdxSabNJ1r4L1c0PI0KOW49GINjE9SQVPDqbkObyJRiNJolMu
YDTf8z5eNgb9VJW02AimvilL0uuNQSHyNW1RsH53GT/hv88Vh2qlP3AeAmfL
CsQYO8ehMw8ih7aBhxS+SB++HofqygK/vYD9IHe9TFr9wXg0KSK9sgXs6Rq7
2hqegOpzHY3nYP/Q1RCk97YkoPADWUJPwHbfTB4ZsSai50N0g0Aw374zeaHn
EpEUcXf1JuxPen6m4R51SYjNgHghDvvZhw5tzuTuFJTD3zj0A/bDxtYAPXeO
VPS7hCuqCWz95uiafKNUZCjwJcIMfNmPJff7w1Q0tDB5KQL21/AAMSMupzTU
dNIwSgNsqWf4TT42DTlTzMeYwdavPP1/56UhmaaD1/Jgv+4wuFbk0pOG3rlX
DtyC/dzua5kh3kdBFvPbcRSZR52LbB2zpqDGf9bWB8C6hk77bwRR0F3zv7Fd
UA/Uhces5yynoBAW3rEBqCc6K9ofb/4Hx3c37y8Cs66ZF5QSpKLyX2W6zmCJ
tyLbH8lTkUlQetgI1COtZ/bEvHagotH3z8K+Qz0zKR7ox1VDRfrsau014DD1
E5doD6hob5jBUDh4Z79UWdkrKhK6+tppCeohmej0yAezVJSUWzjGCU6tl1e6
oEpDzRacGS+hvlrEx4VlDGhocovV6lnwc3xO2fYIDeVLzjuJgD0EZdtyw2mo
NseQVQrqszixaMXMKhr6ErdoPA71XW60T6lIIw3Fs417XwMv23WLGrbTUL+9
wm558Cu+FfPEYRrKezDxeQbqx6biz5m0LzRUIVQefBusZWz7fdcMDfVdfrZT
BfxKI1rccg2BzNfW2M1CfXr5oPqll+sJ1GHn4tcIzmwsOTG9iUDlpzj2k7+n
+vv7xdMVKQLlt4X89wfqX5FDbn10eQIV5CZfIX9/VagkkE3dS6C6nyF1+8B7
hzcmx+sRKBp3Ci9CfX2WnT/gszGBtt68GHQPTI+0pY6aE0i8U+9WPJjvon1N
6hECveT4+oms36t5S17ccyRQ6emWf2R9n2R48eUZVwL9OsK2kaz/tbq/F6zx
JNCu0BVBsj+ANYCd15dAjd/e8ZL9A6UFcTUHECgQvV1ZhP5CX7ckYzmYQJIV
e7/cI/uPrI7oD2EEes+860E8OMyf8cg+kkALxoyz+8E1B+IiQ6IJ1OvSc2wR
+ptCn9KYLbEEqpWflbsHLreueRIcB8eXX2bEgdW8frnaxRNo5ZLgXTKfesZU
t/cdWED8dMIC9Fc9WRq6i+DfcprazeAQdqfkBnDOaR/mOHD6v7+THOC+LYbP
1cEiXxl5i/B4PA2ChX+hv5MbCaQejyHQ5XX8fnfBz6SI9pooAk1MxaNY8Oqn
ow6hEQTS2kpIqINfawod6Q0l0FJYCNtf6C8tggbaHgcRKPly1MIdMKWkqdzZ
n0AJwa/nY8A1nxpYMr3h/NI7/6mBhzMOsTgcI5BqUKrQX+hv0xWq7uCjBLp2
86D2XbCKA7vKQ3sCbdrzvI3Mp17tXzdWeohAEqVTbQzop/mq3VimDeD8JYoH
b4K7qljfdmkTiLt0wEoKnH3k8SEhJQLN+qTc+wz9+lrkYpgrDe+H1rR2CXim
ovnGOXEC6Z46eH0jOPq32Sl9uD61Sw/mvoD+3/tQafjMPxra1r6nNANc8ij5
6rZ5GtLcybGTmfx9quTYlMonGjJaNVL4Mw+vn/KnYMYNGmq6X+DWAC4KvSDC
WkpDYpUsnWHg4Kxi48psGtLq1hefnqPjU5MLmQVhNNSwomw/NguP/5pwUVai
obRPXnsrwEquNl87xGlICVcc9gQ/+/eg+ysnDanmih/4wqDj5Z8S3h/HqSj9
xMXtZL600liw2FBIRaG/JtZVgG+3uhLvqVTkn/dC3Ru8e7h3tjCYigzGBcIm
fkM/f+VAap8uFXXrsSYwfsH7k4INbMcoKFcsv6sJ7M1xYZ1KLwWFmU0ciweP
cnj2VzVSUBq/4/k14BvDHrfdqRT0ceygjOBPOp7t2eorJEJB2u3vFT/MwOt7
NNqkZyUNJUb+PHuZtMaBEYkvaWhHzuO43WDt0s6y8utp6O03ls+W03D9KgkR
W/emIdvaRoWrk3RsFTbHnxyagoIPyHJGgy+rRqlWKacgpQ+HzQzA8bL3WfbP
JiOtZb+/4z/g9iZHCouiktGZdabCSj/I78dYfQLDktDmjZNSa8EHu+sc/igk
Ifa3lJLBCTre0JAnMzuZiL6pKT5LBu94cfmMkWcikk7dZUDOK3nUdF6jHE5A
svrn710Hc+fz7uxgS0BrlrrL0sDR5w09k3E8+s7T8EAJPOBOLQ5Xikcx1fcC
8sbpuNu7flP4ujgkVr1lc/gYHSfRzMv4q6KRwPlHC+Zgr5WRil6HaOTbwGyt
AJ5tb2cVWx+NlLhXk6a+wfHfDf7FBUYh/29GT4LBuz/89AreFYlYVBbOW4DP
vM74OjccgS72GP9WBtN0kpzFT0Sg0nLpbQvk972Xl6/aj4Yjf9v5+gyw7/ee
32V5YSjw3a0rYeB7lWsKnVEYch2OEbUHW8SHZ2UOhiKl5woXdoBPj+SOOlBC
0P28qyvkfFKlTBtjsC8Q/TAxkm8Ah1u8+pglFYiMDzV8I+eTZIT73rTGBCAd
fGYuipw/WqY3ZYn4I8e/ASW7yPkIS8dsZ0cfdH3NTLww2LKqZf+1am/0/HDP
Z3Zy/gI79pxe8UJVOp/1yPkkni2RQ1IXPVG8XqUOOZ90aiLq98hvDyRivfCY
nE8Slm9S0tX1QN4zx0LI+aQttSWeSyPuSHn7vzPkfFJ2mgzT0d3u6LaksgY5
n+Rxflzuw6orMsnUUiLnk3xSvyn57T+K5Dmz4sj5JJb+uYiPg06wv9gfIueT
hFRik1+FO6L+uo359mC7Yvqk6TU7NOnqyEHmD2fVVQc/69ki+yfP2Ml8olbW
KZf7ow2qUD97lswvdCbwl3cx1uit1uA1Mt9QG/bJNOezQh9bak1VwMcoOo2f
rC1Q8XudOHkyn6Kq7UknDqE/jy8p7yTzi2lu5aomEzRS9SuGzJvm/0iZmIwb
olklQ+P/z/uo6gokCeojNaF7V8m8aejkO4XDhrpIN9j2DDlPFCM+F5Y/pYkS
uGVYyTznfg1L8xpTdWTYr8VO5j2KfdUpK1XKiPP8lQIyfxLUctlhyCmD/Jh8
a8l8qFnz/W+1TBHEUpZpTzpt5MoTIc4J7cb/eE6T1lcddaWe2oRfBk+YkrcP
0Y+aYl2/A1eZbyrcSOYl3G85I3fuxjlzp0L5yXmmezsyCp5CP3bHcIDMw+b6
ardYBGrg6emDj8j5Jk/aI6R3QgffYkvUEwcHFXvvyrI7iAuC3pqR+ZJua8/V
BGlDPPrfwVFyXkv+hYj4yrwxVnUrX0vmSwuNQQtsj8zwXqNXt3eDI+zGLmbk
mWOqe8uEGlilpw+11Vrihw4GN7XAZrVfU7yErHHxR+sVffLxTPfpNSbbYIO7
qciWfD0f75FSMbHD/AImyq5kfnbF+a71LXs8cXr2pi/5fr+0u8e0yRG/r5Yx
IueVHJLyNk2+c8ZF3VaeJ8l5qt0tv4W0XXDRWNG6PPBEMdWw+aIrTilsmq0G
d9npNonWu+NGd271e+DI2yuBVI9jeDo0m/kJ+DpX+3LBRg+8bDSn9o08nnWD
e0O4J25wv/hPCj4v2+53igbI+eDrMlrs+8Bp6Ruij3/3weX3o26agau9HQ9J
XPHFlC9f+8nP4+Snhu67wv74B2U18QU46YuQj8BKIDZ3Oh44Dq4wY9G41hiE
LXs751fJ47V/xRcGBuPg2zJvlGE96BxZYCQMh2DdwM9dZeDRMvHNEf1h+NMe
pYQWMOv5moQo+XD8MD3h0RtweuLcPP/xcCw8GC4mAOsTI/GKnYxqBE6QvlmX
D97S4bXZIycSc+//zXwHHJ7smCExHom5OErGh8l5pqVtGf4aUZjHQNJJHNbH
ax1vKq98i8InC0W+3QJXx9CqI5VjcMTuvisDZJ6f/PK/UFoMburIm/kP/PFY
+MzUQAwWc2gXM4H1+Flg+innmFhc1rfx2RSY+jcy5Xt9HFZ7FdchAOu3bJn9
wC2meJy1vVNDB6zAxVvy/XA8Tvom2XQOXC9+rK5yPB4reXBeNIH9wvJWm4/c
hkRsueScFwsOb48eMXdKxH+7rq2pBFfwagUMXU7EQWuFzVjIeaXk98qcKkn4
uPvVyMfgvhMPdT4bJ2ORYBdp9yn4PDl7PX1rl4qv3Xt5Nxcs1/Jr1TE3FYe8
XK54CLa8/C9Q63kqVhEoz5aB/bLo3KMH+RJpmNfTmPYHzGkaztWamYbfOc8O
ycL++r71QEt8VRo2nD2W4gZmYqTe+9aRhnvup3U9Bfc6G51un0/DTsev812G
/fvzO+VbFEcK7vhZOPYGvP8eZ2dJOAUXytNZ+WC/55Bdr+F2ioKl+q9KpZL7
v/bJhJG7FHzH/12LO9QTLII2VzAfFZ9cXektBn+TsN0jLE3FsXPvtvWDFd/1
XRHUoOKC+8Y5hlCPPD48cZrZi4p53YucdkM9szn4hvvZOip24JL0DAR36PdM
8XRRsZ+33VVynqlGsMlIcYiKJeI0XotDPfRuSwb3kUUq3vo99SYP1FMzd4+b
qWjQsIryTk8z8FcRn08tpjTM+WGPSTqZPy1tKBtzpOEdJ+9dWgv12NSzQ6eE
Y2l4/rGg5yL4HFOk01wNDUdfOp1Azi/dz2G+EnuPho3jhpvJ+SWWU25/ix7R
sNkakasMsLy81qfGDzRcK33Jkpxf2pq/ZfXWdxoW19khQc4vxf49oW/IoOEb
6caiP8FPo+qDzNgIrJIZZUjOLynR/vvdzEvghVv3zpDzS+EXAt50ChM4nn41
agpcHDYkUr2LwA1n33CT80vtSj+FTykTeCDmAA4AxwUW9azdT+B6i3Pek2Dr
e8d7uw0JnHydp0kJ6uW18SvHCg8TeO/xZdFo8C/xtPRfNgQOqH9ecB9M15UV
6nMk8B7/ie1MZH4U1ftDw43AJ51bHxqAL8XMjCl5EZgzqzaS/P8GshtX6TV+
BPZdo6jSB14qip6rDyKwTmvpiiD0A0xnHvfrhhH4b4ffwFGw2KfaGMdIAn9a
u9B4GXxpq8SLxWgCf11pKJ0ALxcu9myLI7CwCGuWIvQjaDDXcyCewAcoNpQo
8MMbhSd4Egks/p4t/j75/y3IblHtA8duORnBBP3Pz6VO381JBK49rBlkCGZj
shf6DX9Xks72ygQP1zaaHgJHR35zfA1uObyXXTkB7o+nylQY+i9WyXjzMnj8
5H9aqq5g7gw9mfwYAp+r2SBcATbc2Vu1MYrA4xoZ9B9gq97UNyLhBH75nbdd
Cfq/p6dPPr4eTOBTe7mo0eDKVbbsTn8CC9pMqLaAWdVEjby8Cdwqzf2OCfpN
Rz1RtjPuBH5Y8zXIENx9S3FEz5nAkprD06fJeaUEmZVUWwKr9Vs79IE3Z4lQ
DS0IfBi33xRcS85XFGSfMyYw4+AWvkvgG4/9X/bD+5/xZVpkHByhSPfugOtj
PsuFXQ76aUPUsXs/XD/1OiMnyH475wyrRLcggXnE+gUWwfVWM3c/cxF4dbM0
VQv69XWcz12oawm87enN6Udgk2miyX+ahi0Ter6vg/6//lH2f7dGaNjNV/D+
YTBWMTuSNkCDdXXu4wDYIuKPQfd9Gv6sOfR3hI2B2fi0suYpNJxXuZuynZ2B
LVknzl2JoGHNrSGD3mC2Ss5tIx40LHfz/Bvy97UVr8sc2PRoWE2tXfIXB5xf
csLGjUtUTLljPaS0joF1Mst3oAkqfrhn1CwM/L7NdnFlgIrPbWUP+Q3WLTfM
UblJxcmlMd4z6+H1Sr7AoDlQ8fed/k/I3wtf/M1m06hHxUPbTn/2BQvKrnCm
yFNxz5G1CqNgJs+vKZ9XKfhlUarQKy4GfvzKL2WijIIT19ezcnIzsE1SZyv9
OAUnyWSUG4Bzr3skFgVRMFPkyqt74Eap+evt+yj4yH5j9jIeBu7bW9R9uicN
O1xlKA6BpXiJxZzaNBxrvWuBm5eBKUWK9vvy0zBF3CwgCez85xRHmBN5/Mfq
I3wM/KRV+bvso1QcvXdLKX0DA68+E+2/0JWM7cacLLZvZOBzCtLjGZRkHLN6
LucIeBPzfol+rWT8rhO3NIFjBWNnYxuTsLwH/VzEJgaW1pj00jqfiC2++ly5
CD73O44ubZ2IU+2T1F6ATa9+m4xZl4gXBJOnd/IzcO9n9yTLmASs41KaNAh+
0yl+X8gkHo/wlVz+Bxaermf3WI7Dm1CK0S4BBnY3mXoveTsOdz0+uj4R3G5r
N7u8MQ7r0LKchQUZmEW3RTgY9mPdMbWQ/UIMzHEgsrMWRWHb9LfvHcCcE8Hp
Lb8jcZdFfW8sODi1/5nXpUgsbnZHoxH8QQiNFK2JxH0ub3bvFGZgoePpLPVt
4fhQqHTt//OfurST7wPDses+5dsuYDfnqeHbIuH4yski2bPgTQ9UDN2iwnDD
B02OefCCF/3s+kMhuO1sZSyXCLxeodFKnleCMRN92WM7+f3wkZ4J2f+CcC7P
uWoLMr+Rm6PxVwZi1g0z7GQ+JBM38VJzKQCfVYj/FA+uCFdRGrUIwNT9TQuX
wOGCza7Vf/2wfEuBBpkPbXoQeXfY1A/vMBT+S35/XVEiq5tV6osf2hYOkfNH
PTJfpC/p+uC7fM8VFcj5ItMa8WeEJ95WG66gSc6nZD06UjrggXvid18m85+R
T3eS+aU88PPMj9Pe4L3P46SXO9xxSrpuZwT4IzXPN5LPHe+/eYcrFey294fp
vjZX/Obz8L8CcLbxXkvJOWe8f4rn2kXwsWH1qM5sJ7xuKKaLzAP+eGv2fZVx
xIrh746QeQFhr34go9MeXyxgcSTzBJ3hbdRWZzscWt/7iswbfKanTlLmjuCC
tg2tZB7BdrNYYSTTBtfMuE6T+UWbQED38VZLvOuPiDKZ96SMmdEbq8wx790H
E2T+8ZjNPad70AznvVTdNAM2XP9A9wizCZ745FtLzh/p+W16673bEB8ktNrJ
vGW1iFuW0+UgHnIt1yPzmjAhJw7rUzr4Una0OjlvlNduQs0J0MDfd9SWkfNC
z9I69/ztUMXr9pnGMYkxsJWa18is8G58WBd1rQFLl6zL0v8shZfaMqhrwSfb
JnLjhDdhR1mZBtLpIXeni0KntT0XN9qRfuM+t2y6VxQ9jjYKJG+/OarRii9Y
Bj2r6mWQ80oNG8Q9Oz4ro5eGddPkfNL2ntnmy+nqqOjnc1FyPumWNaeMS7UW
mnsffpnMkzrUf0vfGddFMkz1NHIeyQVtCbD7q49OpZU++AlOy7/TksxujC6x
HLH5AR7KKswQFTJD6zYu6X4Fz9ikaopJm6McleYMct5roCpCTP28JWL7XatA
5kWlkRd/MW21RloD6+XI9+d9O3HYo8oGTWnMULvIea+o80HWCraouihLlZxH
kn3Idba73g6N/Nh5kMz/5PUjmFrVHZDGvoXqSrBgkux/21sdUWTmgbAS8Llf
+R1/kTM6T1nPRSPzPEuOZ9jAFQU+kPkWDR7b8e725SduyCD+pbAf+M25Xea+
Fe7o0Pbpov9fz+y+YaFSHmhykH+MnEfK323F9ParB1qLBc/IkrcPVng5eNkT
tTeKr7KDzeuGVmMlvZHSOOPhPHx+LnhfGOb/6I3+19F9x1P9/XEAN6KISlY0
bZIVGsSxImWPzOzsvbc7PlqSVEoiQoRUIpuTEloqUfJF2bSMbMnv/fn9+Xzg
uve695z38f683tc6W3piEPw46/17xQx3xHsr2bwOXJ/3RXFsqyeaZu2vcAN/
uMwbX7rqjc6aFdLI/NEDi1HJkUofZJx1o1wZfOEZz9G4AF+UdFFBcx14tuiN
TWO/HxoXUtieAevHjT0GDudsA5GNF9oaDx68+DHEtyIQGcpJBTmD84363KY4
g1B1DIeXOLk+3Qp9+g4HocE7zhZFsJ7dVjrRX7ErBG24tD7rHNhp3dy8Y1gI
yvwgYO4BnvodsuPW6xCUXX+aXYTMW/7mq6kJD0XhfCx1V2E99cx4ZOfSGob2
7p7usyXzQmH2yw0mkWjngf2iSmReVGI81jAjEn2u9Jwn80TT7YIlzkORSFKw
RrMB1m/x312aW0OjUM1fp/PbwFp31Y75pkQjjYoJnd+wH5S06KgtdUYj3mN1
V56Di34m5KwJxCDOH3fHfcE0Vz7XkNwY9F7gdFot7DexFudiP9yPRdk3FVbI
/BFrh33zut+xaMBdYdkB3NCiM1sgG4fGtsS3MoL3v57dqfggDiXfw9VasL8V
jCVT9Ari0ale11ePYT809RSmFR+hoFcJzEoJ4HgR9CXYmoIud8jongBznmdV
nQihILtAKc9B2F/5z9yZ7CuiIIG1GswBPrt4KKObi4r8foZf+AT7c0f6zyQm
aSriPMrGmgPumzV2/aRNRbm3/nHvB2dHhX6NCqWiJN5LRWaw//ueb5jK/UBF
IswGAoJgaZs/k5vGqcg98YYWWS+YZ34RE/pHRbIJ5i3+4JHTG4gDUjS02PKx
7AzUH6JP6LoCMTSUFxfPaQC2EGrSL7lEQ0kRz6S5wAYja2rf7tDQyfq6igyo
X1q40hMVWmmIM2NlWwnUP6zi2j4enHR0LeXQfwHgf+gZa8VOOrr/3MtHCVyr
zkjLl6Ejq0cyy/VQP7HdyFwMMKAjJurqMgWccn2d3XE7OpLW0mzXAQd2RIS1
eoEzK6deQ31W/iT93b1EOtIvk9ZKAZ/MXaRxXKWjTzdzvM3A8i9rv3Ll0NGN
Q3uPdkN9t+mnbAVDDR3t9hzXGIT68Fv5LgXPUTrqMi30zgcPX7Tv75iio+V7
eaHu4FMm24P6lulIJIBV9jvUm5stV2594CSQSfHzryXgZ7eiu2v5CMTt4hvu
B17SvqSjvZtALcsqVlNQz6Z/fCeiIEegh5P1eWXg+1bVRtcPEGi2duBLMPjg
XDdvhhqBNkl9WlYESw5UmRzRIdAX+db1c1A/F15M+Rx7nECFVmOMlYzk+1st
w86EQHa7PL+Hg1+2Hie6LQl0gkE/aRHq9fPd2tb3HQk01bVet4a8Hox983pm
NwIpCIz8iQKfxZJeCx4EUkzguU72fxzf2sSe9yFQHnubzMoaeX1nnWKNP4F+
tMvXk9efmXAnxp4JIlDg1wStWHD/r5/a0yEEumk82kTmk4LW7Y2A8xDyupmm
ugrnE3SWdUN2BIFMnZseNYDf+LIyDkYS6PvSLeF4sFFD5qlnUQRy87K6og4O
+/WRVyMavv5EjHENzkdzQZVCduR8upFDgZic54CNorjBFuLPvyWQX6/5KOgF
P5+xY8FcA3zSaSu/Pdy+rvD61wzghCXRkJ/hBHp0XkyvCc5nMo9X9gvC/TsZ
Srykgjf30U6NBMPfz8bSXAtccHbLOqNAArXzvBphApsFvFWw8CNQSQoP7Tmc
D1c/bJ9e8CJQrLe7FAFOSwswPuwO909oqlcHrHsnz32bC4GSOwezWMDJwvf0
004RiLE+wK8Fzqelctbsj6wJxP6w1eAseKeUZoOnOfw9agXUjoF1iKt0bEig
6C9piA3c+GMkokIP/p4HfS1fwXk4u/FsuZ4mgZJevUlIArvoeZpEqRAo7vQw
3yZwb7+marU0gY5pblZ6Beft0p5EVR4RAvFReALOgFt5DjP+EyCQuGO5Dnk9
6NbPvndjWAlkEGo4WAduNWkf3/yXjhT1nuZFknklynjr/mk6EjMRTif/P1Cl
dMBVrIeO9txib38ITjJ1zp97S0cGbxpk/MCMB+STLJvo6MJdn8DxuWlsnFHl
8KKAjo50jEoPzMLr6civNj9fOjqTj75kg+fFbJKf29PR+3O89Q5guesN4SXw
fn/3bEGi7w+cvy1pyorSdDQz2fy0d2YaF5n97N03REO6RWJaWWCtCzr2u97T
UGea5zoH8NzMoMjdehoqk1Y0/TY9jQ875muHXqOhOqOX+8n+ULBuk4UYoqEn
1kqDxeBsxbs330rS0LrVi31+YGm71P82baUhMaPIhtnJaWy5rdzIYYiK8tOu
6rGC1xU+rERUKiovnY15/XsaizukeTd6UFFMxwhrKphDU9axx5CK5PnyxXaC
5w7ds/65jYpuqhkWH/41jYVnjimfL6agT5//VjKC9Rs1qEyXKMjPzFn01c9p
7CHrP7AziIKWY4+I24Nf1iMPtQMUZFa+PEb8mMbvu59auEUmoL/7k3y+T8D7
59VtQ4GAOHQ6nuFUPdgyZHrkjFwcesv28vEl8vpvocMObpOxKPB6yyUlcp7Q
vWNrIX6xyGafhFDi+DSOuuSdtsE1Bg0kxhnaglP8L53atjsGBdUsDMuBLwg/
OZLbE40YO8qte8fg9t5e8pEyiUYMNS1eKuBXEn+YpJWjEI9xHws3uM046I38
r0i0xzmM++foNP5NaQ2py49EOs9Vz2SDeyeufHPbGoksNDb3bwTH1Ymlyo+H
o8pslT/Lw9N4pV4sfCo+FFWp2/7tASu8lpGclgtFZwZ+UOvAS8b24pe+haCj
1wfWxYN5zNUF8zRC0K37wssbwK4+jDS3v0FoE4/eAnn9f8TtrMHg4iA0EBkT
9oH8/+2QxpqUdRBiuSW6cIvMKyVveZP+OBDpdHvtPAh2KdS/d6LVH905J6Gw
G/z5gcdmo13+yGxw5OV6sPBkWGVdqB9ivix6sWdwGnt/DPg1stsX7RsiKpvB
9z8OcBWF+qDVvrseD8GNL0yyh9u8UcubbsczYB7xt+IdAV5ov0RpYTC4/UZ5
+4Vnnijkvw8RjuCaa/f3v+TxRPHXzj5WAe/lH8wYrnJH+hV3bi2Q+ZhFV57Z
RVf0wcXu+yg5D+2UR5TNYVc0XBfc+wks+CfdxDjKBe3kV7tfTeY53LbUrC44
oV2/b14g54k12hWtxwec0I8zTzjJ/NLht8kxOt8dEOd2d2YCPMQm9AUP2CG/
ECI8Ehwz9M3vjL0tKok6l+JH5pWu7GOq+GSNDr0tM3IFC1x45WNqYoW6svZX
2IDZlN2SPV5aovJKvafkvLsNheFoTdMCPd29L4Scdye644OdUK0ZuqbD+lYD
3HeT480nBVOkIsPUTs5jY77247uJmTHKvG0c/v95bXWLoeoaBijWaWsLmV8q
MH2+4ZyMPprb5dxA5pdG5avOIkFdtD/GwZ6cBxe4o+BFOKs2YlaSydsDpmlR
9iUMI9Q12J9K9l8S749WWNUdRmVMMZLkvLlNE3/nMlIV0exRXg+yX2OR9Nz+
S/teJKreZEjmg95/lQp59mcHMvKM7/3/fDs9tp57otPqhRQ9bvLrj9C7hjPO
PNjeVmiG9B0mu7xvieL4t8aWKLJ/xeZsd1nNTwGXzDHeI/NFdyjCBWI3DuK2
vcPxu8Ef9xW/JZ6qYWrH/VWyHzaSKJ9za1YTf9QxESX7ZaXf6zMvbjiKZ03y
Z8h+EM1z9ALzjmP4n9tZTzJv9PCgzbXfsicwL9NA4kEyr3W3qU9V0wifKko/
rk7209ZGXvgWmeC//6VVHgV36F0Z6FEww//1JdDJ+XV/tD77BmlaYsWT80OO
ZJ4rSVH4XNtJbMvW+90LPLBva5agsTV+s+PgD7K/yDFpbpdia4dVaLzDSWQe
7FMcq9NXe2xiak1LB78pU5E+7+qAYyRZHpSTfz+l/rZvFU5YWPqHyjOwZ6fj
9a9hzri6gsX3A1h7wnRz1AEXHHfdrGaavL+NFjnela7434svnUzw+rdT5Viu
CXPD4TZyV3nI91c6Y9IVpdP41a0b84fB9MTQLe2P3HHrYmOGIThhn1OQpL8H
HqUufHUGq60r+rC81xOnUkpOXARrHR45O5/rhcuWzmeMk/1bg9LrHUm+2FlO
5uoamT/q4GvWOOSHqcerePjh/c5wvphn+7AfniSyH+mBqV/ckllVAvC4lbP6
Q7BVL7egzGQgHskqC3wF1k2rjBvRCsJLw8MSo+Q8vBGmc7rXg/C+y53Cu2F9
0hpM+bWiGoy/n2tTuQG++17Kg5UegrW/OxBkv+j8wBOlTx9D8D7D/UafwFLq
Yvc0RUMxrx+HE//INF7+3bFv5Hkong7d7p0NfqZ4+MP+f2E4u9ktvgXWU0+R
v8wppyLx59q+6F/granRKo6FkbhF2+YnD6zPEazRZY+nIvHpl4ekT4M3Cjlc
7aNG4fp3VkwbYb13rxlav/12NC4SLLisDD5W5rqrbygaC3LGJDuBjbN5Rfml
YrCrl+W7KrDcZRrlV1kM9ua4YucD+0vvIc+61fpYfEj7+9GbYCeF7HCbf7E4
X/HpjVbw7tysOGEUh8/nH/UX+w71Rh5dc6ExDu/gorwZAQ+tvM4+VxWPJV5k
hkfC/leW9YiedZSCpUWsnUvAqh3cJgNOFKxrkp/TD843c/DviqFgaz5WATJv
NPVAKf3NIwoOHeTv2gb77y+ZrK5xPiquGco9ZgS2rUHH78hRcVNd4wYCfOfh
dRnWY1TMJXnHewqsKb3d6mMEFRf9sE9/A/v9n5cKTv4fqVh25on5OqgP2r7a
RcdNULGVsqX5EbDTgmWw8hoVlwcoby8Fa/nJat6WouED2r8fpEL9Uesd0HYs
mobPTbv7vwavHXmfezWZhq8JnfFigXrl49ZgJSKHhpGV1KZosHiUho7lCxou
WhadOU3WP2K3OErZ6fju7fMBd8DTzWz7d2ynY0uF27vJ+sjyx30vWWk6xnOm
3JZQP6W1Z7WrHKfjvMhCi1TwRK+el5INHbu17mx+C86/kD3+zoOODx76T1IP
6jOlO2W+P+h0vKHsw3YCTDW2/OWdSsfveA0ONYF3shlrJt2mYw1rmQlVqO/E
GWWsSqvomEF0kE0R6kP/pHfvAkfoOP2btWQQOOjrnoNTk3R8mWfBnZxvdzLv
T+6mZTpuappA+6D+TP5g1y7BSeALe/s/e4MPeGxREOYj8MeJw0lF4OjnRH/t
LgJzr3khCahnlcX9T7fIEpg5o0fNHTzHljt36ACB7wn+NLsLnq7XOKivRuD/
vnnHDYOdzjCwLWgTOMRApF4E6md66Q19reME9m8e4HQFf1p88nmvCYE3HA4N
ygUvfcFXHlkSOPFuwcgAOHHO2eWjLYEtb2p7CUH9vr3rnfxVRwLzxHI7uIMd
vP9N6rsROPvpZpcSsHY2Wk3yJHBxbGnIFDiKaDpi40vgNXmXVGU4PyQvNF0t
CyCwsFZeTTRYnQ9NXwsmsLfK8HcMNucO02cOIzA9JV2EBc4r11bvX/4bTmC+
KkWX4+CWIbk6SiSB28Wl7qaAH3TqNqREEVg+/+f3TvBIVE2SVDSBdRn+KAjC
+Skts0bECCx182GkI/gXjXZ+Fb5/8mZaQ/4/cn7xmaaD4FKZbWsT4LNah9//
jSBwVEKxqhyc354GcNQawO8vHMBB5Hy7r6n+hEQogVUV3maT1//tPbdTIzmI
wAerdZvJ+RWlM5//xvkTeCYkp08bzo+CvhVtS94EPvbb6Ps58G4x1yoGDwKz
praOvwVPN1JGrrgQ+NyehM9b4bwacnCr16NTBHYP+V5hBRbZc9PaxprA0YiS
kAmua7vdnWwGrw/GKuUB8FwnE4eRAYFvVq37JAbn48eeo1wZRwls3fys/QHY
kP5E4RO8PvgEREX/gP/zCb9Lvn4qZ2JOHYTzuG3fxiva4gSuOLIchsE+ufX3
h7jh/gXwmpHzRi6ycGuvZydwc/8WDj1wqd1hkeo1Og57c4e7HSx60rnt2QQd
S83LO3CxkPkUG9ad/XS8pec6xQKs4utxgaWDjp/f/63bA7736+NVWjUdH+H9
NraDdQbvsdPJ4y+h4/PNpbaOYPpjg91HsuiYPeLPwyHwhcqvJUoUOv4q8X6S
7B/NH/9t/EuDjkVsLOf3bpjB30ZqBdbL03E+z+QzH/DUPxXW8l103Hvs/r2f
4NMGZ5meL9OwjjRT/A+2GbwsxTzYXkrDK695kveyz2CKCD0u8SYNq/zuPOkF
Xnl7pPgDQcPf+Mp4RsGXBBmi9tnS8MNpTu7ejTM4v585ewnWN7afUy94OGbw
sU2WiWuw/hWJ9O43BNvdEOe+D+vj07GEAw1grboulpW7VCzME9Nyk3MGS4el
t8TqUrGBiK30e3Dr387qZhkqZi/K1WTdNIO/G/czVfFQsd7S8fggcKsj5W7m
AAVXH64R1Nk8g3fJcm6KjqDgS8Uff0WAU6UTe4XtKfhxJ7d3CVhncponWoOC
049z2XJtmcFbKaqLyhso+K9Gwt9ucAHDsPWoRAI2jHAKObl1Bht9faO5XiUO
y8TWuBHgfW5n3z5YisVO3Jumysj+0h+fsRfVsXjuzo4PG7lnsJluRaeeciy2
OaqbXwt2q+c/1SgRg7sSmAxHwCGxn1VZYX9cefXl3GaeGdzw9P2WtqxorD1H
q3QBf/Rmnm3kisY656w/MvPO4LDjmhtz/kTiV0+M/u0FcwlmdvQVR2JKLFOl
Kdjb8ERGjnMkbot50JYFfr9H52ft2wi8ZZDqLs8H7wf22s0+OeGYv11xTJ1/
Bk+mCRavUwjFNY+TJJ3Bl9so46k9IXjPzqwuGvgvQ+JYMdQXHZZjAc3guW1e
4uc6g/GC92KKxrYZXBLfli4RFITvfNMQdABXO/SsO8EfhG+1+LDHgH/0Bpmz
NwTiIO0lgXLw5TTvVbf1gThjYG1ou8AMZlXPND4v54cf5swnKYGvdj0zZg73
xZoHfl8zAF/LMrz1qc4HfzWvbyXzRvaMb6QyjnrDOStj6jK44XPs1qvnvXD5
rHtkATg1jvCbf+OJx7tyc9+BHaOCLnKaeeDo35I6Q+R8vF4ThldX3bHwXLPW
PJhhsF6Tqes0Lv/kaSkoCI+v2eXCgqUbzqxM9CTnfSXelNdoSHPFlbv+fCLz
Rq4bPGS2dLng3oZbzbZkPmm892qAmTNeDubT9gJPZGv3EpedsH9y/PYIsABP
unBwpiP2j3/ZfRn8U1Z3dXcq1LtKKg2Z5NefvPSJYLfDVWIxy4XgzNZLXvJ0
G1xDV40n59t1FG94+D34JOZqV2wm+0kOAdKfVicssJD4epd2cFrGHdfrTuZY
6hrF6hN45ukhy4ZPppij2SefzBMdq52/F2Nggg/X3D02TOalKom3FXRD/DJt
gw45v216sF7qhd9xrG/gfZ3M4+xqOemvYqWHc/LuoVkyP/OisVhcQwezPClH
ZN7HW82CIVNSE/OPBVwn+zUpDxnZbYSO4A0OTdpkP+lAdVxm55QyFijK1iP7
Sc/Y0WxWghw+zcicS/aDhIM9XnfvEMEdn3vNyH6R4X+v350bZcflR/fYkmbw
ckqcK2BFQW7vq8jvp2QfIlY5hJFi3aIPeXsP3K8UdAXIoj1f8sPJ37elYnPm
P09l5Gj47TN5f0y6DDrTbqqibYWVKeT91Xz7W6BlWANVDe+/TT6e0k3hjQ5/
tRE90pN5inz+keR7Grce4uuOxuTzcWF0u+qevcdRQMKlDvL5omrumRDVMESf
pphP9ZP9PYFr1ZdETJDSSo8Omd+yS1kTeFRgisbeKl94B+7PbtvoL2WOrPiP
yLSSeaD0hc1PSyyQi5KIbCOZV1IfKcySOYnutwslk/3DM4OJ5v8eWKEMIQ13
Ml9k5FE2Iv7IFkXpvf1GzrNL13n1pk/OHukHWtSeJR+fUPDnuQenkIZhQpIf
uHDHxOerlk5o8456uiP46Mn35tt4nFHimEivCVhmu/7FIx3OyPBnyQMFsh8l
c8jN3NAVrb6JkxIiX++vXR+osbuhYr7/WLaQebFvvMxVLW6It+7pMNl/TTJ8
KKur7o56KZzj3WS+79pYpfmSO1INjzB6Af5vWu/J13IPtLDFXzcT3EbtrXCR
8EIlp3u6z4A7+tQTTL95oczUQ+/JeZT/zvi6P0j3RiX/PZkk51cadOw5mrve
Fy13bWQg51+uvlPRYOz3R/6P1NvIfOKOTPF3k6kBaN/lvCUyb6TAYylzXTgQ
3Wc1ySDnZ4rZsjbjzkCUcK5heBXWpyfPiv0uKwWj39VF67+CE/hO4HNJwSj2
7X/pGJyv2hOzbTAYTeW/2JAArt/sfm4+OQT92bxbkcxjUvZmHov8FopstFHv
R/D5ZCvGBcUw9ELg7NJDcF7Qsui/M2FogvPhVXewrWmnxW3pcFS1p+TUW1hv
rwsL7p71j0B76/5bT4P1m1f51E/P3ihk9mjxhA24uZd4dFk4GvFPXBSWB7/K
+SN9yDMaJW6UvtAL+8Hnk9e6GGaikeZ2mq08OGzU65fFWgx6f2Tw2DqwqG/1
RUvNWFQdqPr+M+w3e7dxB76mxSIG7F4aB75KH9+7dV0cYgkfrmnmgvVf7lTH
+FocGn6ZdS4NrMVtYxGkFo+irrksnAZrxsh6no6OR+4BtdUs4GD+1ZykmXhU
b5IwrAH7X+B5LPTovwREPTn0pAD216LQUneFNgpST7k0T+63O41lDm4epCB0
8/7oEbCEv7pkxgoFvTl26ssH2K+T1hXGP5GhIvdSO7FF2N/XtW1MmU2movtG
kf+egkO+FLPJ3qWiywtWKefBU77OE1vqqWg+5HavAJhJdN/WD+NUVJGtqU3m
lRc2TW6UU6chqbzQxVWoN5aOVj4qNKOhEcPN/s3gy52tbi3uNMT3pe+2Cfjv
s4unZ5NpaEBd9IA71DOLLJrXN3TT0ChPOac0uM2xVrtwgobkC249IK+vqU/h
2jaxTEOfozaZRoLvyepPW+ygo+aQS4fOQj1lHc0X32xLRwos222PgqWVvwrd
96bD7dnpMoP/cXhUikTT0d68SSIe6jG2xmTLpht0tHRHvUcV3HObWjp6l446
p9QZlqC+Ezz7Pi+jnI66mq2ag1nIvBOTZOlbOgoODj9NzjsOv525a2MPHW1i
sez7AfVj2uuUC/MjdPTYwcXKDUwbu3479C8d5a9m2O8Bz1gcq2FdT6C0Rw/U
e6E+rT2kpCPGRaAt9y5km4PnfCQaWEUJlOPuKrQZbO+5JP9yH4Gu/lI78wrq
XU+bi0r8ygSacLv3LhGcNt2TPXWEQDuNZdc0yOupxII1LXUIVCxrx/cX6umE
if4xnRMEiiyv4yPnR29EGz2wKZjL9ss+MM3x0hmLUwQ6frbi9hjU7xtuR/b5
uxCo9EG8eS5441G1s9weBGLjPb5kDx5SexKq5UOgJs17qfxgeXTl+oo/gWZ5
pHZ1wHkhd8vTDvVgAj31t8+5CJ6I2ruZI4xA2nIdAnrgKq0GBdcIAtZnwYuM
4D+DvpI6UQRKDH21SM5PKFgLZngYTaCNB4Odw8EE6ivLiyHQ89S8Vnly3oJG
moJwLIEKPk7u+wHnI5VcInQvWNxg/MpdsALbg4B6+P7PzbtWHMGmzH8VuuH2
ZHeIeQiCNQxa2uPg9xWMXuzuhPPZ1b0V+qVwf2qrx0xSyHnlw74F7nB/h8Vb
P+iTeaKmG+NF8Hhe+NXbrwPn0HYIRgQQaHy91Z9GOA/q8H93a4fn4zlF4kYU
2KOQ/vUhPF+vshr1yXl2x4dOZG53JVCwaCnHJJw/JWLulnI5EGhfD32gCByk
/EfsijWBCJsPL93Izzs6UCWVZUag/SvCrbvJ+ezm82P7DeD2r63/rwfOv6Gn
j9LNjxIoboBz/XVwdVn5rjU1ArF8bDIwBZt4GH1XPkAgzbSHpRzgFklu3kUZ
Ak3y+rbS4fwt6hx9YPcOAmW+MaYjcMBRkXRiK4Ei3G46rcB5/miBinj4Bvh9
+88mhoBPrF3L+TdDR+eupeadnp/GNLYjsvef0dG3QIYNEuDVson0U5V0xNzC
e43sB/254NpXUkRHAk8EJX3BHOwnV3an0NGPjHbnsNlpzPiC+s7PEt4fNgVi
h8Cc+owenLp0dFq5T3CFnO9/sW6zwQE6Eq45cJsKFlES6SjkpaPlk3+lUmem
sYEr39bBdzR0+LNChiX4wiauQ/QGGqrk0z4qCG6LWdveUkxDBzWKTMg8UUpy
StJ+gobu3ai2ryP7P/U9c4/205Bp4rVj87+n8brtisw58bD+bSybbASbbeAS
Snanojb9iqGzYOXXJnXCRlQU29taKQj+nad4XH8HFR2QY5TQ+TWNdx+er0it
oKCj4mbm5HwcoZBroe9vUhDv4XVdPT+nsZx8W2VdPAVV+Vf2BoMZ4tW/3NSj
oI+7ywQKf0xjlvUp0+tLElBORRZnGDjmfem8T2ACKvdccdAG0+/Z9ikoJ6Ab
21Z3DnyfxlzelkNj9fFo0+NPEkLgHhlZl10v4tCI7TXVivFprJVgmfqyJgbN
be4yOw9ebb45qhQRg/zn/n1wAGcsy8ZvV4pBizTrjeT/A1mdR7wd70ejy9ps
FM+xaczuHu0xej0KLU88/0leT57/POK2sUkU4iorbhUAs53h9lVni0Jpuxpf
vRmdxv0OVm6PoyJRvFKI4CHw7eBPmQKWEeiXfzgHD3go6uhqF3sE4mvXCZ4a
gdencReDyNNwtM+aPbMYvEtaOCFUKhxF+MRFi4Ij7C3tdy6EoqnKg79kh6ex
S2wFfpsQjPyNN3luBV9te5qlKReMrGpcnOaH4P3cZZpxqj8Iuex/+BqDg94W
Ml1TDUJ/ArVvWYMTsnUlTgwHoMdPY7dogHkeCLazqwegDd1y6yXBXzk6IhVv
+CNWu5HopcFpbNxe5fBGzw9tdos+mwtOHxb3DMv1RktM9TyXwJGBTUNdC15I
6nq3eDT5eUfvyr5WG3ihsJ87/zMHq5g4qnPPeaA7/ItxmoPkPCQsnnrMAx1l
3VYoB14TuXPp9i13lB+elMwJFr1oNRGqcRpFMl08sUr2a25WuehccUOPYoVS
f4HVJJmDHw25ol6DvRXvwCW5Old8El2QoLTMlSawRJSsdlOXMzLaMLxI/j9e
r/DHy6dizmhSmuacAd7ackgx7bwjOkcPPZ1M9lc2vp/NYXNAJwTCNlLBN2sN
fjCet0e3X780DyPzJItBBU/X26GxyGp1Mk+U+52pciTRBuUxnXlD9g8KdFWL
o5itkRaT5yqZN0mu/bg9kXISOedo65N5FKFPVwZFo8xRhk6R2xGwR39KwKtZ
UxSyf1xEmeynNMnOswWaoMTefWdlycfHJrS/u8sQsTfkXyL7PYJ2KrMzr46j
8nJ/FRGyf2Px90wY1kOp/TkXyPzQAfWcY0HlOmivlV0C2X/ZKMp3caFAE8U0
1W8j+zez2k3HFZXU0F/79pNkfofnfcTUB4GD6OXG24fJfE9+48LLX//kUVWM
ehOZB+pmqBYybxVDTnJ1v8h5c/vmfnLk7OFGxTZsmPTli4yymgfnGiXn9ymT
359hVFS7u34ndr4ibULmhw5JFWQO8EjjOkn2LWQ+yVR1x1TSXUUsdL0slMwv
icg8Szvw9DBuNNwYT/aP3Et/Mxj1IBzMy7GP7BcJB89Uf17SwnvK78WT/azJ
vyE8O1h1sdO5N2FkXmhHj0P1IJc+vuyvx0X2h6Rfx9kI7jTAP7+vmJD9Ibu/
krllEsaY37Rdicxr3f3Rk/V6mykuOZFbT+a5rrjzjNtnmeF7BWiczHuNJ8tz
E0IWGN0MqCL7d2sLg9RDdy3x2BbWvbbgawXmqUGSVphr5RNyA3vdKr4tXmKN
D2QXL/qTz++9vVuMZWzxcKGA2Rny59cm13XLncIs3Koz5Ocd1VLn7SUeOWCf
3eZKOeD4Y83fh/idsFC0aVY9GPFSl32vO+PxyoDnr8FhhLbTTksXzFInd+E/
Mq+12mJ/mtsVv6eZLf4FRwxq85dccsOLI5zZm+D9Uhv5wyrnxGksu/B7eA+Y
b3y7+Y4N7riwNsJAjzSeqruR4IGDOU762YG7A7Y+v6Tiie94YulAsF4XY8PK
rCcW+SubcIucZ9ftISjh6Y0vy4lxk59f9qNnyrRvjw/2FsrXekn2d3Ofb1zq
9sGxNJtgcn0IFK6OMdHzwx36bCzOQ+Tr/8YP1k2BmE+n72I02GJ062qTcyDe
2qiWTs6vc/ls3Sn9JBCfmS89SPaPRHS3n2SxC8KcKacukJ/PVsS0YyY3Nxjv
6lnabQP+kShuUPgnGKs97FSKAL9atXlgqBOClWeZeyrAFha1KHo4BEeHb2M8
AOtlt35zksSeMHyx80uCFbiLGO/Y4h+G507NREaBH2Wzd6bUhWHdxjOfG8G+
t7w36luGY4fEL/uNYX0WmXXhS6BH4NHmlWeJsL7vmWBIqXgZhbcWfbvyAExT
9KYc3xKNT8dFf/gMdhzUVXc8GY3539y4IQ37h0J5Q/nat2gs/uC9fDeZT02r
GZqfjMG57JmOZH7I+NfO8lP7Y/HvyLh5efBjYrb+UGgsPsDPZ5MEPquwZKM7
H4t5aqa7dcj+kNaT55l/4nD01lE58vP7WrQslGkK8XjUsGMsD/zv/oeVD/7x
WIPjRzg5z1UVTVeVjMXjUxeLF16CuxqkMyU6EvCLD3PFp2E/rjiiH5TXTMGL
MZff5IATF0QK7w5QcOxxd3My7/vSrfw6+kfBUd2bkyxgf+cMoXQdPEDFefcc
ovQnp7H1tLupxB0qlnywJ5OcT6c6r3Ghs5aK3YqdtrWAt31ZUePppOJKugm/
DtQXu15LFR9joWGVJxzrdKD+WMhgdQ1zoeGPR7a0EeDdBDdTQSQN3+DV/PIC
LMWjdNXtEg2LWU71HoP6ZXlp0vF8NQ2byFuomUH9w8vJZOu6no6DNG6qp4Gr
+82U5gTo2F/XmtINvqDLzsa1j47zD9c1OkI9xXwme2HYiI4PNW1bIvPbzjZK
D2cu0XGBz/H3T8Ccj1lW2rLoeO3m655lcLiR5G7x+3T8hYOPngj1nBePYWJI
Kx0z2RE7X4N/KniIuXbScaLileEtZD2oOXa8+xsdL7/umM4k68UZ2i/TRTp+
du6O0hD4MdfLAUtmArt3GWVJkZ+naZl9oJ+TwIuU8C+V4B0lRRtihAj83fls
ETl/+Yjr7i0pewm8nacwXQfq1SD+LJq4IoFPrh1+2wHe+OZxb78WgXt+qm4W
hHq4qsLAb02fwNwifl7O4LZ02bJcEwLf6OXpuQfO+cUa13aSwPYvoh2nyP5Q
4t67gfYE1kwbWzgI9Th/phrzLWcCVy5n30kgP88oMzdOj5w/xzVu2wq+3Ne/
EuZN4NhZZuHNUO9zPok4Le5P4BF8cO4k2Dtq5o51EIE9a1o7boN/X+PO4Agl
8LePi9WjYMH6HnWtcAJL1W4uIPNB9l7ztKUIAksymqaHg8d/C9rsjyLwE36G
S42rZL0+WPMTXFfqmMgK55t1Rx7kSkYTmIlaHmsE1u5/xjUKX/8fTybGvQ==

     "]]}},
  Axes->{True, True},
  AxesLabel->{
    FormBox["\"x\"", TraditionalForm], 
    FormBox["\"x'\"", TraditionalForm]},
  AxesOrigin->{-1.1320000000000001`, 0},
  DisplayFunction->Identity,
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{"ScalingFunctions" -> None},
  PlotRange->{{-1.13159437163508, -1.1174448676134814`}, \
{-0.010002347866587127`, 0.01000245254597686}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.05], 
     Scaled[0.05]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.715196922623292*^9, 3.715196964199452*^9}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
    1.], FaceForm[Opacity[0.3]], LineBox[CompressedData["
1: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
aYmKuGmr0cpT0u6Yxs0vEjKuhM/64W12rBv26PV/HyOrYDqPrXn0B1cU+bb9
fUOPCub1GOtt1ndFaqu61d8EVdTZJnYy8qgLuhSdtAzXVEMrJx3uXx3OmOq1
zDXXrIaV+v2uy4LOOKdo0nzitzo+j0G50qOOeJnUhYOHNdCr9tnPE40OqPyI
f2XAogbad05lps7b48JAucuPQ5povftz7mtde6xMuu2+aUITB3Rsjl3cZoc9
+S9bL/oTsKPt0SeRU7Y4TPgddfIlAU/1S+jvqLTBqZ+lvmJ5RLz1nX721W9r
vKP8YDluhoimhz2zeXWt8ELFzjIbDxKyI+VP5fhbIDfbL96ugIT2vQW106fN
UIuhfmvvCAmfVnYEpFSboEJpf0i5Nhkp5YMX8L0RNlM8eZdCyfjw4dEcvlkD
rOk0r7EpIeOKzfnKXcL6eN+teXrfezJu0Pe9S3LVwRAHWWLqKgpmv/JuOx5C
wcth25uitCk4mqH+uiyFgAL7W/S1GRQsDrgvE12ohhvNPO6UBFHw2C/1Uw3b
FbFCiH6hL5aCh3zCBmPiJVHTMlPheRoF37zSuientwb9vMs2HjhHwVcOLSKM
yj9srjnJuLeZFKzvOjIX/6ef9rgu8MZoBgV3Cs/oz67ngQOkev6KJAradL0e
fS4uBpkn7Jh6+yhYc1qIPvdXFjJtafG7/CjYL0I4J/VTBboVP5zYbkXBt4dE
hlt7NKBm1GYbQYaChIozry+xSZB/qGC6YYyMMDuRXH5JC/rPyhnrNZDRp85a
SsBaD2yit3olHydjmVf3hhCCAbRa3bLscCVjUcX98tNrjMBHoEFPhI+Mt0iN
snw/jSEo4HlBEJuEwa/DX257Ygph7TK/hvaScOs7QzmtAnP41PAhPVuehJIb
o+FvqCWUpHTs/LKdiB3naCndf2nwn33/hmuLBKwKf3R2jZ8NxN6bHZs8S0Ca
y5NL7w1twfP3/i3fVAn4Qrroy5XVdsBt1Pzpwi1NNCcynfV77aA1y62IbKCJ
zmx26/oye9hywn/3rQecet3KbfQ+3AGM5G/vWizi1HPy1lMu044wdvZEvLC0
OopFrFf4cssJZi5zH887poaCfIN61O3OcDlgjyp7TBUfX5SP4xJxAYsZ0t/L
61QRkoSqTR66gFJE2r3AchWMF32WUbTJFUqmRid0RVTw6IUdNSrzrsCVQn//
JFYRf9UaHChUc4eE/pFWQxUFfD5Ne+t52x32Bnl19tfL4dYn2Q1H9T2g4pRc
KNlLFuNObsiXuOsBhMdPBfwHpZE/u3BgQpMO9Yd/qwyGSWGn1QmupfN02E1Q
U+OZlsC73UY7lf/RQcBs4KhCpDjGV7GTaNsZkKD6qDzplyjKGTu029QzIPhz
eTYrTAR/ritsjhZiAitD/vfxV4KY2/bQ+44vEz4IJilGoACa1jdv7ypggoPR
WKtYGR+aa0sX9XxgQssqfzelkzxoIaJRu4GfBXcdpZYcOe9Tixf784qVWfDh
V96O6OOL7ERGy0cmh6edSl8sRBj+Yev0+e/0smdBaV7a5fbKcXbC/HvSbSYL
AsYnho4uDrDZWlVyfj4sGHlWbHx5to291kXJZ8NmTsy9g3V7bQftd0Y7d9EW
Flw893Hijf0grau9+ZLNJhYQVh8LzeWaoP0VHWvU9ubwvq1lnfamP7RnDaMz
IR4sSI7tfUwrX6Q5JsmNL9JY8CqkalY3kRvqHfdXDGmzwG0yvlO0lAc0Al7l
EmVZUJzdpZrxhA8izbnG27lY4JF+J3h8QABKaqlHL7czwa7Wmjf5ryA80jmZ
lJjGBIsTx9++SBIBp++Kna4OTMg477f0mE8MrtRXb141y4ATv5x2tqeIAxx+
YdN2lQFjHhmeaSslwSe4fPKaMwMOnHdbuH9YCjQsC6bufKUD/cFC8o+f0qC+
3adjKZYO2nGqLp98ZWG110koFqRz+s9AhdYkB023vyk+yvGAYaUf0bVqCiD7
1aIoXN4DPHi63zV1KUHj9StK34XdIT4oycpXRAW0VmmVjSe4QU9DD7mlXAVi
Jn8ncv105fS7UG6clyoYkw4vWni6An197/Gt46pQtlf8NPueC8xaSIo7p6iB
KDt54IGAC5BaK3ZJyKuDRaBOJWx1BkrkWWa3sQZc/OLlV/nXEa579tger9cA
6Zbmqe/WjqB1+dXzizRN2LUrKnh9nAMEHbN0ma/ThMHVu9LUau1BUOMt73Ej
Avz8dVk1cdIOnhVt2aheRoBBH8LCZQ07+E8rs6BKigjEtIWBW162oMF42uk1
RITTbBeVeA+AOI/IVn17EthcU2K6ZlmDegiz6kY+Cb7JLWuGdVvC60JDp5sT
JGC6rni3TsQCGH3TcipABqd1Trn+jmbgJbPj/UwKGXJ9v+bx7DcBB753ibJP
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
s5fAR9Hu15bEWfg/80GtUQ==
     "]]}},
  Axes->{True, True},
  AxesLabel->{
    FormBox["\"x\"", TraditionalForm], 
    FormBox["\"x'\"", TraditionalForm]},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{"ScalingFunctions" -> None},
  PlotRange->{{-0.0002125607841930172, 
   0.00021817831008157942`}, {-0.0010069393725235015`, 0.001002507309513953}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.05], 
     Scaled[0.05]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.715196922623292*^9, 3.7151969643225336`*^9}]
}, Open  ]]
},
WindowSize->{1350, 685},
WindowMargins->{{-8, Automatic}, {Automatic, 0}},
PrintingCopies->1,
PrintingPageRange->{32000, 32000},
PrintingOptions->{"Magnification"->1.,
"PaperOrientation"->"Portrait",
"PaperSize"->{612, 792}},
FrontEndVersion->"10.1 for Microsoft Windows (64-bit) (March 23, 2015)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[558, 20, 102, 1, 30, "Text"],
Cell[663, 23, 192, 3, 31, "Input"],
Cell[858, 28, 537, 16, 31, "Input"],
Cell[1398, 46, 103, 1, 30, "Text"],
Cell[CellGroupData[{
Cell[1526, 51, 1721, 44, 68, "Input"],
Cell[3250, 97, 33644, 864, 302, "Output"]
}, Open  ]],
Cell[36909, 964, 273, 9, 5, "Text"],
Cell[37185, 975, 1734, 50, 76, "Input"],
Cell[38922, 1027, 271, 9, 10, "Text"],
Cell[39196, 1038, 108, 1, 30, "Text"],
Cell[CellGroupData[{
Cell[39329, 1043, 440, 11, 125, "Input"],
Cell[39772, 1056, 3231, 98, 226, "Output"]
}, Open  ]],
Cell[43018, 1157, 185, 3, 41, "Text"],
Cell[CellGroupData[{
Cell[43228, 1164, 1464, 43, 133, "Input"],
Cell[44695, 1209, 4221, 115, 218, "Output"]
}, Open  ]],
Cell[48931, 1327, 243, 8, 39, "Input"],
Cell[49177, 1337, 1893, 58, 270, "Input"],
Cell[CellGroupData[{
Cell[51095, 1399, 4009, 106, 215, "Input"],
Cell[55107, 1507, 3552, 94, 112, "Output"]
}, Open  ]],
Cell[58674, 1604, 271, 9, 8, "Text"],
Cell[58948, 1615, 990, 34, 57, "Input"],
Cell[59941, 1651, 271, 9, 8, "Text"],
Cell[60215, 1662, 273, 9, 5, "Text"],
Cell[60491, 1673, 271, 9, 8, "Text"],
Cell[60765, 1684, 273, 9, 5, "Text"],
Cell[61041, 1695, 118, 2, 31, "Input"],
Cell[CellGroupData[{
Cell[61184, 1701, 19318, 602, 767, "Input"],
Cell[80505, 2305, 693, 16, 33, "Output"],
Cell[81201, 2323, 520, 9, 31, "Output"],
Cell[81724, 2334, 695, 13, 33, "Output"],
Cell[82422, 2349, 1518, 42, 56, "Output"],
Cell[83943, 2393, 1516, 42, 56, "Output"],
Cell[85462, 2437, 3112, 93, 55, "Output"],
Cell[88577, 2532, 3115, 93, 55, "Output"],
Cell[91695, 2627, 433, 5, 31, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[92165, 2637, 1132, 28, 72, "Input"],
Cell[93300, 2667, 13036, 360, 620, "Output"],
Cell[106339, 3029, 14436, 379, 200, "Output"]
}, Open  ]],
Cell[120790, 3411, 273, 9, 5, "Text"],
Cell[CellGroupData[{
Cell[121088, 3424, 1111, 31, 52, "Input"],
Cell[122202, 3457, 902, 25, 33, "Output"],
Cell[123107, 3484, 14031, 379, 200, "Output"]
}, Open  ]],
Cell[137153, 3866, 273, 9, 5, "Text"],
Cell[137429, 3877, 271, 9, 8, "Text"],
Cell[CellGroupData[{
Cell[137725, 3890, 912, 24, 31, "Input"],
Cell[138640, 3916, 805, 23, 33, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[139482, 3944, 541, 13, 31, "Input"],
Cell[140026, 3959, 540, 11, 21, "Message"],
Cell[140569, 3972, 540, 11, 21, "Message"],
Cell[141112, 3985, 538, 11, 21, "Message"],
Cell[141653, 3998, 533, 11, 21, "Message"],
Cell[142189, 4011, 18260, 476, 200, "Output"]
}, Open  ]],
Cell[160464, 4490, 273, 9, 5, "Text"],
Cell[CellGroupData[{
Cell[160762, 4503, 2685, 73, 344, "Input"],
Cell[163450, 4578, 870, 24, 33, "Output"],
Cell[164323, 4604, 1159, 34, 54, "Output"],
Cell[165485, 4640, 299, 5, 31, "Output"],
Cell[165787, 4647, 625, 13, 33, "Output"]
}, Open  ]],
Cell[166427, 4663, 273, 9, 5, "Text"],
Cell[166703, 4674, 271, 9, 10, "Text"],
Cell[166977, 4685, 271, 9, 10, "Text"],
Cell[167251, 4696, 273, 9, 5, "Text"],
Cell[167527, 4707, 271, 9, 10, "Text"],
Cell[167801, 4718, 271, 9, 10, "Text"],
Cell[168075, 4729, 273, 9, 5, "Text"],
Cell[168351, 4740, 107, 1, 30, "Text"],
Cell[168461, 4743, 2072, 57, 126, "Input"],
Cell[170536, 4802, 92, 1, 31, "Input"],
Cell[170631, 4805, 271, 9, 8, "Text"],
Cell[170905, 4816, 271, 9, 10, "Text"],
Cell[CellGroupData[{
Cell[171201, 4829, 376, 7, 112, "Input"],
Cell[171580, 4838, 296, 6, 31, "Output"],
Cell[171879, 4846, 177, 2, 31, "Output"],
Cell[172059, 4850, 678, 20, 33, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[172774, 4875, 1055, 22, 72, "Input"],
Cell[173832, 4899, 13478, 353, 200, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[187347, 5257, 1641, 46, 92, "Input"],
Cell[188991, 5305, 14728, 395, 200, "Output"],
Cell[203722, 5702, 12348, 347, 678, "Output"]
}, Open  ]],
Cell[216085, 6052, 543, 17, 31, "Input"],
Cell[CellGroupData[{
Cell[216653, 6073, 498, 14, 52, "Input"],
Cell[217154, 6089, 666, 19, 33, "Output"],
Cell[217823, 6110, 2992, 89, 204, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[220852, 6204, 4075, 107, 246, "Input"],
Cell[224930, 6313, 671, 13, 33, "Output"],
Cell[225604, 6328, 914, 24, 33, "Output"],
Cell[226521, 6354, 842, 20, 31, "Output"],
Cell[227366, 6376, 345, 5, 31, "Output"],
Cell[227714, 6383, 68636, 1314, 221, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[296387, 7702, 1580, 46, 72, "Input"],
Cell[297970, 7750, 166068, 2756, 328, "Output"]
}, Open  ]],
Cell[464053, 10509, 271, 9, 10, "Text"],
Cell[464327, 10520, 217, 5, 31, "Input"],
Cell[CellGroupData[{
Cell[464569, 10529, 122, 2, 31, "Input"],
Cell[464694, 10533, 37465, 625, 447, "Output"],
Cell[502162, 11160, 62372, 1033, 447, "Output"]
}, Open  ]]
}
]
*)

(* End of internal cache information *)
