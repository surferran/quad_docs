(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 10.1' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    677233,      14305]
NotebookOptionsPosition[    671733,      14143]
NotebookOutlinePosition[    672227,      14163]
CellTagsIndexPosition[    672184,      14160]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell["numeric simulation", "Text",
 CellChangeTimes->{{3.714958233706908*^9, 3.7149582394636574`*^9}}],

Cell[BoxData[
 RowBox[{"Quit", "[", "]"}]], "Input",
 CellChangeTimes->{{3.712131429857179*^9, 3.712131432176716*^9}, {
   3.7121626821687746`*^9, 3.712162682492755*^9}, 3.712288672336918*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"dispSimp", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"a_", "[", "t", "]"}], "\[Rule]", "a"}], ",", 
     RowBox[{
      RowBox[{"Cos", "[", "a_", "]"}], "\[Rule]", 
      RowBox[{"c", "[", "a", "]"}]}], ",", 
     RowBox[{
      RowBox[{"Sin", "[", "a_", "]"}], "\[Rule]", 
      RowBox[{"s", "[", "a", "]"}]}], ",", 
     RowBox[{
      SubscriptBox["\[ImaginaryI]", 
       RowBox[{"i_", ",", "zz"}]], "->", 
      SubscriptBox["I", "i"]}]}], "}"}]}], ";"}]], "Input"],

Cell["original equations:", "Text",
 CellChangeTimes->{{3.7149591768587537`*^9, 3.714959184978958*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"(", 
    RowBox[{"quadEqNominal", "=", 
     RowBox[{
      RowBox[{"EulerEquations", "[", 
       RowBox[{"L", ",", 
        RowBox[{"{", 
         RowBox[{"(*", 
          RowBox[{
           RowBox[{
            SubscriptBox["x", "1"], "[", "t", "]"}], ",", 
           RowBox[{
            SubscriptBox["y", "1"], "[", "t", "]"}], ",", 
           RowBox[{
            SubscriptBox["\[Theta]", "1"], "[", "t", "]"}], ",", 
           RowBox[{
            SubscriptBox["x", "2"], "[", "t", "]"}], ",", 
           RowBox[{
            SubscriptBox["y", "2"], "[", "t", "]"}], ",", 
           RowBox[{
            SubscriptBox["\[Theta]", "2"], "[", "t", "]"}], ","}], "*)"}], 
         RowBox[{
          RowBox[{
           SubscriptBox["x", "p"], "[", "t", "]"}], ",", 
          RowBox[{
           SubscriptBox["y", "p"], "[", "t", "]"}], ",", 
          RowBox[{
           SubscriptBox["\[Theta]", "p"], "[", "t", "]"}]}], "}"}], ",", 
        "t"}], "]"}], 
      RowBox[{"(*", 
       RowBox[{"[", 
        RowBox[{"[", 
         RowBox[{"All", ",", "1"}], "]"}], "]"}], "*)"}], 
      RowBox[{"(*", 
       RowBox[{"\[Equal]", "Q"}], "*)"}], "//", "Simplify"}]}], ")"}], "//", 
   "MatrixForm"}], "//", "TraditionalForm"}]], "Input",
 CellChangeTimes->{{3.710471318787363*^9, 3.710471343715891*^9}, {
   3.712162409958474*^9, 3.712162464712139*^9}, {3.712247425617641*^9, 
   3.7122474265932856`*^9}, {3.712248396174243*^9, 3.7122484111631737`*^9}, 
   3.712248778153448*^9, {3.7122492978178225`*^9, 3.7122493089952297`*^9}, 
   3.712288997792865*^9, 3.7122892123182693`*^9, {3.7122900791119747`*^9, 
   3.7122900872063375`*^9}},
 Background->RGBColor[1, 1, 0]],

Cell[BoxData[
 FormBox[
  TagBox[
   RowBox[{"(", "\[NoBreak]", 
    TagBox[GridBox[{
       {
        RowBox[{
         RowBox[{
          FractionBox[
           RowBox[{
            SubscriptBox["k", "1"], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               SubscriptBox["h", "p"], " ", 
               RowBox[{"sin", "(", 
                RowBox[{
                 SubscriptBox["\[Theta]", "p"], "(", "t", ")"}], ")"}]}], "+", 
              RowBox[{
               SubscriptBox["l", "p"], " ", 
               RowBox[{"cos", "(", 
                RowBox[{
                 SubscriptBox["\[Theta]", "p"], "(", "t", ")"}], ")"}]}], "-", 
              RowBox[{"2", " ", 
               RowBox[{
                SubscriptBox["x", "p"], "(", "t", ")"}]}], "+", 
              RowBox[{"2", " ", 
               RowBox[{
                SubscriptBox["x", "1"], "(", "t", ")"}]}]}], ")"}], " ", 
            RowBox[{"(", 
             RowBox[{
              SqrtBox[
               RowBox[{
                RowBox[{
                 FractionBox["1", "4"], " ", 
                 SuperscriptBox[
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{
                    SubscriptBox["h", "p"], " ", 
                    RowBox[{"sin", "(", 
                    RowBox[{
                    SubscriptBox["\[Theta]", "p"], "(", "t", ")"}], ")"}]}], 
                    "+", 
                    RowBox[{
                    SubscriptBox["l", "p"], " ", 
                    RowBox[{"cos", "(", 
                    RowBox[{
                    SubscriptBox["\[Theta]", "p"], "(", "t", ")"}], ")"}]}], 
                    "-", 
                    RowBox[{"2", " ", 
                    RowBox[{
                    SubscriptBox["x", "p"], "(", "t", ")"}]}], "+", 
                    RowBox[{"2", " ", 
                    RowBox[{
                    SubscriptBox["x", "1"], "(", "t", ")"}]}]}], ")"}], 
                  "2"]}], "+", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{
                    FractionBox["1", "2"], " ", 
                    SubscriptBox["h", "p"], " ", 
                    RowBox[{"cos", "(", 
                    RowBox[{
                    SubscriptBox["\[Theta]", "p"], "(", "t", ")"}], ")"}]}], 
                   "-", 
                   RowBox[{
                    FractionBox["1", "2"], " ", 
                    SubscriptBox["l", "p"], " ", 
                    RowBox[{"sin", "(", 
                    RowBox[{
                    SubscriptBox["\[Theta]", "p"], "(", "t", ")"}], ")"}]}], 
                   "+", 
                   RowBox[{
                    SubscriptBox["y", "p"], "(", "t", ")"}], "-", 
                   RowBox[{
                    SubscriptBox["y", "1"], "(", "t", ")"}]}], ")"}], "2"]}]],
               "-", 
              SubscriptBox["L0", "1"]}], ")"}]}], 
           RowBox[{"2", " ", 
            SqrtBox[
             RowBox[{
              RowBox[{
               FractionBox["1", "4"], " ", 
               SuperscriptBox[
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   SubscriptBox["h", "p"], " ", 
                   RowBox[{"sin", "(", 
                    RowBox[{
                    SubscriptBox["\[Theta]", "p"], "(", "t", ")"}], ")"}]}], 
                  "+", 
                  RowBox[{
                   SubscriptBox["l", "p"], " ", 
                   RowBox[{"cos", "(", 
                    RowBox[{
                    SubscriptBox["\[Theta]", "p"], "(", "t", ")"}], ")"}]}], 
                  "-", 
                  RowBox[{"2", " ", 
                   RowBox[{
                    SubscriptBox["x", "p"], "(", "t", ")"}]}], "+", 
                  RowBox[{"2", " ", 
                   RowBox[{
                    SubscriptBox["x", "1"], "(", "t", ")"}]}]}], ")"}], 
                "2"]}], "+", 
              SuperscriptBox[
               RowBox[{"(", 
                RowBox[{
                 RowBox[{
                  FractionBox["1", "2"], " ", 
                  SubscriptBox["h", "p"], " ", 
                  RowBox[{"cos", "(", 
                   RowBox[{
                    SubscriptBox["\[Theta]", "p"], "(", "t", ")"}], ")"}]}], 
                 "-", 
                 RowBox[{
                  FractionBox["1", "2"], " ", 
                  SubscriptBox["l", "p"], " ", 
                  RowBox[{"sin", "(", 
                   RowBox[{
                    SubscriptBox["\[Theta]", "p"], "(", "t", ")"}], ")"}]}], 
                 "+", 
                 RowBox[{
                  SubscriptBox["y", "p"], "(", "t", ")"}], "-", 
                 RowBox[{
                  SubscriptBox["y", "1"], "(", "t", ")"}]}], ")"}], 
               "2"]}]]}]], "+", 
          FractionBox[
           RowBox[{
            SubscriptBox["k", "2"], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               FractionBox["1", "2"], " ", 
               SubscriptBox["h", "p"], " ", 
               RowBox[{"sin", "(", 
                RowBox[{
                 SubscriptBox["\[Theta]", "p"], "(", "t", ")"}], ")"}]}], "-", 
              RowBox[{
               FractionBox["1", "2"], " ", 
               SubscriptBox["l", "p"], " ", 
               RowBox[{"cos", "(", 
                RowBox[{
                 SubscriptBox["\[Theta]", "p"], "(", "t", ")"}], ")"}]}], "-", 
              RowBox[{
               SubscriptBox["x", "p"], "(", "t", ")"}], "+", 
              RowBox[{
               SubscriptBox["x", "2"], "(", "t", ")"}]}], ")"}], " ", 
            RowBox[{"(", 
             RowBox[{
              SqrtBox[
               RowBox[{
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{
                    FractionBox["1", "2"], " ", 
                    SubscriptBox["h", "p"], " ", 
                    RowBox[{"sin", "(", 
                    RowBox[{
                    SubscriptBox["\[Theta]", "p"], "(", "t", ")"}], ")"}]}], 
                   "-", 
                   RowBox[{
                    FractionBox["1", "2"], " ", 
                    SubscriptBox["l", "p"], " ", 
                    RowBox[{"cos", "(", 
                    RowBox[{
                    SubscriptBox["\[Theta]", "p"], "(", "t", ")"}], ")"}]}], 
                   "-", 
                   RowBox[{
                    SubscriptBox["x", "p"], "(", "t", ")"}], "+", 
                   RowBox[{
                    SubscriptBox["x", "2"], "(", "t", ")"}]}], ")"}], "2"], 
                "+", 
                RowBox[{
                 FractionBox["1", "4"], " ", 
                 SuperscriptBox[
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{
                    SubscriptBox["h", "p"], " ", 
                    RowBox[{"cos", "(", 
                    RowBox[{
                    SubscriptBox["\[Theta]", "p"], "(", "t", ")"}], ")"}]}], 
                    "+", 
                    RowBox[{
                    SubscriptBox["l", "p"], " ", 
                    RowBox[{"sin", "(", 
                    RowBox[{
                    SubscriptBox["\[Theta]", "p"], "(", "t", ")"}], ")"}]}], 
                    "+", 
                    RowBox[{"2", " ", 
                    RowBox[{
                    SubscriptBox["y", "p"], "(", "t", ")"}]}], "-", 
                    RowBox[{"2", " ", 
                    RowBox[{
                    SubscriptBox["y", "2"], "(", "t", ")"}]}]}], ")"}], 
                  "2"]}]}]], "-", 
              SubscriptBox["L0", "2"]}], ")"}]}], 
           SqrtBox[
            RowBox[{
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{
                RowBox[{
                 FractionBox["1", "2"], " ", 
                 SubscriptBox["h", "p"], " ", 
                 RowBox[{"sin", "(", 
                  RowBox[{
                   SubscriptBox["\[Theta]", "p"], "(", "t", ")"}], ")"}]}], 
                "-", 
                RowBox[{
                 FractionBox["1", "2"], " ", 
                 SubscriptBox["l", "p"], " ", 
                 RowBox[{"cos", "(", 
                  RowBox[{
                   SubscriptBox["\[Theta]", "p"], "(", "t", ")"}], ")"}]}], 
                "-", 
                RowBox[{
                 SubscriptBox["x", "p"], "(", "t", ")"}], "+", 
                RowBox[{
                 SubscriptBox["x", "2"], "(", "t", ")"}]}], ")"}], "2"], "+", 
             RowBox[{
              FractionBox["1", "4"], " ", 
              SuperscriptBox[
               RowBox[{"(", 
                RowBox[{
                 RowBox[{
                  SubscriptBox["h", "p"], " ", 
                  RowBox[{"cos", "(", 
                   RowBox[{
                    SubscriptBox["\[Theta]", "p"], "(", "t", ")"}], ")"}]}], 
                 "+", 
                 RowBox[{
                  SubscriptBox["l", "p"], " ", 
                  RowBox[{"sin", "(", 
                   RowBox[{
                    SubscriptBox["\[Theta]", "p"], "(", "t", ")"}], ")"}]}], 
                 "+", 
                 RowBox[{"2", " ", 
                  RowBox[{
                   SubscriptBox["y", "p"], "(", "t", ")"}]}], "-", 
                 RowBox[{"2", " ", 
                  RowBox[{
                   SubscriptBox["y", "2"], "(", "t", ")"}]}]}], ")"}], 
               "2"]}]}]]]}], "\[LongEqual]", 
         RowBox[{
          SubscriptBox["m", "p"], " ", 
          RowBox[{
           SuperscriptBox[
            SubscriptBox["x", "p"], "\[Prime]\[Prime]",
            MultilineFunction->None], "(", "t", ")"}]}]}]},
       {
        RowBox[{
         RowBox[{
          FractionBox[
           RowBox[{
            SubscriptBox["k", "1"], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", 
               RowBox[{
                FractionBox["1", "2"], " ", 
                SubscriptBox["h", "p"], " ", 
                RowBox[{"cos", "(", 
                 RowBox[{
                  SubscriptBox["\[Theta]", "p"], "(", "t", ")"}], ")"}]}]}], 
              "+", 
              RowBox[{
               FractionBox["1", "2"], " ", 
               SubscriptBox["l", "p"], " ", 
               RowBox[{"sin", "(", 
                RowBox[{
                 SubscriptBox["\[Theta]", "p"], "(", "t", ")"}], ")"}]}], "-", 
              RowBox[{
               SubscriptBox["y", "p"], "(", "t", ")"}], "+", 
              RowBox[{
               SubscriptBox["y", "1"], "(", "t", ")"}]}], ")"}], " ", 
            RowBox[{"(", 
             RowBox[{
              SqrtBox[
               RowBox[{
                RowBox[{
                 FractionBox["1", "4"], " ", 
                 SuperscriptBox[
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{
                    SubscriptBox["h", "p"], " ", 
                    RowBox[{"sin", "(", 
                    RowBox[{
                    SubscriptBox["\[Theta]", "p"], "(", "t", ")"}], ")"}]}], 
                    "+", 
                    RowBox[{
                    SubscriptBox["l", "p"], " ", 
                    RowBox[{"cos", "(", 
                    RowBox[{
                    SubscriptBox["\[Theta]", "p"], "(", "t", ")"}], ")"}]}], 
                    "-", 
                    RowBox[{"2", " ", 
                    RowBox[{
                    SubscriptBox["x", "p"], "(", "t", ")"}]}], "+", 
                    RowBox[{"2", " ", 
                    RowBox[{
                    SubscriptBox["x", "1"], "(", "t", ")"}]}]}], ")"}], 
                  "2"]}], "+", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{
                    FractionBox["1", "2"], " ", 
                    SubscriptBox["h", "p"], " ", 
                    RowBox[{"cos", "(", 
                    RowBox[{
                    SubscriptBox["\[Theta]", "p"], "(", "t", ")"}], ")"}]}], 
                   "-", 
                   RowBox[{
                    FractionBox["1", "2"], " ", 
                    SubscriptBox["l", "p"], " ", 
                    RowBox[{"sin", "(", 
                    RowBox[{
                    SubscriptBox["\[Theta]", "p"], "(", "t", ")"}], ")"}]}], 
                   "+", 
                   RowBox[{
                    SubscriptBox["y", "p"], "(", "t", ")"}], "-", 
                   RowBox[{
                    SubscriptBox["y", "1"], "(", "t", ")"}]}], ")"}], "2"]}]],
               "-", 
              SubscriptBox["L0", "1"]}], ")"}]}], 
           SqrtBox[
            RowBox[{
             RowBox[{
              FractionBox["1", "4"], " ", 
              SuperscriptBox[
               RowBox[{"(", 
                RowBox[{
                 RowBox[{
                  SubscriptBox["h", "p"], " ", 
                  RowBox[{"sin", "(", 
                   RowBox[{
                    SubscriptBox["\[Theta]", "p"], "(", "t", ")"}], ")"}]}], 
                 "+", 
                 RowBox[{
                  SubscriptBox["l", "p"], " ", 
                  RowBox[{"cos", "(", 
                   RowBox[{
                    SubscriptBox["\[Theta]", "p"], "(", "t", ")"}], ")"}]}], 
                 "-", 
                 RowBox[{"2", " ", 
                  RowBox[{
                   SubscriptBox["x", "p"], "(", "t", ")"}]}], "+", 
                 RowBox[{"2", " ", 
                  RowBox[{
                   SubscriptBox["x", "1"], "(", "t", ")"}]}]}], ")"}], "2"]}],
              "+", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{
                RowBox[{
                 FractionBox["1", "2"], " ", 
                 SubscriptBox["h", "p"], " ", 
                 RowBox[{"cos", "(", 
                  RowBox[{
                   SubscriptBox["\[Theta]", "p"], "(", "t", ")"}], ")"}]}], 
                "-", 
                RowBox[{
                 FractionBox["1", "2"], " ", 
                 SubscriptBox["l", "p"], " ", 
                 RowBox[{"sin", "(", 
                  RowBox[{
                   SubscriptBox["\[Theta]", "p"], "(", "t", ")"}], ")"}]}], 
                "+", 
                RowBox[{
                 SubscriptBox["y", "p"], "(", "t", ")"}], "-", 
                RowBox[{
                 SubscriptBox["y", "1"], "(", "t", ")"}]}], ")"}], "2"]}]]], 
          "+", 
          FractionBox[
           RowBox[{
            SubscriptBox["k", "2"], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", 
               RowBox[{
                FractionBox["1", "2"], " ", 
                SubscriptBox["h", "p"], " ", 
                RowBox[{"cos", "(", 
                 RowBox[{
                  SubscriptBox["\[Theta]", "p"], "(", "t", ")"}], ")"}]}]}], 
              "-", 
              RowBox[{
               FractionBox["1", "2"], " ", 
               SubscriptBox["l", "p"], " ", 
               RowBox[{"sin", "(", 
                RowBox[{
                 SubscriptBox["\[Theta]", "p"], "(", "t", ")"}], ")"}]}], "-", 
              RowBox[{
               SubscriptBox["y", "p"], "(", "t", ")"}], "+", 
              RowBox[{
               SubscriptBox["y", "2"], "(", "t", ")"}]}], ")"}], " ", 
            RowBox[{"(", 
             RowBox[{
              SqrtBox[
               RowBox[{
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{
                    FractionBox["1", "2"], " ", 
                    SubscriptBox["h", "p"], " ", 
                    RowBox[{"sin", "(", 
                    RowBox[{
                    SubscriptBox["\[Theta]", "p"], "(", "t", ")"}], ")"}]}], 
                   "-", 
                   RowBox[{
                    FractionBox["1", "2"], " ", 
                    SubscriptBox["l", "p"], " ", 
                    RowBox[{"cos", "(", 
                    RowBox[{
                    SubscriptBox["\[Theta]", "p"], "(", "t", ")"}], ")"}]}], 
                   "-", 
                   RowBox[{
                    SubscriptBox["x", "p"], "(", "t", ")"}], "+", 
                   RowBox[{
                    SubscriptBox["x", "2"], "(", "t", ")"}]}], ")"}], "2"], 
                "+", 
                RowBox[{
                 FractionBox["1", "4"], " ", 
                 SuperscriptBox[
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{
                    SubscriptBox["h", "p"], " ", 
                    RowBox[{"cos", "(", 
                    RowBox[{
                    SubscriptBox["\[Theta]", "p"], "(", "t", ")"}], ")"}]}], 
                    "+", 
                    RowBox[{
                    SubscriptBox["l", "p"], " ", 
                    RowBox[{"sin", "(", 
                    RowBox[{
                    SubscriptBox["\[Theta]", "p"], "(", "t", ")"}], ")"}]}], 
                    "+", 
                    RowBox[{"2", " ", 
                    RowBox[{
                    SubscriptBox["y", "p"], "(", "t", ")"}]}], "-", 
                    RowBox[{"2", " ", 
                    RowBox[{
                    SubscriptBox["y", "2"], "(", "t", ")"}]}]}], ")"}], 
                  "2"]}]}]], "-", 
              SubscriptBox["L0", "2"]}], ")"}]}], 
           SqrtBox[
            RowBox[{
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{
                RowBox[{
                 FractionBox["1", "2"], " ", 
                 SubscriptBox["h", "p"], " ", 
                 RowBox[{"sin", "(", 
                  RowBox[{
                   SubscriptBox["\[Theta]", "p"], "(", "t", ")"}], ")"}]}], 
                "-", 
                RowBox[{
                 FractionBox["1", "2"], " ", 
                 SubscriptBox["l", "p"], " ", 
                 RowBox[{"cos", "(", 
                  RowBox[{
                   SubscriptBox["\[Theta]", "p"], "(", "t", ")"}], ")"}]}], 
                "-", 
                RowBox[{
                 SubscriptBox["x", "p"], "(", "t", ")"}], "+", 
                RowBox[{
                 SubscriptBox["x", "2"], "(", "t", ")"}]}], ")"}], "2"], "+", 
             RowBox[{
              FractionBox["1", "4"], " ", 
              SuperscriptBox[
               RowBox[{"(", 
                RowBox[{
                 RowBox[{
                  SubscriptBox["h", "p"], " ", 
                  RowBox[{"cos", "(", 
                   RowBox[{
                    SubscriptBox["\[Theta]", "p"], "(", "t", ")"}], ")"}]}], 
                 "+", 
                 RowBox[{
                  SubscriptBox["l", "p"], " ", 
                  RowBox[{"sin", "(", 
                   RowBox[{
                    SubscriptBox["\[Theta]", "p"], "(", "t", ")"}], ")"}]}], 
                 "+", 
                 RowBox[{"2", " ", 
                  RowBox[{
                   SubscriptBox["y", "p"], "(", "t", ")"}]}], "-", 
                 RowBox[{"2", " ", 
                  RowBox[{
                   SubscriptBox["y", "2"], "(", "t", ")"}]}]}], ")"}], 
               "2"]}]}]]]}], "\[LongEqual]", 
         RowBox[{
          SubscriptBox["m", "p"], " ", 
          RowBox[{"(", 
           RowBox[{"g", "+", 
            RowBox[{
             SuperscriptBox[
              SubscriptBox["y", "p"], "\[Prime]\[Prime]",
              MultilineFunction->None], "(", "t", ")"}]}], ")"}]}]}]},
       {
        RowBox[{
         RowBox[{
          RowBox[{
           SubscriptBox["\[ImaginaryI]", 
            RowBox[{"p", ",", "zz"}]], " ", 
           RowBox[{
            SuperscriptBox[
             SubscriptBox["\[Theta]", "p"], "\[Prime]\[Prime]",
             MultilineFunction->None], "(", "t", ")"}]}], "+", 
          FractionBox[
           RowBox[{
            SubscriptBox["k", "1"], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               SubscriptBox["h", "p"], " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{
                  RowBox[{
                   SubscriptBox["x", "1"], "(", "t", ")"}], " ", 
                  RowBox[{"cos", "(", 
                   RowBox[{
                    SubscriptBox["\[Theta]", "p"], "(", "t", ")"}], ")"}]}], 
                 "-", 
                 RowBox[{
                  RowBox[{
                   SubscriptBox["x", "p"], "(", "t", ")"}], " ", 
                  RowBox[{"cos", "(", 
                   RowBox[{
                    SubscriptBox["\[Theta]", "p"], "(", "t", ")"}], ")"}]}], 
                 "+", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{
                    SubscriptBox["y", "1"], "(", "t", ")"}], "-", 
                    RowBox[{
                    SubscriptBox["y", "p"], "(", "t", ")"}]}], ")"}], " ", 
                  RowBox[{"sin", "(", 
                   RowBox[{
                    SubscriptBox["\[Theta]", "p"], "(", "t", ")"}], ")"}]}]}],
                 ")"}]}], "+", 
              RowBox[{
               SubscriptBox["l", "p"], " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{
                  RowBox[{
                   SubscriptBox["x", "1"], "(", "t", ")"}], " ", 
                  RowBox[{"(", 
                   RowBox[{"-", 
                    RowBox[{"sin", "(", 
                    RowBox[{
                    SubscriptBox["\[Theta]", "p"], "(", "t", ")"}], ")"}]}], 
                   ")"}]}], "+", 
                 RowBox[{
                  RowBox[{
                   SubscriptBox["x", "p"], "(", "t", ")"}], " ", 
                  RowBox[{"sin", "(", 
                   RowBox[{
                    SubscriptBox["\[Theta]", "p"], "(", "t", ")"}], ")"}]}], 
                 "+", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{
                    SubscriptBox["y", "1"], "(", "t", ")"}], "-", 
                    RowBox[{
                    SubscriptBox["y", "p"], "(", "t", ")"}]}], ")"}], " ", 
                  RowBox[{"cos", "(", 
                   RowBox[{
                    SubscriptBox["\[Theta]", "p"], "(", "t", ")"}], ")"}]}]}],
                 ")"}]}]}], ")"}], " ", 
            RowBox[{"(", 
             RowBox[{
              SqrtBox[
               RowBox[{
                RowBox[{
                 FractionBox["1", "4"], " ", 
                 SuperscriptBox[
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{
                    SubscriptBox["h", "p"], " ", 
                    RowBox[{"sin", "(", 
                    RowBox[{
                    SubscriptBox["\[Theta]", "p"], "(", "t", ")"}], ")"}]}], 
                    "+", 
                    RowBox[{
                    SubscriptBox["l", "p"], " ", 
                    RowBox[{"cos", "(", 
                    RowBox[{
                    SubscriptBox["\[Theta]", "p"], "(", "t", ")"}], ")"}]}], 
                    "-", 
                    RowBox[{"2", " ", 
                    RowBox[{
                    SubscriptBox["x", "p"], "(", "t", ")"}]}], "+", 
                    RowBox[{"2", " ", 
                    RowBox[{
                    SubscriptBox["x", "1"], "(", "t", ")"}]}]}], ")"}], 
                  "2"]}], "+", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{
                    FractionBox["1", "2"], " ", 
                    SubscriptBox["h", "p"], " ", 
                    RowBox[{"cos", "(", 
                    RowBox[{
                    SubscriptBox["\[Theta]", "p"], "(", "t", ")"}], ")"}]}], 
                   "-", 
                   RowBox[{
                    FractionBox["1", "2"], " ", 
                    SubscriptBox["l", "p"], " ", 
                    RowBox[{"sin", "(", 
                    RowBox[{
                    SubscriptBox["\[Theta]", "p"], "(", "t", ")"}], ")"}]}], 
                   "+", 
                   RowBox[{
                    SubscriptBox["y", "p"], "(", "t", ")"}], "-", 
                   RowBox[{
                    SubscriptBox["y", "1"], "(", "t", ")"}]}], ")"}], "2"]}]],
               "-", 
              SubscriptBox["L0", "1"]}], ")"}]}], 
           RowBox[{"2", " ", 
            SqrtBox[
             RowBox[{
              RowBox[{
               FractionBox["1", "4"], " ", 
               SuperscriptBox[
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   SubscriptBox["h", "p"], " ", 
                   RowBox[{"sin", "(", 
                    RowBox[{
                    SubscriptBox["\[Theta]", "p"], "(", "t", ")"}], ")"}]}], 
                  "+", 
                  RowBox[{
                   SubscriptBox["l", "p"], " ", 
                   RowBox[{"cos", "(", 
                    RowBox[{
                    SubscriptBox["\[Theta]", "p"], "(", "t", ")"}], ")"}]}], 
                  "-", 
                  RowBox[{"2", " ", 
                   RowBox[{
                    SubscriptBox["x", "p"], "(", "t", ")"}]}], "+", 
                  RowBox[{"2", " ", 
                   RowBox[{
                    SubscriptBox["x", "1"], "(", "t", ")"}]}]}], ")"}], 
                "2"]}], "+", 
              SuperscriptBox[
               RowBox[{"(", 
                RowBox[{
                 RowBox[{
                  FractionBox["1", "2"], " ", 
                  SubscriptBox["h", "p"], " ", 
                  RowBox[{"cos", "(", 
                   RowBox[{
                    SubscriptBox["\[Theta]", "p"], "(", "t", ")"}], ")"}]}], 
                 "-", 
                 RowBox[{
                  FractionBox["1", "2"], " ", 
                  SubscriptBox["l", "p"], " ", 
                  RowBox[{"sin", "(", 
                   RowBox[{
                    SubscriptBox["\[Theta]", "p"], "(", "t", ")"}], ")"}]}], 
                 "+", 
                 RowBox[{
                  SubscriptBox["y", "p"], "(", "t", ")"}], "-", 
                 RowBox[{
                  SubscriptBox["y", "1"], "(", "t", ")"}]}], ")"}], 
               "2"]}]]}]], "+", 
          FractionBox[
           RowBox[{
            SubscriptBox["k", "2"], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               SubscriptBox["h", "p"], " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{
                  RowBox[{
                   SubscriptBox["x", "2"], "(", "t", ")"}], " ", 
                  RowBox[{"cos", "(", 
                   RowBox[{
                    SubscriptBox["\[Theta]", "p"], "(", "t", ")"}], ")"}]}], 
                 "-", 
                 RowBox[{
                  RowBox[{
                   SubscriptBox["x", "p"], "(", "t", ")"}], " ", 
                  RowBox[{"cos", "(", 
                   RowBox[{
                    SubscriptBox["\[Theta]", "p"], "(", "t", ")"}], ")"}]}], 
                 "+", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{
                    SubscriptBox["y", "2"], "(", "t", ")"}], "-", 
                    RowBox[{
                    SubscriptBox["y", "p"], "(", "t", ")"}]}], ")"}], " ", 
                  RowBox[{"sin", "(", 
                   RowBox[{
                    SubscriptBox["\[Theta]", "p"], "(", "t", ")"}], ")"}]}]}],
                 ")"}]}], "+", 
              RowBox[{
               SubscriptBox["l", "p"], " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{
                  RowBox[{
                   SubscriptBox["x", "2"], "(", "t", ")"}], " ", 
                  RowBox[{"sin", "(", 
                   RowBox[{
                    SubscriptBox["\[Theta]", "p"], "(", "t", ")"}], ")"}]}], 
                 "-", 
                 RowBox[{
                  RowBox[{
                   SubscriptBox["x", "p"], "(", "t", ")"}], " ", 
                  RowBox[{"sin", "(", 
                   RowBox[{
                    SubscriptBox["\[Theta]", "p"], "(", "t", ")"}], ")"}]}], 
                 "+", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{
                    SubscriptBox["y", "p"], "(", "t", ")"}], "-", 
                    RowBox[{
                    SubscriptBox["y", "2"], "(", "t", ")"}]}], ")"}], " ", 
                  RowBox[{"cos", "(", 
                   RowBox[{
                    SubscriptBox["\[Theta]", "p"], "(", "t", ")"}], ")"}]}]}],
                 ")"}]}]}], ")"}], " ", 
            RowBox[{"(", 
             RowBox[{
              SqrtBox[
               RowBox[{
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{
                    FractionBox["1", "2"], " ", 
                    SubscriptBox["h", "p"], " ", 
                    RowBox[{"sin", "(", 
                    RowBox[{
                    SubscriptBox["\[Theta]", "p"], "(", "t", ")"}], ")"}]}], 
                   "-", 
                   RowBox[{
                    FractionBox["1", "2"], " ", 
                    SubscriptBox["l", "p"], " ", 
                    RowBox[{"cos", "(", 
                    RowBox[{
                    SubscriptBox["\[Theta]", "p"], "(", "t", ")"}], ")"}]}], 
                   "-", 
                   RowBox[{
                    SubscriptBox["x", "p"], "(", "t", ")"}], "+", 
                   RowBox[{
                    SubscriptBox["x", "2"], "(", "t", ")"}]}], ")"}], "2"], 
                "+", 
                RowBox[{
                 FractionBox["1", "4"], " ", 
                 SuperscriptBox[
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{
                    SubscriptBox["h", "p"], " ", 
                    RowBox[{"cos", "(", 
                    RowBox[{
                    SubscriptBox["\[Theta]", "p"], "(", "t", ")"}], ")"}]}], 
                    "+", 
                    RowBox[{
                    SubscriptBox["l", "p"], " ", 
                    RowBox[{"sin", "(", 
                    RowBox[{
                    SubscriptBox["\[Theta]", "p"], "(", "t", ")"}], ")"}]}], 
                    "+", 
                    RowBox[{"2", " ", 
                    RowBox[{
                    SubscriptBox["y", "p"], "(", "t", ")"}]}], "-", 
                    RowBox[{"2", " ", 
                    RowBox[{
                    SubscriptBox["y", "2"], "(", "t", ")"}]}]}], ")"}], 
                  "2"]}]}]], "-", 
              SubscriptBox["L0", "2"]}], ")"}]}], 
           RowBox[{"2", " ", 
            SqrtBox[
             RowBox[{
              SuperscriptBox[
               RowBox[{"(", 
                RowBox[{
                 RowBox[{
                  FractionBox["1", "2"], " ", 
                  SubscriptBox["h", "p"], " ", 
                  RowBox[{"sin", "(", 
                   RowBox[{
                    SubscriptBox["\[Theta]", "p"], "(", "t", ")"}], ")"}]}], 
                 "-", 
                 RowBox[{
                  FractionBox["1", "2"], " ", 
                  SubscriptBox["l", "p"], " ", 
                  RowBox[{"cos", "(", 
                   RowBox[{
                    SubscriptBox["\[Theta]", "p"], "(", "t", ")"}], ")"}]}], 
                 "-", 
                 RowBox[{
                  SubscriptBox["x", "p"], "(", "t", ")"}], "+", 
                 RowBox[{
                  SubscriptBox["x", "2"], "(", "t", ")"}]}], ")"}], "2"], "+", 
              RowBox[{
               FractionBox["1", "4"], " ", 
               SuperscriptBox[
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   SubscriptBox["h", "p"], " ", 
                   RowBox[{"cos", "(", 
                    RowBox[{
                    SubscriptBox["\[Theta]", "p"], "(", "t", ")"}], ")"}]}], 
                  "+", 
                  RowBox[{
                   SubscriptBox["l", "p"], " ", 
                   RowBox[{"sin", "(", 
                    RowBox[{
                    SubscriptBox["\[Theta]", "p"], "(", "t", ")"}], ")"}]}], 
                  "+", 
                  RowBox[{"2", " ", 
                   RowBox[{
                    SubscriptBox["y", "p"], "(", "t", ")"}]}], "-", 
                  RowBox[{"2", " ", 
                   RowBox[{
                    SubscriptBox["y", "2"], "(", "t", ")"}]}]}], ")"}], 
                "2"]}]}]]}]]}], "\[LongEqual]", "0"}]}
      },
      GridBoxAlignment->{
       "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
        "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.5599999999999999]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}],
     Column], "\[NoBreak]", ")"}],
   Function[BoxForm`e$, 
    MatrixForm[BoxForm`e$]]], TraditionalForm]], "Output",
 CellChangeTimes->{3.712290090695434*^9, 3.712451494236684*^9, 
  3.7126462873126726`*^9, 3.712792277000323*^9, 3.712831551283332*^9, 
  3.713461594445388*^9, 3.7139480263324814`*^9, 3.7141519266176453`*^9, 
  3.7141710996346645`*^9},
 FontSize->18,
 Background->RGBColor[1, 1, 0]]
}, Open  ]],

Cell[" ", "Text",
 Editable->False,
 Selectable->False,
 CellFrame->{{0, 0}, {0, 0.5}},
 ShowCellBracket->False,
 CellMargins->{{0, 0}, {1, 1}},
 CellElementSpacings->{"CellMinHeight"->1},
 CellFrameMargins->0,
 CellFrameColor->RGBColor[0, 0, 1],
 CellSize->{Inherited, 3}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"non", "-", 
     RowBox[{"conserving", " ", 
      RowBox[{"forces", ":", "\[IndentingNewLine]", "aerodynamic"}]}]}], " ", 
    "=", "  ", 
    RowBox[{"f", 
     RowBox[{"(", 
      RowBox[{
       OverscriptBox[
        SubscriptBox["x", "p"], "."], ",", 
       OverscriptBox[
        SubscriptBox["y", "p"], "."], ",", 
       SubscriptBox["\[Theta]", "p"], ",", " ", 
       SubscriptBox["w", "x"], ",", 
       SubscriptBox["w", "y"]}], ")"}]}]}], " ", ",", " ", 
   RowBox[{
    RowBox[{"w", " ", "for", " ", "wind", " ", 
     RowBox[{"components", "."}]}], " ", "=", " ", 
    RowBox[{"f", 
     RowBox[{"(", 
      RowBox[{
       SubscriptBox["relV", "x"], ",", 
       SubscriptBox["relV", "y"]}], ")"}]}]}], " ", ",", " ", 
   RowBox[{"relV", " ", "is", " ", "relative", " ", "to", " ", "air"}]}], 
  " "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"dumping", " ", 
   RowBox[{"(", "structural", ")"}]}], "=", " ", 
  RowBox[{
   RowBox[{"f", 
    RowBox[{"(", 
     OverscriptBox[
      SubscriptBox["l", "i"], "."], ")"}]}], "=", 
   RowBox[{"f", 
    RowBox[{"(", 
     RowBox[{
      OverscriptBox[
       SubscriptBox["x", "i"], "."], ",", 
      OverscriptBox[
       SubscriptBox["y", "i"], "."], ",", 
      OverscriptBox[
       SubscriptBox["x", "p"], "."], ",", 
      OverscriptBox[
       SubscriptBox["y", "p"], "."]}], ")"}]}]}]}]}], "Input",
 CellChangeTimes->{{3.7126500437307434`*^9, 3.7126501694208355`*^9}, 
   3.7126502290521765`*^9, {3.7126503014117236`*^9, 3.712650331072315*^9}, {
   3.712650702293164*^9, 3.7126507593603816`*^9}, {3.7126556510753436`*^9, 
   3.7126556677774086`*^9}, {3.714959537089729*^9, 3.7149595639332113`*^9}}],

Cell[" ", "Text",
 Editable->False,
 Selectable->False,
 CellFrame->{{0, 0}, {0, 3}},
 ShowCellBracket->False,
 CellMargins->{{0, 0}, {1, 1}},
 CellElementSpacings->{"CellMinHeight"->1},
 CellFrameMargins->0,
 CellFrameColor->RGBColor[0, 0, 1],
 CellSize->{Inherited, 5}],

Cell["non dim the full equations", "Text",
 CellChangeTimes->{{3.714171644963645*^9, 3.714171664303767*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(", 
   RowBox[{"smallEqs", "=", 
    RowBox[{
     RowBox[{"quadEqNominal", "/.", "terms2"}], "/.", "terms3"}]}], ")"}], "//",
   "MatrixForm"}]], "Input",
 CellChangeTimes->{{3.714171736156269*^9, 3.7141717665215025`*^9}, 
   3.7141718235455046`*^9, {3.714171861060299*^9, 3.7141718691564713`*^9}, {
   3.714172046680708*^9, 3.7141720590047817`*^9}},
 FontSize->36,
 Background->RGBColor[0.87, 0.94, 1]],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", 
   TagBox[GridBox[{
      {
       RowBox[{
        RowBox[{
         FractionBox[
          RowBox[{"r1x", " ", 
           SubscriptBox["k", "1"], " ", 
           RowBox[{"(", 
            RowBox[{"a", "-", 
             SubscriptBox["L0", "1"]}], ")"}]}], 
          SqrtBox[
           SuperscriptBox["a", "2"]]], "+", 
         FractionBox[
          RowBox[{"r2x", " ", 
           SubscriptBox["k", "2"], " ", 
           RowBox[{"(", 
            RowBox[{"b", "-", 
             SubscriptBox["L0", "2"]}], ")"}]}], 
          SqrtBox[
           SuperscriptBox["b", "2"]]]}], "\[Equal]", 
        RowBox[{
         SubscriptBox["m", "p"], " ", 
         RowBox[{
          SuperscriptBox[
           SubscriptBox["x", "p"], "\[Prime]\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}]}]},
      {
       RowBox[{
        RowBox[{
         FractionBox[
          RowBox[{"r1y", " ", 
           SubscriptBox["k", "1"], " ", 
           RowBox[{"(", 
            RowBox[{"a", "-", 
             SubscriptBox["L0", "1"]}], ")"}]}], 
          SqrtBox[
           SuperscriptBox["a", "2"]]], "+", 
         FractionBox[
          RowBox[{"r2y", " ", 
           SubscriptBox["k", "2"], " ", 
           RowBox[{"(", 
            RowBox[{"b", "-", 
             SubscriptBox["L0", "2"]}], ")"}]}], 
          SqrtBox[
           SuperscriptBox["b", "2"]]]}], "\[Equal]", 
        RowBox[{
         SubscriptBox["m", "p"], " ", 
         RowBox[{"(", 
          RowBox[{"g", "+", 
           RowBox[{
            SuperscriptBox[
             SubscriptBox["y", "p"], "\[Prime]\[Prime]",
             MultilineFunction->None], "[", "t", "]"}]}], ")"}]}]}]},
      {
       RowBox[{
        RowBox[{
         FractionBox[
          RowBox[{"c1", " ", 
           SubscriptBox["k", "1"], " ", 
           RowBox[{"(", 
            RowBox[{"a", "-", 
             SubscriptBox["L0", "1"]}], ")"}]}], 
          SqrtBox[
           SuperscriptBox["a", "2"]]], "+", 
         FractionBox[
          RowBox[{"c2", " ", 
           SubscriptBox["k", "2"], " ", 
           RowBox[{"(", 
            RowBox[{"b", "-", 
             SubscriptBox["L0", "2"]}], ")"}]}], 
          SqrtBox[
           SuperscriptBox["b", "2"]]], "+", 
         RowBox[{
          SubscriptBox["\[ImaginaryI]", 
           RowBox[{"p", ",", "zz"}]], " ", 
          RowBox[{
           SuperscriptBox[
            SubscriptBox["\[Theta]", "p"], "\[Prime]\[Prime]",
            MultilineFunction->None], "[", "t", "]"}]}]}], "\[Equal]", "0"}]}
     },
     GridBoxAlignment->{
      "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}},
        "RowsIndexed" -> {}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
         Offset[0.2], {
          Offset[0.4]}, 
         Offset[0.2]}, "RowsIndexed" -> {}}],
    Column], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.7141718700444946`*^9, 3.714172059624795*^9},
 FontSize->36,
 Background->RGBColor[0.87, 0.94, 1]]
}, Open  ]],

Cell["NonDimEq manually settings the terms:", "Text",
 CellChangeTimes->{{3.714172252146077*^9, 3.7141722552141523`*^9}, {
  3.714180452805065*^9, 3.714180462773306*^9}},
 FontSize->24],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   OverscriptBox[
    SubscriptBox["y", "p"], "~"], "[", "t", "]"}], "=", 
  RowBox[{
   RowBox[{
    RowBox[{
     SubscriptBox["y", "p"], "[", "t", "]"}], " ", "/", 
    SubscriptBox["L0", "1"]}], "  ", "or", " ", "any", " ", "other", " ", 
   "of", " ", "the", " ", "lengths", " ", "varialbes", " ", 
   RowBox[{"(", 
    RowBox[{
     SubscriptBox["x", "p"], ",", "r1x", ",", "r1y", ",", "r2x", ",", "r2y", 
     ",", 
     SubscriptBox["h", "p"], ",", 
     SubscriptBox["l", "p"]}], ")"}]}]}], "\[IndentingNewLine]", 
 RowBox[{"t", "=", 
  RowBox[{"\[Tau]", "/", 
   SubscriptBox["\[Omega]", "s"]}]}], "\[IndentingNewLine]", 
 RowBox[{
  SuperscriptBox[
   SubscriptBox["\[Omega]", "s"], "2"], "=", 
  RowBox[{
   FractionBox[
    SubscriptBox["k", "1"], 
    SubscriptBox["m", "p"]], "[", 
   RowBox[{
    FractionBox["g", "l"], "=", 
    FractionBox["1", 
     SuperscriptBox["s", "2"]]}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"A", " ", "is", " ", "non"}], "-", 
  RowBox[{"dimentional", "  ", "form", " ", 
   RowBox[{"of", " ", "'"}], 
   RowBox[{"a", "'"}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"B", " ", "is", " ", "non"}], "-", 
  RowBox[{"dimentional", "  ", "form", " ", 
   RowBox[{"of", " ", "'"}], 
   RowBox[{"b", "'"}]}]}]}], "Input",
 CellChangeTimes->{
  3.7143859742405353`*^9, {3.714387097214754*^9, 3.7143871116663647`*^9}, {
   3.7143878062327795`*^9, 3.714387811703418*^9}}],

Cell[BoxData[
 FormBox[
  TagBox[
   RowBox[{"(", "\[NoBreak]", 
    TagBox[GridBox[{
       {
        RowBox[{
         RowBox[{
          FractionBox[
           RowBox[{
            RowBox[{"(", 
             RowBox[{"1", "-", 
              FractionBox["1", "A"]}], ")"}], " ", 
            SubscriptBox["k", "1"], " ", 
            SubscriptBox["L0", "1"], " ", "r1x"}], 
           SubscriptBox["m", "p"]], "+", 
          FractionBox[
           RowBox[{
            SubscriptBox["k", "2"], " ", 
            SubscriptBox["L0", "1"], " ", "r2x", " ", 
            RowBox[{"(", 
             RowBox[{"1", "-", 
              FractionBox[
               SubscriptBox["L0", "2"], 
               RowBox[{"B", " ", 
                SubscriptBox["L0", "1"]}]]}], ")"}]}], 
           SubscriptBox["m", "p"]]}], "\[LongEqual]", 
         RowBox[{
          SubscriptBox["L0", "1"], " ", 
          SubsuperscriptBox["\[Omega]", "s", "2"], " ", 
          RowBox[{
           SuperscriptBox[
            SubscriptBox["x", "p"], "\[Prime]\[Prime]",
            MultilineFunction->None], "(", "t", ")"}]}]}]},
       {
        RowBox[{
         RowBox[{
          FractionBox[
           RowBox[{
            RowBox[{"(", 
             RowBox[{"1", "-", 
              FractionBox["1", "A"]}], ")"}], " ", 
            SubscriptBox["k", "1"], " ", 
            SubscriptBox["L0", "1"], " ", "r1y"}], 
           SubscriptBox["m", "p"]], "+", 
          FractionBox[
           RowBox[{
            SubscriptBox["k", "2"], " ", 
            SubscriptBox["L0", "1"], " ", "r2y", " ", 
            RowBox[{"(", 
             RowBox[{"1", "-", 
              FractionBox[
               SubscriptBox["L0", "2"], 
               RowBox[{"B", " ", 
                SubscriptBox["L0", "1"]}]]}], ")"}]}], 
           SubscriptBox["m", "p"]], "-", "g"}], "\[LongEqual]", 
         RowBox[{
          SubscriptBox["L0", "1"], " ", 
          SubsuperscriptBox["\[Omega]", "s", "2"], " ", 
          RowBox[{
           SuperscriptBox[
            SubscriptBox["y", "p"], "\[Prime]\[Prime]",
            MultilineFunction->None], "(", "t", ")"}]}]}]},
       {
        RowBox[{
         RowBox[{
          RowBox[{"-", 
           FractionBox[
            RowBox[{
             RowBox[{"(", 
              RowBox[{"1", "-", 
               FractionBox["1", "A"]}], ")"}], " ", 
             SubscriptBox["c", "1"], " ", 
             SubscriptBox["k", "1"], " ", 
             SubsuperscriptBox["L0", "1", "2"]}], 
            SubscriptBox["\[ImaginaryI]", 
             RowBox[{"p", ",", "zz"}]]]}], "-", 
          FractionBox[
           RowBox[{
            SubscriptBox["c", "2"], " ", 
            SubscriptBox["k", "2"], " ", 
            SubsuperscriptBox["L0", "1", "2"], " ", 
            RowBox[{"(", 
             RowBox[{"1", "-", 
              FractionBox[
               SubscriptBox["L0", "2"], 
               RowBox[{"B", " ", 
                SubscriptBox["L0", "1"]}]]}], ")"}]}], 
           SubscriptBox["\[ImaginaryI]", 
            RowBox[{"p", ",", "zz"}]]]}], "\[LongEqual]", 
         RowBox[{
          SubsuperscriptBox["\[Omega]", "s", "2"], " ", 
          RowBox[{
           SuperscriptBox[
            SubscriptBox["\[Theta]", "p"], "\[Prime]\[Prime]",
            MultilineFunction->None], "(", "t", ")"}]}]}]}
      },
      GridBoxAlignment->{
       "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
        "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.5599999999999999]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}],
     Column], "\[NoBreak]", ")"}],
   Function[BoxForm`e$, 
    MatrixForm[BoxForm`e$]]], TraditionalForm]], "Output",
 CellChangeTimes->{{3.7141809407776604`*^9, 3.71418096114718*^9}, 
   3.7141810047443304`*^9, {3.7141810445789814`*^9, 3.714181080771454*^9}, 
   3.7143860139705524`*^9, 3.714386467653723*^9, 3.7143874237010694`*^9, {
   3.714389212153591*^9, 3.7143892387212486`*^9}},
 FontSize->24,
 Background->RGBColor[0.94, 0.91, 0.88]]
}, Open  ]],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
   SubscriptBox["Delta", "Equilibrium"], "=", 
   FractionBox[
    RowBox[{
     SubscriptBox["m", "p"], "g"}], 
    SubscriptBox["k", "i"]]}], "*)"}]], "Input",
 CellChangeTimes->{3.71438606382195*^9}],

Cell[BoxData[
 RowBox[{"greekTerms", "=", 
  RowBox[{"{", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     FractionBox[
      SubscriptBox["k", "2"], 
      SubscriptBox["k", "1"]], "\[Rule]", "\[Kappa]"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     FractionBox[
      SubscriptBox["L0", "2"], 
      SubscriptBox["L0", "1"]], "\[Rule]", "\[ScriptCapitalL]"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     FractionBox[
      SubscriptBox["k", "1"], 
      SubscriptBox["m", "p"]], "->", 
     SuperscriptBox[
      SubscriptBox["\[Omega]", "s"], "2"]}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      FractionBox[
       RowBox[{
        SubscriptBox["m", "p"], 
        SuperscriptBox[
         SubscriptBox["L0", "1"], "2"]}], 
       SubscriptBox["I", "p"]], 
      RowBox[{"(", 
       RowBox[{"=", 
        FractionBox[
         RowBox[{
          SuperscriptBox[
           SubscriptBox["L0", "1"], "2"], 
          SubscriptBox["k", "1"]}], 
         RowBox[{
          SubscriptBox["I", "p"], 
          SuperscriptBox[
           SubscriptBox["\[Omega]", "s"], "2"]}]]}], ")"}]}], "\[Rule]", 
     "\[Alpha]"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      FractionBox["g", 
       RowBox[{
        SubscriptBox["L0", "1"], " ", 
        SubsuperscriptBox["\[Omega]", "s", "2"]}]], 
      RowBox[{"(", 
       RowBox[{"=", 
        FractionBox[
         RowBox[{"g", " ", 
          SubscriptBox["m", "p"]}], 
         RowBox[{
          SubscriptBox["L0", "1"], 
          SubscriptBox["k", "1"]}]]}], ")"}]}], "\[Rule]", "\[Gamma]"}]}], 
   "\[IndentingNewLine]", "}"}]}]], "Input",
 CellChangeTimes->{{3.7143879104856024`*^9, 3.7143879494561462`*^9}, 
   3.7143893333946447`*^9, {3.714389447058155*^9, 3.714389537391204*^9}, {
   3.7143896588765364`*^9, 3.7143896974471874`*^9}, {3.714389794051433*^9, 
   3.71438979622888*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"(", 
     RowBox[{"NonDimEq", "=", 
      RowBox[{"{", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{
           SubsuperscriptBox["\[Omega]", "s", "2"], " ", 
           SubscriptBox["L0", "1"], 
           RowBox[{"(", 
            RowBox[{"1", "-", 
             FractionBox["1", "A"]}], ")"}], "r1x"}], " ", "+", 
          RowBox[{"\[Kappa]", " ", 
           SubsuperscriptBox["\[Omega]", "s", "2"], "  ", 
           SubscriptBox["L0", "1"], 
           RowBox[{"(", 
            RowBox[{"1", "-", 
             RowBox[{
              FractionBox["1", "B"], "\[ScriptCapitalL]"}]}], ")"}], 
           "r2x"}]}], " ", "==", 
         RowBox[{
          SubscriptBox["L0", "1"], " ", 
          SubsuperscriptBox["\[Omega]", "s", "2"], 
          RowBox[{
           SuperscriptBox[
            SubscriptBox["x", "p"], "\[Prime]\[Prime]",
            MultilineFunction->None], "[", "t", "]"}]}]}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{
          RowBox[{
           SubsuperscriptBox["\[Omega]", "s", "2"], 
           SubscriptBox["L0", "1"], 
           RowBox[{"(", 
            RowBox[{"1", "-", 
             FractionBox["1", "A"]}], ")"}], "r1y"}], " ", "+", 
          RowBox[{"\[Kappa]", " ", 
           SubsuperscriptBox["\[Omega]", "s", "2"], "  ", 
           SubscriptBox["L0", "1"], 
           RowBox[{"(", 
            RowBox[{"1", "-", 
             RowBox[{
              FractionBox["1", "B"], "\[ScriptCapitalL]"}]}], ")"}], "r2y"}], 
          " ", "-", 
          RowBox[{
           FractionBox["g", 
            RowBox[{
             SubscriptBox["L0", "1"], " ", 
             SubsuperscriptBox["\[Omega]", "s", "2"]}]], 
           SubscriptBox["L0", "1"], " ", 
           SubsuperscriptBox["\[Omega]", "s", "2"]}]}], "==", 
         RowBox[{
          SubscriptBox["L0", "1"], " ", 
          SubsuperscriptBox["\[Omega]", "s", "2"], 
          RowBox[{
           SuperscriptBox[
            SubscriptBox["y", "p"], "\[Prime]\[Prime]",
            MultilineFunction->None], "[", "t", "]"}]}]}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{
          RowBox[{
           FractionBox[
            SubscriptBox["k", "1"], 
            RowBox[{"-", 
             SubscriptBox["\[ImaginaryI]", 
              RowBox[{"p", ",", "zz"}]]}]], " ", 
           FractionBox[
            SuperscriptBox[
             SubscriptBox["L0", "1"], "2"], 
            SubsuperscriptBox["\[Omega]", "s", "2"]], 
           SubsuperscriptBox["\[Omega]", "s", "2"], 
           RowBox[{"(", 
            RowBox[{"1", "-", 
             FractionBox["1", "A"]}], ")"}], 
           SubscriptBox["c", "1"]}], " ", "+", 
          RowBox[{"\[Kappa]", " ", 
           FractionBox[
            SubscriptBox["k", "1"], 
            RowBox[{"-", 
             SubscriptBox["\[ImaginaryI]", 
              RowBox[{"p", ",", "zz"}]]}]], " ", 
           FractionBox[
            SuperscriptBox[
             SubscriptBox["L0", "1"], "2"], 
            SubsuperscriptBox["\[Omega]", "s", "2"]], 
           SubsuperscriptBox["\[Omega]", "s", "2"], 
           RowBox[{"(", 
            RowBox[{"1", "-", 
             RowBox[{
              FractionBox["1", "B"], "\[ScriptCapitalL]"}]}], ")"}], 
           SubscriptBox["c", "2"]}]}], "==", 
         RowBox[{
          SubsuperscriptBox["\[Omega]", "s", "2"], " ", 
          RowBox[{
           SuperscriptBox[
            SubscriptBox["\[Theta]", "p"], "\[Prime]\[Prime]",
            MultilineFunction->None], "[", "t", "]"}]}]}]}], 
       "\[IndentingNewLine]", "}"}]}], ")"}], "//", "Flatten"}], "//", 
   "MatrixForm"}], "//", "TraditionalForm"}]], "Input",
 CellChangeTimes->{{3.7143876348261805`*^9, 3.714387792648102*^9}, {
  3.7143881320989227`*^9, 3.7143881529918175`*^9}, {3.7143883645383368`*^9, 
  3.714388374252798*^9}, {3.714389166022051*^9, 3.7143891926065807`*^9}}],

Cell[BoxData[
 FormBox[
  TagBox[
   RowBox[{"(", "\[NoBreak]", 
    TagBox[GridBox[{
       {
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{"1", "-", 
             FractionBox["1", "A"]}], ")"}], " ", 
           SubscriptBox["L0", "1"], " ", "r1x", " ", 
           SubsuperscriptBox["\[Omega]", "s", "2"]}], "+", 
          RowBox[{"\[Kappa]", " ", 
           SubscriptBox["L0", "1"], " ", "r2x", " ", 
           RowBox[{"(", 
            RowBox[{"1", "-", 
             FractionBox["\[ScriptCapitalL]", "B"]}], ")"}], " ", 
           SubsuperscriptBox["\[Omega]", "s", "2"]}]}], "\[LongEqual]", 
         RowBox[{
          SubscriptBox["L0", "1"], " ", 
          SubsuperscriptBox["\[Omega]", "s", "2"], " ", 
          RowBox[{
           SuperscriptBox[
            SubscriptBox["x", "p"], "\[Prime]\[Prime]",
            MultilineFunction->None], "(", "t", ")"}]}]}]},
       {
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{"1", "-", 
             FractionBox["1", "A"]}], ")"}], " ", 
           SubscriptBox["L0", "1"], " ", "r1y", " ", 
           SubsuperscriptBox["\[Omega]", "s", "2"]}], "+", 
          RowBox[{"\[Kappa]", " ", 
           SubscriptBox["L0", "1"], " ", "r2y", " ", 
           RowBox[{"(", 
            RowBox[{"1", "-", 
             FractionBox["\[ScriptCapitalL]", "B"]}], ")"}], " ", 
           SubsuperscriptBox["\[Omega]", "s", "2"]}], "-", "g"}], 
         "\[LongEqual]", 
         RowBox[{
          SubscriptBox["L0", "1"], " ", 
          SubsuperscriptBox["\[Omega]", "s", "2"], " ", 
          RowBox[{
           SuperscriptBox[
            SubscriptBox["y", "p"], "\[Prime]\[Prime]",
            MultilineFunction->None], "(", "t", ")"}]}]}]},
       {
        RowBox[{
         RowBox[{
          RowBox[{"-", 
           FractionBox[
            RowBox[{
             RowBox[{"(", 
              RowBox[{"1", "-", 
               FractionBox["1", "A"]}], ")"}], " ", 
             SubscriptBox["c", "1"], " ", 
             SubscriptBox["k", "1"], " ", 
             SubsuperscriptBox["L0", "1", "2"]}], 
            SubscriptBox["\[ImaginaryI]", 
             RowBox[{"p", ",", "zz"}]]]}], "-", 
          FractionBox[
           RowBox[{
            SubscriptBox["c", "2"], " ", "\[Kappa]", " ", 
            SubscriptBox["k", "1"], " ", 
            SubsuperscriptBox["L0", "1", "2"], " ", 
            RowBox[{"(", 
             RowBox[{"1", "-", 
              FractionBox["\[ScriptCapitalL]", "B"]}], ")"}]}], 
           SubscriptBox["\[ImaginaryI]", 
            RowBox[{"p", ",", "zz"}]]]}], "\[LongEqual]", 
         RowBox[{
          SubsuperscriptBox["\[Omega]", "s", "2"], " ", 
          RowBox[{
           SuperscriptBox[
            SubscriptBox["\[Theta]", "p"], "\[Prime]\[Prime]",
            MultilineFunction->None], "(", "t", ")"}]}]}]}
      },
      GridBoxAlignment->{
       "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
        "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.5599999999999999]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}],
     Column], "\[NoBreak]", ")"}],
   Function[BoxForm`e$, 
    MatrixForm[BoxForm`e$]]], TraditionalForm]], "Output",
 CellChangeTimes->{{3.7143891476968637`*^9, 3.7143891929508095`*^9}}]
}, Open  ]],

Cell[" ", "Text",
 Editable->False,
 Selectable->False,
 CellFrame->{{0, 0}, {0, 2}},
 ShowCellBracket->False,
 CellMargins->{{0, 0}, {1, 1}},
 CellElementSpacings->{"CellMinHeight"->1},
 CellFrameMargins->0,
 CellFrameColor->RGBColor[0, 0, 1],
 CellSize->{Inherited, 4}],

Cell[BoxData[
 RowBox[{
  OverscriptBox["\[ScriptCapitalX]", ".."], "=", 
  RowBox[{
   RowBox[{
    RowBox[{"(", GridBox[{
       {"1", "0", "0"},
       {"0", "1", "0"},
       {"0", "0", 
        RowBox[{"-", "\[Alpha]"}]}
      }], ")"}], 
    RowBox[{"(", 
     RowBox[{"1", "-", 
      FractionBox["1", "A"]}], ")"}], 
    SubscriptBox["\[ScriptCapitalV]", "1"]}], "+", 
   RowBox[{"\[Kappa]", 
    RowBox[{"(", GridBox[{
       {"1", "0", "0"},
       {"0", "1", "0"},
       {"0", "0", 
        RowBox[{"-", "\[Alpha]"}]}
      }], ")"}], 
    RowBox[{"(", 
     RowBox[{"1", "-", 
      RowBox[{
       FractionBox["1", "B"], "\[ScriptCapitalL]"}]}], ")"}], 
    SubscriptBox["\[ScriptCapitalV]", "2"]}], "-", 
   RowBox[{"(", GridBox[{
      {"0"},
      {"\[Gamma]"},
      {"0"}
     }], ")"}], "-", 
   RowBox[{"Cmat", ".", 
    OverscriptBox["\[ScriptCapitalX]", "."]}], "+", "Forces"}]}]], "Input",
 CellChangeTimes->{{3.714389892716267*^9, 3.7143898970131283`*^9}, {
  3.714389965562713*^9, 3.714390009608005*^9}, {3.7143900794907255`*^9, 
  3.7143901818982353`*^9}, {3.715216322087405*^9, 3.7152163595562115`*^9}, {
  3.7152163990184126`*^9, 3.715216404562532*^9}}],

Cell[BoxData[
 RowBox[{
  OverscriptBox["\[ScriptCapitalX]", ".."], "=", 
  RowBox[{"f", "[", 
   RowBox[{"\[ScriptCapitalX]", ",", 
    OverscriptBox["\[ScriptCapitalX]", "."]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.715216362092267*^9, 3.715216381693636*^9}}],

Cell[" ", "Text",
 Editable->False,
 Selectable->False,
 CellFrame->{{0, 0}, {0, 2}},
 ShowCellBracket->False,
 CellMargins->{{0, 0}, {1, 1}},
 CellElementSpacings->{"CellMinHeight"->1},
 CellFrameMargins->0,
 CellFrameColor->RGBColor[0, 0, 1],
 CellSize->{Inherited, 4}],

Cell[" ", "Text",
 Editable->False,
 Selectable->False,
 CellFrame->{{0, 0}, {0, 0.5}},
 ShowCellBracket->False,
 CellMargins->{{0, 0}, {1, 1}},
 CellElementSpacings->{"CellMinHeight"->1},
 CellFrameMargins->0,
 CellFrameColor->RGBColor[0, 0, 1],
 CellSize->{Inherited, 3}],

Cell[" ", "Text",
 Editable->False,
 Selectable->False,
 CellFrame->{{0, 0}, {0, 2}},
 ShowCellBracket->False,
 CellMargins->{{0, 0}, {1, 1}},
 CellElementSpacings->{"CellMinHeight"->1},
 CellFrameMargins->0,
 CellFrameColor->RGBColor[0, 0, 1],
 CellSize->{Inherited, 4}],

Cell[" ", "Text",
 Editable->False,
 Selectable->False,
 CellFrame->{{0, 0}, {0, 0.5}},
 ShowCellBracket->False,
 CellMargins->{{0, 0}, {1, 1}},
 CellElementSpacings->{"CellMinHeight"->1},
 CellFrameMargins->0,
 CellFrameColor->RGBColor[0, 0, 1],
 CellSize->{Inherited, 3}],

Cell[BoxData[
 RowBox[{"Quit", "[", "]"}]], "Input",
 CellChangeTimes->{{3.715194288843802*^9, 3.715194290570945*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"\[ScriptCapitalX]", "=", 
   RowBox[{"(", GridBox[{
      {
       RowBox[{
        SubscriptBox["x", "p"], "[", "t", "]"}]},
      {
       RowBox[{
        SubscriptBox["y", "p"], "[", "t", "]"}]},
      {
       RowBox[{
        SubscriptBox["\[Theta]", "p"], "[", "t", "]"}]}
     }], ")"}]}], 
  RowBox[{"(*", 
   RowBox[{"//", "Flatten"}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{"greekTermsSymetricCase", "=", 
  RowBox[{"{", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     FractionBox[
      SubscriptBox["k", "2"], 
      SubscriptBox["k", "1"]], "\[Rule]"}], "*)"}], 
   RowBox[{
    RowBox[{"\[Kappa]", "\[Rule]", "1"}], ",", "\[IndentingNewLine]", 
    RowBox[{"(*", 
     RowBox[{
      FractionBox[
       SubscriptBox["L0", "2"], 
       SubscriptBox["L0", "1"]], "\[Rule]"}], "*)"}], 
    RowBox[{"\[ScriptCapitalL]", "\[Rule]", "1"}]}], "\[IndentingNewLine]", 
   "}"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"greekTermsGeneral", "=", 
   RowBox[{"{", "\[IndentingNewLine]", 
    RowBox[{"(*", 
     RowBox[{
      FractionBox[
       SubscriptBox["k", "2"], 
       SubscriptBox["k", "1"]], "\[Rule]"}], "*)"}], 
    RowBox[{
     RowBox[{"\[Kappa]", "\[Rule]", "1"}], ",", "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{
       FractionBox[
        SubscriptBox["L0", "2"], 
        SubscriptBox["L0", "1"]], "\[Rule]"}], "*)"}], 
     RowBox[{"\[ScriptCapitalL]", "\[Rule]", "1"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{
       FractionBox[
        SubscriptBox["k", "1"], 
        SubscriptBox["m", "p"]], "->"}], "*)"}], 
     RowBox[{
      SuperscriptBox[
       SubscriptBox["\[Omega]", "s"], "2"], "\[Rule]", "1"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{
       RowBox[{
        FractionBox[
         RowBox[{
          SubscriptBox["m", "p"], 
          SuperscriptBox[
           SubscriptBox["L0", "1"], "2"]}], 
         SubscriptBox["I", "p"]], 
        RowBox[{"(", 
         RowBox[{"=", 
          FractionBox[
           RowBox[{
            SuperscriptBox[
             SubscriptBox["L0", "1"], "2"], 
            SubscriptBox["k", "1"]}], 
           RowBox[{
            SubscriptBox["I", "p"], 
            SuperscriptBox[
             SubscriptBox["\[Omega]", "s"], "2"]}]]}], ")"}]}], "\[Rule]"}], 
      "*)"}], 
     RowBox[{"\[Alpha]", "\[Rule]", "1"}], ",", "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{
       RowBox[{
        FractionBox["g", 
         RowBox[{
          SubscriptBox["L0", "1"], " ", 
          SubsuperscriptBox["\[Omega]", "s", "2"]}]], 
        RowBox[{"(", 
         RowBox[{"=", 
          FractionBox[
           RowBox[{"g", " ", 
            SubscriptBox["m", "p"]}], 
           RowBox[{
            SubscriptBox["L0", "1"], 
            SubscriptBox["k", "1"]}]]}], ")"}]}], "\[Rule]"}], " ", "*)"}], 
     RowBox[{"\[Gamma]", "\[Rule]", "1"}]}], " ", 
    RowBox[{"(*", " ", 
     RowBox[{
      RowBox[{
      "make", " ", "sure", " ", "it", " ", "is", " ", "not", " ", "over"}], 
      "-", 
      RowBox[{"determined", " ", "constant"}]}], " ", "*)"}], 
    "\[IndentingNewLine]", "\[IndentingNewLine]", "}"}]}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"already", " ", 
     RowBox[{"here", " ", ":", " ", 
      RowBox[{"replacing", " ", 
       StyleBox["all",
        FontWeight->"Plain"], " ", "former", " ", 
       SubscriptBox["h", "p"]}]}]}], ",", 
    RowBox[{
     SubscriptBox["l", "p"], " ", "with", " ", "new", " ", "2", 
     SubscriptBox["h", "p"]}], ",", 
    RowBox[{"2", 
     SubscriptBox["l", "p"]}]}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"A", 
   RowBox[{"(*", 
    RowBox[{"\[Rule]", 
     SqrtBox[
      RowBox[{
       SuperscriptBox["r1x", "2"], "+", 
       SuperscriptBox["r1y", "2"]}]]}], "*)"}], "=", 
   RowBox[{"\[Sqrt]", 
    RowBox[{"(", 
     RowBox[{
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"Sin", "[", 
           RowBox[{
            SubscriptBox["\[Theta]", "p"], "[", "t", "]"}], "]"}], " ", 
          SubscriptBox["h", "p"]}], "+", 
         RowBox[{
          RowBox[{"Cos", "[", 
           RowBox[{
            SubscriptBox["\[Theta]", "p"], "[", "t", "]"}], "]"}], " ", 
          SubscriptBox["l", "p"]}], "+", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            SubscriptBox["x", "1"], "[", "t", "]"}], "-", 
           RowBox[{
            SubscriptBox["x", "p"], "[", "t", "]"}]}], ")"}]}], ")"}], "2"], 
      "+", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"-", " ", 
           RowBox[{"Cos", "[", 
            RowBox[{
             SubscriptBox["\[Theta]", "p"], "[", "t", "]"}], "]"}]}], " ", 
          SubscriptBox["h", "p"]}], "+", " ", 
         RowBox[{
          RowBox[{"Sin", "[", 
           RowBox[{
            SubscriptBox["\[Theta]", "p"], "[", "t", "]"}], "]"}], " ", 
          SubscriptBox["l", "p"]}], "+", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            SubscriptBox["y", "1"], "[", "t", "]"}], "-", 
           RowBox[{
            SubscriptBox["y", "p"], "[", "t", "]"}]}], ")"}]}], ")"}], "2"]}],
      ")"}]}]}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"B", 
   RowBox[{"(*", 
    RowBox[{"\[Rule]", 
     SqrtBox[
      RowBox[{
       SuperscriptBox["r2x", "2"], "+", 
       SuperscriptBox["r2y", "2"]}]]}], "*)"}], "=", 
   RowBox[{"\[Sqrt]", 
    RowBox[{"(", 
     RowBox[{
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"Sin", "[", 
           RowBox[{
            SubscriptBox["\[Theta]", "p"], "[", "t", "]"}], "]"}], " ", 
          SubscriptBox["h", "p"]}], "-", 
         RowBox[{
          RowBox[{"Cos", "[", 
           RowBox[{
            SubscriptBox["\[Theta]", "p"], "[", "t", "]"}], "]"}], " ", 
          SubscriptBox["l", "p"]}], "+", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            SubscriptBox["x", "2"], "[", "t", "]"}], "-", 
           RowBox[{
            SubscriptBox["x", "p"], "[", "t", "]"}]}], ")"}]}], ")"}], "2"], 
      "+", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"-", " ", 
           RowBox[{"Cos", "[", 
            RowBox[{
             SubscriptBox["\[Theta]", "p"], "[", "t", "]"}], "]"}]}], " ", 
          SubscriptBox["h", "p"]}], "-", " ", 
         RowBox[{
          RowBox[{"Sin", "[", 
           RowBox[{
            SubscriptBox["\[Theta]", "p"], "[", "t", "]"}], "]"}], " ", 
          SubscriptBox["l", "p"]}], "+", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            SubscriptBox["y", "2"], "[", "t", "]"}], "-", 
           RowBox[{
            SubscriptBox["y", "p"], "[", "t", "]"}]}], ")"}]}], ")"}], "2"]}],
      ")"}]}]}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    SubscriptBox["c", "1"], 
    RowBox[{"(*", 
     RowBox[{"\[Rule]", 
      RowBox[{"dr1", "+", "dr2"}]}], "*)"}], "=", 
    RowBox[{
     RowBox[{
      RowBox[{
       SubscriptBox["l", "p"], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"-", 
           RowBox[{"Sin", "[", 
            RowBox[{
             SubscriptBox["\[Theta]", "p"], "[", "t", "]"}], "]"}]}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             SubscriptBox["x", "1"], "[", "t", "]"}], "-", " ", 
            RowBox[{
             SubscriptBox["x", "p"], "[", "t", "]"}]}], ")"}]}], "+", 
         RowBox[{
          RowBox[{"Cos", "[", 
           RowBox[{
            SubscriptBox["\[Theta]", "p"], "[", "t", "]"}], "]"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             SubscriptBox["y", "1"], "[", "t", "]"}], "-", 
            RowBox[{
             SubscriptBox["y", "p"], "[", "t", "]"}]}], ")"}]}]}], ")"}]}], 
      "+", 
      RowBox[{
       SubscriptBox["h", "p"], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"Cos", "[", 
           RowBox[{
            SubscriptBox["\[Theta]", "p"], "[", "t", "]"}], "]"}], 
          RowBox[{"(", " ", 
           RowBox[{
            RowBox[{
             SubscriptBox["x", "1"], "[", "t", "]"}], "-", " ", 
            RowBox[{
             SubscriptBox["x", "p"], "[", "t", "]"}]}], ")"}]}], "+", 
         RowBox[{
          RowBox[{"Sin", "[", 
           RowBox[{
            SubscriptBox["\[Theta]", "p"], "[", "t", "]"}], "]"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             SubscriptBox["y", "1"], "[", "t", "]"}], "-", 
            RowBox[{
             SubscriptBox["y", "p"], "[", "t", "]"}]}], ")"}]}]}], ")"}], 
       "\[IndentingNewLine]", 
       SubscriptBox["c", "2"]}]}], 
     RowBox[{"(*", 
      RowBox[{"\[Rule]", 
       RowBox[{"dr3", "+", "dr4"}]}], "*)"}], "=", 
     RowBox[{
      RowBox[{
       SubscriptBox["l", "p"], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"Sin", "[", 
           RowBox[{
            SubscriptBox["\[Theta]", "p"], "[", "t", "]"}], "]"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             SubscriptBox["x", "2"], "[", "t", "]"}], "-", " ", 
            RowBox[{
             SubscriptBox["x", "p"], "[", "t", "]"}]}], ")"}]}], "+", 
         RowBox[{
          RowBox[{"Cos", "[", 
           RowBox[{
            SubscriptBox["\[Theta]", "p"], "[", "t", "]"}], "]"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", 
             RowBox[{
              SubscriptBox["y", "2"], "[", "t", "]"}]}], "+", 
            RowBox[{
             SubscriptBox["y", "p"], "[", "t", "]"}]}], ")"}]}]}], ")"}]}], 
      "+", 
      RowBox[{
       SubscriptBox["h", "p"], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"Cos", "[", 
           RowBox[{
            SubscriptBox["\[Theta]", "p"], "[", "t", "]"}], "]"}], 
          RowBox[{"(", " ", 
           RowBox[{
            RowBox[{
             SubscriptBox["x", "2"], "[", "t", "]"}], "-", " ", 
            RowBox[{
             SubscriptBox["x", "p"], "[", "t", "]"}]}], ")"}]}], "+", 
         RowBox[{
          RowBox[{"Sin", "[", 
           RowBox[{
            SubscriptBox["\[Theta]", "p"], "[", "t", "]"}], "]"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             SubscriptBox["y", "2"], "[", "t", "]"}], "-", 
            RowBox[{
             SubscriptBox["y", "p"], "[", "t", "]"}]}], ")"}]}]}], 
        ")"}]}]}]}]}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  SubscriptBox["\[ScriptCapitalV]", "1"], 
  RowBox[{"(*", 
   RowBox[{"=", 
    RowBox[{"(", GridBox[{
       {"r1x"},
       {"r1y"},
       {
        SubscriptBox["c", "1"]}
      }], ")"}]}], "*)"}], "=", 
  RowBox[{"(", GridBox[{
     {
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"Sin", "[", 
          RowBox[{
           SubscriptBox["\[Theta]", "p"], "[", "t", "]"}], "]"}], " ", 
         SubscriptBox["h", "p"]}], "+", 
        RowBox[{
         RowBox[{"Cos", "[", 
          RowBox[{
           SubscriptBox["\[Theta]", "p"], "[", "t", "]"}], "]"}], " ", 
         SubscriptBox["l", "p"]}], "+", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           SubscriptBox["x", "1"], "[", "t", "]"}], "-", 
          RowBox[{
           SubscriptBox["x", "p"], "[", "t", "]"}]}], ")"}]}], ")"}]},
     {
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"-", " ", 
          RowBox[{"Cos", "[", 
           RowBox[{
            SubscriptBox["\[Theta]", "p"], "[", "t", "]"}], "]"}]}], " ", 
         SubscriptBox["h", "p"]}], "+", " ", 
        RowBox[{
         RowBox[{"Sin", "[", 
          RowBox[{
           SubscriptBox["\[Theta]", "p"], "[", "t", "]"}], "]"}], " ", 
         SubscriptBox["l", "p"]}], "+", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           SubscriptBox["y", "1"], "[", "t", "]"}], "-", 
          RowBox[{
           SubscriptBox["y", "p"], "[", "t", "]"}]}], ")"}]}], ")"}]},
     {
      RowBox[{
       RowBox[{
        SubscriptBox["l", "p"], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", 
            RowBox[{"Sin", "[", 
             RowBox[{
              SubscriptBox["\[Theta]", "p"], "[", "t", "]"}], "]"}]}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              SubscriptBox["x", "1"], "[", "t", "]"}], "-", " ", 
             RowBox[{
              SubscriptBox["x", "p"], "[", "t", "]"}]}], ")"}]}], "+", 
          RowBox[{
           RowBox[{"Cos", "[", 
            RowBox[{
             SubscriptBox["\[Theta]", "p"], "[", "t", "]"}], "]"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              SubscriptBox["y", "1"], "[", "t", "]"}], "-", 
             RowBox[{
              SubscriptBox["y", "p"], "[", "t", "]"}]}], ")"}]}]}], ")"}]}], 
       "+", 
       RowBox[{
        SubscriptBox["h", "p"], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"Cos", "[", 
            RowBox[{
             SubscriptBox["\[Theta]", "p"], "[", "t", "]"}], "]"}], 
           RowBox[{"(", " ", 
            RowBox[{
             RowBox[{
              SubscriptBox["x", "1"], "[", "t", "]"}], "-", " ", 
             RowBox[{
              SubscriptBox["x", "p"], "[", "t", "]"}]}], ")"}]}], "+", 
          RowBox[{
           RowBox[{"Sin", "[", 
            RowBox[{
             SubscriptBox["\[Theta]", "p"], "[", "t", "]"}], "]"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              SubscriptBox["y", "1"], "[", "t", "]"}], "-", 
             RowBox[{
              SubscriptBox["y", "p"], "[", "t", "]"}]}], ")"}]}]}], ")"}]}]}]}
    }], ")"}]}], "\[IndentingNewLine]", 
 RowBox[{
  SubscriptBox["\[ScriptCapitalV]", "2"], 
  RowBox[{"(*", 
   RowBox[{"=", 
    RowBox[{"(", GridBox[{
       {"r2x"},
       {"r2y"},
       {
        SubscriptBox["c", "2"]}
      }], ")"}]}], "*)"}], "=", 
  RowBox[{"(", GridBox[{
     {
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"Sin", "[", 
          RowBox[{
           SubscriptBox["\[Theta]", "p"], "[", "t", "]"}], "]"}], " ", 
         SubscriptBox["h", "p"]}], "-", 
        RowBox[{
         RowBox[{"Cos", "[", 
          RowBox[{
           SubscriptBox["\[Theta]", "p"], "[", "t", "]"}], "]"}], " ", 
         SubscriptBox["l", "p"]}], "+", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           SubscriptBox["x", "2"], "[", "t", "]"}], "-", 
          RowBox[{
           SubscriptBox["x", "p"], "[", "t", "]"}]}], ")"}]}], ")"}]},
     {
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"-", " ", 
          RowBox[{"Cos", "[", 
           RowBox[{
            SubscriptBox["\[Theta]", "p"], "[", "t", "]"}], "]"}]}], " ", 
         SubscriptBox["h", "p"]}], "-", " ", 
        RowBox[{
         RowBox[{"Sin", "[", 
          RowBox[{
           SubscriptBox["\[Theta]", "p"], "[", "t", "]"}], "]"}], " ", 
         SubscriptBox["l", "p"]}], "+", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           SubscriptBox["y", "2"], "[", "t", "]"}], "-", 
          RowBox[{
           SubscriptBox["y", "p"], "[", "t", "]"}]}], ")"}]}], ")"}]},
     {
      RowBox[{
       RowBox[{
        SubscriptBox["l", "p"], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"Sin", "[", 
            RowBox[{
             SubscriptBox["\[Theta]", "p"], "[", "t", "]"}], "]"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              SubscriptBox["x", "2"], "[", "t", "]"}], "-", " ", 
             RowBox[{
              SubscriptBox["x", "p"], "[", "t", "]"}]}], ")"}]}], "+", 
          RowBox[{
           RowBox[{"Cos", "[", 
            RowBox[{
             SubscriptBox["\[Theta]", "p"], "[", "t", "]"}], "]"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", 
              RowBox[{
               SubscriptBox["y", "2"], "[", "t", "]"}]}], "+", 
             RowBox[{
              SubscriptBox["y", "p"], "[", "t", "]"}]}], ")"}]}]}], ")"}]}], 
       "+", 
       RowBox[{
        SubscriptBox["h", "p"], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"Cos", "[", 
            RowBox[{
             SubscriptBox["\[Theta]", "p"], "[", "t", "]"}], "]"}], 
           RowBox[{"(", " ", 
            RowBox[{
             RowBox[{
              SubscriptBox["x", "2"], "[", "t", "]"}], "-", " ", 
             RowBox[{
              SubscriptBox["x", "p"], "[", "t", "]"}]}], ")"}]}], "+", 
          RowBox[{
           RowBox[{"Sin", "[", 
            RowBox[{
             SubscriptBox["\[Theta]", "p"], "[", "t", "]"}], "]"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              SubscriptBox["y", "2"], "[", "t", "]"}], "-", 
             RowBox[{
              SubscriptBox["y", "p"], "[", "t", "]"}]}], ")"}]}]}], ")"}]}]}]}
    }], ")"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Cmat", "=", 
   RowBox[{"(", GridBox[{
      {
       SubscriptBox["c", "1"], "0", "0"},
      {"0", 
       SubscriptBox["c", "2"], "0"},
      {"0", "0", 
       SubscriptBox["c", "3"]}
     }], ")"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"nameChange", "=", 
   RowBox[{"{", 
    RowBox[{
     SubscriptBox["l", "p"], "\[Rule]", 
     SubscriptBox["w", "p"]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", "\"\<equations with no general forces :\>\"", \
"\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"EOM", "=", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"D", "[", 
       RowBox[{"\[ScriptCapitalX]", ",", 
        RowBox[{"{", 
         RowBox[{"t", ",", "2"}], "}"}]}], "]"}], "\[Equal]", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"(", GridBox[{
             {"1", "0", "0"},
             {"0", "1", "0"},
             {"0", "0", 
              RowBox[{"-", "\[Alpha]"}]}
            }], ")"}], 
          RowBox[{"(", 
           RowBox[{"1", "-", 
            FractionBox["1", "A"]}], ")"}]}], ")"}], ".", 
        SubscriptBox["\[ScriptCapitalV]", "1"]}], "+", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"\[Kappa]", 
          RowBox[{"(", GridBox[{
             {"1", "0", "0"},
             {"0", "1", "0"},
             {"0", "0", 
              RowBox[{"-", "\[Alpha]"}]}
            }], ")"}], 
          RowBox[{"(", 
           RowBox[{"1", "-", 
            RowBox[{
             FractionBox["1", "B"], "\[ScriptCapitalL]"}]}], ")"}]}], ")"}], 
        ".", 
        SubscriptBox["\[ScriptCapitalV]", "2"]}], "-", 
       RowBox[{"(", GridBox[{
          {"0"},
          {"\[Gamma]"},
          {"0"}
         }], ")"}], "-", 
       RowBox[{"Cmat", ".", 
        RowBox[{"D", "[", 
         RowBox[{"\[ScriptCapitalX]", ",", 
          RowBox[{"{", 
           RowBox[{"t", ",", "1"}], "}"}]}], "]"}]}]}]}], "  ", "//.", 
     "nameChange"}], "//", "Flatten"}]}], ";"}]}], "Input",
 CellChangeTimes->CompressedData["
1:eJxTTMoPSmViYGAQB2IQHbFNVX/xmteOTBe9jUB0qdZp7oNAmoXNUxlEH59l
bA+ir9uGuoNorsCVoSB6xZllqSC6bZteNYj2OWzRAqJ3bKroAtEBjA49IPpk
1qwJILrmwd3JIFrm9bUVIHpT7qO9IPrylx2HQLT7u9ajIPpc4f7rYHuWrrgB
ojmvhz8A0U0Foj9BtMonO9ZDQLorzp4XRBfvyhEG0XmXI0VBtMn3WikQfcrz
GZgWMVDQBdFtfwz1QLSDn8rnU0Ba/VEOmH7z4O0vEH2pv/Q3iP62yW7+JSC9
eEolmD53kWc5iLYpywXTfExxq0H0n4X71oHo6CNcB7TXAdUpmx0F0ROOlhaZ
AWk/lRllINpyc3sHiN5ZdqMHRAMAH/bSsg==
  "]],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     SubscriptBox["x", "p"], "[", "t", "]"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     SubscriptBox["y", "p"], "[", "t", "]"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     SubscriptBox["\[Theta]", "p"], "[", "t", "]"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.7144536492724395`*^9, 3.7144536799711857`*^9}, 
   3.7144537206245394`*^9, 3.7144538764141417`*^9, 3.7144718365986366`*^9, 
   3.7144875486594105`*^9, 3.714487611932694*^9, {3.7144876616370716`*^9, 
   3.7144876705012827`*^9}, 3.714905025566207*^9, 3.71519425986091*^9, 
   3.71519429418734*^9, 3.7151944341850977`*^9, 3.7151964600491085`*^9, 
   3.7152164947926664`*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"\[Kappa]", "\[Rule]", "1"}], ",", 
   RowBox[{"\[ScriptCapitalL]", "\[Rule]", "1"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.7144536492724395`*^9, 3.7144536799711857`*^9}, 
   3.7144537206245394`*^9, 3.7144538764141417`*^9, 3.7144718365986366`*^9, 
   3.7144875486594105`*^9, 3.714487611932694*^9, {3.7144876616370716`*^9, 
   3.7144876705012827`*^9}, 3.714905025566207*^9, 3.71519425986091*^9, 
   3.71519429418734*^9, 3.7151944341850977`*^9, 3.7151964600491085`*^9, 
   3.715216494796664*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"\[Kappa]", "\[Rule]", "1"}], ",", 
   RowBox[{"\[ScriptCapitalL]", "\[Rule]", "1"}], ",", 
   RowBox[{
    SubsuperscriptBox["\[Omega]", "s", "2"], "\[Rule]", "1"}], ",", 
   RowBox[{"\[Alpha]", "\[Rule]", "1"}], ",", 
   RowBox[{"\[Gamma]", "\[Rule]", "1"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.7144536492724395`*^9, 3.7144536799711857`*^9}, 
   3.7144537206245394`*^9, 3.7144538764141417`*^9, 3.7144718365986366`*^9, 
   3.7144875486594105`*^9, 3.714487611932694*^9, {3.7144876616370716`*^9, 
   3.7144876705012827`*^9}, 3.714905025566207*^9, 3.71519425986091*^9, 
   3.71519429418734*^9, 3.7151944341850977`*^9, 3.7151964600491085`*^9, 
   3.715216494800664*^9}],

Cell[BoxData[
 SqrtBox[
  RowBox[{
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"Sin", "[", 
        RowBox[{
         SubscriptBox["\[Theta]", "p"], "[", "t", "]"}], "]"}], " ", 
       SubscriptBox["h", "p"]}], "+", 
      RowBox[{
       RowBox[{"Cos", "[", 
        RowBox[{
         SubscriptBox["\[Theta]", "p"], "[", "t", "]"}], "]"}], " ", 
       SubscriptBox["l", "p"]}], "+", 
      RowBox[{
       SubscriptBox["x", "1"], "[", "t", "]"}], "-", 
      RowBox[{
       SubscriptBox["x", "p"], "[", "t", "]"}]}], ")"}], "2"], "+", 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"-", 
        RowBox[{"Cos", "[", 
         RowBox[{
          SubscriptBox["\[Theta]", "p"], "[", "t", "]"}], "]"}]}], " ", 
       SubscriptBox["h", "p"]}], "+", 
      RowBox[{
       RowBox[{"Sin", "[", 
        RowBox[{
         SubscriptBox["\[Theta]", "p"], "[", "t", "]"}], "]"}], " ", 
       SubscriptBox["l", "p"]}], "+", 
      RowBox[{
       SubscriptBox["y", "1"], "[", "t", "]"}], "-", 
      RowBox[{
       SubscriptBox["y", "p"], "[", "t", "]"}]}], ")"}], "2"]}]]], "Output",
 CellChangeTimes->{{3.7144536492724395`*^9, 3.7144536799711857`*^9}, 
   3.7144537206245394`*^9, 3.7144538764141417`*^9, 3.7144718365986366`*^9, 
   3.7144875486594105`*^9, 3.714487611932694*^9, {3.7144876616370716`*^9, 
   3.7144876705012827`*^9}, 3.714905025566207*^9, 3.71519425986091*^9, 
   3.71519429418734*^9, 3.7151944341850977`*^9, 3.7151964600491085`*^9, 
   3.7152164948046637`*^9}],

Cell[BoxData[
 SqrtBox[
  RowBox[{
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"Sin", "[", 
        RowBox[{
         SubscriptBox["\[Theta]", "p"], "[", "t", "]"}], "]"}], " ", 
       SubscriptBox["h", "p"]}], "-", 
      RowBox[{
       RowBox[{"Cos", "[", 
        RowBox[{
         SubscriptBox["\[Theta]", "p"], "[", "t", "]"}], "]"}], " ", 
       SubscriptBox["l", "p"]}], "+", 
      RowBox[{
       SubscriptBox["x", "2"], "[", "t", "]"}], "-", 
      RowBox[{
       SubscriptBox["x", "p"], "[", "t", "]"}]}], ")"}], "2"], "+", 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"-", 
        RowBox[{"Cos", "[", 
         RowBox[{
          SubscriptBox["\[Theta]", "p"], "[", "t", "]"}], "]"}]}], " ", 
       SubscriptBox["h", "p"]}], "-", 
      RowBox[{
       RowBox[{"Sin", "[", 
        RowBox[{
         SubscriptBox["\[Theta]", "p"], "[", "t", "]"}], "]"}], " ", 
       SubscriptBox["l", "p"]}], "+", 
      RowBox[{
       SubscriptBox["y", "2"], "[", "t", "]"}], "-", 
      RowBox[{
       SubscriptBox["y", "p"], "[", "t", "]"}]}], ")"}], "2"]}]]], "Output",
 CellChangeTimes->{{3.7144536492724395`*^9, 3.7144536799711857`*^9}, 
   3.7144537206245394`*^9, 3.7144538764141417`*^9, 3.7144718365986366`*^9, 
   3.7144875486594105`*^9, 3.714487611932694*^9, {3.7144876616370716`*^9, 
   3.7144876705012827`*^9}, 3.714905025566207*^9, 3.71519425986091*^9, 
   3.71519429418734*^9, 3.7151944341850977`*^9, 3.7151964600491085`*^9, 
   3.7152164948086643`*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"Sin", "[", 
       RowBox[{
        SubscriptBox["\[Theta]", "p"], "[", "t", "]"}], "]"}], " ", 
      SubscriptBox["h", "p"]}], "+", 
     RowBox[{
      RowBox[{"Cos", "[", 
       RowBox[{
        SubscriptBox["\[Theta]", "p"], "[", "t", "]"}], "]"}], " ", 
      SubscriptBox["l", "p"]}], "+", 
     RowBox[{
      SubscriptBox["x", "1"], "[", "t", "]"}], "-", 
     RowBox[{
      SubscriptBox["x", "p"], "[", "t", "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"-", 
       RowBox[{"Cos", "[", 
        RowBox[{
         SubscriptBox["\[Theta]", "p"], "[", "t", "]"}], "]"}]}], " ", 
      SubscriptBox["h", "p"]}], "+", 
     RowBox[{
      RowBox[{"Sin", "[", 
       RowBox[{
        SubscriptBox["\[Theta]", "p"], "[", "t", "]"}], "]"}], " ", 
      SubscriptBox["l", "p"]}], "+", 
     RowBox[{
      SubscriptBox["y", "1"], "[", "t", "]"}], "-", 
     RowBox[{
      SubscriptBox["y", "p"], "[", "t", "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      SubscriptBox["l", "p"], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"-", 
          RowBox[{"Sin", "[", 
           RowBox[{
            SubscriptBox["\[Theta]", "p"], "[", "t", "]"}], "]"}]}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            SubscriptBox["x", "1"], "[", "t", "]"}], "-", 
           RowBox[{
            SubscriptBox["x", "p"], "[", "t", "]"}]}], ")"}]}], "+", 
        RowBox[{
         RowBox[{"Cos", "[", 
          RowBox[{
           SubscriptBox["\[Theta]", "p"], "[", "t", "]"}], "]"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            SubscriptBox["y", "1"], "[", "t", "]"}], "-", 
           RowBox[{
            SubscriptBox["y", "p"], "[", "t", "]"}]}], ")"}]}]}], ")"}]}], 
     "+", 
     RowBox[{
      SubscriptBox["h", "p"], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"Cos", "[", 
          RowBox[{
           SubscriptBox["\[Theta]", "p"], "[", "t", "]"}], "]"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            SubscriptBox["x", "1"], "[", "t", "]"}], "-", 
           RowBox[{
            SubscriptBox["x", "p"], "[", "t", "]"}]}], ")"}]}], "+", 
        RowBox[{
         RowBox[{"Sin", "[", 
          RowBox[{
           SubscriptBox["\[Theta]", "p"], "[", "t", "]"}], "]"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            SubscriptBox["y", "1"], "[", "t", "]"}], "-", 
           RowBox[{
            SubscriptBox["y", "p"], "[", "t", "]"}]}], ")"}]}]}], ")"}]}]}], 
    "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.7144536492724395`*^9, 3.7144536799711857`*^9}, 
   3.7144537206245394`*^9, 3.7144538764141417`*^9, 3.7144718365986366`*^9, 
   3.7144875486594105`*^9, 3.714487611932694*^9, {3.7144876616370716`*^9, 
   3.7144876705012827`*^9}, 3.714905025566207*^9, 3.71519425986091*^9, 
   3.71519429418734*^9, 3.7151944341850977`*^9, 3.7151964600491085`*^9, 
   3.7152164948166676`*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"Sin", "[", 
       RowBox[{
        SubscriptBox["\[Theta]", "p"], "[", "t", "]"}], "]"}], " ", 
      SubscriptBox["h", "p"]}], "-", 
     RowBox[{
      RowBox[{"Cos", "[", 
       RowBox[{
        SubscriptBox["\[Theta]", "p"], "[", "t", "]"}], "]"}], " ", 
      SubscriptBox["l", "p"]}], "+", 
     RowBox[{
      SubscriptBox["x", "2"], "[", "t", "]"}], "-", 
     RowBox[{
      SubscriptBox["x", "p"], "[", "t", "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"-", 
       RowBox[{"Cos", "[", 
        RowBox[{
         SubscriptBox["\[Theta]", "p"], "[", "t", "]"}], "]"}]}], " ", 
      SubscriptBox["h", "p"]}], "-", 
     RowBox[{
      RowBox[{"Sin", "[", 
       RowBox[{
        SubscriptBox["\[Theta]", "p"], "[", "t", "]"}], "]"}], " ", 
      SubscriptBox["l", "p"]}], "+", 
     RowBox[{
      SubscriptBox["y", "2"], "[", "t", "]"}], "-", 
     RowBox[{
      SubscriptBox["y", "p"], "[", "t", "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      SubscriptBox["h", "p"], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"Cos", "[", 
          RowBox[{
           SubscriptBox["\[Theta]", "p"], "[", "t", "]"}], "]"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            SubscriptBox["x", "2"], "[", "t", "]"}], "-", 
           RowBox[{
            SubscriptBox["x", "p"], "[", "t", "]"}]}], ")"}]}], "+", 
        RowBox[{
         RowBox[{"Sin", "[", 
          RowBox[{
           SubscriptBox["\[Theta]", "p"], "[", "t", "]"}], "]"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            SubscriptBox["y", "2"], "[", "t", "]"}], "-", 
           RowBox[{
            SubscriptBox["y", "p"], "[", "t", "]"}]}], ")"}]}]}], ")"}]}], 
     "+", 
     RowBox[{
      SubscriptBox["l", "p"], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"Sin", "[", 
          RowBox[{
           SubscriptBox["\[Theta]", "p"], "[", "t", "]"}], "]"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            SubscriptBox["x", "2"], "[", "t", "]"}], "-", 
           RowBox[{
            SubscriptBox["x", "p"], "[", "t", "]"}]}], ")"}]}], "+", 
        RowBox[{
         RowBox[{"Cos", "[", 
          RowBox[{
           SubscriptBox["\[Theta]", "p"], "[", "t", "]"}], "]"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", 
            RowBox[{
             SubscriptBox["y", "2"], "[", "t", "]"}]}], "+", 
           RowBox[{
            SubscriptBox["y", "p"], "[", "t", "]"}]}], ")"}]}]}], ")"}]}]}], 
    "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.7144536492724395`*^9, 3.7144536799711857`*^9}, 
   3.7144537206245394`*^9, 3.7144538764141417`*^9, 3.7144718365986366`*^9, 
   3.7144875486594105`*^9, 3.714487611932694*^9, {3.7144876616370716`*^9, 
   3.7144876705012827`*^9}, 3.714905025566207*^9, 3.71519425986091*^9, 
   3.71519429418734*^9, 3.7151944341850977`*^9, 3.7151964600491085`*^9, 
   3.7152164948206644`*^9}],

Cell[BoxData["\<\"equations with no general forces :\"\>"], "Output",
 CellChangeTimes->{{3.7144536492724395`*^9, 3.7144536799711857`*^9}, 
   3.7144537206245394`*^9, 3.7144538764141417`*^9, 3.7144718365986366`*^9, 
   3.7144875486594105`*^9, 3.714487611932694*^9, {3.7144876616370716`*^9, 
   3.7144876705012827`*^9}, 3.714905025566207*^9, 3.71519425986091*^9, 
   3.71519429418734*^9, 3.7151944341850977`*^9, 3.7151964600491085`*^9, 
   3.715216494824664*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData["a"], "Input",
 CellChangeTimes->{3.715362179991132*^9}],

Cell[BoxData[
 GraphicsBox[{
   {Dashing[{Small, Small}], Arrowheads[Small], 
    ArrowBox[{{Subscript[$CellContext`x, 1], Subscript[$CellContext`y, 1]}, {
      Subscript[$CellContext`x, 1], 0.75 Subscript[$CellContext`L0, 1] + 
       Subscript[$CellContext`y, 1]}}], 
    ArrowBox[{{Subscript[$CellContext`x, 1], Subscript[$CellContext`y, 1]}, {
      0.75 Subscript[$CellContext`L0, 1] + Subscript[$CellContext`x, 1], 
       Subscript[$CellContext`y, 1]}}]}, {
    InsetBox["\<\"Payload\"\>", {
     Subscript[$CellContext`x, $CellContext`p], 
      Subscript[$CellContext`y, $CellContext`p]}, {-2 - 
      Sin[$CellContext`\[Theta]p] Subscript[$CellContext`h, $CellContext`p] - 
      Cos[$CellContext`\[Theta]p] Subscript[$CellContext`w, $CellContext`p], 
      4 + Cos[$CellContext`\[Theta]p] 
       Subscript[$CellContext`h, $CellContext`p] - 
      Sin[$CellContext`\[Theta]p] Subscript[$CellContext`w, $CellContext`p]}],
     InsetBox["\<\"Quad1\"\>", {
     Subscript[$CellContext`x, 1], Subscript[$CellContext`y, 1]}, {-1, -1}], 
    InsetBox["\<\"Quad2\"\>", {
     Subscript[$CellContext`x, 2], Subscript[$CellContext`y, 2]}, {-1, -1}], 
    InsetBox["\<\"\\!\\(\\*SubscriptBox[\\(L0\\), \\(1\\)]\\)\"\>", {
     Rational[1, 2] (Subscript[$CellContext`x, 1] + 
       Subscript[$CellContext`x, $CellContext`p]), 
      Rational[1, 2] (Subscript[$CellContext`y, 1] + 
       Subscript[$CellContext`y, $CellContext`p])}, {-2, 1}], 
    InsetBox["\<\"\\!\\(\\*SubscriptBox[\\(l\\), \\(2\\)]\\)\"\>", {
     Rational[1, 2] (Subscript[$CellContext`x, 2] + 
       Subscript[$CellContext`x, $CellContext`p]), 
      Rational[1, 2] (Subscript[$CellContext`y, 2] + 
       Subscript[$CellContext`y, $CellContext`p])}, {2, 1}]}, 
   {Arrowheads[{-Small, Small}], 
    ArrowBox[{{-Sin[$CellContext`\[Theta]p] 
        Subscript[$CellContext`h, $CellContext`p] - 
       Cos[$CellContext`\[Theta]p] Subscript[$CellContext`w, $CellContext`p] + 
       Subscript[$CellContext`x, $CellContext`p], 
       Cos[$CellContext`\[Theta]p] Subscript[$CellContext`h, $CellContext`p] - 
       Sin[$CellContext`\[Theta]p] Subscript[$CellContext`w, $CellContext`p] + 
       Subscript[$CellContext`y, $CellContext`p]}, {
      Subscript[$CellContext`x, 1], Subscript[$CellContext`y, 1]}}], 
    ArrowBox[{{-Sin[$CellContext`\[Theta]p] 
        Subscript[$CellContext`h, $CellContext`p] + 
       Cos[$CellContext`\[Theta]p] Subscript[$CellContext`w, $CellContext`p] + 
       Subscript[$CellContext`x, $CellContext`p], 
       Cos[$CellContext`\[Theta]p] Subscript[$CellContext`h, $CellContext`p] + 
       Sin[$CellContext`\[Theta]p] Subscript[$CellContext`w, $CellContext`p] + 
       Subscript[$CellContext`y, $CellContext`p]}, {
      Subscript[$CellContext`x, 2], Subscript[$CellContext`y, 2]}}]}, 
   LineBox[{{
     0. + Subscript[$CellContext`x, 1], 0. + Subscript[$CellContext`y, 1]}, {
     Subscript[$CellContext`x, 1] + 
      Rational[1, 16] (-Sin[$CellContext`\[Theta]p] 
         Subscript[$CellContext`h, $CellContext`p] - 
        Cos[$CellContext`\[Theta]p] Subscript[$CellContext`w, $CellContext`p] - 
        Subscript[$CellContext`x, 1] + 
        Subscript[$CellContext`x, $CellContext`p]) - 
      0.3333333333333333 (
        Abs[-Sin[$CellContext`\[Theta]p] 
            Subscript[$CellContext`h, $CellContext`p] - 
           Cos[$CellContext`\[Theta]p] 
           Subscript[$CellContext`w, $CellContext`p] - 
           Subscript[$CellContext`x, 1] + 
           Subscript[$CellContext`x, $CellContext`p]]^2 + 
        Abs[Cos[$CellContext`\[Theta]p] 
            Subscript[$CellContext`h, $CellContext`p] - 
           Sin[$CellContext`\[Theta]p] 
           Subscript[$CellContext`w, $CellContext`p] - 
           Subscript[$CellContext`y, 1] + 
           Subscript[$CellContext`y, $CellContext`p]]^2)^Rational[-1, 2] (
       Cos[$CellContext`\[Theta]p] Subscript[$CellContext`h, $CellContext`p] - 
       Sin[$CellContext`\[Theta]p] Subscript[$CellContext`w, $CellContext`p] - 
       Subscript[$CellContext`y, 1] + 
       Subscript[$CellContext`y, $CellContext`p]), (-0.3333333333333333) (
         Abs[-Sin[$CellContext`\[Theta]p] 
             Subscript[$CellContext`h, $CellContext`p] - 
            Cos[$CellContext`\[Theta]p] 
            Subscript[$CellContext`w, $CellContext`p] - 
            Subscript[$CellContext`x, 1] + 
            Subscript[$CellContext`x, $CellContext`p]]^2 + 
         Abs[Cos[$CellContext`\[Theta]p] 
             Subscript[$CellContext`h, $CellContext`p] - 
            Sin[$CellContext`\[Theta]p] 
            Subscript[$CellContext`w, $CellContext`p] - 
            Subscript[$CellContext`y, 1] + 
            Subscript[$CellContext`y, $CellContext`p]]^2)^Rational[-1, 2] (
        Sin[$CellContext`\[Theta]p] Subscript[$CellContext`h, $CellContext`p] + 
        Cos[$CellContext`\[Theta]p] Subscript[$CellContext`w, $CellContext`p] + 
        Subscript[$CellContext`x, 1] - 
        Subscript[$CellContext`x, $CellContext`p]) + 
      Subscript[$CellContext`y, 1] + 
      Rational[1, 16] (
        Cos[$CellContext`\[Theta]p] Subscript[$CellContext`h, $CellContext`p] - 
        Sin[$CellContext`\[Theta]p] Subscript[$CellContext`w, $CellContext`p] - 
        Subscript[$CellContext`y, 1] + 
        Subscript[$CellContext`y, $CellContext`p])}, {
     0. + Subscript[$CellContext`x, 1] + 
      Rational[1, 8] (-Sin[$CellContext`\[Theta]p] 
         Subscript[$CellContext`h, $CellContext`p] - 
        Cos[$CellContext`\[Theta]p] Subscript[$CellContext`w, $CellContext`p] - 
        Subscript[$CellContext`x, 1] + 
        Subscript[$CellContext`x, $CellContext`p]), 0. + 
      Subscript[$CellContext`y, 1] + 
      Rational[1, 8] (
        Cos[$CellContext`\[Theta]p] Subscript[$CellContext`h, $CellContext`p] - 
        Sin[$CellContext`\[Theta]p] Subscript[$CellContext`w, $CellContext`p] - 
        Subscript[$CellContext`y, 1] + 
        Subscript[$CellContext`y, $CellContext`p])}, {
     Subscript[$CellContext`x, 1] + 
      Rational[3, 16] (-Sin[$CellContext`\[Theta]p] 
         Subscript[$CellContext`h, $CellContext`p] - 
        Cos[$CellContext`\[Theta]p] Subscript[$CellContext`w, $CellContext`p] - 
        Subscript[$CellContext`x, 1] + 
        Subscript[$CellContext`x, $CellContext`p]) + 
      0.3333333333333333 (
         Abs[-Sin[$CellContext`\[Theta]p] 
             Subscript[$CellContext`h, $CellContext`p] - 
            Cos[$CellContext`\[Theta]p] 
            Subscript[$CellContext`w, $CellContext`p] - 
            Subscript[$CellContext`x, 1] + 
            Subscript[$CellContext`x, $CellContext`p]]^2 + 
         Abs[
           Cos[$CellContext`\[Theta]p] 
             Subscript[$CellContext`h, $CellContext`p] - 
            Sin[$CellContext`\[Theta]p] 
            Subscript[$CellContext`w, $CellContext`p] - 
            Subscript[$CellContext`y, 1] + 
            Subscript[$CellContext`y, $CellContext`p]]^2)^Rational[-1, 2] (
        Cos[$CellContext`\[Theta]p] Subscript[$CellContext`h, $CellContext`p] - 
        Sin[$CellContext`\[Theta]p] Subscript[$CellContext`w, $CellContext`p] - 
        Subscript[$CellContext`y, 1] + 
        Subscript[$CellContext`y, $CellContext`p]), 
      0.3333333333333333 (
         Abs[-Sin[$CellContext`\[Theta]p] 
             Subscript[$CellContext`h, $CellContext`p] - 
            Cos[$CellContext`\[Theta]p] 
            Subscript[$CellContext`w, $CellContext`p] - 
            Subscript[$CellContext`x, 1] + 
            Subscript[$CellContext`x, $CellContext`p]]^2 + 
         Abs[Cos[$CellContext`\[Theta]p] 
             Subscript[$CellContext`h, $CellContext`p] - 
            Sin[$CellContext`\[Theta]p] 
            Subscript[$CellContext`w, $CellContext`p] - 
            Subscript[$CellContext`y, 1] + 
            Subscript[$CellContext`y, $CellContext`p]]^2)^Rational[-1, 2] (
        Sin[$CellContext`\[Theta]p] Subscript[$CellContext`h, $CellContext`p] + 
        Cos[$CellContext`\[Theta]p] Subscript[$CellContext`w, $CellContext`p] + 
        Subscript[$CellContext`x, 1] - 
        Subscript[$CellContext`x, $CellContext`p]) + 
      Subscript[$CellContext`y, 1] + 
      Rational[3, 16] (
        Cos[$CellContext`\[Theta]p] Subscript[$CellContext`h, $CellContext`p] - 
        Sin[$CellContext`\[Theta]p] Subscript[$CellContext`w, $CellContext`p] - 
        Subscript[$CellContext`y, 1] + 
        Subscript[$CellContext`y, $CellContext`p])}, {
     0. + Subscript[$CellContext`x, 1] + 
      Rational[1, 4] (-Sin[$CellContext`\[Theta]p] 
         Subscript[$CellContext`h, $CellContext`p] - 
        Cos[$CellContext`\[Theta]p] Subscript[$CellContext`w, $CellContext`p] - 
        Subscript[$CellContext`x, 1] + 
        Subscript[$CellContext`x, $CellContext`p]), 0. + 
      Subscript[$CellContext`y, 1] + 
      Rational[1, 4] (
        Cos[$CellContext`\[Theta]p] Subscript[$CellContext`h, $CellContext`p] - 
        Sin[$CellContext`\[Theta]p] Subscript[$CellContext`w, $CellContext`p] - 
        Subscript[$CellContext`y, 1] + 
        Subscript[$CellContext`y, $CellContext`p])}, {
     Subscript[$CellContext`x, 1] + 
      Rational[5, 16] (-Sin[$CellContext`\[Theta]p] 
         Subscript[$CellContext`h, $CellContext`p] - 
        Cos[$CellContext`\[Theta]p] Subscript[$CellContext`w, $CellContext`p] - 
        Subscript[$CellContext`x, 1] + 
        Subscript[$CellContext`x, $CellContext`p]) - 
      0.3333333333333333 (
        Abs[-Sin[$CellContext`\[Theta]p] 
            Subscript[$CellContext`h, $CellContext`p] - 
           Cos[$CellContext`\[Theta]p] 
           Subscript[$CellContext`w, $CellContext`p] - 
           Subscript[$CellContext`x, 1] + 
           Subscript[$CellContext`x, $CellContext`p]]^2 + 
        Abs[Cos[$CellContext`\[Theta]p] 
            Subscript[$CellContext`h, $CellContext`p] - 
           Sin[$CellContext`\[Theta]p] 
           Subscript[$CellContext`w, $CellContext`p] - 
           Subscript[$CellContext`y, 1] + 
           Subscript[$CellContext`y, $CellContext`p]]^2)^Rational[-1, 2] (
       Cos[$CellContext`\[Theta]p] Subscript[$CellContext`h, $CellContext`p] - 
       Sin[$CellContext`\[Theta]p] Subscript[$CellContext`w, $CellContext`p] - 
       Subscript[$CellContext`y, 1] + 
       Subscript[$CellContext`y, $CellContext`p]), (-0.3333333333333333) (
         Abs[-Sin[$CellContext`\[Theta]p] 
             Subscript[$CellContext`h, $CellContext`p] - 
            Cos[$CellContext`\[Theta]p] 
            Subscript[$CellContext`w, $CellContext`p] - 
            Subscript[$CellContext`x, 1] + 
            Subscript[$CellContext`x, $CellContext`p]]^2 + 
         Abs[Cos[$CellContext`\[Theta]p] 
             Subscript[$CellContext`h, $CellContext`p] - 
            Sin[$CellContext`\[Theta]p] 
            Subscript[$CellContext`w, $CellContext`p] - 
            Subscript[$CellContext`y, 1] + 
            Subscript[$CellContext`y, $CellContext`p]]^2)^Rational[-1, 2] (
        Sin[$CellContext`\[Theta]p] Subscript[$CellContext`h, $CellContext`p] + 
        Cos[$CellContext`\[Theta]p] Subscript[$CellContext`w, $CellContext`p] + 
        Subscript[$CellContext`x, 1] - 
        Subscript[$CellContext`x, $CellContext`p]) + 
      Subscript[$CellContext`y, 1] + 
      Rational[5, 16] (
        Cos[$CellContext`\[Theta]p] Subscript[$CellContext`h, $CellContext`p] - 
        Sin[$CellContext`\[Theta]p] Subscript[$CellContext`w, $CellContext`p] - 
        Subscript[$CellContext`y, 1] + 
        Subscript[$CellContext`y, $CellContext`p])}, {
     0. + Subscript[$CellContext`x, 1] + 
      Rational[3, 8] (-Sin[$CellContext`\[Theta]p] 
         Subscript[$CellContext`h, $CellContext`p] - 
        Cos[$CellContext`\[Theta]p] Subscript[$CellContext`w, $CellContext`p] - 
        Subscript[$CellContext`x, 1] + 
        Subscript[$CellContext`x, $CellContext`p]), 0. + 
      Subscript[$CellContext`y, 1] + 
      Rational[3, 8] (
        Cos[$CellContext`\[Theta]p] Subscript[$CellContext`h, $CellContext`p] - 
        Sin[$CellContext`\[Theta]p] Subscript[$CellContext`w, $CellContext`p] - 
        Subscript[$CellContext`y, 1] + 
        Subscript[$CellContext`y, $CellContext`p])}, {
     Subscript[$CellContext`x, 1] + 
      Rational[7, 16] (-Sin[$CellContext`\[Theta]p] 
         Subscript[$CellContext`h, $CellContext`p] - 
        Cos[$CellContext`\[Theta]p] Subscript[$CellContext`w, $CellContext`p] - 
        Subscript[$CellContext`x, 1] + 
        Subscript[$CellContext`x, $CellContext`p]) + 
      0.3333333333333333 (
         Abs[-Sin[$CellContext`\[Theta]p] 
             Subscript[$CellContext`h, $CellContext`p] - 
            Cos[$CellContext`\[Theta]p] 
            Subscript[$CellContext`w, $CellContext`p] - 
            Subscript[$CellContext`x, 1] + 
            Subscript[$CellContext`x, $CellContext`p]]^2 + 
         Abs[Cos[$CellContext`\[Theta]p] 
             Subscript[$CellContext`h, $CellContext`p] - 
            Sin[$CellContext`\[Theta]p] 
            Subscript[$CellContext`w, $CellContext`p] - 
            Subscript[$CellContext`y, 1] + 
            Subscript[$CellContext`y, $CellContext`p]]^2)^Rational[-1, 2] (
        Cos[$CellContext`\[Theta]p] Subscript[$CellContext`h, $CellContext`p] - 
        Sin[$CellContext`\[Theta]p] Subscript[$CellContext`w, $CellContext`p] - 
        Subscript[$CellContext`y, 1] + 
        Subscript[$CellContext`y, $CellContext`p]), 
      0.3333333333333333 (
         Abs[-Sin[$CellContext`\[Theta]p] 
             Subscript[$CellContext`h, $CellContext`p] - 
            Cos[$CellContext`\[Theta]p] 
            Subscript[$CellContext`w, $CellContext`p] - 
            Subscript[$CellContext`x, 1] + 
            Subscript[$CellContext`x, $CellContext`p]]^2 + 
         Abs[Cos[$CellContext`\[Theta]p] 
             Subscript[$CellContext`h, $CellContext`p] - 
            Sin[$CellContext`\[Theta]p] 
            Subscript[$CellContext`w, $CellContext`p] - 
            Subscript[$CellContext`y, 1] + 
            Subscript[$CellContext`y, $CellContext`p]]^2)^Rational[-1, 2] (
        Sin[$CellContext`\[Theta]p] Subscript[$CellContext`h, $CellContext`p] + 
        Cos[$CellContext`\[Theta]p] Subscript[$CellContext`w, $CellContext`p] + 
        Subscript[$CellContext`x, 1] - 
        Subscript[$CellContext`x, $CellContext`p]) + 
      Subscript[$CellContext`y, 1] + 
      Rational[7, 16] (
        Cos[$CellContext`\[Theta]p] Subscript[$CellContext`h, $CellContext`p] - 
        Sin[$CellContext`\[Theta]p] Subscript[$CellContext`w, $CellContext`p] - 
        Subscript[$CellContext`y, 1] + 
        Subscript[$CellContext`y, $CellContext`p])}, {
     0. + Subscript[$CellContext`x, 1] + 
      Rational[1, 2] (-Sin[$CellContext`\[Theta]p] 
         Subscript[$CellContext`h, $CellContext`p] - 
        Cos[$CellContext`\[Theta]p] Subscript[$CellContext`w, $CellContext`p] - 
        Subscript[$CellContext`x, 1] + 
        Subscript[$CellContext`x, $CellContext`p]), 0. + 
      Subscript[$CellContext`y, 1] + 
      Rational[1, 2] (
        Cos[$CellContext`\[Theta]p] Subscript[$CellContext`h, $CellContext`p] - 
        Sin[$CellContext`\[Theta]p] Subscript[$CellContext`w, $CellContext`p] - 
        Subscript[$CellContext`y, 1] + 
        Subscript[$CellContext`y, $CellContext`p])}, {
     Subscript[$CellContext`x, 1] + 
      Rational[9, 16] (-Sin[$CellContext`\[Theta]p] 
         Subscript[$CellContext`h, $CellContext`p] - 
        Cos[$CellContext`\[Theta]p] Subscript[$CellContext`w, $CellContext`p] - 
        Subscript[$CellContext`x, 1] + 
        Subscript[$CellContext`x, $CellContext`p]) - 
      0.3333333333333333 (
        Abs[-Sin[$CellContext`\[Theta]p] 
            Subscript[$CellContext`h, $CellContext`p] - 
           Cos[$CellContext`\[Theta]p] 
           Subscript[$CellContext`w, $CellContext`p] - 
           Subscript[$CellContext`x, 1] + 
           Subscript[$CellContext`x, $CellContext`p]]^2 + 
        Abs[Cos[$CellContext`\[Theta]p] 
            Subscript[$CellContext`h, $CellContext`p] - 
           Sin[$CellContext`\[Theta]p] 
           Subscript[$CellContext`w, $CellContext`p] - 
           Subscript[$CellContext`y, 1] + 
           Subscript[$CellContext`y, $CellContext`p]]^2)^Rational[-1, 2] (
       Cos[$CellContext`\[Theta]p] Subscript[$CellContext`h, $CellContext`p] - 
       Sin[$CellContext`\[Theta]p] Subscript[$CellContext`w, $CellContext`p] - 
       Subscript[$CellContext`y, 1] + 
       Subscript[$CellContext`y, $CellContext`p]), (-0.3333333333333333) (
         Abs[-Sin[$CellContext`\[Theta]p] 
             Subscript[$CellContext`h, $CellContext`p] - 
            Cos[$CellContext`\[Theta]p] 
            Subscript[$CellContext`w, $CellContext`p] - 
            Subscript[$CellContext`x, 1] + 
            Subscript[$CellContext`x, $CellContext`p]]^2 + 
         Abs[Cos[$CellContext`\[Theta]p] 
             Subscript[$CellContext`h, $CellContext`p] - 
            Sin[$CellContext`\[Theta]p] 
            Subscript[$CellContext`w, $CellContext`p] - 
            Subscript[$CellContext`y, 1] + 
            Subscript[$CellContext`y, $CellContext`p]]^2)^Rational[-1, 2] (
        Sin[$CellContext`\[Theta]p] Subscript[$CellContext`h, $CellContext`p] + 
        Cos[$CellContext`\[Theta]p] Subscript[$CellContext`w, $CellContext`p] + 
        Subscript[$CellContext`x, 1] - 
        Subscript[$CellContext`x, $CellContext`p]) + 
      Subscript[$CellContext`y, 1] + 
      Rational[9, 16] (
        Cos[$CellContext`\[Theta]p] Subscript[$CellContext`h, $CellContext`p] - 
        Sin[$CellContext`\[Theta]p] Subscript[$CellContext`w, $CellContext`p] - 
        Subscript[$CellContext`y, 1] + 
        Subscript[$CellContext`y, $CellContext`p])}, {
     0. + Subscript[$CellContext`x, 1] + 
      Rational[5, 8] (-Sin[$CellContext`\[Theta]p] 
         Subscript[$CellContext`h, $CellContext`p] - 
        Cos[$CellContext`\[Theta]p] Subscript[$CellContext`w, $CellContext`p] - 
        Subscript[$CellContext`x, 1] + 
        Subscript[$CellContext`x, $CellContext`p]), 0. + 
      Subscript[$CellContext`y, 1] + 
      Rational[5, 8] (
        Cos[$CellContext`\[Theta]p] Subscript[$CellContext`h, $CellContext`p] - 
        Sin[$CellContext`\[Theta]p] Subscript[$CellContext`w, $CellContext`p] - 
        Subscript[$CellContext`y, 1] + 
        Subscript[$CellContext`y, $CellContext`p])}, {
     Subscript[$CellContext`x, 1] + 
      Rational[11, 16] (-Sin[$CellContext`\[Theta]p] 
         Subscript[$CellContext`h, $CellContext`p] - 
        Cos[$CellContext`\[Theta]p] Subscript[$CellContext`w, $CellContext`p] - 
        Subscript[$CellContext`x, 1] + 
        Subscript[$CellContext`x, $CellContext`p]) + 
      0.3333333333333333 (
         Abs[-Sin[$CellContext`\[Theta]p] 
             Subscript[$CellContext`h, $CellContext`p] - 
            Cos[$CellContext`\[Theta]p] 
            Subscript[$CellContext`w, $CellContext`p] - 
            Subscript[$CellContext`x, 1] + 
            Subscript[$CellContext`x, $CellContext`p]]^2 + 
         Abs[Cos[$CellContext`\[Theta]p] 
             Subscript[$CellContext`h, $CellContext`p] - 
            Sin[$CellContext`\[Theta]p] 
            Subscript[$CellContext`w, $CellContext`p] - 
            Subscript[$CellContext`y, 1] + 
            Subscript[$CellContext`y, $CellContext`p]]^2)^Rational[-1, 2] (
        Cos[$CellContext`\[Theta]p] Subscript[$CellContext`h, $CellContext`p] - 
        Sin[$CellContext`\[Theta]p] Subscript[$CellContext`w, $CellContext`p] - 
        Subscript[$CellContext`y, 1] + 
        Subscript[$CellContext`y, $CellContext`p]), 
      0.3333333333333333 (
         Abs[-Sin[$CellContext`\[Theta]p] 
             Subscript[$CellContext`h, $CellContext`p] - 
            Cos[$CellContext`\[Theta]p] 
            Subscript[$CellContext`w, $CellContext`p] - 
            Subscript[$CellContext`x, 1] + 
            Subscript[$CellContext`x, $CellContext`p]]^2 + 
         Abs[Cos[$CellContext`\[Theta]p] 
             Subscript[$CellContext`h, $CellContext`p] - 
            Sin[$CellContext`\[Theta]p] 
            Subscript[$CellContext`w, $CellContext`p] - 
            Subscript[$CellContext`y, 1] + 
            Subscript[$CellContext`y, $CellContext`p]]^2)^Rational[-1, 2] (
        Sin[$CellContext`\[Theta]p] Subscript[$CellContext`h, $CellContext`p] + 
        Cos[$CellContext`\[Theta]p] Subscript[$CellContext`w, $CellContext`p] + 
        Subscript[$CellContext`x, 1] - 
        Subscript[$CellContext`x, $CellContext`p]) + 
      Subscript[$CellContext`y, 1] + 
      Rational[11, 16] (
        Cos[$CellContext`\[Theta]p] Subscript[$CellContext`h, $CellContext`p] - 
        Sin[$CellContext`\[Theta]p] Subscript[$CellContext`w, $CellContext`p] - 
        Subscript[$CellContext`y, 1] + 
        Subscript[$CellContext`y, $CellContext`p])}, {
     0. + Subscript[$CellContext`x, 1] + 
      Rational[3, 4] (-Sin[$CellContext`\[Theta]p] 
         Subscript[$CellContext`h, $CellContext`p] - 
        Cos[$CellContext`\[Theta]p] Subscript[$CellContext`w, $CellContext`p] - 
        Subscript[$CellContext`x, 1] + 
        Subscript[$CellContext`x, $CellContext`p]), 0. + 
      Subscript[$CellContext`y, 1] + 
      Rational[3, 4] (
        Cos[$CellContext`\[Theta]p] Subscript[$CellContext`h, $CellContext`p] - 
        Sin[$CellContext`\[Theta]p] Subscript[$CellContext`w, $CellContext`p] - 
        Subscript[$CellContext`y, 1] + 
        Subscript[$CellContext`y, $CellContext`p])}, {
     Subscript[$CellContext`x, 1] + 
      Rational[13, 16] (-Sin[$CellContext`\[Theta]p] 
         Subscript[$CellContext`h, $CellContext`p] - 
        Cos[$CellContext`\[Theta]p] Subscript[$CellContext`w, $CellContext`p] - 
        Subscript[$CellContext`x, 1] + 
        Subscript[$CellContext`x, $CellContext`p]) - 
      0.3333333333333333 (
        Abs[-Sin[$CellContext`\[Theta]p] 
            Subscript[$CellContext`h, $CellContext`p] - 
           Cos[$CellContext`\[Theta]p] 
           Subscript[$CellContext`w, $CellContext`p] - 
           Subscript[$CellContext`x, 1] + 
           Subscript[$CellContext`x, $CellContext`p]]^2 + 
        Abs[Cos[$CellContext`\[Theta]p] 
            Subscript[$CellContext`h, $CellContext`p] - 
           Sin[$CellContext`\[Theta]p] 
           Subscript[$CellContext`w, $CellContext`p] - 
           Subscript[$CellContext`y, 1] + 
           Subscript[$CellContext`y, $CellContext`p]]^2)^Rational[-1, 2] (
       Cos[$CellContext`\[Theta]p] Subscript[$CellContext`h, $CellContext`p] - 
       Sin[$CellContext`\[Theta]p] Subscript[$CellContext`w, $CellContext`p] - 
       Subscript[$CellContext`y, 1] + 
       Subscript[$CellContext`y, $CellContext`p]), (-0.3333333333333333) (
         Abs[-Sin[$CellContext`\[Theta]p] 
             Subscript[$CellContext`h, $CellContext`p] - 
            Cos[$CellContext`\[Theta]p] 
            Subscript[$CellContext`w, $CellContext`p] - 
            Subscript[$CellContext`x, 1] + 
            Subscript[$CellContext`x, $CellContext`p]]^2 + 
         Abs[Cos[$CellContext`\[Theta]p] 
             Subscript[$CellContext`h, $CellContext`p] - 
            Sin[$CellContext`\[Theta]p] 
            Subscript[$CellContext`w, $CellContext`p] - 
            Subscript[$CellContext`y, 1] + 
            Subscript[$CellContext`y, $CellContext`p]]^2)^Rational[-1, 2] (
        Sin[$CellContext`\[Theta]p] Subscript[$CellContext`h, $CellContext`p] + 
        Cos[$CellContext`\[Theta]p] Subscript[$CellContext`w, $CellContext`p] + 
        Subscript[$CellContext`x, 1] - 
        Subscript[$CellContext`x, $CellContext`p]) + 
      Subscript[$CellContext`y, 1] + 
      Rational[13, 16] (
        Cos[$CellContext`\[Theta]p] Subscript[$CellContext`h, $CellContext`p] - 
        Sin[$CellContext`\[Theta]p] Subscript[$CellContext`w, $CellContext`p] - 
        Subscript[$CellContext`y, 1] + 
        Subscript[$CellContext`y, $CellContext`p])}, {
     0. + Subscript[$CellContext`x, 1] + 
      Rational[7, 8] (-Sin[$CellContext`\[Theta]p] 
         Subscript[$CellContext`h, $CellContext`p] - 
        Cos[$CellContext`\[Theta]p] Subscript[$CellContext`w, $CellContext`p] - 
        Subscript[$CellContext`x, 1] + 
        Subscript[$CellContext`x, $CellContext`p]), 0. + 
      Subscript[$CellContext`y, 1] + 
      Rational[7, 8] (
        Cos[$CellContext`\[Theta]p] Subscript[$CellContext`h, $CellContext`p] - 
        Sin[$CellContext`\[Theta]p] Subscript[$CellContext`w, $CellContext`p] - 
        Subscript[$CellContext`y, 1] + 
        Subscript[$CellContext`y, $CellContext`p])}, {
     Subscript[$CellContext`x, 1] + 
      Rational[15, 16] (-Sin[$CellContext`\[Theta]p] 
         Subscript[$CellContext`h, $CellContext`p] - 
        Cos[$CellContext`\[Theta]p] Subscript[$CellContext`w, $CellContext`p] - 
        Subscript[$CellContext`x, 1] + 
        Subscript[$CellContext`x, $CellContext`p]) + 
      0.3333333333333333 (
         Abs[-Sin[$CellContext`\[Theta]p] 
             Subscript[$CellContext`h, $CellContext`p] - 
            Cos[$CellContext`\[Theta]p] 
            Subscript[$CellContext`w, $CellContext`p] - 
            Subscript[$CellContext`x, 1] + 
            Subscript[$CellContext`x, $CellContext`p]]^2 + 
         Abs[Cos[$CellContext`\[Theta]p] 
             Subscript[$CellContext`h, $CellContext`p] - 
            Sin[$CellContext`\[Theta]p] 
            Subscript[$CellContext`w, $CellContext`p] - 
            Subscript[$CellContext`y, 1] + 
            Subscript[$CellContext`y, $CellContext`p]]^2)^Rational[-1, 2] (
        Cos[$CellContext`\[Theta]p] Subscript[$CellContext`h, $CellContext`p] - 
        Sin[$CellContext`\[Theta]p] Subscript[$CellContext`w, $CellContext`p] - 
        Subscript[$CellContext`y, 1] + 
        Subscript[$CellContext`y, $CellContext`p]), 
      0.3333333333333333 (
         Abs[-Sin[$CellContext`\[Theta]p] 
             Subscript[$CellContext`h, $CellContext`p] - 
            Cos[$CellContext`\[Theta]p] 
            Subscript[$CellContext`w, $CellContext`p] - 
            Subscript[$CellContext`x, 1] + 
            Subscript[$CellContext`x, $CellContext`p]]^2 + 
         Abs[Cos[$CellContext`\[Theta]p] 
             Subscript[$CellContext`h, $CellContext`p] - 
            Sin[$CellContext`\[Theta]p] 
            Subscript[$CellContext`w, $CellContext`p] - 
            Subscript[$CellContext`y, 1] + 
            Subscript[$CellContext`y, $CellContext`p]]^2)^Rational[-1, 2] (
        Sin[$CellContext`\[Theta]p] Subscript[$CellContext`h, $CellContext`p] + 
        Cos[$CellContext`\[Theta]p] Subscript[$CellContext`w, $CellContext`p] + 
        Subscript[$CellContext`x, 1] - 
        Subscript[$CellContext`x, $CellContext`p]) + 
      Subscript[$CellContext`y, 1] + 
      Rational[15, 16] (
        Cos[$CellContext`\[Theta]p] Subscript[$CellContext`h, $CellContext`p] - 
        Sin[$CellContext`\[Theta]p] Subscript[$CellContext`w, $CellContext`p] - 
        Subscript[$CellContext`y, 1] + 
        Subscript[$CellContext`y, $CellContext`p])}, {
     0. - Sin[$CellContext`\[Theta]p] 
      Subscript[$CellContext`h, $CellContext`p] - Cos[$CellContext`\[Theta]p] 
      Subscript[$CellContext`w, $CellContext`p] + 
      Subscript[$CellContext`x, $CellContext`p], 0. + 
      Cos[$CellContext`\[Theta]p] Subscript[$CellContext`h, $CellContext`p] - 
      Sin[$CellContext`\[Theta]p] Subscript[$CellContext`w, $CellContext`p] + 
      Subscript[$CellContext`y, $CellContext`p]}}], 
   LineBox[{{Subscript[$CellContext`x, 2], Subscript[$CellContext`y, 2]}, {
     Subscript[$CellContext`x, 2] + 
      Rational[1, 16] (-Sin[$CellContext`\[Theta]p] 
         Subscript[$CellContext`h, $CellContext`p] + 
        Cos[$CellContext`\[Theta]p] Subscript[$CellContext`w, $CellContext`p] - 
        Subscript[$CellContext`x, 2] + 
        Subscript[$CellContext`x, $CellContext`p]) + 
      Rational[-1, 3] (
         Abs[-Sin[$CellContext`\[Theta]p] 
             Subscript[$CellContext`h, $CellContext`p] + 
            Cos[$CellContext`\[Theta]p] 
             Subscript[$CellContext`w, $CellContext`p] - 
            Subscript[$CellContext`x, 2] + 
            Subscript[$CellContext`x, $CellContext`p]]^2 + 
         Abs[Cos[$CellContext`\[Theta]p] 
             Subscript[$CellContext`h, $CellContext`p] + 
            Sin[$CellContext`\[Theta]p] 
             Subscript[$CellContext`w, $CellContext`p] - 
            Subscript[$CellContext`y, 2] + 
            Subscript[$CellContext`y, $CellContext`p]]^2)^Rational[-1, 2] (
        Cos[$CellContext`\[Theta]p] Subscript[$CellContext`h, $CellContext`p] + 
        Sin[$CellContext`\[Theta]p] Subscript[$CellContext`w, $CellContext`p] - 
        Subscript[$CellContext`y, 2] + 
        Subscript[$CellContext`y, $CellContext`p]), 
      Rational[-1, 3] (
         Abs[-Sin[$CellContext`\[Theta]p] 
             Subscript[$CellContext`h, $CellContext`p] + 
            Cos[$CellContext`\[Theta]p] 
             Subscript[$CellContext`w, $CellContext`p] - 
            Subscript[$CellContext`x, 2] + 
            Subscript[$CellContext`x, $CellContext`p]]^2 + 
         Abs[Cos[$CellContext`\[Theta]p] 
             Subscript[$CellContext`h, $CellContext`p] + 
            Sin[$CellContext`\[Theta]p] 
             Subscript[$CellContext`w, $CellContext`p] - 
            Subscript[$CellContext`y, 2] + 
            Subscript[$CellContext`y, $CellContext`p]]^2)^Rational[-1, 2] (
        Sin[$CellContext`\[Theta]p] Subscript[$CellContext`h, $CellContext`p] - 
        Cos[$CellContext`\[Theta]p] Subscript[$CellContext`w, $CellContext`p] + 
        Subscript[$CellContext`x, 2] - 
        Subscript[$CellContext`x, $CellContext`p]) + 
      Subscript[$CellContext`y, 2] + 
      Rational[1, 16] (
        Cos[$CellContext`\[Theta]p] Subscript[$CellContext`h, $CellContext`p] + 
        Sin[$CellContext`\[Theta]p] Subscript[$CellContext`w, $CellContext`p] - 
        Subscript[$CellContext`y, 2] + 
        Subscript[$CellContext`y, $CellContext`p])}, {
     Subscript[$CellContext`x, 2] + 
      Rational[1, 8] (-Sin[$CellContext`\[Theta]p] 
         Subscript[$CellContext`h, $CellContext`p] + 
        Cos[$CellContext`\[Theta]p] Subscript[$CellContext`w, $CellContext`p] - 
        Subscript[$CellContext`x, 2] + 
        Subscript[$CellContext`x, $CellContext`p]), 
      Subscript[$CellContext`y, 2] + 
      Rational[1, 8] (
        Cos[$CellContext`\[Theta]p] Subscript[$CellContext`h, $CellContext`p] + 
        Sin[$CellContext`\[Theta]p] Subscript[$CellContext`w, $CellContext`p] - 
        Subscript[$CellContext`y, 2] + 
        Subscript[$CellContext`y, $CellContext`p])}, {
     Subscript[$CellContext`x, 2] + 
      Rational[3, 16] (-Sin[$CellContext`\[Theta]p] 
         Subscript[$CellContext`h, $CellContext`p] + 
        Cos[$CellContext`\[Theta]p] Subscript[$CellContext`w, $CellContext`p] - 
        Subscript[$CellContext`x, 2] + 
        Subscript[$CellContext`x, $CellContext`p]) + 
      Rational[1, 3] (
         Abs[-Sin[$CellContext`\[Theta]p] 
             Subscript[$CellContext`h, $CellContext`p] + 
            Cos[$CellContext`\[Theta]p] 
             Subscript[$CellContext`w, $CellContext`p] - 
            Subscript[$CellContext`x, 2] + 
            Subscript[$CellContext`x, $CellContext`p]]^2 + 
         Abs[Cos[$CellContext`\[Theta]p] 
             Subscript[$CellContext`h, $CellContext`p] + 
            Sin[$CellContext`\[Theta]p] 
             Subscript[$CellContext`w, $CellContext`p] - 
            Subscript[$CellContext`y, 2] + 
            Subscript[$CellContext`y, $CellContext`p]]^2)^Rational[-1, 2] (
        Cos[$CellContext`\[Theta]p] Subscript[$CellContext`h, $CellContext`p] + 
        Sin[$CellContext`\[Theta]p] Subscript[$CellContext`w, $CellContext`p] - 
        Subscript[$CellContext`y, 2] + 
        Subscript[$CellContext`y, $CellContext`p]), 
      Rational[1, 3] (
         Abs[-Sin[$CellContext`\[Theta]p] 
             Subscript[$CellContext`h, $CellContext`p] + 
            Cos[$CellContext`\[Theta]p] 
             Subscript[$CellContext`w, $CellContext`p] - 
            Subscript[$CellContext`x, 2] + 
            Subscript[$CellContext`x, $CellContext`p]]^2 + 
         Abs[Cos[$CellContext`\[Theta]p] 
             Subscript[$CellContext`h, $CellContext`p] + 
            Sin[$CellContext`\[Theta]p] 
             Subscript[$CellContext`w, $CellContext`p] - 
            Subscript[$CellContext`y, 2] + 
            Subscript[$CellContext`y, $CellContext`p]]^2)^Rational[-1, 2] (
        Sin[$CellContext`\[Theta]p] Subscript[$CellContext`h, $CellContext`p] - 
        Cos[$CellContext`\[Theta]p] Subscript[$CellContext`w, $CellContext`p] + 
        Subscript[$CellContext`x, 2] - 
        Subscript[$CellContext`x, $CellContext`p]) + 
      Subscript[$CellContext`y, 2] + 
      Rational[3, 16] (
        Cos[$CellContext`\[Theta]p] Subscript[$CellContext`h, $CellContext`p] + 
        Sin[$CellContext`\[Theta]p] Subscript[$CellContext`w, $CellContext`p] - 
        Subscript[$CellContext`y, 2] + 
        Subscript[$CellContext`y, $CellContext`p])}, {
     Subscript[$CellContext`x, 2] + 
      Rational[1, 4] (-Sin[$CellContext`\[Theta]p] 
         Subscript[$CellContext`h, $CellContext`p] + 
        Cos[$CellContext`\[Theta]p] Subscript[$CellContext`w, $CellContext`p] - 
        Subscript[$CellContext`x, 2] + 
        Subscript[$CellContext`x, $CellContext`p]), 
      Subscript[$CellContext`y, 2] + 
      Rational[1, 4] (
        Cos[$CellContext`\[Theta]p] Subscript[$CellContext`h, $CellContext`p] + 
        Sin[$CellContext`\[Theta]p] Subscript[$CellContext`w, $CellContext`p] - 
        Subscript[$CellContext`y, 2] + 
        Subscript[$CellContext`y, $CellContext`p])}, {
     Subscript[$CellContext`x, 2] + 
      Rational[5, 16] (-Sin[$CellContext`\[Theta]p] 
         Subscript[$CellContext`h, $CellContext`p] + 
        Cos[$CellContext`\[Theta]p] Subscript[$CellContext`w, $CellContext`p] - 
        Subscript[$CellContext`x, 2] + 
        Subscript[$CellContext`x, $CellContext`p]) + 
      Rational[-1, 3] (
         Abs[-Sin[$CellContext`\[Theta]p] 
             Subscript[$CellContext`h, $CellContext`p] + 
            Cos[$CellContext`\[Theta]p] 
             Subscript[$CellContext`w, $CellContext`p] - 
            Subscript[$CellContext`x, 2] + 
            Subscript[$CellContext`x, $CellContext`p]]^2 + 
         Abs[Cos[$CellContext`\[Theta]p] 
             Subscript[$CellContext`h, $CellContext`p] + 
            Sin[$CellContext`\[Theta]p] 
             Subscript[$CellContext`w, $CellContext`p] - 
            Subscript[$CellContext`y, 2] + 
            Subscript[$CellContext`y, $CellContext`p]]^2)^Rational[-1, 2] (
        Cos[$CellContext`\[Theta]p] Subscript[$CellContext`h, $CellContext`p] + 
        Sin[$CellContext`\[Theta]p] Subscript[$CellContext`w, $CellContext`p] - 
        Subscript[$CellContext`y, 2] + 
        Subscript[$CellContext`y, $CellContext`p]), 
      Rational[-1, 3] (
         Abs[-Sin[$CellContext`\[Theta]p] 
             Subscript[$CellContext`h, $CellContext`p] + 
            Cos[$CellContext`\[Theta]p] 
             Subscript[$CellContext`w, $CellContext`p] - 
            Subscript[$CellContext`x, 2] + 
            Subscript[$CellContext`x, $CellContext`p]]^2 + 
         Abs[Cos[$CellContext`\[Theta]p] 
             Subscript[$CellContext`h, $CellContext`p] + 
            Sin[$CellContext`\[Theta]p] 
             Subscript[$CellContext`w, $CellContext`p] - 
            Subscript[$CellContext`y, 2] + 
            Subscript[$CellContext`y, $CellContext`p]]^2)^Rational[-1, 2] (
        Sin[$CellContext`\[Theta]p] Subscript[$CellContext`h, $CellContext`p] - 
        Cos[$CellContext`\[Theta]p] Subscript[$CellContext`w, $CellContext`p] + 
        Subscript[$CellContext`x, 2] - 
        Subscript[$CellContext`x, $CellContext`p]) + 
      Subscript[$CellContext`y, 2] + 
      Rational[5, 16] (
        Cos[$CellContext`\[Theta]p] Subscript[$CellContext`h, $CellContext`p] + 
        Sin[$CellContext`\[Theta]p] Subscript[$CellContext`w, $CellContext`p] - 
        Subscript[$CellContext`y, 2] + 
        Subscript[$CellContext`y, $CellContext`p])}, {
     Subscript[$CellContext`x, 2] + 
      Rational[3, 8] (-Sin[$CellContext`\[Theta]p] 
         Subscript[$CellContext`h, $CellContext`p] + 
        Cos[$CellContext`\[Theta]p] Subscript[$CellContext`w, $CellContext`p] - 
        Subscript[$CellContext`x, 2] + 
        Subscript[$CellContext`x, $CellContext`p]), 
      Subscript[$CellContext`y, 2] + 
      Rational[3, 8] (
        Cos[$CellContext`\[Theta]p] Subscript[$CellContext`h, $CellContext`p] + 
        Sin[$CellContext`\[Theta]p] Subscript[$CellContext`w, $CellContext`p] - 
        Subscript[$CellContext`y, 2] + 
        Subscript[$CellContext`y, $CellContext`p])}, {
     Subscript[$CellContext`x, 2] + 
      Rational[7, 16] (-Sin[$CellContext`\[Theta]p] 
         Subscript[$CellContext`h, $CellContext`p] + 
        Cos[$CellContext`\[Theta]p] Subscript[$CellContext`w, $CellContext`p] - 
        Subscript[$CellContext`x, 2] + 
        Subscript[$CellContext`x, $CellContext`p]) + 
      Rational[1, 3] (
         Abs[-Sin[$CellContext`\[Theta]p] 
             Subscript[$CellContext`h, $CellContext`p] + 
            Cos[$CellContext`\[Theta]p] 
             Subscript[$CellContext`w, $CellContext`p] - 
            Subscript[$CellContext`x, 2] + 
            Subscript[$CellContext`x, $CellContext`p]]^2 + 
         Abs[Cos[$CellContext`\[Theta]p] 
             Subscript[$CellContext`h, $CellContext`p] + 
            Sin[$CellContext`\[Theta]p] 
             Subscript[$CellContext`w, $CellContext`p] - 
            Subscript[$CellContext`y, 2] + 
            Subscript[$CellContext`y, $CellContext`p]]^2)^Rational[-1, 2] (
        Cos[$CellContext`\[Theta]p] Subscript[$CellContext`h, $CellContext`p] + 
        Sin[$CellContext`\[Theta]p] Subscript[$CellContext`w, $CellContext`p] - 
        Subscript[$CellContext`y, 2] + 
        Subscript[$CellContext`y, $CellContext`p]), 
      Rational[1, 3] (
         Abs[-Sin[$CellContext`\[Theta]p] 
             Subscript[$CellContext`h, $CellContext`p] + 
            Cos[$CellContext`\[Theta]p] 
             Subscript[$CellContext`w, $CellContext`p] - 
            Subscript[$CellContext`x, 2] + 
            Subscript[$CellContext`x, $CellContext`p]]^2 + 
         Abs[Cos[$CellContext`\[Theta]p] 
             Subscript[$CellContext`h, $CellContext`p] + 
            Sin[$CellContext`\[Theta]p] 
             Subscript[$CellContext`w, $CellContext`p] - 
            Subscript[$CellContext`y, 2] + 
            Subscript[$CellContext`y, $CellContext`p]]^2)^Rational[-1, 2] (
        Sin[$CellContext`\[Theta]p] Subscript[$CellContext`h, $CellContext`p] - 
        Cos[$CellContext`\[Theta]p] Subscript[$CellContext`w, $CellContext`p] + 
        Subscript[$CellContext`x, 2] - 
        Subscript[$CellContext`x, $CellContext`p]) + 
      Subscript[$CellContext`y, 2] + 
      Rational[7, 16] (
        Cos[$CellContext`\[Theta]p] Subscript[$CellContext`h, $CellContext`p] + 
        Sin[$CellContext`\[Theta]p] Subscript[$CellContext`w, $CellContext`p] - 
        Subscript[$CellContext`y, 2] + 
        Subscript[$CellContext`y, $CellContext`p])}, {
     Subscript[$CellContext`x, 2] + 
      Rational[1, 2] (-Sin[$CellContext`\[Theta]p] 
         Subscript[$CellContext`h, $CellContext`p] + 
        Cos[$CellContext`\[Theta]p] Subscript[$CellContext`w, $CellContext`p] - 
        Subscript[$CellContext`x, 2] + 
        Subscript[$CellContext`x, $CellContext`p]), 
      Subscript[$CellContext`y, 2] + 
      Rational[1, 2] (
        Cos[$CellContext`\[Theta]p] Subscript[$CellContext`h, $CellContext`p] + 
        Sin[$CellContext`\[Theta]p] Subscript[$CellContext`w, $CellContext`p] - 
        Subscript[$CellContext`y, 2] + 
        Subscript[$CellContext`y, $CellContext`p])}, {
     Subscript[$CellContext`x, 2] + 
      Rational[9, 16] (-Sin[$CellContext`\[Theta]p] 
         Subscript[$CellContext`h, $CellContext`p] + 
        Cos[$CellContext`\[Theta]p] Subscript[$CellContext`w, $CellContext`p] - 
        Subscript[$CellContext`x, 2] + 
        Subscript[$CellContext`x, $CellContext`p]) + 
      Rational[-1, 3] (
         Abs[-Sin[$CellContext`\[Theta]p] 
             Subscript[$CellContext`h, $CellContext`p] + 
            Cos[$CellContext`\[Theta]p] 
             Subscript[$CellContext`w, $CellContext`p] - 
            Subscript[$CellContext`x, 2] + 
            Subscript[$CellContext`x, $CellContext`p]]^2 + 
         Abs[Cos[$CellContext`\[Theta]p] 
             Subscript[$CellContext`h, $CellContext`p] + 
            Sin[$CellContext`\[Theta]p] 
             Subscript[$CellContext`w, $CellContext`p] - 
            Subscript[$CellContext`y, 2] + 
            Subscript[$CellContext`y, $CellContext`p]]^2)^Rational[-1, 2] (
        Cos[$CellContext`\[Theta]p] Subscript[$CellContext`h, $CellContext`p] + 
        Sin[$CellContext`\[Theta]p] Subscript[$CellContext`w, $CellContext`p] - 
        Subscript[$CellContext`y, 2] + 
        Subscript[$CellContext`y, $CellContext`p]), 
      Rational[-1, 3] (
         Abs[-Sin[$CellContext`\[Theta]p] 
             Subscript[$CellContext`h, $CellContext`p] + 
            Cos[$CellContext`\[Theta]p] 
             Subscript[$CellContext`w, $CellContext`p] - 
            Subscript[$CellContext`x, 2] + 
            Subscript[$CellContext`x, $CellContext`p]]^2 + 
         Abs[Cos[$CellContext`\[Theta]p] 
             Subscript[$CellContext`h, $CellContext`p] + 
            Sin[$CellContext`\[Theta]p] 
             Subscript[$CellContext`w, $CellContext`p] - 
            Subscript[$CellContext`y, 2] + 
            Subscript[$CellContext`y, $CellContext`p]]^2)^Rational[-1, 2] (
        Sin[$CellContext`\[Theta]p] Subscript[$CellContext`h, $CellContext`p] - 
        Cos[$CellContext`\[Theta]p] Subscript[$CellContext`w, $CellContext`p] + 
        Subscript[$CellContext`x, 2] - 
        Subscript[$CellContext`x, $CellContext`p]) + 
      Subscript[$CellContext`y, 2] + 
      Rational[9, 16] (
        Cos[$CellContext`\[Theta]p] Subscript[$CellContext`h, $CellContext`p] + 
        Sin[$CellContext`\[Theta]p] Subscript[$CellContext`w, $CellContext`p] - 
        Subscript[$CellContext`y, 2] + 
        Subscript[$CellContext`y, $CellContext`p])}, {
     Subscript[$CellContext`x, 2] + 
      Rational[5, 8] (-Sin[$CellContext`\[Theta]p] 
         Subscript[$CellContext`h, $CellContext`p] + 
        Cos[$CellContext`\[Theta]p] Subscript[$CellContext`w, $CellContext`p] - 
        Subscript[$CellContext`x, 2] + 
        Subscript[$CellContext`x, $CellContext`p]), 
      Subscript[$CellContext`y, 2] + 
      Rational[5, 8] (
        Cos[$CellContext`\[Theta]p] Subscript[$CellContext`h, $CellContext`p] + 
        Sin[$CellContext`\[Theta]p] Subscript[$CellContext`w, $CellContext`p] - 
        Subscript[$CellContext`y, 2] + 
        Subscript[$CellContext`y, $CellContext`p])}, {
     Subscript[$CellContext`x, 2] + 
      Rational[11, 16] (-Sin[$CellContext`\[Theta]p] 
         Subscript[$CellContext`h, $CellContext`p] + 
        Cos[$CellContext`\[Theta]p] Subscript[$CellContext`w, $CellContext`p] - 
        Subscript[$CellContext`x, 2] + 
        Subscript[$CellContext`x, $CellContext`p]) + 
      Rational[1, 3] (
         Abs[-Sin[$CellContext`\[Theta]p] 
             Subscript[$CellContext`h, $CellContext`p] + 
            Cos[$CellContext`\[Theta]p] 
             Subscript[$CellContext`w, $CellContext`p] - 
            Subscript[$CellContext`x, 2] + 
            Subscript[$CellContext`x, $CellContext`p]]^2 + 
         Abs[Cos[$CellContext`\[Theta]p] 
             Subscript[$CellContext`h, $CellContext`p] + 
            Sin[$CellContext`\[Theta]p] 
             Subscript[$CellContext`w, $CellContext`p] - 
            Subscript[$CellContext`y, 2] + 
            Subscript[$CellContext`y, $CellContext`p]]^2)^Rational[-1, 2] (
        Cos[$CellContext`\[Theta]p] Subscript[$CellContext`h, $CellContext`p] + 
        Sin[$CellContext`\[Theta]p] Subscript[$CellContext`w, $CellContext`p] - 
        Subscript[$CellContext`y, 2] + 
        Subscript[$CellContext`y, $CellContext`p]), 
      Rational[1, 3] (
         Abs[-Sin[$CellContext`\[Theta]p] 
             Subscript[$CellContext`h, $CellContext`p] + 
            Cos[$CellContext`\[Theta]p] 
             Subscript[$CellContext`w, $CellContext`p] - 
            Subscript[$CellContext`x, 2] + 
            Subscript[$CellContext`x, $CellContext`p]]^2 + 
         Abs[Cos[$CellContext`\[Theta]p] 
             Subscript[$CellContext`h, $CellContext`p] + 
            Sin[$CellContext`\[Theta]p] 
             Subscript[$CellContext`w, $CellContext`p] - 
            Subscript[$CellContext`y, 2] + 
            Subscript[$CellContext`y, $CellContext`p]]^2)^Rational[-1, 2] (
        Sin[$CellContext`\[Theta]p] Subscript[$CellContext`h, $CellContext`p] - 
        Cos[$CellContext`\[Theta]p] Subscript[$CellContext`w, $CellContext`p] + 
        Subscript[$CellContext`x, 2] - 
        Subscript[$CellContext`x, $CellContext`p]) + 
      Subscript[$CellContext`y, 2] + 
      Rational[11, 16] (
        Cos[$CellContext`\[Theta]p] Subscript[$CellContext`h, $CellContext`p] + 
        Sin[$CellContext`\[Theta]p] Subscript[$CellContext`w, $CellContext`p] - 
        Subscript[$CellContext`y, 2] + 
        Subscript[$CellContext`y, $CellContext`p])}, {
     Subscript[$CellContext`x, 2] + 
      Rational[3, 4] (-Sin[$CellContext`\[Theta]p] 
         Subscript[$CellContext`h, $CellContext`p] + 
        Cos[$CellContext`\[Theta]p] Subscript[$CellContext`w, $CellContext`p] - 
        Subscript[$CellContext`x, 2] + 
        Subscript[$CellContext`x, $CellContext`p]), 
      Subscript[$CellContext`y, 2] + 
      Rational[3, 4] (
        Cos[$CellContext`\[Theta]p] Subscript[$CellContext`h, $CellContext`p] + 
        Sin[$CellContext`\[Theta]p] Subscript[$CellContext`w, $CellContext`p] - 
        Subscript[$CellContext`y, 2] + 
        Subscript[$CellContext`y, $CellContext`p])}, {
     Subscript[$CellContext`x, 2] + 
      Rational[13, 16] (-Sin[$CellContext`\[Theta]p] 
         Subscript[$CellContext`h, $CellContext`p] + 
        Cos[$CellContext`\[Theta]p] Subscript[$CellContext`w, $CellContext`p] - 
        Subscript[$CellContext`x, 2] + 
        Subscript[$CellContext`x, $CellContext`p]) + 
      Rational[-1, 3] (
         Abs[-Sin[$CellContext`\[Theta]p] 
             Subscript[$CellContext`h, $CellContext`p] + 
            Cos[$CellContext`\[Theta]p] 
             Subscript[$CellContext`w, $CellContext`p] - 
            Subscript[$CellContext`x, 2] + 
            Subscript[$CellContext`x, $CellContext`p]]^2 + 
         Abs[Cos[$CellContext`\[Theta]p] 
             Subscript[$CellContext`h, $CellContext`p] + 
            Sin[$CellContext`\[Theta]p] 
             Subscript[$CellContext`w, $CellContext`p] - 
            Subscript[$CellContext`y, 2] + 
            Subscript[$CellContext`y, $CellContext`p]]^2)^Rational[-1, 2] (
        Cos[$CellContext`\[Theta]p] Subscript[$CellContext`h, $CellContext`p] + 
        Sin[$CellContext`\[Theta]p] Subscript[$CellContext`w, $CellContext`p] - 
        Subscript[$CellContext`y, 2] + 
        Subscript[$CellContext`y, $CellContext`p]), 
      Rational[-1, 3] (
         Abs[-Sin[$CellContext`\[Theta]p] 
             Subscript[$CellContext`h, $CellContext`p] + 
            Cos[$CellContext`\[Theta]p] 
             Subscript[$CellContext`w, $CellContext`p] - 
            Subscript[$CellContext`x, 2] + 
            Subscript[$CellContext`x, $CellContext`p]]^2 + 
         Abs[Cos[$CellContext`\[Theta]p] 
             Subscript[$CellContext`h, $CellContext`p] + 
            Sin[$CellContext`\[Theta]p] 
             Subscript[$CellContext`w, $CellContext`p] - 
            Subscript[$CellContext`y, 2] + 
            Subscript[$CellContext`y, $CellContext`p]]^2)^Rational[-1, 2] (
        Sin[$CellContext`\[Theta]p] Subscript[$CellContext`h, $CellContext`p] - 
        Cos[$CellContext`\[Theta]p] Subscript[$CellContext`w, $CellContext`p] + 
        Subscript[$CellContext`x, 2] - 
        Subscript[$CellContext`x, $CellContext`p]) + 
      Subscript[$CellContext`y, 2] + 
      Rational[13, 16] (
        Cos[$CellContext`\[Theta]p] Subscript[$CellContext`h, $CellContext`p] + 
        Sin[$CellContext`\[Theta]p] Subscript[$CellContext`w, $CellContext`p] - 
        Subscript[$CellContext`y, 2] + 
        Subscript[$CellContext`y, $CellContext`p])}, {
     Subscript[$CellContext`x, 2] + 
      Rational[7, 8] (-Sin[$CellContext`\[Theta]p] 
         Subscript[$CellContext`h, $CellContext`p] + 
        Cos[$CellContext`\[Theta]p] Subscript[$CellContext`w, $CellContext`p] - 
        Subscript[$CellContext`x, 2] + 
        Subscript[$CellContext`x, $CellContext`p]), 
      Subscript[$CellContext`y, 2] + 
      Rational[7, 8] (
        Cos[$CellContext`\[Theta]p] Subscript[$CellContext`h, $CellContext`p] + 
        Sin[$CellContext`\[Theta]p] Subscript[$CellContext`w, $CellContext`p] - 
        Subscript[$CellContext`y, 2] + 
        Subscript[$CellContext`y, $CellContext`p])}, {
     Subscript[$CellContext`x, 2] + 
      Rational[15, 16] (-Sin[$CellContext`\[Theta]p] 
         Subscript[$CellContext`h, $CellContext`p] + 
        Cos[$CellContext`\[Theta]p] Subscript[$CellContext`w, $CellContext`p] - 
        Subscript[$CellContext`x, 2] + 
        Subscript[$CellContext`x, $CellContext`p]) + 
      Rational[1, 3] (
         Abs[-Sin[$CellContext`\[Theta]p] 
             Subscript[$CellContext`h, $CellContext`p] + 
            Cos[$CellContext`\[Theta]p] 
             Subscript[$CellContext`w, $CellContext`p] - 
            Subscript[$CellContext`x, 2] + 
            Subscript[$CellContext`x, $CellContext`p]]^2 + 
         Abs[Cos[$CellContext`\[Theta]p] 
             Subscript[$CellContext`h, $CellContext`p] + 
            Sin[$CellContext`\[Theta]p] 
             Subscript[$CellContext`w, $CellContext`p] - 
            Subscript[$CellContext`y, 2] + 
            Subscript[$CellContext`y, $CellContext`p]]^2)^Rational[-1, 2] (
        Cos[$CellContext`\[Theta]p] Subscript[$CellContext`h, $CellContext`p] + 
        Sin[$CellContext`\[Theta]p] Subscript[$CellContext`w, $CellContext`p] - 
        Subscript[$CellContext`y, 2] + 
        Subscript[$CellContext`y, $CellContext`p]), 
      Rational[1, 3] (
         Abs[-Sin[$CellContext`\[Theta]p] 
             Subscript[$CellContext`h, $CellContext`p] + 
            Cos[$CellContext`\[Theta]p] 
             Subscript[$CellContext`w, $CellContext`p] - 
            Subscript[$CellContext`x, 2] + 
            Subscript[$CellContext`x, $CellContext`p]]^2 + 
         Abs[Cos[$CellContext`\[Theta]p] 
             Subscript[$CellContext`h, $CellContext`p] + 
            Sin[$CellContext`\[Theta]p] 
             Subscript[$CellContext`w, $CellContext`p] - 
            Subscript[$CellContext`y, 2] + 
            Subscript[$CellContext`y, $CellContext`p]]^2)^Rational[-1, 2] (
        Sin[$CellContext`\[Theta]p] Subscript[$CellContext`h, $CellContext`p] - 
        Cos[$CellContext`\[Theta]p] Subscript[$CellContext`w, $CellContext`p] + 
        Subscript[$CellContext`x, 2] - 
        Subscript[$CellContext`x, $CellContext`p]) + 
      Subscript[$CellContext`y, 2] + 
      Rational[15, 16] (
        Cos[$CellContext`\[Theta]p] Subscript[$CellContext`h, $CellContext`p] + 
        Sin[$CellContext`\[Theta]p] Subscript[$CellContext`w, $CellContext`p] - 
        Subscript[$CellContext`y, 2] + 
        Subscript[$CellContext`y, $CellContext`p])}, {-
       Sin[$CellContext`\[Theta]p] Subscript[$CellContext`h, $CellContext`p] + 
      Cos[$CellContext`\[Theta]p] Subscript[$CellContext`w, $CellContext`p] + 
      Subscript[$CellContext`x, $CellContext`p], 
      Cos[$CellContext`\[Theta]p] Subscript[$CellContext`h, $CellContext`p] + 
      Sin[$CellContext`\[Theta]p] Subscript[$CellContext`w, $CellContext`p] + 
      Subscript[$CellContext`y, $CellContext`p]}}], Rotate[
    Rectangle[{-Subscript[$CellContext`w, $CellContext`p] + 
      Subscript[$CellContext`x, $CellContext`p], -
       Subscript[$CellContext`h, $CellContext`p] + 
      Subscript[$CellContext`y, $CellContext`p]}, {
     Subscript[$CellContext`w, $CellContext`p] + 
      Subscript[$CellContext`x, $CellContext`p], 
      Subscript[$CellContext`h, $CellContext`p] + 
      Subscript[$CellContext`y, $CellContext`p]}], \
$CellContext`\[Theta]p]}]], "Output",
 CellChangeTimes->{3.7153621801772532`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"Clear", "[", "a", "]"}]], "Input",
 CellChangeTimes->{{3.7153622581590433`*^9, 3.715362260131352*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"dispNoTime", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"a_", "[", "t", "]"}], "\[Rule]", "a"}], "}"}]}], ";", 
  RowBox[{"(*", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"EOM", "/.", "dispNoTime"}], "/.", "greekTermsSymetricCase"}], "//",
      "Flatten"}], 
    RowBox[{"(*", 
     RowBox[{"//", "MatrixForm"}], "*)"}], 
    RowBox[{"(*", 
     RowBox[{"//", "TraditionalForm"}], "*)"}], ";", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"EOM", "/.", "dispNoTime"}], "/.", "greekTermsSymetricCase"}], 
      "//", "Flatten"}], 
     RowBox[{"(*", 
      RowBox[{"//", "MatrixForm"}], "*)"}], "//", "TraditionalForm"}]}], 
   "*)"}]}]], "Input",
 CellChangeTimes->{{3.714453761395191*^9, 3.714453846304103*^9}, {
   3.714453912086727*^9, 3.7144539729422607`*^9}, {3.714454024995744*^9, 
   3.7144540588455534`*^9}, {3.714487575151579*^9, 3.71448758735921*^9}, {
   3.7144876801904917`*^9, 3.714487682898553*^9}, {3.7149050523712597`*^9, 
   3.714905067243412*^9}, {3.7149051048245344`*^9, 3.714905258218185*^9}, 
   3.7151943627017345`*^9, {3.7151944189339933`*^9, 3.715194432265826*^9}, 
   3.71521650562212*^9, 3.715217024512539*^9}],

Cell[" ", "Text",
 Editable->False,
 Selectable->False,
 CellFrame->{{0, 0}, {0, 0.5}},
 ShowCellBracket->False,
 CellMargins->{{0, 0}, {1, 1}},
 CellElementSpacings->{"CellMinHeight"->1},
 CellFrameMargins->0,
 CellFrameColor->RGBColor[0, 0, 1],
 CellSize->{Inherited, 3}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"numerics", "=", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       SubscriptBox["h", "p"], "\[Rule]", "0.1"}], ",", 
      RowBox[{
       SubscriptBox["w", "p"], "\[Rule]", "1"}], ",", 
      RowBox[{
       RowBox[{
        SubscriptBox["x", "1"], "[", "t", "]"}], "\[Rule]", "0"}], ",", 
      RowBox[{
       RowBox[{
        SubscriptBox["y", "1"], "[", "t", "]"}], "\[Rule]", "0"}], ",", 
      RowBox[{
       RowBox[{
        SubscriptBox["x", "2"], "[", "t", "]"}], "\[Rule]", 
       RowBox[{"2", 
        SubscriptBox["w", "p"]}]}], ",", 
      RowBox[{
       RowBox[{
        SubscriptBox["y", "2"], "[", "t", "]"}], "\[Rule]", "0"}], ",", 
      RowBox[{"\[Alpha]", "\[Rule]", "0.04"}], ",", 
      RowBox[{"\[Gamma]", "\[Rule]", "2"}]}], "}"}]}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"EOM", "//.", "greekTermsSymetricCase"}], "//.", "numerics"}], "//",
      "Flatten"}], "//", "TraditionalForm"}], "*)"}]}]], "Input",
 CellChangeTimes->{{3.714905364664805*^9, 3.7149054956350822`*^9}, {
  3.714905529255147*^9, 3.7149055385953455`*^9}, {3.7151943222139096`*^9, 
  3.7151943267088933`*^9}, {3.7152167791334095`*^9, 3.715216783337503*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    SubscriptBox["h", "p"], "\[Rule]", "0.1`"}], ",", 
   RowBox[{
    SubscriptBox["w", "p"], "\[Rule]", "1"}], ",", 
   RowBox[{
    RowBox[{
     SubscriptBox["x", "1"], "[", "t", "]"}], "\[Rule]", "0"}], ",", 
   RowBox[{
    RowBox[{
     SubscriptBox["y", "1"], "[", "t", "]"}], "\[Rule]", "0"}], ",", 
   RowBox[{
    RowBox[{
     SubscriptBox["x", "2"], "[", "t", "]"}], "\[Rule]", 
    RowBox[{"2", " ", 
     SubscriptBox["w", "p"]}]}], ",", 
   RowBox[{
    RowBox[{
     SubscriptBox["y", "2"], "[", "t", "]"}], "\[Rule]", "0"}], ",", 
   RowBox[{"\[Alpha]", "\[Rule]", "0.04`"}], ",", 
   RowBox[{"\[Gamma]", "\[Rule]", "2"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.714905378777268*^9, 3.7149054040869217`*^9}, 
   3.714905437488462*^9, {3.714905471967207*^9, 3.714905497271117*^9}, 
   3.714905539307361*^9, 3.7151964776217465`*^9}],

Cell[BoxData[
 FormBox[
  RowBox[{
   RowBox[{"(", "\[NoBreak]", GridBox[{
      {
       RowBox[{
        SuperscriptBox[
         SubscriptBox["x", "p"], "\[Prime]\[Prime]",
         MultilineFunction->None], "(", "t", ")"}]},
      {
       RowBox[{
        SuperscriptBox[
         SubscriptBox["y", "p"], "\[Prime]\[Prime]",
         MultilineFunction->None], "(", "t", ")"}]},
      {
       RowBox[{
        SuperscriptBox[
         SubscriptBox["\[Theta]", "p"], "\[Prime]\[Prime]",
         MultilineFunction->None], "(", "t", ")"}]}
     },
     GridBoxAlignment->{
      "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}},
        "RowsIndexed" -> {}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.7]}, 
         Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
         Offset[0.2], {
          Offset[0.4]}, 
         Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}], 
   "\[LongEqual]", 
   RowBox[{"(", "\[NoBreak]", GridBox[{
      {
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", 
            RowBox[{"cos", "(", 
             RowBox[{
              SubscriptBox["\[Theta]", "p"], "(", "t", ")"}], ")"}]}], "+", 
           RowBox[{"0.1`", " ", 
            RowBox[{"sin", "(", 
             RowBox[{
              SubscriptBox["\[Theta]", "p"], "(", "t", ")"}], ")"}]}], "-", 
           RowBox[{
            SubscriptBox["x", "p"], "(", "t", ")"}], "+", "2"}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{"1", "-", 
           FractionBox["1", 
            SqrtBox[
             RowBox[{
              SuperscriptBox[
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", 
                  RowBox[{"cos", "(", 
                   RowBox[{
                    SubscriptBox["\[Theta]", "p"], "(", "t", ")"}], ")"}]}], 
                 "+", 
                 RowBox[{"0.1`", " ", 
                  RowBox[{"sin", "(", 
                   RowBox[{
                    SubscriptBox["\[Theta]", "p"], "(", "t", ")"}], ")"}]}], 
                 "-", 
                 RowBox[{
                  SubscriptBox["x", "p"], "(", "t", ")"}], "+", "2"}], ")"}], 
               "2"], "+", 
              SuperscriptBox[
               RowBox[{"(", 
                RowBox[{
                 RowBox[{
                  RowBox[{"-", "0.1`"}], " ", 
                  RowBox[{"cos", "(", 
                   RowBox[{
                    SubscriptBox["\[Theta]", "p"], "(", "t", ")"}], ")"}]}], 
                 "-", 
                 RowBox[{"sin", "(", 
                  RowBox[{
                   SubscriptBox["\[Theta]", "p"], "(", "t", ")"}], ")"}], "-", 
                 RowBox[{
                  SubscriptBox["y", "p"], "(", "t", ")"}]}], ")"}], 
               "2"]}]]]}], ")"}]}], "+", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"cos", "(", 
            RowBox[{
             SubscriptBox["\[Theta]", "p"], "(", "t", ")"}], ")"}], "+", 
           RowBox[{"0.1`", " ", 
            RowBox[{"sin", "(", 
             RowBox[{
              SubscriptBox["\[Theta]", "p"], "(", "t", ")"}], ")"}]}], "-", 
           RowBox[{
            SubscriptBox["x", "p"], "(", "t", ")"}]}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{"1", "-", 
           FractionBox["1", 
            SqrtBox[
             RowBox[{
              SuperscriptBox[
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"cos", "(", 
                  RowBox[{
                   SubscriptBox["\[Theta]", "p"], "(", "t", ")"}], ")"}], "+", 
                 RowBox[{"0.1`", " ", 
                  RowBox[{"sin", "(", 
                   RowBox[{
                    SubscriptBox["\[Theta]", "p"], "(", "t", ")"}], ")"}]}], 
                 "-", 
                 RowBox[{
                  SubscriptBox["x", "p"], "(", "t", ")"}]}], ")"}], "2"], "+", 
              SuperscriptBox[
               RowBox[{"(", 
                RowBox[{
                 RowBox[{
                  RowBox[{"-", "0.1`"}], " ", 
                  RowBox[{"cos", "(", 
                   RowBox[{
                    SubscriptBox["\[Theta]", "p"], "(", "t", ")"}], ")"}]}], 
                 "+", 
                 RowBox[{"sin", "(", 
                  RowBox[{
                   SubscriptBox["\[Theta]", "p"], "(", "t", ")"}], ")"}], "-", 
                 RowBox[{
                  SubscriptBox["y", "p"], "(", "t", ")"}]}], ")"}], 
               "2"]}]]]}], ")"}]}]}]},
      {
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{"1", "-", 
           FractionBox["1", 
            SqrtBox[
             RowBox[{
              SuperscriptBox[
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", 
                  RowBox[{"cos", "(", 
                   RowBox[{
                    SubscriptBox["\[Theta]", "p"], "(", "t", ")"}], ")"}]}], 
                 "+", 
                 RowBox[{"0.1`", " ", 
                  RowBox[{"sin", "(", 
                   RowBox[{
                    SubscriptBox["\[Theta]", "p"], "(", "t", ")"}], ")"}]}], 
                 "-", 
                 RowBox[{
                  SubscriptBox["x", "p"], "(", "t", ")"}], "+", "2"}], ")"}], 
               "2"], "+", 
              SuperscriptBox[
               RowBox[{"(", 
                RowBox[{
                 RowBox[{
                  RowBox[{"-", "0.1`"}], " ", 
                  RowBox[{"cos", "(", 
                   RowBox[{
                    SubscriptBox["\[Theta]", "p"], "(", "t", ")"}], ")"}]}], 
                 "-", 
                 RowBox[{"sin", "(", 
                  RowBox[{
                   SubscriptBox["\[Theta]", "p"], "(", "t", ")"}], ")"}], "-", 
                 RowBox[{
                  SubscriptBox["y", "p"], "(", "t", ")"}]}], ")"}], 
               "2"]}]]]}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"-", "0.1`"}], " ", 
            RowBox[{"cos", "(", 
             RowBox[{
              SubscriptBox["\[Theta]", "p"], "(", "t", ")"}], ")"}]}], "-", 
           RowBox[{"sin", "(", 
            RowBox[{
             SubscriptBox["\[Theta]", "p"], "(", "t", ")"}], ")"}], "-", 
           RowBox[{
            SubscriptBox["y", "p"], "(", "t", ")"}]}], ")"}]}], "+", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"1", "-", 
           FractionBox["1", 
            SqrtBox[
             RowBox[{
              SuperscriptBox[
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"cos", "(", 
                  RowBox[{
                   SubscriptBox["\[Theta]", "p"], "(", "t", ")"}], ")"}], "+", 
                 RowBox[{"0.1`", " ", 
                  RowBox[{"sin", "(", 
                   RowBox[{
                    SubscriptBox["\[Theta]", "p"], "(", "t", ")"}], ")"}]}], 
                 "-", 
                 RowBox[{
                  SubscriptBox["x", "p"], "(", "t", ")"}]}], ")"}], "2"], "+", 
              SuperscriptBox[
               RowBox[{"(", 
                RowBox[{
                 RowBox[{
                  RowBox[{"-", "0.1`"}], " ", 
                  RowBox[{"cos", "(", 
                   RowBox[{
                    SubscriptBox["\[Theta]", "p"], "(", "t", ")"}], ")"}]}], 
                 "+", 
                 RowBox[{"sin", "(", 
                  RowBox[{
                   SubscriptBox["\[Theta]", "p"], "(", "t", ")"}], ")"}], "-", 
                 RowBox[{
                  SubscriptBox["y", "p"], "(", "t", ")"}]}], ")"}], 
               "2"]}]]]}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"-", "0.1`"}], " ", 
            RowBox[{"cos", "(", 
             RowBox[{
              SubscriptBox["\[Theta]", "p"], "(", "t", ")"}], ")"}]}], "+", 
           RowBox[{"sin", "(", 
            RowBox[{
             SubscriptBox["\[Theta]", "p"], "(", "t", ")"}], ")"}], "-", 
           RowBox[{
            SubscriptBox["y", "p"], "(", "t", ")"}]}], ")"}]}], "-", "2"}]},
      {
       RowBox[{
        RowBox[{
         RowBox[{"-", "0.04`"}], " ", 
         RowBox[{"(", 
          RowBox[{"1", "-", 
           FractionBox["1", 
            SqrtBox[
             RowBox[{
              SuperscriptBox[
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", 
                  RowBox[{"cos", "(", 
                   RowBox[{
                    SubscriptBox["\[Theta]", "p"], "(", "t", ")"}], ")"}]}], 
                 "+", 
                 RowBox[{"0.1`", " ", 
                  RowBox[{"sin", "(", 
                   RowBox[{
                    SubscriptBox["\[Theta]", "p"], "(", "t", ")"}], ")"}]}], 
                 "-", 
                 RowBox[{
                  SubscriptBox["x", "p"], "(", "t", ")"}], "+", "2"}], ")"}], 
               "2"], "+", 
              SuperscriptBox[
               RowBox[{"(", 
                RowBox[{
                 RowBox[{
                  RowBox[{"-", "0.1`"}], " ", 
                  RowBox[{"cos", "(", 
                   RowBox[{
                    SubscriptBox["\[Theta]", "p"], "(", "t", ")"}], ")"}]}], 
                 "-", 
                 RowBox[{"sin", "(", 
                  RowBox[{
                   SubscriptBox["\[Theta]", "p"], "(", "t", ")"}], ")"}], "-", 
                 RowBox[{
                  SubscriptBox["y", "p"], "(", "t", ")"}]}], ")"}], 
               "2"]}]]]}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"sin", "(", 
             RowBox[{
              SubscriptBox["\[Theta]", "p"], "(", "t", ")"}], ")"}], " ", 
            RowBox[{"(", 
             RowBox[{"2", "-", 
              RowBox[{
               SubscriptBox["x", "p"], "(", "t", ")"}]}], ")"}]}], "+", 
           RowBox[{
            RowBox[{"cos", "(", 
             RowBox[{
              SubscriptBox["\[Theta]", "p"], "(", "t", ")"}], ")"}], " ", 
            RowBox[{
             SubscriptBox["y", "p"], "(", "t", ")"}]}], "+", 
           RowBox[{"0.1`", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"cos", "(", 
                RowBox[{
                 SubscriptBox["\[Theta]", "p"], "(", "t", ")"}], ")"}], " ", 
               RowBox[{"(", 
                RowBox[{"2", "-", 
                 RowBox[{
                  SubscriptBox["x", "p"], "(", "t", ")"}]}], ")"}]}], "-", 
              RowBox[{
               RowBox[{"sin", "(", 
                RowBox[{
                 SubscriptBox["\[Theta]", "p"], "(", "t", ")"}], ")"}], " ", 
               RowBox[{
                SubscriptBox["y", "p"], "(", "t", ")"}]}]}], ")"}]}]}], 
          ")"}]}], "-", 
        RowBox[{"0.04`", " ", 
         RowBox[{"(", 
          RowBox[{"1", "-", 
           FractionBox["1", 
            SqrtBox[
             RowBox[{
              SuperscriptBox[
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"cos", "(", 
                  RowBox[{
                   SubscriptBox["\[Theta]", "p"], "(", "t", ")"}], ")"}], "+", 
                 RowBox[{"0.1`", " ", 
                  RowBox[{"sin", "(", 
                   RowBox[{
                    SubscriptBox["\[Theta]", "p"], "(", "t", ")"}], ")"}]}], 
                 "-", 
                 RowBox[{
                  SubscriptBox["x", "p"], "(", "t", ")"}]}], ")"}], "2"], "+", 
              SuperscriptBox[
               RowBox[{"(", 
                RowBox[{
                 RowBox[{
                  RowBox[{"-", "0.1`"}], " ", 
                  RowBox[{"cos", "(", 
                   RowBox[{
                    SubscriptBox["\[Theta]", "p"], "(", "t", ")"}], ")"}]}], 
                 "+", 
                 RowBox[{"sin", "(", 
                  RowBox[{
                   SubscriptBox["\[Theta]", "p"], "(", "t", ")"}], ")"}], "-", 
                 RowBox[{
                  SubscriptBox["y", "p"], "(", "t", ")"}]}], ")"}], 
               "2"]}]]]}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"sin", "(", 
             RowBox[{
              SubscriptBox["\[Theta]", "p"], "(", "t", ")"}], ")"}], " ", 
            RowBox[{
             SubscriptBox["x", "p"], "(", "t", ")"}]}], "-", 
           RowBox[{
            RowBox[{"cos", "(", 
             RowBox[{
              SubscriptBox["\[Theta]", "p"], "(", "t", ")"}], ")"}], " ", 
            RowBox[{
             SubscriptBox["y", "p"], "(", "t", ")"}]}], "+", 
           RowBox[{"0.1`", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"-", 
                RowBox[{"cos", "(", 
                 RowBox[{
                  SubscriptBox["\[Theta]", "p"], "(", "t", ")"}], ")"}]}], 
               " ", 
               RowBox[{
                SubscriptBox["x", "p"], "(", "t", ")"}]}], "-", 
              RowBox[{
               RowBox[{"sin", "(", 
                RowBox[{
                 SubscriptBox["\[Theta]", "p"], "(", "t", ")"}], ")"}], " ", 
               RowBox[{
                SubscriptBox["y", "p"], "(", "t", ")"}]}]}], ")"}]}]}], 
          ")"}]}]}]}
     },
     GridBoxAlignment->{
      "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}},
        "RowsIndexed" -> {}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.7]}, 
         Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
         Offset[0.2], {
          Offset[0.4]}, 
         Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}]}], 
  TraditionalForm]], "Output",
 CellChangeTimes->{{3.714905378777268*^9, 3.7149054040869217`*^9}, 
   3.714905437488462*^9, {3.714905471967207*^9, 3.714905497271117*^9}, 
   3.714905539307361*^9, 3.71519647764176*^9}]
}, Closed]],

Cell[" ", "Text",
 Editable->False,
 Selectable->False,
 CellFrame->{{0, 0}, {0, 0.5}},
 ShowCellBracket->False,
 CellMargins->{{0, 0}, {1, 1}},
 CellElementSpacings->{"CellMinHeight"->1},
 CellFrameMargins->0,
 CellFrameColor->RGBColor[0, 0, 1],
 CellSize->{Inherited, 3}],

Cell[" ", "Text",
 Editable->False,
 Selectable->False,
 CellFrame->{{0, 0}, {0, 2}},
 ShowCellBracket->False,
 CellMargins->{{0, 0}, {1, 1}},
 CellElementSpacings->{"CellMinHeight"->1},
 CellFrameMargins->0,
 CellFrameColor->RGBColor[0, 0, 1],
 CellSize->{Inherited, 4}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{"EquibInputConditions", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{
       SubscriptBox["x", "1"], "[", "t", "]"}], "\[Rule]", "0"}], ",", 
     RowBox[{
      RowBox[{
       SubscriptBox["y", "1"], "[", "t", "]"}], "\[Rule]", "0"}], ",", 
     RowBox[{
      RowBox[{
       SubscriptBox["x", "2"], "[", "t", "]"}], "\[Rule]", 
      RowBox[{"2", " ", 
       SubscriptBox["w", "p"]}]}], ",", 
     RowBox[{
      RowBox[{
       SubscriptBox["y", "2"], "[", "t", "]"}], "\[Rule]", 
      RowBox[{
       SubscriptBox["y", "1"], "[", "t", "]"}]}]}], "}"}]}], "*)"}]], "Input",
 CellChangeTimes->{{3.7144542274371877`*^9, 3.714454233992959*^9}, {
   3.7144885653756685`*^9, 3.714488615202901*^9}, {3.714488655868425*^9, 
   3.714488666945746*^9}, {3.714500851158784*^9, 3.7145009061293116`*^9}, 
   3.714557558677371*^9, {3.714558012696953*^9, 3.714558042316923*^9}, 
   3.714558089518324*^9, 3.715216695913105*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{
     SubscriptBox["x", "1"], "[", "t", "]"}], "\[Rule]", "0"}], ",", 
   RowBox[{
    RowBox[{
     SubscriptBox["y", "1"], "[", "t", "]"}], "\[Rule]", "0"}], ",", 
   RowBox[{
    RowBox[{
     SubscriptBox["x", "2"], "[", "t", "]"}], "\[Rule]", 
    RowBox[{"2", " ", 
     SubscriptBox["w", "p"]}]}], ",", 
   RowBox[{
    RowBox[{
     SubscriptBox["y", "2"], "[", "t", "]"}], "\[Rule]", 
    RowBox[{
     SubscriptBox["y", "1"], "[", "t", "]"}]}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.7144886177549553`*^9, 3.714488669069767*^9, 3.714500935062709*^9, 
   3.7145575604065228`*^9, 3.714557959931487*^9, {3.7145580231198874`*^9, 
   3.7145580430514174`*^9}, 3.714558106822803*^9, 3.7151944958580227`*^9, 
   3.715196486614707*^9}]
}, Closed]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
   RowBox[{
    RowBox[{"(", 
     RowBox[{"SymetricEquib", "=", 
      RowBox[{
       RowBox[{
        RowBox[{"EOM", "/.", "nameChange"}], "/.", "greekTermsSymetricCase"}], 
       RowBox[{"(*", 
        RowBox[{"/.", "equibTerms"}], "*)"}], "//.", 
       "EquibInputConditions"}]}], ")"}], "//", "MatrixForm"}], "//", 
   "TraditionalForm"}], "*)"}]], "Input",
 CellChangeTimes->{{3.714454096231372*^9, 3.7144541165889826`*^9}, {
   3.7144886393920555`*^9, 3.7144887039593287`*^9}, {3.714500969997345*^9, 
   3.714500977397519*^9}, 3.7145010310150747`*^9, 3.715216616483011*^9, 
   3.715216668914395*^9}],

Cell[BoxData[
 FormBox[
  TagBox[
   RowBox[{
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {
        RowBox[{
         SuperscriptBox[
          SubscriptBox["x", "p"], "\[Prime]\[Prime]",
          MultilineFunction->None], "(", "t", ")"}]},
       {
        RowBox[{
         SuperscriptBox[
          SubscriptBox["y", "p"], "\[Prime]\[Prime]",
          MultilineFunction->None], "(", "t", ")"}]},
       {
        RowBox[{
         SuperscriptBox[
          SubscriptBox["\[Theta]", "p"], "\[Prime]\[Prime]",
          MultilineFunction->None], "(", "t", ")"}]}
      },
      GridBoxAlignment->{
       "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
        "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}], 
    "\[LongEqual]", 
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"sin", "(", 
              RowBox[{
               SubscriptBox["\[Theta]", "p"], "(", "t", ")"}], ")"}], " ", 
             SubscriptBox["h", "p"]}], "-", 
            RowBox[{
             RowBox[{"cos", "(", 
              RowBox[{
               SubscriptBox["\[Theta]", "p"], "(", "t", ")"}], ")"}], " ", 
             SubscriptBox["w", "p"]}], "+", 
            RowBox[{"2", " ", 
             SubscriptBox["w", "p"]}], "-", 
            RowBox[{
             SubscriptBox["x", "p"], "(", "t", ")"}]}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{"1", "-", 
            FractionBox["1", 
             SqrtBox[
              RowBox[{
               SuperscriptBox[
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"sin", "(", 
                    RowBox[{
                    SubscriptBox["\[Theta]", "p"], "(", "t", ")"}], ")"}], 
                   " ", 
                   SubscriptBox["h", "p"]}], "-", 
                  RowBox[{
                   RowBox[{"cos", "(", 
                    RowBox[{
                    SubscriptBox["\[Theta]", "p"], "(", "t", ")"}], ")"}], 
                   " ", 
                   SubscriptBox["w", "p"]}], "+", 
                  RowBox[{"2", " ", 
                   SubscriptBox["w", "p"]}], "-", 
                  RowBox[{
                   SubscriptBox["x", "p"], "(", "t", ")"}]}], ")"}], "2"], 
               "+", 
               SuperscriptBox[
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"-", 
                    RowBox[{"cos", "(", 
                    RowBox[{
                    SubscriptBox["\[Theta]", "p"], "(", "t", ")"}], ")"}]}], 
                   " ", 
                   SubscriptBox["h", "p"]}], "-", 
                  RowBox[{
                   RowBox[{"sin", "(", 
                    RowBox[{
                    SubscriptBox["\[Theta]", "p"], "(", "t", ")"}], ")"}], 
                   " ", 
                   SubscriptBox["w", "p"]}], "-", 
                  RowBox[{
                   SubscriptBox["y", "p"], "(", "t", ")"}]}], ")"}], 
                "2"]}]]]}], ")"}]}], "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"sin", "(", 
              RowBox[{
               SubscriptBox["\[Theta]", "p"], "(", "t", ")"}], ")"}], " ", 
             SubscriptBox["h", "p"]}], "+", 
            RowBox[{
             RowBox[{"cos", "(", 
              RowBox[{
               SubscriptBox["\[Theta]", "p"], "(", "t", ")"}], ")"}], " ", 
             SubscriptBox["w", "p"]}], "-", 
            RowBox[{
             SubscriptBox["x", "p"], "(", "t", ")"}]}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{"1", "-", 
            FractionBox["1", 
             SqrtBox[
              RowBox[{
               SuperscriptBox[
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"sin", "(", 
                    RowBox[{
                    SubscriptBox["\[Theta]", "p"], "(", "t", ")"}], ")"}], 
                   " ", 
                   SubscriptBox["h", "p"]}], "+", 
                  RowBox[{
                   RowBox[{"cos", "(", 
                    RowBox[{
                    SubscriptBox["\[Theta]", "p"], "(", "t", ")"}], ")"}], 
                   " ", 
                   SubscriptBox["w", "p"]}], "-", 
                  RowBox[{
                   SubscriptBox["x", "p"], "(", "t", ")"}]}], ")"}], "2"], 
               "+", 
               SuperscriptBox[
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"-", 
                    RowBox[{"cos", "(", 
                    RowBox[{
                    SubscriptBox["\[Theta]", "p"], "(", "t", ")"}], ")"}]}], 
                   " ", 
                   SubscriptBox["h", "p"]}], "+", 
                  RowBox[{
                   RowBox[{"sin", "(", 
                    RowBox[{
                    SubscriptBox["\[Theta]", "p"], "(", "t", ")"}], ")"}], 
                   " ", 
                   SubscriptBox["w", "p"]}], "-", 
                  RowBox[{
                   SubscriptBox["y", "p"], "(", "t", ")"}]}], ")"}], 
                "2"]}]]]}], ")"}]}], "-", 
         RowBox[{
          SubscriptBox["c", "1"], " ", 
          RowBox[{
           SuperscriptBox[
            SubscriptBox["x", "p"], "\[Prime]",
            MultilineFunction->None], "(", "t", ")"}]}]}]},
       {
        RowBox[{
         RowBox[{"-", "\[Gamma]"}], "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"1", "-", 
            FractionBox["1", 
             SqrtBox[
              RowBox[{
               SuperscriptBox[
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"sin", "(", 
                    RowBox[{
                    SubscriptBox["\[Theta]", "p"], "(", "t", ")"}], ")"}], 
                   " ", 
                   SubscriptBox["h", "p"]}], "-", 
                  RowBox[{
                   RowBox[{"cos", "(", 
                    RowBox[{
                    SubscriptBox["\[Theta]", "p"], "(", "t", ")"}], ")"}], 
                   " ", 
                   SubscriptBox["w", "p"]}], "+", 
                  RowBox[{"2", " ", 
                   SubscriptBox["w", "p"]}], "-", 
                  RowBox[{
                   SubscriptBox["x", "p"], "(", "t", ")"}]}], ")"}], "2"], 
               "+", 
               SuperscriptBox[
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"-", 
                    RowBox[{"cos", "(", 
                    RowBox[{
                    SubscriptBox["\[Theta]", "p"], "(", "t", ")"}], ")"}]}], 
                   " ", 
                   SubscriptBox["h", "p"]}], "-", 
                  RowBox[{
                   RowBox[{"sin", "(", 
                    RowBox[{
                    SubscriptBox["\[Theta]", "p"], "(", "t", ")"}], ")"}], 
                   " ", 
                   SubscriptBox["w", "p"]}], "-", 
                  RowBox[{
                   SubscriptBox["y", "p"], "(", "t", ")"}]}], ")"}], 
                "2"]}]]]}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"-", 
              RowBox[{"cos", "(", 
               RowBox[{
                SubscriptBox["\[Theta]", "p"], "(", "t", ")"}], ")"}]}], " ", 
             SubscriptBox["h", "p"]}], "-", 
            RowBox[{
             RowBox[{"sin", "(", 
              RowBox[{
               SubscriptBox["\[Theta]", "p"], "(", "t", ")"}], ")"}], " ", 
             SubscriptBox["w", "p"]}], "-", 
            RowBox[{
             SubscriptBox["y", "p"], "(", "t", ")"}]}], ")"}]}], "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"1", "-", 
            FractionBox["1", 
             SqrtBox[
              RowBox[{
               SuperscriptBox[
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"sin", "(", 
                    RowBox[{
                    SubscriptBox["\[Theta]", "p"], "(", "t", ")"}], ")"}], 
                   " ", 
                   SubscriptBox["h", "p"]}], "+", 
                  RowBox[{
                   RowBox[{"cos", "(", 
                    RowBox[{
                    SubscriptBox["\[Theta]", "p"], "(", "t", ")"}], ")"}], 
                   " ", 
                   SubscriptBox["w", "p"]}], "-", 
                  RowBox[{
                   SubscriptBox["x", "p"], "(", "t", ")"}]}], ")"}], "2"], 
               "+", 
               SuperscriptBox[
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"-", 
                    RowBox[{"cos", "(", 
                    RowBox[{
                    SubscriptBox["\[Theta]", "p"], "(", "t", ")"}], ")"}]}], 
                   " ", 
                   SubscriptBox["h", "p"]}], "+", 
                  RowBox[{
                   RowBox[{"sin", "(", 
                    RowBox[{
                    SubscriptBox["\[Theta]", "p"], "(", "t", ")"}], ")"}], 
                   " ", 
                   SubscriptBox["w", "p"]}], "-", 
                  RowBox[{
                   SubscriptBox["y", "p"], "(", "t", ")"}]}], ")"}], 
                "2"]}]]]}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"-", 
              RowBox[{"cos", "(", 
               RowBox[{
                SubscriptBox["\[Theta]", "p"], "(", "t", ")"}], ")"}]}], " ", 
             SubscriptBox["h", "p"]}], "+", 
            RowBox[{
             RowBox[{"sin", "(", 
              RowBox[{
               SubscriptBox["\[Theta]", "p"], "(", "t", ")"}], ")"}], " ", 
             SubscriptBox["w", "p"]}], "-", 
            RowBox[{
             SubscriptBox["y", "p"], "(", "t", ")"}]}], ")"}]}], "-", 
         RowBox[{
          SubscriptBox["c", "2"], " ", 
          RowBox[{
           SuperscriptBox[
            SubscriptBox["y", "p"], "\[Prime]",
            MultilineFunction->None], "(", "t", ")"}]}]}]},
       {
        RowBox[{
         RowBox[{
          RowBox[{"-", "\[Alpha]"}], " ", 
          RowBox[{"(", 
           RowBox[{"1", "-", 
            FractionBox["1", 
             SqrtBox[
              RowBox[{
               SuperscriptBox[
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"sin", "(", 
                    RowBox[{
                    SubscriptBox["\[Theta]", "p"], "(", "t", ")"}], ")"}], 
                   " ", 
                   SubscriptBox["h", "p"]}], "-", 
                  RowBox[{
                   RowBox[{"cos", "(", 
                    RowBox[{
                    SubscriptBox["\[Theta]", "p"], "(", "t", ")"}], ")"}], 
                   " ", 
                   SubscriptBox["w", "p"]}], "+", 
                  RowBox[{"2", " ", 
                   SubscriptBox["w", "p"]}], "-", 
                  RowBox[{
                   SubscriptBox["x", "p"], "(", "t", ")"}]}], ")"}], "2"], 
               "+", 
               SuperscriptBox[
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"-", 
                    RowBox[{"cos", "(", 
                    RowBox[{
                    SubscriptBox["\[Theta]", "p"], "(", "t", ")"}], ")"}]}], 
                   " ", 
                   SubscriptBox["h", "p"]}], "-", 
                  RowBox[{
                   RowBox[{"sin", "(", 
                    RowBox[{
                    SubscriptBox["\[Theta]", "p"], "(", "t", ")"}], ")"}], 
                   " ", 
                   SubscriptBox["w", "p"]}], "-", 
                  RowBox[{
                   SubscriptBox["y", "p"], "(", "t", ")"}]}], ")"}], 
                "2"]}]]]}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             SubscriptBox["w", "p"], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"sin", "(", 
                 RowBox[{
                  SubscriptBox["\[Theta]", "p"], "(", "t", ")"}], ")"}], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"2", " ", 
                   SubscriptBox["w", "p"]}], "-", 
                  RowBox[{
                   SubscriptBox["x", "p"], "(", "t", ")"}]}], ")"}]}], "+", 
               RowBox[{
                RowBox[{"cos", "(", 
                 RowBox[{
                  SubscriptBox["\[Theta]", "p"], "(", "t", ")"}], ")"}], " ", 
                RowBox[{
                 SubscriptBox["y", "p"], "(", "t", ")"}]}]}], ")"}]}], "+", 
            RowBox[{
             SubscriptBox["h", "p"], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"cos", "(", 
                 RowBox[{
                  SubscriptBox["\[Theta]", "p"], "(", "t", ")"}], ")"}], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"2", " ", 
                   SubscriptBox["w", "p"]}], "-", 
                  RowBox[{
                   SubscriptBox["x", "p"], "(", "t", ")"}]}], ")"}]}], "-", 
               RowBox[{
                RowBox[{"sin", "(", 
                 RowBox[{
                  SubscriptBox["\[Theta]", "p"], "(", "t", ")"}], ")"}], " ", 
                RowBox[{
                 SubscriptBox["y", "p"], "(", "t", ")"}]}]}], ")"}]}]}], 
           ")"}]}], "-", 
         RowBox[{"\[Alpha]", " ", 
          RowBox[{"(", 
           RowBox[{"1", "-", 
            FractionBox["1", 
             SqrtBox[
              RowBox[{
               SuperscriptBox[
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"sin", "(", 
                    RowBox[{
                    SubscriptBox["\[Theta]", "p"], "(", "t", ")"}], ")"}], 
                   " ", 
                   SubscriptBox["h", "p"]}], "+", 
                  RowBox[{
                   RowBox[{"cos", "(", 
                    RowBox[{
                    SubscriptBox["\[Theta]", "p"], "(", "t", ")"}], ")"}], 
                   " ", 
                   SubscriptBox["w", "p"]}], "-", 
                  RowBox[{
                   SubscriptBox["x", "p"], "(", "t", ")"}]}], ")"}], "2"], 
               "+", 
               SuperscriptBox[
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"-", 
                    RowBox[{"cos", "(", 
                    RowBox[{
                    SubscriptBox["\[Theta]", "p"], "(", "t", ")"}], ")"}]}], 
                   " ", 
                   SubscriptBox["h", "p"]}], "+", 
                  RowBox[{
                   RowBox[{"sin", "(", 
                    RowBox[{
                    SubscriptBox["\[Theta]", "p"], "(", "t", ")"}], ")"}], 
                   " ", 
                   SubscriptBox["w", "p"]}], "-", 
                  RowBox[{
                   SubscriptBox["y", "p"], "(", "t", ")"}]}], ")"}], 
                "2"]}]]]}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             SubscriptBox["w", "p"], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"sin", "(", 
                 RowBox[{
                  SubscriptBox["\[Theta]", "p"], "(", "t", ")"}], ")"}], " ", 
                RowBox[{
                 SubscriptBox["x", "p"], "(", "t", ")"}]}], "-", 
               RowBox[{
                RowBox[{"cos", "(", 
                 RowBox[{
                  SubscriptBox["\[Theta]", "p"], "(", "t", ")"}], ")"}], " ", 
                RowBox[{
                 SubscriptBox["y", "p"], "(", "t", ")"}]}]}], ")"}]}], "+", 
            RowBox[{
             SubscriptBox["h", "p"], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"-", 
                 RowBox[{"cos", "(", 
                  RowBox[{
                   SubscriptBox["\[Theta]", "p"], "(", "t", ")"}], ")"}]}], 
                " ", 
                RowBox[{
                 SubscriptBox["x", "p"], "(", "t", ")"}]}], "-", 
               RowBox[{
                RowBox[{"sin", "(", 
                 RowBox[{
                  SubscriptBox["\[Theta]", "p"], "(", "t", ")"}], ")"}], " ", 
                RowBox[{
                 SubscriptBox["y", "p"], "(", "t", ")"}]}]}], ")"}]}]}], 
           ")"}]}], "-", 
         RowBox[{
          SubscriptBox["c", "3"], " ", 
          RowBox[{
           SuperscriptBox[
            SubscriptBox["\[Theta]", "p"], "\[Prime]",
            MultilineFunction->None], "(", "t", ")"}]}]}]}
      },
      GridBoxAlignment->{
       "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
        "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}]}],
   Function[BoxForm`e$, 
    MatrixForm[BoxForm`e$]]], TraditionalForm]], "Output",
 CellChangeTimes->{{3.714488674553899*^9, 3.714488704303336*^9}, 
   3.7145009790215592`*^9, 3.714501031815095*^9, 3.7145575784505215`*^9, 
   3.7145579633197412`*^9, {3.7145580246168795`*^9, 3.7145580445133843`*^9}, 
   3.7145581081613765`*^9, 3.7151964949432287`*^9, 3.7152166207157803`*^9}]
}, Closed]],

Cell[" ", "Text",
 Editable->False,
 Selectable->False,
 CellFrame->{{0, 0}, {0, 0.5}},
 ShowCellBracket->False,
 CellMargins->{{0, 0}, {1, 1}},
 CellElementSpacings->{"CellMinHeight"->1},
 CellFrameMargins->0,
 CellFrameColor->RGBColor[0, 0, 1],
 CellSize->{Inherited, 3}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"NumericParametersTest", "=", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{
     SubscriptBox["k", "1"], "\[Rule]", "200"}], ",", " ", 
    RowBox[{
     SubscriptBox["k", "2"], "\[Rule]", 
     RowBox[{
      SubscriptBox["k", "1"], "+", "0"}]}], ",", 
    RowBox[{
     SubscriptBox["L0", "1"], "\[Rule]", "2"}], ",", 
    RowBox[{
     SubscriptBox["L0", "2"], "\[Rule]", 
     RowBox[{
      SubscriptBox["L0", "1"], "+", "0"}]}], ",", 
    RowBox[{
     SubscriptBox["m", "p"], "\[Rule]", "2"}], ",", 
    RowBox[{
     SubscriptBox["h", "p"], "\[Rule]", "0.1"}], ",", 
    RowBox[{
     SubscriptBox["w", "p"], "\[Rule]", "1"}], ",", 
    RowBox[{"g", "\[Rule]", "9.81"}]}], "}"}]}], "\[IndentingNewLine]", 
 RowBox[{"NumericEquibInputs", "=", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{
     RowBox[{
      SubscriptBox["x", "1"], "[", "t", "]"}], "\[Rule]", "0"}], ",", 
    RowBox[{
     RowBox[{
      SubscriptBox["y", "1"], "[", "t", "]"}], "\[Rule]", "0"}], ",", 
    RowBox[{
     RowBox[{
      SubscriptBox["x", "2"], "[", "t", "]"}], "\[Rule]", 
     RowBox[{"2", 
      SubscriptBox["w", "p"]}]}], ",", 
    RowBox[{
     RowBox[{
      SubscriptBox["y", "2"], "[", "t", "]"}], "\[Rule]", "0"}]}], 
   RowBox[{"(*", 
    RowBox[{",", 
     RowBox[{"\[Alpha]", "\[Rule]", "0.04"}], ",", 
     RowBox[{"\[Gamma]", "\[Rule]", "2"}]}], "*)"}], 
   "}"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"NumericStructuralDamping", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      SubscriptBox["c", "1"], "\[Rule]", "1"}], ",", 
     RowBox[{
      SubscriptBox["c", "2"], "\[Rule]", "1"}], ",", 
     RowBox[{
      SubscriptBox["c", "3"], "\[Rule]", "1"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"NumericNonStructuralDamping", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      SubscriptBox["c", "1"], "\[Rule]", "0"}], ",", 
     RowBox[{
      SubscriptBox["c", "2"], "\[Rule]", "0"}], ",", 
     RowBox[{
      SubscriptBox["c", "3"], "\[Rule]", "0"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"greekTermsGeneralForTest", "=", 
   RowBox[{"{", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"\[Kappa]", "\[Rule]", 
      FractionBox[
       SubscriptBox["k", "2"], 
       SubscriptBox["k", "1"]]}], ",", "\[IndentingNewLine]", 
     RowBox[{"\[ScriptCapitalL]", "\[Rule]", 
      FractionBox[
       SubscriptBox["L0", "2"], 
       SubscriptBox["L0", "1"]]}], ",", "\[IndentingNewLine]", 
     RowBox[{
      SuperscriptBox[
       SubscriptBox["\[Omega]", "s"], "2"], "\[Rule]", 
      FractionBox[
       SubscriptBox["k", "1"], 
       SubscriptBox["m", "p"]]}], ",", "\[IndentingNewLine]", 
     RowBox[{"\[Alpha]", "\[Rule]", 
      FractionBox[
       RowBox[{"3", 
        SuperscriptBox[
         SubscriptBox["L0", "1"], "2"]}], 
       RowBox[{"(", 
        RowBox[{
         SuperscriptBox[
          SubscriptBox["w", "p"], "2"], "+", 
         SuperscriptBox[
          SubscriptBox["h", "p"], "2"]}], ")"}]]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"\[Gamma]", "->", 
      RowBox[{"(", 
       FractionBox[
        RowBox[{"g", " ", 
         SubscriptBox["m", "p"]}], 
        RowBox[{
         SubscriptBox["L0", "1"], 
         SubscriptBox["k", "1"]}]], ")"}]}]}], "\[IndentingNewLine]", "}"}]}],
   "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    FractionBox["g", 
     SubscriptBox["L0", "1"]], "/.", "NumericParametersTest"}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{"NumericTestParams", "=", 
  RowBox[{
  "greekTermsGeneralForTest", "//.", "NumericParametersTest"}]}]}], "Input",
 CellChangeTimes->{{3.714537390515764*^9, 3.714537495401929*^9}, {
   3.7145394243169956`*^9, 3.7145395200033665`*^9}, {3.714539561885668*^9, 
   3.714539561925669*^9}, {3.714539600756035*^9, 3.7145396078122044`*^9}, 
   3.714539643430365*^9, {3.7145403822630777`*^9, 3.7145404732888412`*^9}, {
   3.7145406031390085`*^9, 3.714540692345502*^9}, 3.7145407345401635`*^9, {
   3.7145408445533953`*^9, 3.7145408712491493`*^9}, {3.714540943577881*^9, 
   3.7145409544539022`*^9}, {3.715216761944151*^9, 3.7152168019028397`*^9}, {
   3.7152168578775063`*^9, 3.715216970161231*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    SubscriptBox["k", "1"], "\[Rule]", "200"}], ",", 
   RowBox[{
    SubscriptBox["k", "2"], "\[Rule]", 
    SubscriptBox["k", "1"]}], ",", 
   RowBox[{
    SubscriptBox["L0", "1"], "\[Rule]", "2"}], ",", 
   RowBox[{
    SubscriptBox["L0", "2"], "\[Rule]", 
    SubscriptBox["L0", "1"]}], ",", 
   RowBox[{
    SubscriptBox["m", "p"], "\[Rule]", "2"}], ",", 
   RowBox[{
    SubscriptBox["h", "p"], "\[Rule]", "0.1`"}], ",", 
   RowBox[{
    SubscriptBox["w", "p"], "\[Rule]", "1"}], ",", 
   RowBox[{"g", "\[Rule]", "9.81`"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.714540661810577*^9, 3.7145406955766535`*^9, 3.7145407351845913`*^9, {
   3.714540862633419*^9, 3.7145408719466143`*^9}, 3.7145409562140727`*^9, 
   3.714557562366824*^9, 3.7145581689004793`*^9, 3.715194461223075*^9, 
   3.7151964987027164`*^9, 3.71521682700043*^9, 3.715216866513716*^9, 
   3.715216897279133*^9, 3.7152169748573303`*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{
     SubscriptBox["x", "1"], "[", "t", "]"}], "\[Rule]", "0"}], ",", 
   RowBox[{
    RowBox[{
     SubscriptBox["y", "1"], "[", "t", "]"}], "\[Rule]", "0"}], ",", 
   RowBox[{
    RowBox[{
     SubscriptBox["x", "2"], "[", "t", "]"}], "\[Rule]", 
    RowBox[{"2", " ", 
     SubscriptBox["w", "p"]}]}], ",", 
   RowBox[{
    RowBox[{
     SubscriptBox["y", "2"], "[", "t", "]"}], "\[Rule]", "0"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{
  3.714540661810577*^9, 3.7145406955766535`*^9, 3.7145407351845913`*^9, {
   3.714540862633419*^9, 3.7145408719466143`*^9}, 3.7145409562140727`*^9, 
   3.714557562366824*^9, 3.7145581689004793`*^9, 3.715194461223075*^9, 
   3.7151964987027164`*^9, 3.71521682700043*^9, 3.715216866513716*^9, 
   3.715216897279133*^9, 3.7152169748573303`*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"\[Kappa]", "\[Rule]", 
    FractionBox[
     SubscriptBox["k", "2"], 
     SubscriptBox["k", "1"]]}], ",", 
   RowBox[{"\[ScriptCapitalL]", "\[Rule]", 
    FractionBox[
     SubscriptBox["L0", "2"], 
     SubscriptBox["L0", "1"]]}], ",", 
   RowBox[{
    SubsuperscriptBox["\[Omega]", "s", "2"], "\[Rule]", 
    FractionBox[
     SubscriptBox["k", "1"], 
     SubscriptBox["m", "p"]]}], ",", 
   RowBox[{"\[Alpha]", "\[Rule]", 
    FractionBox[
     RowBox[{"3", " ", 
      SubsuperscriptBox["L0", "1", "2"]}], 
     RowBox[{
      SubsuperscriptBox["h", "p", "2"], "+", 
      SubsuperscriptBox["w", "p", "2"]}]]}], ",", 
   RowBox[{"\[Gamma]", "\[Rule]", 
    FractionBox[
     RowBox[{"g", " ", 
      SubscriptBox["m", "p"]}], 
     RowBox[{
      SubscriptBox["k", "1"], " ", 
      SubscriptBox["L0", "1"]}]]}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.714540661810577*^9, 3.7145406955766535`*^9, 3.7145407351845913`*^9, {
   3.714540862633419*^9, 3.7145408719466143`*^9}, 3.7145409562140727`*^9, 
   3.714557562366824*^9, 3.7145581689004793`*^9, 3.715194461223075*^9, 
   3.7151964987027164`*^9, 3.71521682700043*^9, 3.715216866513716*^9, 
   3.715216897279133*^9, 3.715216974861331*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"\[Kappa]", "\[Rule]", "1"}], ",", 
   RowBox[{"\[ScriptCapitalL]", "\[Rule]", "1"}], ",", 
   RowBox[{
    SubsuperscriptBox["\[Omega]", "s", "2"], "\[Rule]", "100"}], ",", 
   RowBox[{"\[Alpha]", "\[Rule]", "11.881188118811881`"}], ",", 
   RowBox[{"\[Gamma]", "\[Rule]", "0.04905`"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.714540661810577*^9, 3.7145406955766535`*^9, 3.7145407351845913`*^9, {
   3.714540862633419*^9, 3.7145408719466143`*^9}, 3.7145409562140727`*^9, 
   3.714557562366824*^9, 3.7145581689004793`*^9, 3.715194461223075*^9, 
   3.7151964987027164`*^9, 3.71521682700043*^9, 3.715216866513716*^9, 
   3.715216897279133*^9, 3.7152169748653316`*^9}]
}, Open  ]],

Cell[" ", "Text",
 Editable->False,
 Selectable->False,
 CellFrame->{{0, 0}, {0, 0.5}},
 ShowCellBracket->False,
 CellMargins->{{0, 0}, {1, 1}},
 CellElementSpacings->{"CellMinHeight"->1},
 CellFrameMargins->0,
 CellFrameColor->RGBColor[0, 0, 1],
 CellSize->{Inherited, 3}],

Cell[" ", "Text",
 Editable->False,
 Selectable->False,
 CellFrame->{{0, 0}, {0, 3}},
 ShowCellBracket->False,
 CellMargins->{{0, 0}, {1, 1}},
 CellElementSpacings->{"CellMinHeight"->1},
 CellFrameMargins->0,
 CellFrameColor->RGBColor[0, 0, 1],
 CellSize->{Inherited, 5}],

Cell[" ", "Text",
 Editable->False,
 Selectable->False,
 CellFrame->{{0, 0}, {0, 3}},
 ShowCellBracket->False,
 CellMargins->{{0, 0}, {1, 1}},
 CellElementSpacings->{"CellMinHeight"->1},
 CellFrameMargins->0,
 CellFrameColor->RGBColor[0, 0, 1],
 CellSize->{Inherited, 5}],

Cell[" ", "Text",
 Editable->False,
 Selectable->False,
 CellFrame->{{0, 0}, {0, 0.5}},
 ShowCellBracket->False,
 CellMargins->{{0, 0}, {1, 1}},
 CellElementSpacings->{"CellMinHeight"->1},
 CellFrameMargins->0,
 CellFrameColor->RGBColor[0, 0, 1],
 CellSize->{Inherited, 3}],

Cell[" ", "Text",
 Editable->False,
 Selectable->False,
 CellFrame->{{0, 0}, {0, 3}},
 ShowCellBracket->False,
 CellMargins->{{0, 0}, {1, 1}},
 CellElementSpacings->{"CellMinHeight"->1},
 CellFrameMargins->0,
 CellFrameColor->RGBColor[0, 0, 1],
 CellSize->{Inherited, 5}],

Cell[" ", "Text",
 Editable->False,
 Selectable->False,
 CellFrame->{{0, 0}, {0, 3}},
 ShowCellBracket->False,
 CellMargins->{{0, 0}, {1, 1}},
 CellElementSpacings->{"CellMinHeight"->1},
 CellFrameMargins->0,
 CellFrameColor->RGBColor[0, 0, 1],
 CellSize->{Inherited, 5}],

Cell[" ", "Text",
 Editable->False,
 Selectable->False,
 CellFrame->{{0, 0}, {0, 0.5}},
 ShowCellBracket->False,
 CellMargins->{{0, 0}, {1, 1}},
 CellElementSpacings->{"CellMinHeight"->1},
 CellFrameMargins->0,
 CellFrameColor->RGBColor[0, 0, 1],
 CellSize->{Inherited, 3}],

Cell["\[OpenCurlyDoubleQuote](*simple case \
testings:*)\[CloseCurlyDoubleQuote]", "Text",
 CellChangeTimes->{{3.7143753343649387`*^9, 3.7143753420451508`*^9}, {
  3.715217054360982*^9, 3.715217059889098*^9}}],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
   RowBox[{"trajectory", ":", "\[IndentingNewLine]", "\[Tau]"}], "=", 
   RowBox[{
    RowBox[{"0", ":", " ", 
     OverscriptBox["y", ".."]}], "=", 
    RowBox[{
     RowBox[{"1", 
      RowBox[{"m", "/", 
       SuperscriptBox["s", "2"]}], "  ", "until", " ", 
      SubscriptBox["y", "1"]}], "=", 
     RowBox[{
      SubscriptBox["y", "2"], "=", 
      RowBox[{
       RowBox[{"10", 
        SubscriptBox["L0", "1"], "\[IndentingNewLine]", "    ", 
        OverscriptBox["y", ".."]}], "=", 
       RowBox[{
        RowBox[{
         RowBox[{"-", "1"}], 
         RowBox[{"m", "/", 
          SuperscriptBox["s", "2"]}], " ", "until", " ", 
         OverscriptBox[
          SubscriptBox["y", "1"], "."]}], "=", 
        RowBox[{
         OverscriptBox[
          SubscriptBox["y", "2"], "."], "=", 
         RowBox[{
          RowBox[{"0", "\[IndentingNewLine]", 
           OverscriptBox[
            SubscriptBox["x", "1"], ".."]}], "=", 
          RowBox[{
           OverscriptBox[
            SubscriptBox["x", "2"], ".."], "=", 
           RowBox[{
            RowBox[{"1", 
             RowBox[{"m", "/", 
              SuperscriptBox["s", "2"]}], "  ", "until", " ", 
             OverscriptBox[
              SubscriptBox["x", "1"], "."]}], "=", 
            RowBox[{
             OverscriptBox[
              SubscriptBox["x", "2"], "."], "=", 
             RowBox[{
              RowBox[{"2", 
               RowBox[{"m", "/", "s"}], "\[IndentingNewLine]", "disterbunce", 
               " ", "can", " ", "be", " ", "input", " ", "by", " ", 
               SubscriptBox["x", "1"]}], "+=", 
              RowBox[{"5", 
               SubscriptBox["L0", "1"], " ", "over", " ", 
               FractionBox["1", 
                RowBox[{"100", " ", 
                 SqrtBox[
                  SubscriptBox["\[Omega]", "s"]]}]]}]}]}]}]}]}]}]}]}]}]}]}]}],
   "*)"}]], "Input",
 CellChangeTimes->{{3.7128649918168645`*^9, 3.712864999951256*^9}, {
   3.7128650538669786`*^9, 3.7128653567852306`*^9}, 3.714375349988761*^9}],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.712831792809779*^9, 3.712831794993853*^9}}],

Cell[" ", "Text",
 Editable->False,
 Selectable->False,
 CellFrame->{{0, 0}, {0, 2}},
 ShowCellBracket->False,
 CellMargins->{{0, 0}, {1, 1}},
 CellElementSpacings->{"CellMinHeight"->1},
 CellFrameMargins->0,
 CellFrameColor->RGBColor[0, 0, 1],
 CellSize->{Inherited, 4}],

Cell[" ", "Text",
 Editable->False,
 Selectable->False,
 CellFrame->{{0, 0}, {0, 3}},
 ShowCellBracket->False,
 CellMargins->{{0, 0}, {1, 1}},
 CellElementSpacings->{"CellMinHeight"->1},
 CellFrameMargins->0,
 CellFrameColor->RGBColor[0, 0, 1],
 CellSize->{Inherited, 5}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
   "greekTermsSymetricCase", " ", "must", " ", "be", " ", "used", " ", 
    "again", " ", "because", " ", "this", " ", "is", " ", "where", " ", "the",
     " ", "equilibrium", " ", "point", " ", "is", " ", "refering", " ", 
    RowBox[{"to", " ", ".", "\[IndentingNewLine]", "EquibInputConditions"}], 
    " ", "might", " ", "be", " ", "turned", " ", "of", " ", "later", " ", 
    "for", " ", "better", " ", "investigation"}], " ", "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{"SymetricEOMtoInvestigate", "=", 
       RowBox[{
        RowBox[{"EOM", "/.", "greekTermsSymetricCase"}], "//.", 
        "EquibInputConditions"}]}], ")"}], "/.", "dispNoTime"}], "//", 
    "MatrixForm"}], "//", "TraditionalForm"}]}]], "Input",
 CellChangeTimes->{{3.7145730224935207`*^9, 3.7145730317420354`*^9}, {
  3.714573143376878*^9, 3.714573149965064*^9}, {3.7145731973242517`*^9, 
  3.714573299203663*^9}, {3.715194470232045*^9, 3.715194486098557*^9}}],

Cell[BoxData[
 FormBox[
  TagBox[
   RowBox[{
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {
        SuperscriptBox[
         SubscriptBox["x", "p"], "\[Prime]\[Prime]",
         MultilineFunction->None]},
       {
        SuperscriptBox[
         SubscriptBox["y", "p"], "\[Prime]\[Prime]",
         MultilineFunction->None]},
       {
        SuperscriptBox[
         SubscriptBox["\[Theta]", "p"], "\[Prime]\[Prime]",
         MultilineFunction->None]}
      },
      GridBoxAlignment->{
       "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
        "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}], 
    "\[LongEqual]", 
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"sin", "(", 
              SubscriptBox["\[Theta]", "p"], ")"}], " ", 
             SubscriptBox["h", "p"]}], "-", 
            RowBox[{
             RowBox[{"cos", "(", 
              SubscriptBox["\[Theta]", "p"], ")"}], " ", 
             SubscriptBox["w", "p"]}], "+", 
            RowBox[{"2", " ", 
             SubscriptBox["w", "p"]}], "-", 
            SubscriptBox["x", "p"]}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{"1", "-", 
            FractionBox["1", 
             SqrtBox[
              RowBox[{
               SuperscriptBox[
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"sin", "(", 
                    SubscriptBox["\[Theta]", "p"], ")"}], " ", 
                   SubscriptBox["h", "p"]}], "-", 
                  RowBox[{
                   RowBox[{"cos", "(", 
                    SubscriptBox["\[Theta]", "p"], ")"}], " ", 
                   SubscriptBox["w", "p"]}], "+", 
                  RowBox[{"2", " ", 
                   SubscriptBox["w", "p"]}], "-", 
                  SubscriptBox["x", "p"]}], ")"}], "2"], "+", 
               SuperscriptBox[
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"-", 
                    RowBox[{"cos", "(", 
                    SubscriptBox["\[Theta]", "p"], ")"}]}], " ", 
                   SubscriptBox["h", "p"]}], "-", 
                  RowBox[{
                   RowBox[{"sin", "(", 
                    SubscriptBox["\[Theta]", "p"], ")"}], " ", 
                   SubscriptBox["w", "p"]}], "-", 
                  SubscriptBox["y", "p"]}], ")"}], "2"]}]]]}], ")"}]}], "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"sin", "(", 
              SubscriptBox["\[Theta]", "p"], ")"}], " ", 
             SubscriptBox["h", "p"]}], "+", 
            RowBox[{
             RowBox[{"cos", "(", 
              SubscriptBox["\[Theta]", "p"], ")"}], " ", 
             SubscriptBox["w", "p"]}], "-", 
            SubscriptBox["x", "p"]}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{"1", "-", 
            FractionBox["1", 
             SqrtBox[
              RowBox[{
               SuperscriptBox[
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"sin", "(", 
                    SubscriptBox["\[Theta]", "p"], ")"}], " ", 
                   SubscriptBox["h", "p"]}], "+", 
                  RowBox[{
                   RowBox[{"cos", "(", 
                    SubscriptBox["\[Theta]", "p"], ")"}], " ", 
                   SubscriptBox["w", "p"]}], "-", 
                  SubscriptBox["x", "p"]}], ")"}], "2"], "+", 
               SuperscriptBox[
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"-", 
                    RowBox[{"cos", "(", 
                    SubscriptBox["\[Theta]", "p"], ")"}]}], " ", 
                   SubscriptBox["h", "p"]}], "+", 
                  RowBox[{
                   RowBox[{"sin", "(", 
                    SubscriptBox["\[Theta]", "p"], ")"}], " ", 
                   SubscriptBox["w", "p"]}], "-", 
                  SubscriptBox["y", "p"]}], ")"}], "2"]}]]]}], ")"}]}], "-", 
         RowBox[{
          SubscriptBox["c", "1"], " ", 
          SuperscriptBox[
           SubscriptBox["x", "p"], "\[Prime]",
           MultilineFunction->None]}]}]},
       {
        RowBox[{
         RowBox[{"-", "\[Gamma]"}], "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"1", "-", 
            FractionBox["1", 
             SqrtBox[
              RowBox[{
               SuperscriptBox[
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"sin", "(", 
                    SubscriptBox["\[Theta]", "p"], ")"}], " ", 
                   SubscriptBox["h", "p"]}], "-", 
                  RowBox[{
                   RowBox[{"cos", "(", 
                    SubscriptBox["\[Theta]", "p"], ")"}], " ", 
                   SubscriptBox["w", "p"]}], "+", 
                  RowBox[{"2", " ", 
                   SubscriptBox["w", "p"]}], "-", 
                  SubscriptBox["x", "p"]}], ")"}], "2"], "+", 
               SuperscriptBox[
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"-", 
                    RowBox[{"cos", "(", 
                    SubscriptBox["\[Theta]", "p"], ")"}]}], " ", 
                   SubscriptBox["h", "p"]}], "-", 
                  RowBox[{
                   RowBox[{"sin", "(", 
                    SubscriptBox["\[Theta]", "p"], ")"}], " ", 
                   SubscriptBox["w", "p"]}], "-", 
                  SubscriptBox["y", "p"]}], ")"}], "2"]}]]]}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"-", 
              RowBox[{"cos", "(", 
               SubscriptBox["\[Theta]", "p"], ")"}]}], " ", 
             SubscriptBox["h", "p"]}], "-", 
            RowBox[{
             RowBox[{"sin", "(", 
              SubscriptBox["\[Theta]", "p"], ")"}], " ", 
             SubscriptBox["w", "p"]}], "-", 
            SubscriptBox["y", "p"]}], ")"}]}], "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"1", "-", 
            FractionBox["1", 
             SqrtBox[
              RowBox[{
               SuperscriptBox[
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"sin", "(", 
                    SubscriptBox["\[Theta]", "p"], ")"}], " ", 
                   SubscriptBox["h", "p"]}], "+", 
                  RowBox[{
                   RowBox[{"cos", "(", 
                    SubscriptBox["\[Theta]", "p"], ")"}], " ", 
                   SubscriptBox["w", "p"]}], "-", 
                  SubscriptBox["x", "p"]}], ")"}], "2"], "+", 
               SuperscriptBox[
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"-", 
                    RowBox[{"cos", "(", 
                    SubscriptBox["\[Theta]", "p"], ")"}]}], " ", 
                   SubscriptBox["h", "p"]}], "+", 
                  RowBox[{
                   RowBox[{"sin", "(", 
                    SubscriptBox["\[Theta]", "p"], ")"}], " ", 
                   SubscriptBox["w", "p"]}], "-", 
                  SubscriptBox["y", "p"]}], ")"}], "2"]}]]]}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"-", 
              RowBox[{"cos", "(", 
               SubscriptBox["\[Theta]", "p"], ")"}]}], " ", 
             SubscriptBox["h", "p"]}], "+", 
            RowBox[{
             RowBox[{"sin", "(", 
              SubscriptBox["\[Theta]", "p"], ")"}], " ", 
             SubscriptBox["w", "p"]}], "-", 
            SubscriptBox["y", "p"]}], ")"}]}], "-", 
         RowBox[{
          SubscriptBox["c", "2"], " ", 
          SuperscriptBox[
           SubscriptBox["y", "p"], "\[Prime]",
           MultilineFunction->None]}]}]},
       {
        RowBox[{
         RowBox[{
          RowBox[{"-", "\[Alpha]"}], " ", 
          RowBox[{"(", 
           RowBox[{"1", "-", 
            FractionBox["1", 
             SqrtBox[
              RowBox[{
               SuperscriptBox[
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"sin", "(", 
                    SubscriptBox["\[Theta]", "p"], ")"}], " ", 
                   SubscriptBox["h", "p"]}], "-", 
                  RowBox[{
                   RowBox[{"cos", "(", 
                    SubscriptBox["\[Theta]", "p"], ")"}], " ", 
                   SubscriptBox["w", "p"]}], "+", 
                  RowBox[{"2", " ", 
                   SubscriptBox["w", "p"]}], "-", 
                  SubscriptBox["x", "p"]}], ")"}], "2"], "+", 
               SuperscriptBox[
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"-", 
                    RowBox[{"cos", "(", 
                    SubscriptBox["\[Theta]", "p"], ")"}]}], " ", 
                   SubscriptBox["h", "p"]}], "-", 
                  RowBox[{
                   RowBox[{"sin", "(", 
                    SubscriptBox["\[Theta]", "p"], ")"}], " ", 
                   SubscriptBox["w", "p"]}], "-", 
                  SubscriptBox["y", "p"]}], ")"}], "2"]}]]]}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             SubscriptBox["w", "p"], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"sin", "(", 
                 SubscriptBox["\[Theta]", "p"], ")"}], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"2", " ", 
                   SubscriptBox["w", "p"]}], "-", 
                  SubscriptBox["x", "p"]}], ")"}]}], "+", 
               RowBox[{
                RowBox[{"cos", "(", 
                 SubscriptBox["\[Theta]", "p"], ")"}], " ", 
                SubscriptBox["y", "p"]}]}], ")"}]}], "+", 
            RowBox[{
             SubscriptBox["h", "p"], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"cos", "(", 
                 SubscriptBox["\[Theta]", "p"], ")"}], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"2", " ", 
                   SubscriptBox["w", "p"]}], "-", 
                  SubscriptBox["x", "p"]}], ")"}]}], "-", 
               RowBox[{
                RowBox[{"sin", "(", 
                 SubscriptBox["\[Theta]", "p"], ")"}], " ", 
                SubscriptBox["y", "p"]}]}], ")"}]}]}], ")"}]}], "-", 
         RowBox[{"\[Alpha]", " ", 
          RowBox[{"(", 
           RowBox[{"1", "-", 
            FractionBox["1", 
             SqrtBox[
              RowBox[{
               SuperscriptBox[
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"sin", "(", 
                    SubscriptBox["\[Theta]", "p"], ")"}], " ", 
                   SubscriptBox["h", "p"]}], "+", 
                  RowBox[{
                   RowBox[{"cos", "(", 
                    SubscriptBox["\[Theta]", "p"], ")"}], " ", 
                   SubscriptBox["w", "p"]}], "-", 
                  SubscriptBox["x", "p"]}], ")"}], "2"], "+", 
               SuperscriptBox[
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"-", 
                    RowBox[{"cos", "(", 
                    SubscriptBox["\[Theta]", "p"], ")"}]}], " ", 
                   SubscriptBox["h", "p"]}], "+", 
                  RowBox[{
                   RowBox[{"sin", "(", 
                    SubscriptBox["\[Theta]", "p"], ")"}], " ", 
                   SubscriptBox["w", "p"]}], "-", 
                  SubscriptBox["y", "p"]}], ")"}], "2"]}]]]}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             SubscriptBox["w", "p"], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"sin", "(", 
                 SubscriptBox["\[Theta]", "p"], ")"}], " ", 
                SubscriptBox["x", "p"]}], "-", 
               RowBox[{
                RowBox[{"cos", "(", 
                 SubscriptBox["\[Theta]", "p"], ")"}], " ", 
                SubscriptBox["y", "p"]}]}], ")"}]}], "+", 
            RowBox[{
             SubscriptBox["h", "p"], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"-", 
                 RowBox[{"cos", "(", 
                  SubscriptBox["\[Theta]", "p"], ")"}]}], " ", 
                SubscriptBox["x", "p"]}], "-", 
               RowBox[{
                RowBox[{"sin", "(", 
                 SubscriptBox["\[Theta]", "p"], ")"}], " ", 
                SubscriptBox["y", "p"]}]}], ")"}]}]}], ")"}]}], "-", 
         RowBox[{
          SubscriptBox["c", "3"], " ", 
          SuperscriptBox[
           SubscriptBox["\[Theta]", "p"], "\[Prime]",
           MultilineFunction->None]}]}]}
      },
      GridBoxAlignment->{
       "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
        "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}]}],
   Function[BoxForm`e$, 
    MatrixForm[BoxForm`e$]]], TraditionalForm]], "Output",
 CellChangeTimes->{3.714573363860479*^9, 3.7151945092709103`*^9, 
  3.715196512828076*^9, 3.7152171521546526`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"testValid", "=", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{
        SubscriptBox["x", "p"], "[", "t", "]"}], "\[Rule]", "1"}], ",", 
      RowBox[{
       RowBox[{
        SubscriptBox["y", "p"], "[", "t", "]"}], "\[Rule]", "1"}], ",", 
      RowBox[{
       RowBox[{
        SubscriptBox["\[Theta]", "p"], "[", "t", "]"}], "\[Rule]", "1"}]}], 
     "}"}]}], ";"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"testValid", "=", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{
         SubscriptBox["x", "p"], "[", "t", "]"}], "\[Rule]", "1"}], ",", 
       RowBox[{"(*", 
        RowBox[{
         RowBox[{
          RowBox[{
           SubscriptBox["y", "p"], "[", "t", "]"}], "\[Rule]", "1"}], ","}], 
        "*)"}], 
       RowBox[{
        RowBox[{
         SubscriptBox["\[Theta]", "p"], "[", "t", "]"}], "\[Rule]", "1"}]}], 
      "}"}]}], ";"}], 
   "*)"}]}], "\[IndentingNewLine]", "\"\<equation with 'testValid' applied in \
print only:\>\"", "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"(", 
     RowBox[{"EOMtoSolve", "=", 
      RowBox[{
       RowBox[{
        RowBox[{"SymetricEOMtoInvestigate", "/.", "NumericTestParams"}], "/.",
         "NumericParametersTest"}], "/.", "NumericNonStructuralDamping"}]}], 
     ")"}], "/.", "testValid"}], "//", "MatrixForm"}], "//", 
  "TraditionalForm"}], "\[IndentingNewLine]", 
 RowBox[{"EOMtoSolve", ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"numericEqs", "=", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"X1", "'"}], "[", "t", "]"}], "\[Equal]", 
            RowBox[{"X2", "[", "t", "]"}]}], ",", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{
             RowBox[{"X2", "'"}], "[", "t", "]"}], "\[Equal]", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"EOMtoSolve", "[", 
               RowBox[{"[", 
                RowBox[{"2", ",", "1"}], "]"}], "]"}], "[", 
              RowBox[{"[", "1", "]"}], "]"}], ")"}]}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{
             RowBox[{"X3", "'"}], "[", "t", "]"}], "\[Equal]", 
            RowBox[{"X4", "[", "t", "]"}]}], ",", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{
             RowBox[{"X4", "'"}], "[", "t", "]"}], "\[Equal]", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"EOMtoSolve", "[", 
               RowBox[{"[", 
                RowBox[{"2", ",", "2"}], "]"}], "]"}], "[", 
              RowBox[{"[", "1", "]"}], "]"}], ")"}]}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{
             RowBox[{"X5", "'"}], "[", "t", "]"}], "\[Equal]", 
            RowBox[{"X6", "[", "t", "]"}]}], ",", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{
             RowBox[{"X6", "'"}], "[", "t", "]"}], "\[Equal]", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"EOMtoSolve", "[", 
               RowBox[{"[", 
                RowBox[{"2", ",", "3"}], "]"}], "]"}], "[", 
              RowBox[{"[", "1", "]"}], "]"}], ")"}]}]}], "}"}], "/.", 
         RowBox[{
          RowBox[{
           SubscriptBox["x", "p"], "[", "t", "]"}], "\[Rule]", 
          RowBox[{"X1", "[", "t", "]"}]}]}], "/.", 
        RowBox[{
         RowBox[{
          SubscriptBox["y", "p"], "[", "t", "]"}], "\[Rule]", 
         RowBox[{"X3", "[", "t", "]"}]}]}], "/.", 
       RowBox[{
        RowBox[{
         SubscriptBox["\[Theta]", "p"], "[", "t", "]"}], "\[Rule]", 
        RowBox[{"X5", "[", "t", "]"}]}]}], "/.", 
      RowBox[{
       RowBox[{"D", "[", 
        RowBox[{
         RowBox[{
          SubscriptBox["x", "p"], "[", "t", "]"}], ",", "t"}], "]"}], 
       "\[Rule]", 
       RowBox[{"X2", "[", "t", "]"}]}]}], "/.", 
     RowBox[{
      RowBox[{"D", "[", 
       RowBox[{
        RowBox[{
         SubscriptBox["y", "p"], "[", "t", "]"}], ",", "t"}], "]"}], 
      "\[Rule]", 
      RowBox[{"X4", "[", "t", "]"}]}]}], "/.", 
    RowBox[{
     RowBox[{"D", "[", 
      RowBox[{
       RowBox[{
        SubscriptBox["\[Theta]", "p"], "[", "t", "]"}], ",", "t"}], "]"}], 
     "\[Rule]", 
     RowBox[{"X6", "[", "t", "]"}]}]}]}], 
  ";"}], "\[IndentingNewLine]", "NumericTestParams", "\[IndentingNewLine]", 
 RowBox[{"NumericParametersTest", "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{"startValues", "=", 
    RowBox[{
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{"X1", "[", "0", "]"}], "\[Equal]", 
         SubscriptBox["w", "p"]}], ",", 
        RowBox[{
         RowBox[{"X2", "[", "0", "]"}], "==", "0.1"}], ",", 
        RowBox[{
         RowBox[{"X3", "[", "0", "]"}], "\[Equal]", 
         RowBox[{
          RowBox[{"-", "1"}], "-", 
          SubscriptBox["h", "p"], "-", 
          FractionBox["\[Gamma]", "2"]}]}], ",", 
        RowBox[{
         RowBox[{"X4", "[", "0", "]"}], "\[Equal]", "1"}], ",", 
        RowBox[{
         RowBox[{"X5", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
        RowBox[{
         RowBox[{"X6", "[", "0", "]"}], "==", "0.1"}]}], "}"}], "/.", 
      "NumericTestParams"}], "/.", "NumericParametersTest"}]}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{"startValues", "=", 
    RowBox[{
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{"X1", "[", "0", "]"}], "\[Equal]", 
         SubscriptBox["w", "p"]}], ",", 
        RowBox[{
         RowBox[{"X2", "[", "0", "]"}], "==", "0.001"}], ",", 
        RowBox[{
         RowBox[{"X3", "[", "0", "]"}], "\[Equal]", 
         RowBox[{
          RowBox[{"-", "1"}], "-", 
          SubscriptBox["h", "p"], "-", 
          FractionBox["\[Gamma]", "2"]}]}], ",", 
        RowBox[{
         RowBox[{"X4", "[", "0", "]"}], "\[Equal]", "0.001"}], ",", 
        RowBox[{
         RowBox[{"X5", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
        RowBox[{
         RowBox[{"X6", "[", "0", "]"}], "==", "1"}]}], "}"}], "/.", 
      "NumericTestParams"}], "/.", "NumericParametersTest"}]}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{"startValues", "=", 
    RowBox[{
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{"X1", "[", "0", "]"}], "\[Equal]", 
         SubscriptBox["w", "p"]}], ",", 
        RowBox[{
         RowBox[{"X2", "[", "0", "]"}], "==", "0.001"}], ",", 
        RowBox[{
         RowBox[{"X3", "[", "0", "]"}], "\[Equal]", 
         RowBox[{
          RowBox[{"-", "1"}], "-", 
          SubscriptBox["h", "p"], "-", 
          FractionBox["\[Gamma]", "2"]}]}], ",", 
        RowBox[{
         RowBox[{"X4", "[", "0", "]"}], "\[Equal]", "1"}], ",", 
        RowBox[{
         RowBox[{"X5", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
        RowBox[{
         RowBox[{"X6", "[", "0", "]"}], "\[Equal]", "0"}]}], "}"}], "/.", 
      "NumericTestParams"}], "/.", "NumericParametersTest"}]}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{"startValues", "=", 
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{"X1", "[", "0", "]"}], "\[Equal]", 
       SubscriptBox["w", "p"]}], ",", 
      RowBox[{
       RowBox[{"X2", "[", "0", "]"}], "==", "0.001"}], ",", 
      RowBox[{
       RowBox[{"X3", "[", "0", "]"}], "\[Equal]", 
       RowBox[{
        RowBox[{"-", "1"}], "-", 
        SubscriptBox["h", "p"], "-", 
        FractionBox["\[Gamma]", "2"]}]}], ",", 
      RowBox[{
       RowBox[{"X4", "[", "0", "]"}], "\[Equal]", "1"}], ",", 
      RowBox[{
       RowBox[{"X5", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
      RowBox[{
       RowBox[{"X6", "[", "0", "]"}], "\[Equal]", "0"}]}], "}"}], "/.", 
    "NumericTestParams"}], "/.", 
   "NumericParametersTest"}]}], "\[IndentingNewLine]", 
 RowBox[{"T", "=", "100"}], "\[IndentingNewLine]", 
 RowBox[{"sol1", " ", "=", " ", 
  RowBox[{"NDSolve", "[", " ", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"numericEqs", ",", " ", "startValues"}], "}"}], ",", " ", 
    RowBox[{"{", 
     RowBox[{
     "X1", ",", " ", "X2", ",", "X3", ",", "X4", ",", "X5", ",", "X6"}], 
     "}"}], ",", " ", 
    RowBox[{"{", 
     RowBox[{"t", ",", " ", "0", ",", " ", "T"}], "}"}]}], " ", 
   "]"}]}]}], "Input",
 CellChangeTimes->{{3.7151956429896145`*^9, 3.7151956983144226`*^9}, {
   3.7151957689011908`*^9, 3.7151957760569324`*^9}, {3.7151959456336617`*^9, 
   3.7151960989317284`*^9}, {3.71519616949548*^9, 3.7151963007035255`*^9}, {
   3.7151963495008574`*^9, 3.7151964040720153`*^9}, {3.715196435651942*^9, 
   3.715196440840378*^9}, {3.715196574947234*^9, 3.7151966136010323`*^9}, {
   3.715196645367077*^9, 3.715196650809683*^9}, 3.7151966914185905`*^9, {
   3.7151967937358932`*^9, 3.715196829596653*^9}, {3.7151968827448683`*^9, 
   3.7151968891461077`*^9}, {3.7151969513829613`*^9, 
   3.7151969801129956`*^9}, {3.715217254127406*^9, 3.7152172944934936`*^9}, {
   3.715266316842909*^9, 3.7152663366119967`*^9}, {3.7152667072460475`*^9, 
   3.715266732477891*^9}, {3.715285084845935*^9, 3.7152850853819466`*^9}, {
   3.7152855316299763`*^9, 3.715285566071371*^9}, {3.7152856146022973`*^9, 
   3.715285635714738*^9}, 3.715285705506949*^9, 3.71528573615267*^9, {
   3.7152857896458654`*^9, 3.7152857902058773`*^9}, {3.7152858370468044`*^9, 
   3.71528583995873*^9}}],

Cell[BoxData["\<\"equation with 'testValid' applied in print only:\"\>"], \
"Output",
 CellChangeTimes->{
  3.715196005734481*^9, 3.715196411904206*^9, 3.715196442289338*^9, 
   3.715196522087208*^9, 3.7151966197440996`*^9, 3.715196651203944*^9, 
   3.7151966919339347`*^9, {3.7151968187124395`*^9, 3.7151968300629606`*^9}, 
   3.7151968898305635`*^9, {3.715196957810219*^9, 3.715196980914527*^9}, {
   3.715217196347955*^9, 3.7152172236012115`*^9}, 3.7152172954306355`*^9, 
   3.715217333696044*^9, 3.715217436564949*^9, 3.7152512003642817`*^9, 
   3.7152663377559943`*^9, 3.7152665926678734`*^9, 3.715266733233904*^9, 
   3.715285086405965*^9, 3.7152852744833903`*^9, 3.7152855964099026`*^9, 
   3.7152856364507523`*^9, 3.715285706294945*^9, 3.715285738425437*^9, 
   3.7152857911378946`*^9}],

Cell[BoxData[
 FormBox[
  TagBox[
   RowBox[{
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {
        RowBox[{
         SuperscriptBox[
          SubscriptBox["x", "p"], "\[Prime]\[Prime]",
          MultilineFunction->None], "(", "t", ")"}]},
       {
        RowBox[{
         SuperscriptBox[
          SubscriptBox["y", "p"], "\[Prime]\[Prime]",
          MultilineFunction->None], "(", "t", ")"}]},
       {
        RowBox[{
         SuperscriptBox[
          SubscriptBox["\[Theta]", "p"], "\[Prime]\[Prime]",
          MultilineFunction->None], "(", "t", ")"}]}
      },
      GridBoxAlignment->{
       "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
        "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}], 
    "\[LongEqual]", 
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"0.7627808803430645`"},
       {
        RowBox[{"-", "0.7033224290181195`"}]},
       {
        RowBox[{"-", "5.3644913963316725`"}]}
      },
      GridBoxAlignment->{
       "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
        "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}]}],
   Function[BoxForm`e$, 
    MatrixForm[BoxForm`e$]]], TraditionalForm]], "Output",
 CellChangeTimes->{
  3.715196005734481*^9, 3.715196411904206*^9, 3.715196442289338*^9, 
   3.715196522087208*^9, 3.7151966197440996`*^9, 3.715196651203944*^9, 
   3.7151966919339347`*^9, {3.7151968187124395`*^9, 3.7151968300629606`*^9}, 
   3.7151968898305635`*^9, {3.715196957810219*^9, 3.715196980914527*^9}, {
   3.715217196347955*^9, 3.7152172236012115`*^9}, 3.7152172954306355`*^9, 
   3.715217333696044*^9, 3.715217436564949*^9, 3.7152512003642817`*^9, 
   3.7152663377559943`*^9, 3.7152665926678734`*^9, 3.715266733233904*^9, 
   3.715285086405965*^9, 3.7152852744833903`*^9, 3.7152855964099026`*^9, 
   3.7152856364507523`*^9, 3.715285706294945*^9, 3.715285738425437*^9, 
   3.715285791141895*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"\[Kappa]", "\[Rule]", "1"}], ",", 
   RowBox[{"\[ScriptCapitalL]", "\[Rule]", "1"}], ",", 
   RowBox[{
    SubsuperscriptBox["\[Omega]", "s", "2"], "\[Rule]", "100"}], ",", 
   RowBox[{"\[Alpha]", "\[Rule]", "11.881188118811881`"}], ",", 
   RowBox[{"\[Gamma]", "\[Rule]", "0.04905`"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.715196005734481*^9, 3.715196411904206*^9, 3.715196442289338*^9, 
   3.715196522087208*^9, 3.7151966197440996`*^9, 3.715196651203944*^9, 
   3.7151966919339347`*^9, {3.7151968187124395`*^9, 3.7151968300629606`*^9}, 
   3.7151968898305635`*^9, {3.715196957810219*^9, 3.715196980914527*^9}, {
   3.715217196347955*^9, 3.7152172236012115`*^9}, 3.7152172954306355`*^9, 
   3.715217333696044*^9, 3.715217436564949*^9, 3.7152512003642817`*^9, 
   3.7152663377559943`*^9, 3.7152665926678734`*^9, 3.715266733233904*^9, 
   3.715285086405965*^9, 3.7152852744833903`*^9, 3.7152855964099026`*^9, 
   3.7152856364507523`*^9, 3.715285706294945*^9, 3.715285738425437*^9, 
   3.7152857911458955`*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    SubscriptBox["k", "1"], "\[Rule]", "200"}], ",", 
   RowBox[{
    SubscriptBox["k", "2"], "\[Rule]", 
    SubscriptBox["k", "1"]}], ",", 
   RowBox[{
    SubscriptBox["L0", "1"], "\[Rule]", "2"}], ",", 
   RowBox[{
    SubscriptBox["L0", "2"], "\[Rule]", 
    SubscriptBox["L0", "1"]}], ",", 
   RowBox[{
    SubscriptBox["m", "p"], "\[Rule]", "2"}], ",", 
   RowBox[{
    SubscriptBox["h", "p"], "\[Rule]", "0.1`"}], ",", 
   RowBox[{
    SubscriptBox["w", "p"], "\[Rule]", "1"}], ",", 
   RowBox[{"g", "\[Rule]", "9.81`"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.715196005734481*^9, 3.715196411904206*^9, 3.715196442289338*^9, 
   3.715196522087208*^9, 3.7151966197440996`*^9, 3.715196651203944*^9, 
   3.7151966919339347`*^9, {3.7151968187124395`*^9, 3.7151968300629606`*^9}, 
   3.7151968898305635`*^9, {3.715196957810219*^9, 3.715196980914527*^9}, {
   3.715217196347955*^9, 3.7152172236012115`*^9}, 3.7152172954306355`*^9, 
   3.715217333696044*^9, 3.715217436564949*^9, 3.7152512003642817`*^9, 
   3.7152663377559943`*^9, 3.7152665926678734`*^9, 3.715266733233904*^9, 
   3.715285086405965*^9, 3.7152852744833903`*^9, 3.7152855964099026`*^9, 
   3.7152856364507523`*^9, 3.715285706294945*^9, 3.715285738425437*^9, 
   3.7152857911498938`*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{"X1", "[", "0", "]"}], "\[Equal]", "1"}], ",", 
   RowBox[{
    RowBox[{"X2", "[", "0", "]"}], "\[Equal]", "0.001`"}], ",", 
   RowBox[{
    RowBox[{"X3", "[", "0", "]"}], "\[Equal]", 
    RowBox[{"-", "1.124525`"}]}], ",", 
   RowBox[{
    RowBox[{"X4", "[", "0", "]"}], "\[Equal]", "1"}], ",", 
   RowBox[{
    RowBox[{"X5", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
   RowBox[{
    RowBox[{"X6", "[", "0", "]"}], "\[Equal]", "0"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.715196005734481*^9, 3.715196411904206*^9, 3.715196442289338*^9, 
   3.715196522087208*^9, 3.7151966197440996`*^9, 3.715196651203944*^9, 
   3.7151966919339347`*^9, {3.7151968187124395`*^9, 3.7151968300629606`*^9}, 
   3.7151968898305635`*^9, {3.715196957810219*^9, 3.715196980914527*^9}, {
   3.715217196347955*^9, 3.7152172236012115`*^9}, 3.7152172954306355`*^9, 
   3.715217333696044*^9, 3.715217436564949*^9, 3.7152512003642817`*^9, 
   3.7152663377559943`*^9, 3.7152665926678734`*^9, 3.715266733233904*^9, 
   3.715285086405965*^9, 3.7152852744833903`*^9, 3.7152855964099026`*^9, 
   3.7152856364507523`*^9, 3.715285706294945*^9, 3.715285738425437*^9, 
   3.7152857911538944`*^9}],

Cell[BoxData["100"], "Output",
 CellChangeTimes->{
  3.715196005734481*^9, 3.715196411904206*^9, 3.715196442289338*^9, 
   3.715196522087208*^9, 3.7151966197440996`*^9, 3.715196651203944*^9, 
   3.7151966919339347`*^9, {3.7151968187124395`*^9, 3.7151968300629606`*^9}, 
   3.7151968898305635`*^9, {3.715196957810219*^9, 3.715196980914527*^9}, {
   3.715217196347955*^9, 3.7152172236012115`*^9}, 3.7152172954306355`*^9, 
   3.715217333696044*^9, 3.715217436564949*^9, 3.7152512003642817`*^9, 
   3.7152663377559943`*^9, 3.7152665926678734`*^9, 3.715266733233904*^9, 
   3.715285086405965*^9, 3.7152852744833903`*^9, 3.7152855964099026`*^9, 
   3.7152856364507523`*^9, 3.715285706294945*^9, 3.715285738425437*^9, 
   3.7152857911578956`*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"X1", "\[Rule]", 
     TagBox[
      TemplateBox[{RowBox[{
          StyleBox[
           TagBox["InterpolatingFunction", "SummaryHead"], 
           "NonInterpretableSummary"], 
          StyleBox["[", "NonInterpretableSummary"], 
          DynamicModuleBox[{Typeset`open$$ = False}, 
           PanelBox[
            PaneSelectorBox[{False -> GridBox[{{
                  PaneBox[
                   ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquarePlusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                   Alignment -> {Center, Center}, ImageSize -> 
                   Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                  GraphicsBox[{{{}, {}, {
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1]], 
                    LineBox[CompressedData["
1:eJwVkntUE3QUxycwAUfIUx7JIyFg0sB0iDzcvcA2HhsDxgZD4JhTgRAapVKc
BaFHwZMJS5TT2KCDkB2gIPNkKMjrUB0eAgfLB0kWMSEe/n75gIl1aP1xz/d8
//l+z/3c+5pSJT1sxmAwIk3zv+pPX7PUqbp5/JJjJkeBZmdlc53XoG9J0LbN
gcJYxPXmjUEsHC2Iz8mLo3DozZHM0R1OeHbtpnHSnoKgXzKianHHSZdz6nc2
UHCv9crj3fVGr3/HLRrWCLhLR1PGPHyxc6IuQEQJNKqDN9a0+mNOJ2+C9wGB
fT71y4N+gXgxupIvGSCgT4FIRm4QQoHdR6x1AldXRrZ3ruzAgWOvVDMsKTyo
dFh8ptuJDtGDDC2TgpfiN/78Hi7eG1q0ubCLwuv7mRYrxhDk9r3rrTV5VcuP
xVa6UIxVJYkqzSiUbv9TEvJWGApe/sNomyfQvHCqz9UjAve4y8LtnhDY/LjP
wOiORNbAL43V1wnwAhRF5mU8LFJoacgJAvcm+elMe0RzOG8vekrg6Rssdu0z
RJFu1SnYlkKd34VYs5+jsPXrqN2BLAqzUQu9Rc3R2JNX/6r1FgrVxuX8gooY
LPMeE3byTftM9KjyM/gYelDJWbShcC1O2h8TIEB5DnETzxF4klkjaLUSYl9m
aGXXfQITmkYfxykhlizfVv69QMDuQDbX+mYspgVYZQyriSnv10+ndHG4brZJ
6DpOIEHpH99+JB7nTmgfoLXpPtXeuzYnJuBD/4MZbe4UPpl+VPyelwibZvqt
VVYUzo6oLK8si7CRFcIy7qSwJLs8/OEtMdZENMs8AymQ9Za5hIZEZOtdrH1f
EpAJM0Mvl0tw//sSfVgfgcz2+7+by5KwTi+ddHpEwLjv3JEG+2R04XysDO0l
cPQri/INJ5OxwzdMmlpFoLdK2W9YSEamx1b54iqBLp6LXpOVgoXnk+pXvSiU
8Tge7NEUvKLQKCOcKTiMs0eiuVJ8u8lw9KEjhXROqYPPF1I8CfLgxxEUCrd+
X3HKNhWPq9mD+ZsoxGdKG28fT8UbWkGRo4nHnVy+/C9DKv50CUSFXQS4TI/d
5RIZFnIMXPEigZgi8TfTvTJUcg6U2moIuAZOTwQEy3HeoKoYukOgp1jm+bxW
jk1Vec/b7Sg4a7Yxz1imYVZ3+PwtE5+94Xdd9UVpODuVd3ivqX/LtzM/FM+k
4bBZGBQHUfiuJMkNpOkoZDd7qz0p+E1e0p65kY6CLzvEQ0sEYo3iq58FKjBR
+cLToCMQ1jH9gn1Rgc7qNJvP/zD9o9uscX1dgbk2hzQSE+//AN78tR4=
                    "]]}}}, {
                   DisplayFunction -> Identity, AspectRatio -> 1, 
                    Axes -> {False, False}, AxesLabel -> {None, None}, 
                    AxesOrigin -> {0, 0.98}, DisplayFunction :> Identity, 
                    Frame -> {{True, True}, {True, True}}, 
                    FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                    Directive[
                    Opacity[0.5], 
                    Thickness[Tiny], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    FrameTicks -> {{None, None}, {None, None}}, 
                    GridLines -> {None, None}, GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> 
                    Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}], 
                    Method -> {
                    "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
                    AbsolutePointSize[6], "ScalingFunctions" -> None}, 
                    PlotRange -> {{0., 100.}, {0.9834283892903499, 
                    1.017677688176991}}, PlotRangeClipping -> True, 
                    PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
                  GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "100.`"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                   BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}], True -> GridBox[{{
                  PaneBox[
                   ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquareMinusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                   Alignment -> {Center, Center}, ImageSize -> 
                   Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                  GraphicsBox[{{{}, {}, {
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1]], 
                    LineBox[CompressedData["
1:eJwVkntUE3QUxycwAUfIUx7JIyFg0sB0iDzcvcA2HhsDxgZD4JhTgRAapVKc
BaFHwZMJS5TT2KCDkB2gIPNkKMjrUB0eAgfLB0kWMSEe/n75gIl1aP1xz/d8
//l+z/3c+5pSJT1sxmAwIk3zv+pPX7PUqbp5/JJjJkeBZmdlc53XoG9J0LbN
gcJYxPXmjUEsHC2Iz8mLo3DozZHM0R1OeHbtpnHSnoKgXzKianHHSZdz6nc2
UHCv9crj3fVGr3/HLRrWCLhLR1PGPHyxc6IuQEQJNKqDN9a0+mNOJ2+C9wGB
fT71y4N+gXgxupIvGSCgT4FIRm4QQoHdR6x1AldXRrZ3ruzAgWOvVDMsKTyo
dFh8ptuJDtGDDC2TgpfiN/78Hi7eG1q0ubCLwuv7mRYrxhDk9r3rrTV5VcuP
xVa6UIxVJYkqzSiUbv9TEvJWGApe/sNomyfQvHCqz9UjAve4y8LtnhDY/LjP
wOiORNbAL43V1wnwAhRF5mU8LFJoacgJAvcm+elMe0RzOG8vekrg6Rssdu0z
RJFu1SnYlkKd34VYs5+jsPXrqN2BLAqzUQu9Rc3R2JNX/6r1FgrVxuX8gooY
LPMeE3byTftM9KjyM/gYelDJWbShcC1O2h8TIEB5DnETzxF4klkjaLUSYl9m
aGXXfQITmkYfxykhlizfVv69QMDuQDbX+mYspgVYZQyriSnv10+ndHG4brZJ
6DpOIEHpH99+JB7nTmgfoLXpPtXeuzYnJuBD/4MZbe4UPpl+VPyelwibZvqt
VVYUzo6oLK8si7CRFcIy7qSwJLs8/OEtMdZENMs8AymQ9Za5hIZEZOtdrH1f
EpAJM0Mvl0tw//sSfVgfgcz2+7+by5KwTi+ddHpEwLjv3JEG+2R04XysDO0l
cPQri/INJ5OxwzdMmlpFoLdK2W9YSEamx1b54iqBLp6LXpOVgoXnk+pXvSiU
8Tge7NEUvKLQKCOcKTiMs0eiuVJ8u8lw9KEjhXROqYPPF1I8CfLgxxEUCrd+
X3HKNhWPq9mD+ZsoxGdKG28fT8UbWkGRo4nHnVy+/C9DKv50CUSFXQS4TI/d
5RIZFnIMXPEigZgi8TfTvTJUcg6U2moIuAZOTwQEy3HeoKoYukOgp1jm+bxW
jk1Vec/b7Sg4a7Yxz1imYVZ3+PwtE5+94Xdd9UVpODuVd3ivqX/LtzM/FM+k
4bBZGBQHUfiuJMkNpOkoZDd7qz0p+E1e0p65kY6CLzvEQ0sEYo3iq58FKjBR
+cLToCMQ1jH9gn1Rgc7qNJvP/zD9o9uscX1dgbk2hzQSE+//AN78tR4=
                    "]]}}}, {
                   DisplayFunction -> Identity, AspectRatio -> 1, 
                    Axes -> {False, False}, AxesLabel -> {None, None}, 
                    AxesOrigin -> {0, 0.98}, DisplayFunction :> Identity, 
                    Frame -> {{True, True}, {True, True}}, 
                    FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                    Directive[
                    Opacity[0.5], 
                    Thickness[Tiny], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    FrameTicks -> {{None, None}, {None, None}}, 
                    GridLines -> {None, None}, GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> 
                    Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}], 
                    Method -> {
                    "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
                    AbsolutePointSize[6], "ScalingFunctions" -> None}, 
                    PlotRange -> {{0., 100.}, {0.9834283892903499, 
                    1.017677688176991}}, PlotRangeClipping -> True, 
                    PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
                  GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "100.`"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Order: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Hermite\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Periodic: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["False", "SummaryItem"]}]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                   BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}]}, 
             Dynamic[Typeset`open$$], ImageSize -> Automatic], 
            BaselinePosition -> Baseline], DynamicModuleValues :> {}], 
          StyleBox["]", "NonInterpretableSummary"]}]},
       "CopyTag",
       DisplayFunction->(#& ),
       InterpretationFunction->("InterpolatingFunction[{{0., 100.}}, <>]"& )],
      False,
      Editable->False,
      SelectWithContents->True,
      Selectable->False]}], ",", 
    RowBox[{"X2", "\[Rule]", 
     TagBox[
      TemplateBox[{RowBox[{
          StyleBox[
           TagBox["InterpolatingFunction", "SummaryHead"], 
           "NonInterpretableSummary"], 
          StyleBox["[", "NonInterpretableSummary"], 
          DynamicModuleBox[{Typeset`open$$ = False}, 
           PanelBox[
            PaneSelectorBox[{False -> GridBox[{{
                  PaneBox[
                   ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquarePlusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                   Alignment -> {Center, Center}, ImageSize -> 
                   Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                  GraphicsBox[{{{}, {}, {
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1]], 
                    LineBox[CompressedData["
1:eJwB0QMu/CFib1JlAgAAADwAAAACAAAAnIW2B5tvvD4XpfHSTWJQP/BdXF00
Ffo/qqZ7b18bgD/OO7mkBi4LQPvYjuKXqU+/ZDHLW8wwFEAMzBtGVqx/v0XB
TstvqRpAa2xEWnfHRL8alh9oPtcgQLnE0OOiPzW/GlLMUc4dJEA+hAQi2cpr
v6F7LwaTqidAl8dh8i4gdr9aI53txCYrQHx4W1gi64Q/nFE/PABnLkBOgQsS
i5tWP7P2yyq49jBAvmxHxp0qJT/chxLr9JsyQGyMbI/Jnk4/H1jeROg4NEDp
CLeB6lyEPyVfBQT2+DVASMW5hw14hL9vqcZ2CJs3QNwU9sxtD2O/fSrjTjVg
OUDEHzaCEC5Qv6TqhMAYHTtAQwrF04dZTj8P7sDlALw8QGub5FDI+YS/PihY
cAN+PkDekNEf8v57P9jSRFcFEUBAIc7XUijGcD/zLAsplvRAQJKIpiiO9WE/
miaURwLUQUB9VlyyAFhhv+RB6r9wpEJAxOjNiGz/gD+P+O1qbIZDQJ+8b5ER
lWW/3NC+b2pZREBGDaUYNYh7v7ZIUsFDKEVAjWGHZ+Hxbb/yW5NFqghGQIzg
RhD0umM/0JChIxPaRkAwmTBHUtVsvxBhXTQJvUdAr5AzAJIobr/c0NuR2ptI
QP/w5F4BEYM/SmInSa5rSUBcLPH2w6BxPxqPIDMPTUpAPQ7QiRL2Wr+M3eZ2
ch9LQNhFcFGoaBG/i8tvB7HtS0C6uqDNnVKBP+xUpsp8zUxAeWbziemzg7/v
/6nnSp5NQGtxXdgwbG+/VEZbN6aATkBNS9k/NHRRv1uu2eADVE9ARCQ1OIhj
bD/4Wo1rnhFQQMh/ue6EnIK/c6wEgAGCUEDH/saX27Z5P7+OYsHl6lBAkkqh
PR8/cj+7PheckFxRQPJbzzx56HA/fj4tHSnMUUAZ3CzqmOF0vxLPKctCNFJA
iZJxuTyKfD9XLX0SI6VSQP7kR/oe/WK/bRy3hoQOU0D6IigGtct5v0lbUqHT
dVNA77VA3ns4er/WZ0RV6eVTQITWiV9MvXM/NAUdNoBOVEAIA87pt+9hv0Nw
TLDdv1RAxjaXZzkaar8YK93QKC9VQOWBsorqsIA/vnZUHvWWVUCor3cV8Ip7
PxWQIgWIB1ZA4/NmxZLNZ789OtcYnHBWQCWIb0QuVFy/FrLixXbiVkD8URPb
XaB4P7V5Txk/UldAlvcihnAKgb8m0qKZiLpXQM/hmuLVH3i/R/hMs5grWEAM
PtHj/wQXPzmv3fkplVhAHzBjlWUIdD8+GeT4//9YQGnnE0tbR32/dS/ALQ==

                    "]]}}}, {
                   DisplayFunction -> Identity, AspectRatio -> 1, 
                    Axes -> {False, False}, AxesLabel -> {None, None}, 
                    AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
                    Frame -> {{True, True}, {True, True}}, 
                    FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                    Directive[
                    Opacity[0.5], 
                    Thickness[Tiny], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    FrameTicks -> {{None, None}, {None, None}}, 
                    GridLines -> {None, None}, GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> 
                    Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}], 
                    Method -> {
                    "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
                    AbsolutePointSize[6], "ScalingFunctions" -> None}, 
                    PlotRange -> {{0., 100.}, {-0.010242047279985752`, 
                    0.010214107819987321`}}, PlotRangeClipping -> True, 
                    PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
                  GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "100.`"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                   BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}], True -> GridBox[{{
                  PaneBox[
                   ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquareMinusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                   Alignment -> {Center, Center}, ImageSize -> 
                   Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                  GraphicsBox[{{{}, {}, {
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1]], 
                    LineBox[CompressedData["
1:eJwB0QMu/CFib1JlAgAAADwAAAACAAAAnIW2B5tvvD4XpfHSTWJQP/BdXF00
Ffo/qqZ7b18bgD/OO7mkBi4LQPvYjuKXqU+/ZDHLW8wwFEAMzBtGVqx/v0XB
TstvqRpAa2xEWnfHRL8alh9oPtcgQLnE0OOiPzW/GlLMUc4dJEA+hAQi2cpr
v6F7LwaTqidAl8dh8i4gdr9aI53txCYrQHx4W1gi64Q/nFE/PABnLkBOgQsS
i5tWP7P2yyq49jBAvmxHxp0qJT/chxLr9JsyQGyMbI/Jnk4/H1jeROg4NEDp
CLeB6lyEPyVfBQT2+DVASMW5hw14hL9vqcZ2CJs3QNwU9sxtD2O/fSrjTjVg
OUDEHzaCEC5Qv6TqhMAYHTtAQwrF04dZTj8P7sDlALw8QGub5FDI+YS/PihY
cAN+PkDekNEf8v57P9jSRFcFEUBAIc7XUijGcD/zLAsplvRAQJKIpiiO9WE/
miaURwLUQUB9VlyyAFhhv+RB6r9wpEJAxOjNiGz/gD+P+O1qbIZDQJ+8b5ER
lWW/3NC+b2pZREBGDaUYNYh7v7ZIUsFDKEVAjWGHZ+Hxbb/yW5NFqghGQIzg
RhD0umM/0JChIxPaRkAwmTBHUtVsvxBhXTQJvUdAr5AzAJIobr/c0NuR2ptI
QP/w5F4BEYM/SmInSa5rSUBcLPH2w6BxPxqPIDMPTUpAPQ7QiRL2Wr+M3eZ2
ch9LQNhFcFGoaBG/i8tvB7HtS0C6uqDNnVKBP+xUpsp8zUxAeWbziemzg7/v
/6nnSp5NQGtxXdgwbG+/VEZbN6aATkBNS9k/NHRRv1uu2eADVE9ARCQ1OIhj
bD/4Wo1rnhFQQMh/ue6EnIK/c6wEgAGCUEDH/saX27Z5P7+OYsHl6lBAkkqh
PR8/cj+7PheckFxRQPJbzzx56HA/fj4tHSnMUUAZ3CzqmOF0vxLPKctCNFJA
iZJxuTyKfD9XLX0SI6VSQP7kR/oe/WK/bRy3hoQOU0D6IigGtct5v0lbUqHT
dVNA77VA3ns4er/WZ0RV6eVTQITWiV9MvXM/NAUdNoBOVEAIA87pt+9hv0Nw
TLDdv1RAxjaXZzkaar8YK93QKC9VQOWBsorqsIA/vnZUHvWWVUCor3cV8Ip7
PxWQIgWIB1ZA4/NmxZLNZ789OtcYnHBWQCWIb0QuVFy/FrLixXbiVkD8URPb
XaB4P7V5Txk/UldAlvcihnAKgb8m0qKZiLpXQM/hmuLVH3i/R/hMs5grWEAM
PtHj/wQXPzmv3fkplVhAHzBjlWUIdD8+GeT4//9YQGnnE0tbR32/dS/ALQ==

                    "]]}}}, {
                   DisplayFunction -> Identity, AspectRatio -> 1, 
                    Axes -> {False, False}, AxesLabel -> {None, None}, 
                    AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
                    Frame -> {{True, True}, {True, True}}, 
                    FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                    Directive[
                    Opacity[0.5], 
                    Thickness[Tiny], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    FrameTicks -> {{None, None}, {None, None}}, 
                    GridLines -> {None, None}, GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> 
                    Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}], 
                    Method -> {
                    "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
                    AbsolutePointSize[6], "ScalingFunctions" -> None}, 
                    PlotRange -> {{0., 100.}, {-0.010242047279985752`, 
                    0.010214107819987321`}}, PlotRangeClipping -> True, 
                    PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
                  GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "100.`"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Order: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Hermite\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Periodic: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["False", "SummaryItem"]}]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                   BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}]}, 
             Dynamic[Typeset`open$$], ImageSize -> Automatic], 
            BaselinePosition -> Baseline], DynamicModuleValues :> {}], 
          StyleBox["]", "NonInterpretableSummary"]}]},
       "CopyTag",
       DisplayFunction->(#& ),
       InterpretationFunction->("InterpolatingFunction[{{0., 100.}}, <>]"& )],
      False,
      Editable->False,
      SelectWithContents->True,
      Selectable->False]}], ",", 
    RowBox[{"X3", "\[Rule]", 
     TagBox[
      TemplateBox[{RowBox[{
          StyleBox[
           TagBox["InterpolatingFunction", "SummaryHead"], 
           "NonInterpretableSummary"], 
          StyleBox["[", "NonInterpretableSummary"], 
          DynamicModuleBox[{Typeset`open$$ = False}, 
           PanelBox[
            PaneSelectorBox[{False -> GridBox[{{
                  PaneBox[
                   ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquarePlusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                   Alignment -> {Center, Center}, ImageSize -> 
                   Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                  GraphicsBox[{{{}, {}, {
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1]], 
                    LineBox[CompressedData["
1:eJwB0QMu/CFib1JlAgAAADwAAAACAAAAnIW2B5tvvD513C4mDP7xv/BdXF00
Ffo/Z9UbfGwx47/OO7mkBi4LQPC//LahQf2/ZDHLW8wwFEDA5ona4ufiv0XB
TstvqRpAsxbdNtgC8r8alh9oPtcgQIy1rnp06fi/GlLMUc4dJEBWL4txGuPa
v6F7LwaTqidAsPotlMSr+79aI53txCYrQNKjlTlqPOy/nFE/PABnLkA1gBBy
yETpv7P2yyq49jBAvCum/IFI/L/chxLr9JsyQE6sBuqpC96/H1jeROg4NEDQ
DS/J95j1vyVfBQT2+DVAOe49CS/J9b9vqcZ2CJs3QOVzLWzxOt6/fSrjTjVg
OUCmU5tOY/r8v6TqhMAYHTtAhHKeiDVf5r8P7sDlALw8QIOjAZkvZu+/PihY
cAN+PkANDNdo+I/6v9jSRFcFEUBA/VM1MBr92r/zLAsplvRAQH4EW7gAXvq/
miaURwLUQUCUdr6jqi/wv+RB6r9wpEJAggw/hs3I5b+P+O1qbIZDQJGdzU+w
9fy/3NC+b2pZREDkAzbq9djgv7ZIUsFDKEVAD5GN8e+z87/yW5NFqghGQBYA
Jgc/hfe/0JChIxPaRkCJ9VYLM+7bvxBhXTQJvUdACzDnxItn/L/c0NuR2ptI
QH6GHDnxWOm/SmInSa5rSUDkKHvLNRnsvxqPIDMPTUpAmnHM5MyO+7+M3eZ2
ch9LQIU+wpwMKty/i8tvB7HtS0DSInDtS/T2v+xUpsp8zUxAhSFKHGhn9L/v
/6nnSp5NQKCxRtMbXeC/VEZbN6aATkCXbvC1sDn9v1uu2eADVE9AyI4eS8Bg
5r/4Wo1rnhFQQAAJitPGVe+/c6wEgAGCUEBSuzlIT5r6v7+OYsHl6lBAtEsh
xbkH27+7PheckFxRQMqQmaNGSfq/fj4tHSnMUUChA2XCHFXwvxLPKctCNFJA
M+7LJ6yC5b9XLX0SI6VSQFQP0zI6Av2/bRy3hoQOU0Az4XYOORrhv0lbUqHT
dVNAIwr8xw1x87/WZ0RV6eVTQPZcn/0Gxve/NAUdNoBOVEBww8pi96bbv0Nw
TLDdv1RAY4EqeU1D/L8YK93QKC9VQJdITNjcBeq/vnZUHvWWVUB3wvoyt1br
vxWQIgWIB1ZAHuyqQZXI+789OtcYnHBWQIE+3tc2q9y/FrLixXbiVkDCMhG3
29b4v7V5Txk/UldA8MXcXws88r8m0qKZiLpXQJ3VPw2q2+K/R/hMs5grWEBv
RGFBR0f9vzmv3fkplVhA9i0WwsBF478+GeT4//9YQGdnRtUGj/K/lgniSg==

                    "]]}}}, {
                   DisplayFunction -> Identity, AspectRatio -> 1, 
                    Axes -> {False, False}, AxesLabel -> {None, None}, 
                    AxesOrigin -> {0, -2.}, DisplayFunction :> Identity, 
                    Frame -> {{True, True}, {True, True}}, 
                    FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                    Directive[
                    Opacity[0.5], 
                    Thickness[Tiny], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    FrameTicks -> {{None, None}, {None, None}}, 
                    GridLines -> {None, None}, GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> 
                    Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}], 
                    Method -> {
                    "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
                    AbsolutePointSize[6], "ScalingFunctions" -> None}, 
                    PlotRange -> {{0., 
                    100.}, {-1.82990193881076, -0.4201112850976093}}, 
                    PlotRangeClipping -> True, PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
                  GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "100.`"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                   BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}], True -> GridBox[{{
                  PaneBox[
                   ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquareMinusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                   Alignment -> {Center, Center}, ImageSize -> 
                   Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                  GraphicsBox[{{{}, {}, {
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1]], 
                    LineBox[CompressedData["
1:eJwB0QMu/CFib1JlAgAAADwAAAACAAAAnIW2B5tvvD513C4mDP7xv/BdXF00
Ffo/Z9UbfGwx47/OO7mkBi4LQPC//LahQf2/ZDHLW8wwFEDA5ona4ufiv0XB
TstvqRpAsxbdNtgC8r8alh9oPtcgQIy1rnp06fi/GlLMUc4dJEBWL4txGuPa
v6F7LwaTqidAsPotlMSr+79aI53txCYrQNKjlTlqPOy/nFE/PABnLkA1gBBy
yETpv7P2yyq49jBAvCum/IFI/L/chxLr9JsyQE6sBuqpC96/H1jeROg4NEDQ
DS/J95j1vyVfBQT2+DVAOe49CS/J9b9vqcZ2CJs3QOVzLWzxOt6/fSrjTjVg
OUCmU5tOY/r8v6TqhMAYHTtAhHKeiDVf5r8P7sDlALw8QIOjAZkvZu+/PihY
cAN+PkANDNdo+I/6v9jSRFcFEUBA/VM1MBr92r/zLAsplvRAQH4EW7gAXvq/
miaURwLUQUCUdr6jqi/wv+RB6r9wpEJAggw/hs3I5b+P+O1qbIZDQJGdzU+w
9fy/3NC+b2pZREDkAzbq9djgv7ZIUsFDKEVAD5GN8e+z87/yW5NFqghGQBYA
Jgc/hfe/0JChIxPaRkCJ9VYLM+7bvxBhXTQJvUdACzDnxItn/L/c0NuR2ptI
QH6GHDnxWOm/SmInSa5rSUDkKHvLNRnsvxqPIDMPTUpAmnHM5MyO+7+M3eZ2
ch9LQIU+wpwMKty/i8tvB7HtS0DSInDtS/T2v+xUpsp8zUxAhSFKHGhn9L/v
/6nnSp5NQKCxRtMbXeC/VEZbN6aATkCXbvC1sDn9v1uu2eADVE9AyI4eS8Bg
5r/4Wo1rnhFQQAAJitPGVe+/c6wEgAGCUEBSuzlIT5r6v7+OYsHl6lBAtEsh
xbkH27+7PheckFxRQMqQmaNGSfq/fj4tHSnMUUChA2XCHFXwvxLPKctCNFJA
M+7LJ6yC5b9XLX0SI6VSQFQP0zI6Av2/bRy3hoQOU0Az4XYOORrhv0lbUqHT
dVNAIwr8xw1x87/WZ0RV6eVTQPZcn/0Gxve/NAUdNoBOVEBww8pi96bbv0Nw
TLDdv1RAY4EqeU1D/L8YK93QKC9VQJdITNjcBeq/vnZUHvWWVUB3wvoyt1br
vxWQIgWIB1ZAHuyqQZXI+789OtcYnHBWQIE+3tc2q9y/FrLixXbiVkDCMhG3
29b4v7V5Txk/UldA8MXcXws88r8m0qKZiLpXQJ3VPw2q2+K/R/hMs5grWEBv
RGFBR0f9vzmv3fkplVhA9i0WwsBF478+GeT4//9YQGdnRtUGj/K/lgniSg==

                    "]]}}}, {
                   DisplayFunction -> Identity, AspectRatio -> 1, 
                    Axes -> {False, False}, AxesLabel -> {None, None}, 
                    AxesOrigin -> {0, -2.}, DisplayFunction :> Identity, 
                    Frame -> {{True, True}, {True, True}}, 
                    FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                    Directive[
                    Opacity[0.5], 
                    Thickness[Tiny], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    FrameTicks -> {{None, None}, {None, None}}, 
                    GridLines -> {None, None}, GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> 
                    Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}], 
                    Method -> {
                    "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
                    AbsolutePointSize[6], "ScalingFunctions" -> None}, 
                    PlotRange -> {{0., 
                    100.}, {-1.82990193881076, -0.4201112850976093}}, 
                    PlotRangeClipping -> True, PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
                  GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "100.`"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Order: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Hermite\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Periodic: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["False", "SummaryItem"]}]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                   BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}]}, 
             Dynamic[Typeset`open$$], ImageSize -> Automatic], 
            BaselinePosition -> Baseline], DynamicModuleValues :> {}], 
          StyleBox["]", "NonInterpretableSummary"]}]},
       "CopyTag",
       DisplayFunction->(#& ),
       InterpretationFunction->("InterpolatingFunction[{{0., 100.}}, <>]"& )],
      False,
      Editable->False,
      SelectWithContents->True,
      Selectable->False]}], ",", 
    RowBox[{"X4", "\[Rule]", 
     TagBox[
      TemplateBox[{RowBox[{
          StyleBox[
           TagBox["InterpolatingFunction", "SummaryHead"], 
           "NonInterpretableSummary"], 
          StyleBox["[", "NonInterpretableSummary"], 
          DynamicModuleBox[{Typeset`open$$ = False}, 
           PanelBox[
            PaneSelectorBox[{False -> GridBox[{{
                  PaneBox[
                   ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquarePlusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                   Alignment -> {Center, Center}, ImageSize -> 
                   Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                  GraphicsBox[{{{}, {}, {
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1]], 
                    LineBox[CompressedData["
1:eJwB0QMu/CFib1JlAgAAADwAAAACAAAAnIW2B5tvvD6Cbf7////vP/BdXF00
Ffo/KXNVU+dy5b/OO7mkBi4LQJUlL2GZnbc/ZDHLW8wwFEBFwI3riP3kP0XB
TstvqRpAx4+lsfz/778alh9oPtcgQBqPpzgzUek/GlLMUc4dJED2DD2I31O2
v6F7LwaTqidA/Xv3Q06Q4L9aI53txCYrQHAP9uNaEO4/nFE/PABnLkD/HLqG
Di/sv7P2yyq49jBACQLQvZ6X2j/chxLr9JsyQD4qnNNjGdg/H1jeROg4NEDC
ZOgoQ1TuvyVfBQT2+DVA55S8JQ4l7j9vqcZ2CJs3QITu8eEvu9i/fSrjTjVg
OUDg6Ul9x5jOv6TqhMAYHTtAV/sPvLGP6T8P7sDlALw8QNWoViGmVe+/PihY
cAN+PkAfzGvTxeLkP9jSRFcFEUBAHCE4Uy8dvD/zLAsplvRAQC15KazJg+W/
miaURwLUQUA8Zv326JbvP+RB6r9wpEJAXYoo0sbp6L+P+O1qbIZDQGU/RBcZ
Xs8/3NC+b2pZREBElGQu1hLhP7ZIUsFDKEVAajd1KsOh77/yW5NFqghGQMAh
pGZn6+s/0JChIxPaRkAoz+ar83jNvxBhXTQJvUdAEOECS6wE2b/c0NuR2ptI
QN9UAD8OPuw/SmInSa5rSUDdKr1RQv7tvxqPIDMPTUpAzgbPJWcW4T+M3eZ2
ch9LQGBgdAnaEdA/i8tvB7HtS0AOZQVea8Hsv+xUpsp8zUxACRrP+zJD7z/v
/6nnSp5NQOZiBs8M4N+/VEZbN6aATkDzPv1Q5Hi+v1uu2eADVE9AKtkH2E+R
6T/4Wo1rnhFQQPA77kfiUO+/c6wEgAGCUEAgkLZi4sDkP7+OYsHl6lBAQZ7O
loYmvj+7PheckFxRQLq+aqFaw+W/fj4tHSnMUUBb7C/cPafvPxLPKctCNFJA
BoxbQJmY6L9XLX0SI6VSQM8QB4tkGs0/bRy3hoQOU0B0jloCxaHhP0lbUqHT
dVNAMbkCMUu877/WZ0RV6eVTQOo4WdRuges/NAUdNoBOVEC0ZIryXezJv0Nw
TLDdv1RAPGMFjY7U2r8YK93QKC9VQBXQTm0gu+w/vnZUHvWWVUCWWTfbM5Lt
vxWQIgWIB1ZACSi3ULcH4D89OtcYnHBWQBy79cLemtI/FrLixXbiVkBB1RHC
5Xjpv7V5Txk/UldAxZ5zNsz97z8m0qKZiLpXQKmLAnCF6eS/R/hMs5grWEBw
oLHnJKexPzmv3fkplVhAoVDrVq6S5T8+GeT4//9YQDU7Gc939e+/wuTRYg==

                    "]]}}}, {
                   DisplayFunction -> Identity, AspectRatio -> 1, 
                    Axes -> {False, False}, AxesLabel -> {None, None}, 
                    AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
                    Frame -> {{True, True}, {True, True}}, 
                    FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                    Directive[
                    Opacity[0.5], 
                    Thickness[Tiny], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    FrameTicks -> {{None, None}, {None, None}}, 
                    GridLines -> {None, None}, GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> 
                    Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}], 
                    Method -> {
                    "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
                    AbsolutePointSize[6], "ScalingFunctions" -> None}, 
                    PlotRange -> {{0., 100.}, {-0.999998423544178, 
                    0.9999999999885605}}, PlotRangeClipping -> True, 
                    PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
                  GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "100.`"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                   BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}], True -> GridBox[{{
                  PaneBox[
                   ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquareMinusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                   Alignment -> {Center, Center}, ImageSize -> 
                   Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                  GraphicsBox[{{{}, {}, {
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1]], 
                    LineBox[CompressedData["
1:eJwB0QMu/CFib1JlAgAAADwAAAACAAAAnIW2B5tvvD6Cbf7////vP/BdXF00
Ffo/KXNVU+dy5b/OO7mkBi4LQJUlL2GZnbc/ZDHLW8wwFEBFwI3riP3kP0XB
TstvqRpAx4+lsfz/778alh9oPtcgQBqPpzgzUek/GlLMUc4dJED2DD2I31O2
v6F7LwaTqidA/Xv3Q06Q4L9aI53txCYrQHAP9uNaEO4/nFE/PABnLkD/HLqG
Di/sv7P2yyq49jBACQLQvZ6X2j/chxLr9JsyQD4qnNNjGdg/H1jeROg4NEDC
ZOgoQ1TuvyVfBQT2+DVA55S8JQ4l7j9vqcZ2CJs3QITu8eEvu9i/fSrjTjVg
OUDg6Ul9x5jOv6TqhMAYHTtAV/sPvLGP6T8P7sDlALw8QNWoViGmVe+/PihY
cAN+PkAfzGvTxeLkP9jSRFcFEUBAHCE4Uy8dvD/zLAsplvRAQC15KazJg+W/
miaURwLUQUA8Zv326JbvP+RB6r9wpEJAXYoo0sbp6L+P+O1qbIZDQGU/RBcZ
Xs8/3NC+b2pZREBElGQu1hLhP7ZIUsFDKEVAajd1KsOh77/yW5NFqghGQMAh
pGZn6+s/0JChIxPaRkAoz+ar83jNvxBhXTQJvUdAEOECS6wE2b/c0NuR2ptI
QN9UAD8OPuw/SmInSa5rSUDdKr1RQv7tvxqPIDMPTUpAzgbPJWcW4T+M3eZ2
ch9LQGBgdAnaEdA/i8tvB7HtS0AOZQVea8Hsv+xUpsp8zUxACRrP+zJD7z/v
/6nnSp5NQOZiBs8M4N+/VEZbN6aATkDzPv1Q5Hi+v1uu2eADVE9AKtkH2E+R
6T/4Wo1rnhFQQPA77kfiUO+/c6wEgAGCUEAgkLZi4sDkP7+OYsHl6lBAQZ7O
loYmvj+7PheckFxRQLq+aqFaw+W/fj4tHSnMUUBb7C/cPafvPxLPKctCNFJA
BoxbQJmY6L9XLX0SI6VSQM8QB4tkGs0/bRy3hoQOU0B0jloCxaHhP0lbUqHT
dVNAMbkCMUu877/WZ0RV6eVTQOo4WdRuges/NAUdNoBOVEC0ZIryXezJv0Nw
TLDdv1RAPGMFjY7U2r8YK93QKC9VQBXQTm0gu+w/vnZUHvWWVUCWWTfbM5Lt
vxWQIgWIB1ZACSi3ULcH4D89OtcYnHBWQBy79cLemtI/FrLixXbiVkBB1RHC
5Xjpv7V5Txk/UldAxZ5zNsz97z8m0qKZiLpXQKmLAnCF6eS/R/hMs5grWEBw
oLHnJKexPzmv3fkplVhAoVDrVq6S5T8+GeT4//9YQDU7Gc939e+/wuTRYg==

                    "]]}}}, {
                   DisplayFunction -> Identity, AspectRatio -> 1, 
                    Axes -> {False, False}, AxesLabel -> {None, None}, 
                    AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
                    Frame -> {{True, True}, {True, True}}, 
                    FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                    Directive[
                    Opacity[0.5], 
                    Thickness[Tiny], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    FrameTicks -> {{None, None}, {None, None}}, 
                    GridLines -> {None, None}, GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> 
                    Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}], 
                    Method -> {
                    "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
                    AbsolutePointSize[6], "ScalingFunctions" -> None}, 
                    PlotRange -> {{0., 100.}, {-0.999998423544178, 
                    0.9999999999885605}}, PlotRangeClipping -> True, 
                    PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
                  GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "100.`"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Order: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Hermite\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Periodic: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["False", "SummaryItem"]}]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                   BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}]}, 
             Dynamic[Typeset`open$$], ImageSize -> Automatic], 
            BaselinePosition -> Baseline], DynamicModuleValues :> {}], 
          StyleBox["]", "NonInterpretableSummary"]}]},
       "CopyTag",
       DisplayFunction->(#& ),
       InterpretationFunction->("InterpolatingFunction[{{0., 100.}}, <>]"& )],
      False,
      Editable->False,
      SelectWithContents->True,
      Selectable->False]}], ",", 
    RowBox[{"X5", "\[Rule]", 
     TagBox[
      TemplateBox[{RowBox[{
          StyleBox[
           TagBox["InterpolatingFunction", "SummaryHead"], 
           "NonInterpretableSummary"], 
          StyleBox["[", "NonInterpretableSummary"], 
          DynamicModuleBox[{Typeset`open$$ = False}, 
           PanelBox[
            PaneSelectorBox[{False -> GridBox[{{
                  PaneBox[
                   ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquarePlusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                   Alignment -> {Center, Center}, ImageSize -> 
                   Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                  GraphicsBox[{{{}, {}, {
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1]], 
                    LineBox[CompressedData["
1:eJwB0QMu/CFib1JlAgAAADwAAAACAAAAnIW2B5tvvD4AgBTDQQvyO/BdXF00
Ffo/BDnVHzeoSL/OO7mkBi4LQDSnECi6Qko/ZDHLW8wwFEDZr4Z/kuk2v0XB
TstvqRpAIUedNsRmJ78alh9oPtcgQN54xWK6hCC/GlLMUc4dJEC/FGteLMBM
P6F7LwaTqidAeEzCTVplRr9aI53txCYrQM0d2VM4jgw/nFE/PABnLkAqurlh
a9n9vrP2yyq49jBAQAaZ6MXKMT/chxLr9JsyQCT1X1al1T+/H1jeROg4NEDO
KFvmt2wxPyVfBQT2+DVA+61r3OOXOj9vqcZ2CJs3QFW/0vq0HzG/fSrjTjVg
OUDKRRaom1EfP6TqhMAYHTtAbL8OBk74274P7sDlALw8QL4oerEIex6/PihY
cAN+PkAocTEuqZc9v9jSRFcFEUBAj2DmIn2bST/zLAsplvRAQEIFCrkUlyq/
miaURwLUQUD1jUvwml3oPuRB6r9wpEJAT8uRIoK/Ib+P+O1qbIZDQC6/q5/H
Zj8/3NC+b2pZREAekBmiMa9Iv7ZIUsFDKEVAlgVZkHJuD7/yW5NFqghGQGB+
y2oj3xG/0JChIxPaRkCAZi0axbpBPxBhXTQJvUdAWbHZJYVGQb/c0NuR2ptI
QELzrYlogTE/SmInSa5rSUBOyi8Ja847vxqPIDMPTUpAZn/Dq3rORT+M3eZ2
ch9LQB8ufzAzkz+/i8tvB7HtS0A8Ua6OfGbhPuxUpsp8zUxAB7XIMYdOOD/v
/6nnSp5NQKP5w8ppeEE/VEZbN6aATkBr7W/D9z0/v1uu2eADVE9AuH8rKnO+
B7/4Wo1rnhFQQKGvnCXRMDM/c6wEgAGCUECCIHOmSTxBv7+OYsHl6lBAOYRW
NYAJIT+7PheckFxRQBIunhumzTk/fj4tHSnMUUAgN6hlj+QpvxLPKctCNFJA
3t/TsGviQL9XLX0SI6VSQBI/7xmXl0k/bRy3hoQOU0ByBwjwYa1Cv0lbUqHT
dVNAgzz839eyQL/WZ0RV6eVTQIb8fMt//QU/NAUdNoBOVED2anwdYkFQP0Nw
TLDdv1RAJ577k7XSTr8YK93QKC9VQNSzUhSmmj4/vnZUHvWWVUCI5V1etwXn
vhWQIgWIB1ZASKgdlWc0Nz89OtcYnHBWQO2qPgj6J0e/FrLixXbiVkCgw+ez
mdJAP7V5Txk/UldAxH80dnbEEL8m0qKZiLpXQNV7VqKSZz0/R/hMs5grWEB8
Lr7QL7c5vzmv3fkplVhAw0TxSPj0Fz8+GeT4//9YQHh0CUvw1Bm/7nCwTg==

                    "]]}}}, {
                   DisplayFunction -> Identity, AspectRatio -> 1, 
                    Axes -> {False, False}, AxesLabel -> {None, None}, 
                    AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
                    Frame -> {{True, True}, {True, True}}, 
                    FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                    Directive[
                    Opacity[0.5], 
                    Thickness[Tiny], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    FrameTicks -> {{None, None}, {None, None}}, 
                    GridLines -> {None, None}, GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> 
                    Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}], 
                    Method -> {
                    "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
                    AbsolutePointSize[6], "ScalingFunctions" -> None}, 
                    PlotRange -> {{0., 100.}, {-0.000940645848427961, 
                    0.0009921510845233828}}, PlotRangeClipping -> True, 
                    PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
                  GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "100.`"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                   BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}], True -> GridBox[{{
                  PaneBox[
                   ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquareMinusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                   Alignment -> {Center, Center}, ImageSize -> 
                   Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                  GraphicsBox[{{{}, {}, {
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1]], 
                    LineBox[CompressedData["
1:eJwB0QMu/CFib1JlAgAAADwAAAACAAAAnIW2B5tvvD4AgBTDQQvyO/BdXF00
Ffo/BDnVHzeoSL/OO7mkBi4LQDSnECi6Qko/ZDHLW8wwFEDZr4Z/kuk2v0XB
TstvqRpAIUedNsRmJ78alh9oPtcgQN54xWK6hCC/GlLMUc4dJEC/FGteLMBM
P6F7LwaTqidAeEzCTVplRr9aI53txCYrQM0d2VM4jgw/nFE/PABnLkAqurlh
a9n9vrP2yyq49jBAQAaZ6MXKMT/chxLr9JsyQCT1X1al1T+/H1jeROg4NEDO
KFvmt2wxPyVfBQT2+DVA+61r3OOXOj9vqcZ2CJs3QFW/0vq0HzG/fSrjTjVg
OUDKRRaom1EfP6TqhMAYHTtAbL8OBk74274P7sDlALw8QL4oerEIex6/PihY
cAN+PkAocTEuqZc9v9jSRFcFEUBAj2DmIn2bST/zLAsplvRAQEIFCrkUlyq/
miaURwLUQUD1jUvwml3oPuRB6r9wpEJAT8uRIoK/Ib+P+O1qbIZDQC6/q5/H
Zj8/3NC+b2pZREAekBmiMa9Iv7ZIUsFDKEVAlgVZkHJuD7/yW5NFqghGQGB+
y2oj3xG/0JChIxPaRkCAZi0axbpBPxBhXTQJvUdAWbHZJYVGQb/c0NuR2ptI
QELzrYlogTE/SmInSa5rSUBOyi8Ja847vxqPIDMPTUpAZn/Dq3rORT+M3eZ2
ch9LQB8ufzAzkz+/i8tvB7HtS0A8Ua6OfGbhPuxUpsp8zUxAB7XIMYdOOD/v
/6nnSp5NQKP5w8ppeEE/VEZbN6aATkBr7W/D9z0/v1uu2eADVE9AuH8rKnO+
B7/4Wo1rnhFQQKGvnCXRMDM/c6wEgAGCUECCIHOmSTxBv7+OYsHl6lBAOYRW
NYAJIT+7PheckFxRQBIunhumzTk/fj4tHSnMUUAgN6hlj+QpvxLPKctCNFJA
3t/TsGviQL9XLX0SI6VSQBI/7xmXl0k/bRy3hoQOU0ByBwjwYa1Cv0lbUqHT
dVNAgzz839eyQL/WZ0RV6eVTQIb8fMt//QU/NAUdNoBOVED2anwdYkFQP0Nw
TLDdv1RAJ577k7XSTr8YK93QKC9VQNSzUhSmmj4/vnZUHvWWVUCI5V1etwXn
vhWQIgWIB1ZASKgdlWc0Nz89OtcYnHBWQO2qPgj6J0e/FrLixXbiVkCgw+ez
mdJAP7V5Txk/UldAxH80dnbEEL8m0qKZiLpXQNV7VqKSZz0/R/hMs5grWEB8
Lr7QL7c5vzmv3fkplVhAw0TxSPj0Fz8+GeT4//9YQHh0CUvw1Bm/7nCwTg==

                    "]]}}}, {
                   DisplayFunction -> Identity, AspectRatio -> 1, 
                    Axes -> {False, False}, AxesLabel -> {None, None}, 
                    AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
                    Frame -> {{True, True}, {True, True}}, 
                    FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                    Directive[
                    Opacity[0.5], 
                    Thickness[Tiny], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    FrameTicks -> {{None, None}, {None, None}}, 
                    GridLines -> {None, None}, GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> 
                    Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}], 
                    Method -> {
                    "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
                    AbsolutePointSize[6], "ScalingFunctions" -> None}, 
                    PlotRange -> {{0., 100.}, {-0.000940645848427961, 
                    0.0009921510845233828}}, PlotRangeClipping -> True, 
                    PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
                  GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "100.`"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Order: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Hermite\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Periodic: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["False", "SummaryItem"]}]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                   BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}]}, 
             Dynamic[Typeset`open$$], ImageSize -> Automatic], 
            BaselinePosition -> Baseline], DynamicModuleValues :> {}], 
          StyleBox["]", "NonInterpretableSummary"]}]},
       "CopyTag",
       DisplayFunction->(#& ),
       InterpretationFunction->("InterpolatingFunction[{{0., 100.}}, <>]"& )],
      False,
      Editable->False,
      SelectWithContents->True,
      Selectable->False]}], ",", 
    RowBox[{"X6", "\[Rule]", 
     TagBox[
      TemplateBox[{RowBox[{
          StyleBox[
           TagBox["InterpolatingFunction", "SummaryHead"], 
           "NonInterpretableSummary"], 
          StyleBox["[", "NonInterpretableSummary"], 
          DynamicModuleBox[{Typeset`open$$ = False}, 
           PanelBox[
            PaneSelectorBox[{False -> GridBox[{{
                  PaneBox[
                   ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquarePlusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                   Alignment -> {Center, Center}, ImageSize -> 
                   Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                  GraphicsBox[{{{}, {}, {
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1]], 
                    LineBox[CompressedData["
1:eJwB0QMu/CFib1JlAgAAADwAAAACAAAAnIW2B5tvvD4A4AJsdUS3PPBdXF00
Ffo/cCNyiBlr+j7OO7mkBi4LQLgAcalEu1E/ZDHLW8wwFECCYobPJn1Uv0XB
TstvqRpAgOgJ+4E/Yb8alh9oPtcgQLUnGQ9UuGI/GlLMUc4dJEAC78SDmrFX
P6F7LwaTqidAjneIXJaIYL9aI53txCYrQJDF3+2wuGI/nFE/PABnLkCh+ymz
mcJYP7P2yyq49jBArFFFRgUBVL/chxLr9JsyQPy6+QbcAVW/H1jeROg4NEDP
KMc0wQdgPyVfBQT2+DVAFg0N/ExVXL9vqcZ2CJs3QFz3PX/ggFA/fSrjTjVg
OUBUKW546mU0P6TqhMAYHTtAVqRy0iKjSb8P7sDlALw8QJcOnqrcdlu/PihY
cAN+PkA26yXd8Y1dP9jSRFcFEUBAl8xpuqxGVr/zLAsplvRAQMqHOfIq81m/
miaURwLUQUBys8Az08FgP+RB6r9wpEJA4OTlfyWzUT+P+O1qbIZDQMXAGQx7
kla/3NC+b2pZREB6eshKD8VOP7ZIUsFDKEVAsFcPZfuAGT/yW5NFqghGQNoT
YZpH5/A+0JChIxPaRkD7t1pt7BkuPxBhXTQJvUdANDKxev0X4z7c0NuR2ptI
QJePC3HLJi4/SmInSa5rSUBys3vISxxZPxqPIDMPTUpAtiWBFyrGJL+M3eZ2
ch9LQKcxEFkJVWS/i8tvB7HtS0CPaHTQO6A1P+xUpsp8zUxANLd9k5VJPT/v
/6nnSp5NQC6efE9pXks/VEZbN6aATkCva9+CSGRcv1uu2eADVE9AvkICVOir
XD/4Wo1rnhFQQNAiZC3iDwk/c6wEgAGCUECKTkRAOFRLv7+OYsHl6lBAmHlR
hFo4R7+7PheckFxRQI1YAhVizim/fj4tHSnMUUDyYeAd8m9CvxLPKctCNFJA
GPPkjEIbWj9XLX0SI6VSQALc16q7mkC/bRy3hoQOU0C6scee4ghQv0lbUqHT
dVNAmpFwTzNJUr/WZ0RV6eVTQL1JgKxGUWI/NAUdNoBOVECXjRcAIFBUv0Nw
TLDdv1RAAV5XVCWGSL8YK93QKC9VQGW7IR8wsmM/vnZUHvWWVUDZz7lOKSZQ
PxWQIgWIB1ZAI2TjillcUb89OtcYnHBWQLjaRBF8cPY+FrLixXbiVkAGbXZ8
0QVIP7V5Txk/UldAcvZXBbcsVr8m0qKZiLpXQG3PYnwa3lM/R/hMs5grWEBy
uaDFalJYvzmv3fkplVhAZngg4VcVPz8+GeT4//9YQLnjukHaEU0/nVWphA==

                    "]]}}}, {
                   DisplayFunction -> Identity, AspectRatio -> 1, 
                    Axes -> {False, False}, AxesLabel -> {None, None}, 
                    AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
                    Frame -> {{True, True}, {True, True}}, 
                    FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                    Directive[
                    Opacity[0.5], 
                    Thickness[Tiny], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    FrameTicks -> {{None, None}, {None, None}}, 
                    GridLines -> {None, None}, GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> 
                    Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}], 
                    Method -> {
                    "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
                    AbsolutePointSize[6], "ScalingFunctions" -> None}, 
                    PlotRange -> {{0., 100.}, {-0.0024819548202740962`, 
                    0.0024043025851407268`}}, PlotRangeClipping -> True, 
                    PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
                  GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "100.`"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                   BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}], True -> GridBox[{{
                  PaneBox[
                   ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquareMinusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                   Alignment -> {Center, Center}, ImageSize -> 
                   Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                  GraphicsBox[{{{}, {}, {
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1]], 
                    LineBox[CompressedData["
1:eJwB0QMu/CFib1JlAgAAADwAAAACAAAAnIW2B5tvvD4A4AJsdUS3PPBdXF00
Ffo/cCNyiBlr+j7OO7mkBi4LQLgAcalEu1E/ZDHLW8wwFECCYobPJn1Uv0XB
TstvqRpAgOgJ+4E/Yb8alh9oPtcgQLUnGQ9UuGI/GlLMUc4dJEAC78SDmrFX
P6F7LwaTqidAjneIXJaIYL9aI53txCYrQJDF3+2wuGI/nFE/PABnLkCh+ymz
mcJYP7P2yyq49jBArFFFRgUBVL/chxLr9JsyQPy6+QbcAVW/H1jeROg4NEDP
KMc0wQdgPyVfBQT2+DVAFg0N/ExVXL9vqcZ2CJs3QFz3PX/ggFA/fSrjTjVg
OUBUKW546mU0P6TqhMAYHTtAVqRy0iKjSb8P7sDlALw8QJcOnqrcdlu/PihY
cAN+PkA26yXd8Y1dP9jSRFcFEUBAl8xpuqxGVr/zLAsplvRAQMqHOfIq81m/
miaURwLUQUBys8Az08FgP+RB6r9wpEJA4OTlfyWzUT+P+O1qbIZDQMXAGQx7
kla/3NC+b2pZREB6eshKD8VOP7ZIUsFDKEVAsFcPZfuAGT/yW5NFqghGQNoT
YZpH5/A+0JChIxPaRkD7t1pt7BkuPxBhXTQJvUdANDKxev0X4z7c0NuR2ptI
QJePC3HLJi4/SmInSa5rSUBys3vISxxZPxqPIDMPTUpAtiWBFyrGJL+M3eZ2
ch9LQKcxEFkJVWS/i8tvB7HtS0CPaHTQO6A1P+xUpsp8zUxANLd9k5VJPT/v
/6nnSp5NQC6efE9pXks/VEZbN6aATkCva9+CSGRcv1uu2eADVE9AvkICVOir
XD/4Wo1rnhFQQNAiZC3iDwk/c6wEgAGCUECKTkRAOFRLv7+OYsHl6lBAmHlR
hFo4R7+7PheckFxRQI1YAhVizim/fj4tHSnMUUDyYeAd8m9CvxLPKctCNFJA
GPPkjEIbWj9XLX0SI6VSQALc16q7mkC/bRy3hoQOU0C6scee4ghQv0lbUqHT
dVNAmpFwTzNJUr/WZ0RV6eVTQL1JgKxGUWI/NAUdNoBOVECXjRcAIFBUv0Nw
TLDdv1RAAV5XVCWGSL8YK93QKC9VQGW7IR8wsmM/vnZUHvWWVUDZz7lOKSZQ
PxWQIgWIB1ZAI2TjillcUb89OtcYnHBWQLjaRBF8cPY+FrLixXbiVkAGbXZ8
0QVIP7V5Txk/UldAcvZXBbcsVr8m0qKZiLpXQG3PYnwa3lM/R/hMs5grWEBy
uaDFalJYvzmv3fkplVhAZngg4VcVPz8+GeT4//9YQLnjukHaEU0/nVWphA==

                    "]]}}}, {
                   DisplayFunction -> Identity, AspectRatio -> 1, 
                    Axes -> {False, False}, AxesLabel -> {None, None}, 
                    AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
                    Frame -> {{True, True}, {True, True}}, 
                    FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                    Directive[
                    Opacity[0.5], 
                    Thickness[Tiny], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    FrameTicks -> {{None, None}, {None, None}}, 
                    GridLines -> {None, None}, GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> 
                    Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}], 
                    Method -> {
                    "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
                    AbsolutePointSize[6], "ScalingFunctions" -> None}, 
                    PlotRange -> {{0., 100.}, {-0.0024819548202740962`, 
                    0.0024043025851407268`}}, PlotRangeClipping -> True, 
                    PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
                  GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "100.`"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Order: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Hermite\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Periodic: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["False", "SummaryItem"]}]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                   BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}]}, 
             Dynamic[Typeset`open$$], ImageSize -> Automatic], 
            BaselinePosition -> Baseline], DynamicModuleValues :> {}], 
          StyleBox["]", "NonInterpretableSummary"]}]},
       "CopyTag",
       DisplayFunction->(#& ),
       InterpretationFunction->("InterpolatingFunction[{{0., 100.}}, <>]"& )],
      False,
      Editable->False,
      SelectWithContents->True,
      Selectable->False]}]}], "}"}], "}"}]], "Output",
 CellChangeTimes->{
  3.715196005734481*^9, 3.715196411904206*^9, 3.715196442289338*^9, 
   3.715196522087208*^9, 3.7151966197440996`*^9, 3.715196651203944*^9, 
   3.7151966919339347`*^9, {3.7151968187124395`*^9, 3.7151968300629606`*^9}, 
   3.7151968898305635`*^9, {3.715196957810219*^9, 3.715196980914527*^9}, {
   3.715217196347955*^9, 3.7152172236012115`*^9}, 3.7152172954306355`*^9, 
   3.715217333696044*^9, 3.715217436564949*^9, 3.7152512003642817`*^9, 
   3.7152663377559943`*^9, 3.7152665926678734`*^9, 3.715266733233904*^9, 
   3.715285086405965*^9, 3.7152852744833903`*^9, 3.7152855964099026`*^9, 
   3.7152856364507523`*^9, 3.715285706294945*^9, 3.715285738425437*^9, 
   3.7152857913498993`*^9}]
}, Open  ]],

Cell[" ", "Text",
 Editable->False,
 Selectable->False,
 CellFrame->{{0, 0}, {0, 0.5}},
 ShowCellBracket->False,
 CellMargins->{{0, 0}, {1, 1}},
 CellElementSpacings->{"CellMinHeight"->1},
 CellFrameMargins->0,
 CellFrameColor->RGBColor[0, 0, 1],
 CellSize->{Inherited, 3}],

Cell[CellGroupData[{

Cell[BoxData["EquibInputConditions"], "Input"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{
     SubscriptBox["x", "1"], "[", "t", "]"}], "\[Rule]", "0"}], ",", 
   RowBox[{
    RowBox[{
     SubscriptBox["y", "1"], "[", "t", "]"}], "\[Rule]", 
    RowBox[{"0.82`", " ", 
     RowBox[{"Sin", "[", 
      RowBox[{"2", " ", "t"}], "]"}]}]}], ",", 
   RowBox[{
    RowBox[{
     SubscriptBox["x", "2"], "[", "t", "]"}], "\[Rule]", 
    RowBox[{"2", " ", 
     SubscriptBox["w", "p"]}]}], ",", 
   RowBox[{
    RowBox[{
     SubscriptBox["y", "2"], "[", "t", "]"}], "\[Rule]", 
    RowBox[{
     SubscriptBox["y", "1"], "[", "t", "]"}]}]}], "}"}]], "Output",
 CellChangeTimes->{3.7153633547855253`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"{", 
       RowBox[{"X1", "[", "t", "]"}], "}"}], "/.", "\[InvisibleSpace]", 
      "sol1"}], ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", "0", ",", "T"}], "}"}], ",", 
     RowBox[{"AxesLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\"\<t\>\"", ",", "\"\<x\>\""}], "}"}]}], ",", 
     RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"{", 
       RowBox[{"X3", "[", "t", "]"}], "}"}], "/.", "\[InvisibleSpace]", 
      "sol1"}], ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", "0", ",", "T"}], "}"}], ",", 
     RowBox[{"AxesLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\"\<t\>\"", ",", "\"\<y\>\""}], "}"}]}], ",", 
     RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"{", 
       RowBox[{"X5", "[", "t", "]"}], "}"}], "/.", "\[InvisibleSpace]", 
      "sol1"}], ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", "0", ",", "T"}], "}"}], ",", 
     RowBox[{"AxesLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\"\<t\>\"", ",", "\"\<\[Theta]\>\""}], "}"}]}], ",", 
     RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}]}], "}"}]], "Input",
 CellChangeTimes->{{3.715266409030563*^9, 3.7152664367656326`*^9}, {
  3.715266603204102*^9, 3.715266606084166*^9}, {3.715285111197428*^9, 
  3.715285115065485*^9}, {3.7153630226295624`*^9, 3.7153630478972144`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   GraphicsBox[{{}, {}, 
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
4mgK9nPrktGpKRKsw7gWlrge/g+edm3L
       "]]}},
    AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
    Axes->{True, True},
    AxesLabel->{
      FormBox["\"t\"", TraditionalForm], 
      FormBox["\"x\"", TraditionalForm]},
    AxesOrigin->{0, 0.65},
    DisplayFunction->Identity,
    Frame->{{False, False}, {False, False}},
    FrameLabel->{{None, None}, {None, None}},
    FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
    GridLines->{None, None},
    GridLinesStyle->Directive[
      GrayLevel[0.5, 0.4]],
    Method->{
     "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
      AbsolutePointSize[6], "ScalingFunctions" -> None},
    PlotRange->{All, All},
    PlotRangeClipping->True,
    PlotRangePadding->{{
       Scaled[0.02], 
       Scaled[0.02]}, {
       Scaled[0.05], 
       Scaled[0.05]}},
    Ticks->{Automatic, Automatic}], ",", 
   GraphicsBox[{{}, {}, 
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
ZvlySB8+QgpPscGG41H6rVQOLZI4Jq6X2PBkgD+5sU4OvYo7Cj7fZ8OSER3H
2CZqf+XFuYoRbCgYN1c83CKHTeXW5o6P2fBzTtitXz/l0PR7RsHLBGqey2m6
jv+VQ17UWbpOJhvy6Js1sifkkOu4nVGaTf2fqp5o9J2Rwxqp/XY789lwXueD
+TxBGirrHtlGL2ND7ipTPXk5GnaP6wy4N7LBav2x9gYFGs4Xfb1zI5cNvA13
omKUafgzkts/28aGuduqRbU1afj8794+xi82PNwxVtitQ0MZxzf1gb1sWGit
7P1qIQ23/ZtSYA+wYfvBI72Gy2io6PKAqzjKhlbHmwljK2ioj0riMhNs8HB+
afd5NQ3tglZx+qbYEHn6T7nJBhpKvnjzdsecWlhwTiFg7kYaSl9dZ8v+rxay
Lq5dX7aFhuOPy/+un1sLnKvXX++0omFeSeiBDJFacLvx3IlmTcM3c+k/S8Rq
ge/ON9WGfTTcOnm5MUuiFkLvD7CjbWlYElGjGCxVC1rhskEOh2h4uHzljc0y
tZD+cOUmrSM03BvyeU6bbC1sibGd7XKmYXOdp5sdrRYan/qmv3SloUGYd+on
+Vo4mRTvdtqNhkZXNiaMK1Dnc0qJjqEHDVN5WasVFWsh+M1v7qgnDT/fpR9S
VqoFjY+SD7Iu0dCCUSLwj+KPmYY7fK5QbLJY+YtyLWzK2TfP5CoNUx58CnVV
qYX6/MtEMICG1kU/bIcpdi1+cuFrIA1Xutc526rWwnRZ4eJ7d2m4Yf26hESK
o7dPSzwLpuEfSwuTaorXVS3vTw+n4d8Va243U9y859T3bw9pmP6EdzGf4isN
ia9ao2loaXhA7BrFage5d/7G0bDiYZqJGsW5rfInRBJpuPuisFIk5d/+6A5z
9WQaDl5yDf5FxTvbdVN3+Wtqfxv74ukUx57IE9r6jobl15N2aVL7Mx4Y7zqY
RkPNORglTOnB9Vha4vGJyo9Ne8A3Si/f0eNJN3NoWC8hoHGc0pPh9SwgOp+G
NOqKzpOj7jczjUffFdGwdcuK1yupfPAJWmg2fachn2zhJ0/JWogL9OcfZNFw
y5UHGfbitYBiOW0CtTTcHhP9RVO0Fq7KGsQZcGnYkxR+yISqF40Hzr6mPBoO
lYboRVP1VKD0xN7mJw1rnxy7UMVXC/waUqrX+ml4xEpbmj1J9XPilunIYRqq
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
       "]]}},
    AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
    Axes->{True, True},
    AxesLabel->{
      FormBox["\"t\"", TraditionalForm], 
      FormBox["\"y\"", TraditionalForm]},
    AxesOrigin->{0, 0},
    DisplayFunction->Identity,
    Frame->{{False, False}, {False, False}},
    FrameLabel->{{None, None}, {None, None}},
    FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
    GridLines->{None, None},
    GridLinesStyle->Directive[
      GrayLevel[0.5, 0.4]],
    Method->{
     "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
      AbsolutePointSize[6], "ScalingFunctions" -> None},
    PlotRange->{All, All},
    PlotRangeClipping->True,
    PlotRangePadding->{{
       Scaled[0.02], 
       Scaled[0.02]}, {
       Scaled[0.05], 
       Scaled[0.05]}},
    Ticks->{Automatic, Automatic}], ",", 
   GraphicsBox[{{}, {}, 
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1:eJwsV3k8VO/3t+9lLGM3ZoYkZN/NPPdYkn0tO4lCypLKEpUtKpFKiyT7klYt
iDEjOxUSkmxF9EFIkQr95vt6/e4/93Vf53nOeb/f532eey/JP9z5IBsLC4si
JwvL/+5rNmF5juFZiOX/Lw+uJJEexTCsUD7ki1RNSX1BFuaaoXgam/3XNNkd
9LK+ee+d6COKmdhp56aK9zFD9Xtr7Xi8Fe9gu5PdpHXrF+rvHCrtdVF8iJXv
eO5TXs9GMzV9+8xBkY7pfj3juaq+Vp+tNlNmp9iNeT4XzMw5RKDw+S58/xoy
jp2Qto0bsTClpMkEnnjuOoNtdNUJXA+OpbC3WneUvl3AnKXt78dWJ1NEWsXI
kdE/MH97ieq2qjOU6vkC15fwCzvRVVO9dvsI5T65Ml/f6y8Wqf5Qe/L1Edof
rbj3ew7/xXL8r+SOPz5MszSzFYyM+4u9VkqYukIJoU0GLJy+n/sX87w2qUYM
DqRJlWr5kkb+Yi2yAimx626089vrZfh91rFTckIn37x2pwzqX9yjFLqOdYvn
UfG7fCkKlj4Xd51ax/5sLdMNfbyf0hj87++ZvHVMfPKmiRohkLJ21+zjz9F1
7Bw7O/GZbDjFok5URHhhHat9HJ9xZuEoJbvri7X65jo2mJeheRIXQVGfS6s7
RNjA3u757D3gX0qL/+u+nKq2gTnqaHSaLrygdfErK5egDazo7KuOHr42WqDq
65wx3w1Mdllua/DKO9ozSt7bv2Eb2DWBQ7k4uyEam10Yr+SZDWxFonl6oHyE
5uiDmehd2sDECmsC396ZoOWF4mJd8jcwPQOXeOGwKdrsqU+PIx5tYMvBabcc
2v+jGWQ++ZrB2MC01ZROU6SWaKl3kon3ejawMNm9YYz8H7T+h3vcO8Y3sKjr
lvVKhr9oZMa2rC+LG9iVBwlJEff+0CJ6VtvZWDYxXHTcp8z6DRp9vP2fHG4T
y0v++IcqztLAv3RTn0rcxBReuC/cmGJpcGcJCffU2MS0BuxN4sdYG8pwxuXR
sIm9+8V62qCUveEnUWA823ETc9cXCLZm52ow1RwVe+K3iVmthi/+a+JpyDJ5
aN8TsYkp3VDnKH/I3zDmdCZ1PmETi4+3u56RtbVB1d+Rznt5EzvAMd2VkINr
iI0krSoWbmJGPa6xSo+FGkSvNh/c/3ITq/tse+/wR+GGx08PDuR+2sTC5HV8
WhtEGmz7uXcNsv7DXJc4GYK1og1ff959hiP/w76EBVfevYdvSMHbKtiY/sMu
trD+/h4r1iCnt3D1rP8/LDJ8pl4CJ95ArHZOS9rBAkaRN2pH70o0aDg9NG8q
ZIG9T7Q/TdaJN/zU59TpY7CAQSuOc6u+eEMtwVv+8ygLaD/LnH91Q6whnvOp
8PJfFhhgPzZHeY9vgHleNjYpVmDY/t5FYcU3cLzz+y5kwApV4XNxqVKiDR0v
aiZIrqxQEdoitywh0qC8M2Box0FWEFt8cG7mgnDDxYKtvZrHWcHAeDRIaEWo
wSntIMPkCisQ3fpF5lpwDfOr/i6ZRazwQyS+4pI0ruFcoN/M8BNWKNFDF3OG
tzbQd3kJHn/HChfvHpwT/M3foMrhtK9MlA0I55x92Ks5G7gTKf/4brDBdJjd
tgDNJVq/gbGVZj4bVAf96sQm5mlFS4ZX3crZQLXgd9c9n/9oyE9/e0kNG/Rr
jUyEeX6mHce0HKhDbGBusfj3U+pL2ueN7fnhkuywtMWjdAg/Q3n8XPG/ayR2
YHmb8Ns+cpZyOnSbNm0HO0TiZROPdX6jSI6S23mM2OGMt8y7Ya1liiNNdrHQ
kx3YJjWf7CpbozScFMH6c9nh3+mH3ZEBbNQjdnNX+O+xQ5Xkh0TzGnaqDLF5
2rSOHV5Ec95+yMpJjW+NzKwaYgfbw/lXaLHcVNWb1p+/zrAD7Vflc4lyHurH
ELIe8Rc7EHR/vj7VxUs1wvWNZuI54O3juIPvlvmpOc8Tz25oc8CDCcm9jO9b
qGuemjuPOHNAZePNp12tglR3lk/9wxEcwJIbmXvjOY5aU5oVb3WJA0QL4+/+
DBOi6hg7SHPwckL4ufBPt0GEWtW7pY6exAkrigLlIXEiVMtOYsohOie84/51
i5dThDr2Utte9A8nNH7dZ7ywXZi6A1Gf/ifOBZRme+vKG0LU43UWEgxdLvB+
bmvPtYKjMvQcT2W7cEEecSAQb4aj8j31+HzoKBfMOOsaJ/MIUveqB+zGLnFB
3MVU4fyILdSCe0fuiz7gAlXfCwfmaPxU/ZIzUYyvXKC17Y3C8F9uqrc/x47K
X1wQczW4pHaNi5pEPP8xm4sbHsQrelxY5KR2374CIQrcIBw3kOvUw049cK2U
D+/HDRHnFXQXZjcpzQ7xHuYR3KC97d/Wn1nrFDKfS8WxBG5ouq16fcT4D2Xi
NItFXwE3SLUjyeLbKxSvYK/ES5+4gWLaEfHvy1fKhdY2pfL/uOH3nkrXuNxp
Sh1Zq5f+nRvGtU42mzhOUSRGeeQWWHnAdDXit0v4OGXQqZpmS+aBqTIXzcEH
XRRnY6E13gAeWNUQ6I1+0U9LuhmfTzrMA667cjOv1w7RqlZmLAyP8UClxM+r
hLIRGu4x/VpwMg9o2dUIZyt8pnUrHNFuL+aBBUVKkZLtf7Sd46ZJq095QFjj
RV987jztYo7k220tPJCR1ftC8cUizWpre1jKFA9s742Xl65apnElHxeY5OCF
04M5ftbbV2gtv0iVJtt4gTAjFfHN9Bct6UjP7oJdvPAi4+ODXu7fNPgU/2Xz
IC9Mfmd9cjX2D03AzYQYVMQLqrP7rdjl12kfXnN69YzxQsZF9jqOkb+0Ru7g
GPYNXiiMsr/V2PKHVmbadU1fmg/0FK5rsC2u0ST94kqclPmgJexTi2rdL9rF
U6pPDxvygVSn/Gy90yrt363Rl2ct+UAlbqOa9vQnLbI2szffjQ/mXm81pYwt
01R3z7xX3ccH4sGbpYJj32lfBrDxF4F8YM+1Vri7Z4nm/mPp27sTfJAx9mT4
Pe83mnCS1YrfKT7guNnHUXN5lvYaV7T+LYUPDPPLThz5M0PD1Fz4ebL5QGuc
3zToyGfaGu2e8LVcPliOHnYK/G+M9sSGQ4pczAey3hbDLTVDNMVDz5UoT/iA
JfRZ1oRIO23i1xaNzhd8kHA33OWJ9hNaTmqgvutL5jNx6pno8VKKQIm4RUQv
H/g5rh09rt5HadOKsNt4zwe9g6ZcT0qGKWdeduy5MM6M5y47kj98ohg4krzF
Z/igI+n8R47aacryWGxAyQIfBM//81r8M0e5H9oXornKBxO9Nbu+Di5RDq4r
R9I3+EBAL/ayzcIPypDkSMKQAD+U6NrWtC/8oVyp0Dl3UJQfKLeirXsmNyk2
+hmXlqX54eHWpUSXG6xUjrYv18/I84OtMy+xeJadSt+D7gio8EM/X/fOvjAu
aszk9dIcLX5IqkzxGFHkpWpFLt5XNOKHkeJjTg14AWrppYJ6sOKHfL0L6r+d
hKjxMmShCCd+iMPcttrZiVCd7xYH5nvww0+7Ax9ZIvBUJb1ttO79/KDyb+G/
P/Xi1M2mMqHNQ/xgIsPJel5bitrvoBS0M5IfEn6FEvv/k6FWjtyleZ/khzHz
XHM1diI14ZCK8MUkfij7YjY0NkSiuq7eD6q/wA8Wnq1nrfgUqKrJag2zV/gh
3ueZ8tH7ilQ23GNhqVx+iFlRYEyKK1OHbmsGWxXzA8dgHr/SR13qox1PG2Lu
8YMC75mnP+7bUlOrdUQqnvLDRS2nX3ZKrlRvs+rg9/X84MGvuVi6w5fK4/NC
RO81P3wLGHzFXhlEHfvP6NDBfn64F3J7bN3wCPVZFI2ePcLU67Nez8NTEdT9
WYxDP+b54cXYbKK47wlqXXMr4/EWAfDeMjMV/fI09Yhy32EVBwFYDKNXX7h/
nmpa4/LS000AjtrtFFwXT6dKmA+IXdgnACXak39iLlyktvoMvfwaLgBthlwF
KcmXqITLY+JlWQKg1S+pxv3hCrX312wzsU8AsvjXr5K8c6g6rewyYnu3ADfi
yAltKaa2tn8kyvlsgSLbnjdFBiVU166n25QOboHdW/ONQx+UUGN7AtSNTmwB
eS2RgYWbpVT6h2ZT32tbgDPaN40aVU7dvZB8qGxgC2xTE04Q1btH9RTnqNFz
3QpS17q+CrhXURMPcTi7uQnCltki3qakWurtvM7qAV9BIPFvOXu5upZa+zZT
ek+gIFwoNTByn62lLhhKfnE8IQjvRhPt3zm9oHrzqcVYXxWEqsRc7lpiHVXv
ntsdao8giCo0DPY21lOdxmXYaYOCkKHhqeO7Uk89IvI5yGiMuX7vpoGkMo1a
HHdEU/+bIASVb8gpZ9OoPGXgf5MTB3rXzV/qHG6gRkXtXbksj4Na/kPN/+1g
UFNwtdudtuPgccDh2a8BDOrlSilPnAoOjJ8tS565w6DeHxunZ2rh4MOfZEon
XyN10iLkXLoJDvbHWZmSUhupSxOv66x34cD6XOKdH6WN1M2T6t94rXBg/jYy
UbutkSr16KfTOUcc9NlkiYrzvKQ6ip+RPrsPB1/wBeaWV15Sfas+2ZkH4ODy
qLmZe/VL6hEb8wT2IBy0C0r/Fv74kpp2hvdLYhgOPMaoveWKTVT6zNWHp0/h
wN7+Il65vYn6OnF1gpqIA7vsueqQ703UD9IeIhspOLhfaRGcLdNM/elAiIm7
iIO1si6b7hPNVJXaCpOYXBzEbf9xO1G3hbr7rVzuuXwclMills4eaaEGzF7/
ebOYibemUWSxtIWaK3O2/MU9HIS4FhWKy7ZSa3TXWboe4eCbfEqiv1cr9Z39
Mc/hp//bn7z7em4rlT9x/5a/9Tj4rG7PxUVuo26/NRTI34iDRP69jODgNqrZ
U4dG6RYc7CF/OMNa1UaN+0I9RnnN7EdADxZi1U6ds5L6cGoEB0Mpv3es5XZQ
uQMua2VO4GBCmfd12VoHVT6e5+KdKRwo3g/WnnbvpHo9XEWMeRw4C0+f71To
oka3h97sWcKBit9cdltWF/XqxNT38Z842O4lmMfF+or6SvhdCcsGDkKVk0ZY
F19RZ1SsN3GsQhCYPbYTH/qayr7rpRuJUwics+ybXJdeU42jH/GZbhGCuNyJ
ojKebqpbluIBZyEhuFvYbTh4p5t67G5egz9eCLSLnhyNovRQ731Mj0iWFQJZ
+HN/m2Uvtf0nW9dVkhDsUb5U2VvcS53cclK+ZJsQVPIcNtvL8ZYqDcGDLTuF
oOBm82WBgbdUfY9x9QFNIajdVTbfs6uP6hLpev6LrhCMj+buzKT1UdNLzClc
SAh4WkZXdje8o5Y31F8TMxUC8xnPtueW/dTmQa1FRQshGLy/t39opJ86vnjX
Ut9aCA6ErMw/OjlA/ctDKtptLwQjo7VsBvKDVHHyzb9uzkLQ9+no3hfvB6na
xoJ7g12FoMlXvWrrrffUw6Eb3Od9heB+wwdin8MHalrq8f05/kJAtzwm+nb3
MLU4f67ubqAQ6OIkPzh6fKQyav1F60KEwNp94TrPhRHqx7cfQrvChMDgoFjU
o/FR6q9Zx/bhSCEIls+vFvYfp4pwdBDnooRgR53HWP3lCaq6LHby70khGH67
kCBe9Ilqo1f9jv+MEORsMMzHtk5Sgxx27pRJFoJZ97vpK3OL1OTgklTVNCGo
N570tvZep+YnSk9Q0oXAZeaQi9xtDlR/64qh3SUhmJbwvbIqx49U/oXlZ+YL
AYvPgeTXo1JIoGqkwqNYCC5tzict8xLQgr/1E4VyIVDnrRmeyCOix23bWuse
CsErxj+HgUF5pJM5MjvdIAQxHUq6F7yVEUXWWg8bEQLN3t5kDYY2ku2pwfgm
hEAtPtc0IksHbSZssxqYFILrzl6aBvt1UeMUi/fhOSHgNJ9qWWbRR+b3axJv
/BEC8j9hPWs9I2RnvO3NooQwSM8GnA7RAqT27cpgnYwwaJbbsJZfBoTLZ5k4
SxSG9+Z9jQuLgPrYRpallYQh8gaURt01Qa5dVyQs9YXB+mMFdZ+gGdKPZyGL
GAvDenuC+JeDZkhCLUxlDAnDU+ksLZV6MzR82QodtxCGxvxA+cH95sjXg+VA
wV5hwB9Umaq9swth/GGhhz2EwfVijJ/b7C5EbPgYpecjDAaCCRLROhboM7Hm
/OsDwqDXXVwq02KBAr+GPlo7JgzuU99Jhr270e5bH2ubo4Vho873DUHQEinZ
WjVlxgmDMzlywtHWEs0+UhhQSBaGe5HUoOSXlig8+uMfxyvC0JL5aX/2dSvk
W+GjEnpdmHneqDze/coK2X8Y9zp/SxjKD6rIvdmwQqrGU7SXRcLw2R2uGHpb
I5kjgd9Gy5h8r58zEztnjfjzvsr+qRSG8GuKuVVV1mh2c/601lOmXqcaw8Q2
rdGwevgj+xphOPJf79wQ0QZ1+n0fD6kXBot1aZKtiQ2qvXwMl8YQhueziSeO
7LNBFU0rUNwsDGz4nQ76cTbo5o/oo4x2YXAL1JG6l22D0hT+FH58JQxGxrwW
bfdsUNTe+L5fPcKAlmRM0xptUGDqJptovzD8+DRxar7PBrnWJGhrDAnDqFdz
8M/PNmjXV7YDtiPCwNguIZS3ZIN0JM9mB08w+ff8afvy1wYpWHO3pkwJQ5T8
t3fdHLZIJO78SsFXYfD7HpHozm+L2O7zKzbMC0MdD49ksqAtWh7JcP2wJAxZ
BjpT9kK26NMWXNrKT2FImVpSouFsUS+6UiP0Wxh2eDXyvtpiixrDRb/u3BCG
4yLodzyPLXpUcF3CmlUEXpuyjb5jsUV33kpYBXKKQBah9NbbVRuUyZYbm8Qr
AuQRunjMrA06pS1beWeLCHx9PGPY+dEGHTmQP1wnJAI/utF0W5cN8r5G4n+P
FwHhA0kxx2pskG1bsfEPSRG4FCVq3Vdog4x/bTsiSBCB0Wmtt9PnbZCyUsVt
FbIIHLgmnfIs3AZJeSi/2a0oAmn+Ah+Qiw3ivXB/I0BZBF6qmVmc17FBa3Vq
aglqIrBS8NL6hogNei+jfalWTwROKqm0Cb6yRm12zxn9RiLQFC2tllJsjapP
6y8tIRFYdh9w64m1RtkTxk47djPxRaR/2pCzRilC9MRdNiLQEPTPZG7RCh0z
hSf7HUQg7D0rqaXBCjmXmIvcchOBYbcj3U4uVsh0oM2s2ksE8Nyy3iLSVkiT
y+p43z4REA1xnPwwYYlwwXYDfMHMegvqNpcCLdEbFdcbcTEi8D6E4uHntRvR
vIfab8SLwIgW3yl+0d3ofobn2tMEEdgzNBq+0mWBLiz6esyfEwHP0BNWJdoW
yPJpkLRPjgjQbO98c/1ujvBy1+QD80TgoPvisZA75ujzhSaV8EKm/kcy72+x
Nkfx/rKUxLsi0HlLxFEhzww9EnrnXfpCBFxTIlTPa5sisQh059sHEfiyvNPM
yBmhKVU86bSUKHz+8PT78A8NVHXTdEcaQRSOfFd+8QSvgU5zRGhmkUVhj4uo
HS5MDUmMdJkUKYvC22vFgqtLysgmPcG/zUgUvI0E5Uy/y6Mn/80Vb/USBeIZ
Z64Lq9wooaxJMT9XFOKdghOotQp04XvTY/75olD6Y54SralIL3nEd0OxWBTo
u42+3C3fTu+odeZ+WCkKjlf8Pt28oEzHvfo8Q3shCv2MAT1eUQ16/iLb3eH3
ouDFPebX6apL1/ipuP/OR1HQud1DereiS29as5b0HxeF44kV3JVX9OjTrFfP
/zfNzDdQ+/xGqz5dTVQ+ZG2FWW/uxvx5QSM63cBMRUwUD5z7sv5rUkV0R2rQ
5AdxPISaNpk0lCD6Z5P03DxpPIi4s/TzSWF0Lpt3/Nvk8ZCWHZKQto7Rbzr8
av6qiIcTT/YZDugAXXmPdPx9ZTxYRWkYcIQA3d4nYF5bCw+P7UJuafUCfWJ/
WskvXTw0WnLKqLGa0CMD73nXG+KhhtpIYWiY0K+H/3htaoJnnq+/b9xKN6GP
JiY/cHLEg6DGo0f/1E3pYanlB/F78GCQozt+bK8pnSX9lewHNzxMWZ4fiog1
pStki2T67cODd+tkFWuDKb36pr6FQgAe/ullDV4dMaVb5nltzgTi4bXBXvt7
f0zpR8qKw8LD8NCyefZxoJYZfbOyXVE7Eg+dujLivLZm9KxHc2OrJ/CwMj90
Te2AGZ38TPBGXSwezAque78/aUZ/VqvtcPoUk98r9Vz2LDO6RYMbt2kiHvTm
Tic+LTajD72MY3CexcPbk77YzHMzekhbfnTnOTycWq3gyG8zo693NatnXMSD
zrAB68cBM/pt+/WtRVl4aDYlnn4yZUan9OksVGfjQcDtIe71dzP6yN7QN69u
4qHCNkJwx4YZ/dSH0vsTt/HwRYXxr4vLnE7wGUtfKcAD78aPwKdbzen0CbHD
fKV48OsI6poUNaf7HnCwlruLB/3rxx75SJrTN2fSdug8wMNQWEQuWcacfudw
I49VFR4yPWtEdGTN6WhxbcbnOR5kDly4dJUZH4vUbI98gYe+u2J/TKXM6WdW
D5WlNeDhfugz1l1i5nTiyaKzt18y/ZRd4X0bZ05v3Bg+UNWKB2NWg5c2vOZ0
v0QR87ZOPJTllH/Zy2JOZ+G0lf/4Bg+FJpSEhhUzesG5FLalt3hIHTXaffY/
MzoINHziGMTD3eODS48+mtEnLq00Sg4z/fP3pRK8NqMniqgVqI3hQZ1V1sOw
ntmfG4FnzD7jQSPzhHV+hRm9SSrf130aD5v3PFpPZJvR2cg42aQFZn/p67HJ
QWb0olLL9evLeNBue2/eZG9GN92R+PHeKhNvclR9go4ZPVljOWdgEw8fhQ+N
pP9l+uuZcuwsmxi4c/twf2L6qUU/wP0flxiIsB/80EYzpXNg/WI7BMVA9qyN
vVuMKb2kSWCVKiIGU7t++fLvMaWbW+wacBYXg74kp2V/NVP6Wbvqq/FyYrDf
mP2E4LgJncv7Jq5XXQyaWZ3D5pnzUDbeuzilLQbmC1ZFVmwmdIsA3p7f+mLw
4pe11vE+oKeFnMyQBzG4IPnKY3c40HlivfmiHcVAxml2lEcfo1esZ/+XvkcM
CFf3s79vR3TLhDcdBe5MvBMdXnmuiH4+DaV1+YlBmb2qt1kYlc53nchBOCoG
MWf9M+3SjOlbnk5ttFwWg5DZozfKDuvTI3tEMrKvicF/QyXDonN69KE5U5kD
OWIQn3bY9eghPXqRQqERe6EY5O0ijhMDdOkG132iTR6LgRvh/pUMG226f+zg
UkO3GDRMuGcm/9xJr8U6Jqv5xcH/TtlYcZgEXdb7V2SqoDg0/mM5q2YgRk+K
UWRzFREHoTTN6gE2UbpdVQpxRUoctFbwhw0NBOmfySY+2srisJ5Qcn35wt+G
LVx1g48sxeGmQhi+lMqB/F/f66w4Kw7N64qeZjUKqFQ+VePgeXGwTlMcbMzZ
hr6e9LtByhAHk5yiLEasIgrdgT94K1scxEkJw2JaSigm9TTLxWJx6JG+4smd
rILqR92DLMvFwVHZ+VKIoyra1NHu5rgnDmXBz1P+Se1EKZMzuaeeiMPK7cib
heVq6BI46Ye/FAevzcueG90aqO+Gyh2VViZ+n1gZnLImEl3k5PzaIQ43/Lrb
7yRrolt5dX1+veJw7lBb8HYtLVT2Rz7MeVwcIub/VT+O10b/OW32b50Uhx+X
xMoPv9JGqneHjF9Ni8PsqWy+qxI6qMotg9d8QRy2L1MjiA91EO3Zaonuhjig
rjnhnW266B//W/5lFglIrk97rM+jh0wD7kU+5JAAsS+dOfcs9VC7kB9sF5AA
/eFbsj0teojvkFH5pKAERGfo/T7N/J63bRTdWiAiAbler3luGemjvrDOjxLS
EmBbX+EjWamP8G3FpgMECWBL7Q1PHNdH7rKn714mS4D02DMHbxEDNPZKK5pP
WQLmKk4IR0YZoP+UbguvG0gAy9Y38h7Khkg1ISq2liIBN/K5tt5wMURh7x0n
joME/A44f9A3zhD9PMv58NtuCRhcusCX02aI9EfHRSttJIB3UVJddNYQndSp
iwt0kIDsdOFwJQEjxDIZZjXuKgGTK9MPVG2NkJmR1eNcTya+MiFse4gRSr0s
L+7uKwGHHGpDe1KNED8MTfUelAD1AwZPgWaE7G88sck4JAHlRt/f4geMUNbC
xSdWoRKQOjGV93jeCInlmSQ0HZeAughjOwcJYxR0TGNrbwxzfcj5f5xqxqjW
Su72aLwEhEopBYeYGiNe4lbluQQJkIwoY03ba4w8V9dr1lIkQMf/qkVgkDG6
93puF9d5CbCYOVUlHGOM1ouG34lkSMDQyk/a9TRjlO9Qu6h2TQJKz7fkOxQb
o6Vt5acoORLwtFvyWM4jY2S6fo3fOo+ZbwyRp+uM0dW+lBy3QgnI/L4haNZq
jKYqjm0/WCoBiZMczxu6jZHuGf/nkXcloC2T9ULAe2OUutfJLOEBs1/dhdym
48bovQq8zaiSAEr81bLAaWOkxKa+L/c5U89jKeNj88Yodkj2W8ULCei+RFap
XTZGXQ8F4qobJCDMbtOKZc0YSZ/9y9PyUgIUtCc829eN0RGv2etvWyXArOGu
AYGVgho0PyiMdzL1luB6jOekoK08HU/m3zD9FFGQQeehoKpnpd3cgxJwt9P4
YZAgBbGlZ3vjhyXgofzVC+eFKWjP/uRZ8pgEnFAd+JePp6BS/cgYjc8SoFK5
hm+QoKDVLfu50DTTP69zvq1IU9DuKYdsm1kJGF6lmO+To6CbdYjssSAB9xrs
+7bIU9B/WTsfBy5LgE2NsaPYdgoyCpJBx1clICc2IipDhYLSqfyvE/9IQOQt
j400DQoaEfnjcWlTAqofBeRJ6VHQztmvM7fZJCHiEE7ak0JBpxvfn6jkkoTD
P3rWfc0oqOd6G3stnySciRieN7OhIGLo88utWyXhn4v8bfIeCoo0K5F7JywJ
IHSnXtSXgpolrz6YEJOEy9JoXfsQBYkuJRovSEmC1fTq1lsnKCiwLaLzL0ES
6FP1JX7JFFRze58br7wkUC8khBVeoSCeY/ZfxLZLguD291+jiinIw4p6TEFF
EgKr+PezV1NQpZwqq5a6JOBy0t2Duyjo74rUJUxbEgwYLG5tExRk+5pX1k5f
ErZy4qeovykor2it0tNYEmg2kWmLIlS0EDNjEIwx+R5v6virQUXgMNh2wkwS
fP0eqSc7UtHlba17kndLQunSZ7OySCr6/Pfp5ywbSTj41+zl+RtUpNNXFHHH
QRKIRYpJvgwqGjydcPGFGzOf8Ntd5yQQ2r43XKrdSxJecIR2alkjFKPiW9G/
j4kvs3XryTMIdbLa6X0OkASTZvPBc7UISQ0ZtywGSYJy7Z6J8ysIHX6o7Lxx
WBKSYl5+K9fDEC1FcoIvQhJcpNzWZeMxtE/z199tMZLwe3LzeyYfoKiCEcOF
OKY+D+3572sCuijYFF19RhIqJ+/5iHsBqv128YdFmiSEXwmRMnwOqNs7UlMw
XRLqthjVy00DmnrlFv4+UxJO/1pmfS5pgnCV5Lmg65Kwk3HiavJ5E6QoybND
45YkhL1xDsW1mSDKuW+Ba3mSwPFxyWOa0xQdCqz9fK6U2Q/LMp+NS6YoYSCP
6HSXqcfbodDUYVN03TzZV/KBJIw/YEv+qmSGmsj2w3efSYLfteWXvW/N0NBl
bYnIWkng9pkIH1U1Rwsskq5GNCY/59DPDy6aI+nxybddzZKQ7osvT/XahbTs
OwWvtkvCWTqPKeerXciy4aGd1ytJ8P5ko60DFuh4bmznXJ8kVHBEVl6i7EYX
+PZxPxuUhM29akp6LbtRQaz5rvhhSZCZIrZ/d2b+77kJvhT4LAnuTp1XPqdZ
oam2n5v9X5j6xdycXlGzRn90hyl5/zHjEV15HOPWSFG0tHbnd6Y/9p9P6fWy
RZTkC6srPyXhWLH6x8M77JDzcrgOfU0SFC0OT9JZ7VHw/r2RqeuS0Ch/zmTb
tD0602v02J5FCrpONi73Dzmg6xhxQYxDCkJyo6ZDQh3R/YecquPcUkCRp0xd
W3VEQxd7y8MFpSAhsyLpmLwzWvj7/Iu+iBQM+72QVu5wRhyHc+VZxKVgxchO
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
       "]]}},
    AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
    Axes->{True, True},
    AxesLabel->{
      FormBox["\"t\"", TraditionalForm], 
      FormBox["\"\[Theta]\"", TraditionalForm]},
    AxesOrigin->{0, 0},
    DisplayFunction->Identity,
    Frame->{{False, False}, {False, False}},
    FrameLabel->{{None, None}, {None, None}},
    FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
    GridLines->{None, None},
    GridLinesStyle->Directive[
      GrayLevel[0.5, 0.4]],
    Method->{
     "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
      AbsolutePointSize[6], "ScalingFunctions" -> None},
    PlotRange->{All, All},
    PlotRangeClipping->True,
    PlotRangePadding->{{
       Scaled[0.02], 
       Scaled[0.02]}, {
       Scaled[0.05], 
       Scaled[0.05]}},
    Ticks->{Automatic, Automatic}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.7152664373056173`*^9, {3.715266597415976*^9, 3.7152666065754423`*^9}, 
   3.715266739610051*^9, {3.715285091942085*^9, 3.715285116461512*^9}, 
   3.7152856430028954`*^9, 3.715285708763*^9, 3.7152857411974964`*^9, 
   3.715285793753952*^9, 3.7153628871927395`*^9, 3.7153629573039036`*^9, 
   3.715363003526906*^9, 3.715363048895875*^9, 3.715363132636359*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"{", 
   RowBox[{
    RowBox[{"ParametricPlot", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"X1", "[", "t", "]"}], ",", 
         RowBox[{"X2", "[", "t", "]"}]}], "}"}], "/.", "\[InvisibleSpace]", 
       "sol1"}], ",", 
      RowBox[{"{", 
       RowBox[{"t", ",", "0", ",", "T"}], "}"}], ",", 
      RowBox[{"AxesLabel", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"\"\<x\>\"", ",", "\"\<x'\>\""}], "}"}]}]}], "]"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"ParametricPlot", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"X3", "[", "t", "]"}], ",", 
         RowBox[{"X4", "[", "t", "]"}]}], "}"}], "/.", "\[InvisibleSpace]", 
       "sol1"}], ",", 
      RowBox[{"{", 
       RowBox[{"t", ",", "0", ",", "T"}], "}"}], ",", 
      RowBox[{"AxesLabel", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"\"\<y\>\"", ",", "\"\<y'\>\""}], "}"}]}]}], "]"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"ParametricPlot", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"X5", "[", "t", "]"}], ",", 
         RowBox[{"X6", "[", "t", "]"}]}], "}"}], "/.", "\[InvisibleSpace]", 
       "sol1"}], ",", 
      RowBox[{"{", 
       RowBox[{"t", ",", "0", ",", "T"}], "}"}], ",", 
      RowBox[{"AxesLabel", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"\"\<\[Theta]\>\"", ",", "\"\<\[Theta]'\>\""}], "}"}]}]}], 
     "]"}]}], "}"}], "\[IndentingNewLine]", 
  RowBox[{"(*", "DrawAnimation", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{"Animate", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"DrawSystem", "[", 
       RowBox[{
        SubscriptBox["x", "1"], ",", 
        SubscriptBox["y", "1"], ",", 
        SubscriptBox["x", "2"], ",", 
        SubscriptBox["y", "2"], ",", 
        SubscriptBox["x", "p"], ",", 
        SubscriptBox["y", "p"], ",", "\[Theta]p", ",", 
        SubscriptBox["w", "p"]}], "]"}], "[", 
      RowBox[{"[", "1", "]"}], "]"}], "/.", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             SubscriptBox["x", "p"], "->", 
             RowBox[{"X1", "[", "t", "]"}]}], "/.", "sol1"}], ")"}], "[", 
          RowBox[{"[", "1", "]"}], "]"}], ",", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             SubscriptBox["y", "p"], "->", 
             RowBox[{"X3", "[", "t", "]"}]}], "/.", "sol1"}], ")"}], "[", 
          RowBox[{"[", "1", "]"}], "]"}], ",", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"\[Theta]p", "->", 
             RowBox[{"X5", "[", "t", "]"}]}], "/.", "sol1"}], ")"}], "[", 
          RowBox[{"[", "1", "]"}], "]"}], ",", 
         RowBox[{
          SubscriptBox["x", "1"], "->", "0"}], ",", "\[IndentingNewLine]", 
         RowBox[{
          SubscriptBox["x", "2"], "->", 
          RowBox[{"2", " ", 
           SubscriptBox["w", "p"]}]}], ",", 
         RowBox[{
          SubscriptBox["y", "1"], "->", "0"}], ",", 
         RowBox[{
          SubscriptBox["y", "2"], "->", "0"}], ",", "EquibInputConditions"}], 
        "}"}], "//", "Flatten"}], ")"}]}], 
    RowBox[{"(*", 
     RowBox[{"/.", "EquibInputConditions"}], "*)"}], "/.", 
    "NumericParametersTest"}], ",", 
   RowBox[{"{", 
    RowBox[{"t", ",", "0", ",", "T"}], "}"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.7151968713813367`*^9, 3.7151969007097683`*^9}, {
   3.71519698944118*^9, 3.7151970217035537`*^9}, {3.7152511387726035`*^9, 
   3.7152511523688965`*^9}, 3.7152512188736677`*^9, {3.7152512626228604`*^9, 
   3.7152512780146103`*^9}, {3.7152640524903307`*^9, 
   3.7152640590455008`*^9}, {3.7152640977274103`*^9, 3.7152641517096634`*^9}, 
   3.715264196061022*^9, {3.7152643599824553`*^9, 3.7152644064611177`*^9}, {
   3.715265504249199*^9, 3.715265607742456*^9}, {3.715265653946825*^9, 
   3.715265656570883*^9}, {3.7152656901205235`*^9, 3.715265705761154*^9}, {
   3.7152657462494707`*^9, 3.715265761777974*^9}, {3.7152658050299215`*^9, 
   3.71526583162175*^9}, {3.7152658688641443`*^9, 3.715265873316239*^9}, {
   3.7152659154247065`*^9, 3.7152659169016294`*^9}, {3.7152659595622597`*^9, 
   3.71526596009027*^9}, {3.7152662612388773`*^9, 3.715266278739915*^9}, {
   3.7152668379580574`*^9, 3.7152668389140773`*^9}, {3.715266904159856*^9, 
   3.7152669127909517`*^9}, {3.7153627834517813`*^9, 
   3.7153627841872683`*^9}, {3.715363285946103*^9, 3.715363326770894*^9}, {
   3.7153633889353848`*^9, 3.71536339863281*^9}, {3.715363429489255*^9, 
   3.7153634408657904`*^9}, {3.7153635089726486`*^9, 
   3.7153635156490707`*^9}, {3.715363563875682*^9, 3.7153635860853925`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   GraphicsBox[{{}, {}, 
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], FaceForm[Opacity[0.3]], LineBox[CompressedData["
1:eJxV13k0Vd//P3BDCmUohQaSIVOSQoh2SEUJCdEg85gQQpKxRISKBiVCIpll
yHnJmCEZbqYy5l6za0wZf/u+P+/ve63f/YP1WPeuc/Z57ed+7X32mF8/Z8VA
R0fXg//Q/v/vM4Xo/r/PFCpPqlGOkHIv+T/33HLlCC9K+8+JLAqeOb2f/rPn
wlKJYNHkf7YHw8cz60b/szr/ulrvqqUj/+dKEnfog7dCyv/ngQ4m440bJf7z
jFrns6TN+/5zwt9Hz8fuiv3nhhGnpNV3u/+z3/rny9NbKf/dzyS+1fyXvvR/
3+d+WR0QZ2v6NLNG+1BRoKxizEs2rtK+f01sELwb/5uztPlfmyxT7Ro4OEs/
/+uCzRlR3YPspdn/WikxfO96X/bSxH+tV8bw5Ggfe+mjf/2qf3Ob8H7O0sB/
fVxgU0QgaXOpy78uCjuYTrBsKzX+13fpeDgF+HeVyv/rLwvbtu84u7d0afV/
3iF3LGajrnzp8X+9c7r6z8qccalGyv+8plzyI3m0onRH8+o/dpuv4j55pqlU
6fHKP07jHyN4jdtLB9uW/rGwtM5u0TN9pXaP//5jXqmcx2vNlNJMrd//2O5+
WN0R8+nSg1un/vFArtrXhY/0hLCi2j/2bnc5rMZrTRjX6yz/M74wF/GoNXvC
y3PhD80iilu947muEbHvDs3T3EvsvyOArhFv6oOmaTY+vMGVnexAcHwVmqRZ
yME7lD7SjmjYsH2MZpRf3fn5hTXxLOnlMM1t1+aG+B9aECYpdyg0D7Iqn5Vx
vkqwvo4bpPl2dYX55FUTwkSH/xfNBlI6auvjzxOTC0wDNDcPOVypsdAlNvAI
9tMczfGUmZR7mpCYMeyjOSKCSST5/Wmi2cWll2ZrRr32sBw9Qu/jWjfN7QeW
TE3rLxPrf5/6QbP6LSlvN3cnIuHt5k6aE/xiv2gtexAcgQ+/05w9t9GWujOQ
mBT61ULz+T0cBhkRocT+Y52NNKtkfvfXuPiEeNqXVU9zXO4OtZt3XxGStzfX
0BzunSKVeD+NmKfKVP3jkskFK+Y8QnZEpYTmJKuuW5paP4k8usiMf+a7qKjL
1LWb+HvVK55mJ635QVHBHkI+ZkcUzWd3L6w9TekhKqL9A2g2XzgjGsjVS6wV
FN6gWUsswyX2Ri+RslxpSfO1w9sG7Ot7CVYni/M09x/9K1i6uY8o1mpTp1l7
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
       "]]}},
    Axes->{True, True},
    AxesLabel->{
      FormBox["\"x\"", TraditionalForm], 
      FormBox["\"x'\"", TraditionalForm]},
    AxesOrigin->{0.65, 0},
    DisplayFunction->Identity,
    FrameLabel->{{None, None}, {None, None}},
    FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
    GridLinesStyle->Directive[
      GrayLevel[0.5, 0.4]],
    Method->{"ScalingFunctions" -> None},
    PlotRange->{{0.6607065829974189, 1.}, {-0.07884096079541772, 
     0.018692560130567835`}},
    PlotRangeClipping->True,
    PlotRangePadding->{{
       Scaled[0.05], 
       Scaled[0.05]}, {
       Scaled[0.05], 
       Scaled[0.05]}},
    Ticks->{Automatic, Automatic}], ",", 
   GraphicsBox[{{}, {}, 
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], FaceForm[Opacity[0.3]], LineBox[CompressedData["
1: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
HGf+gTrMrpYF2lNg+ePxpdG0H0iU6i7pbk6BsmOykg812lAq66saBy0K7Hxv
KDf4uh39KbfRKuSggDZzhSXzZCeyj4q86bnVB3r3ikkeHl2o8PjAK+b5PmCt
M+il7e1GVwQU9h3p7IOU7efkz4r2oKP+6h3rgVg9GXL87KSBQ3nrlx87u/TB
p1dEbqYgHFKOMzD4bNUH9G5VTnYcDs02bp+5pNEHlmU/zmaZ4lGhlnz7ydVe
kGo8uPOYAwFRud6AJ60Xfm/TXJwoISByivRwYFcvRJzKuHBinYBey/1TJ2X2
AmdmgsHT10S0/HH3P/3rvUC+8WYf3puEtlWypp78SIZ7ByWZwtx60c/ztLdc
fmS48psgi772onj//qWSZ2T40hF7LXWuFwVfeGr/SIMMjyT8br8x7UMXVHi4
r9JJcFNexr1dmYKOqNWOvRYnwZMhumfWbD8a5n4yJY69X/07T7MGiA2gH1r3
PKIWiHCqFrd+/NYAknbOE5qoJAKjJSMdVzOA1v5GiahdJ8JRpqtzgcGDyFxk
6O8apk85d+740iRGRbV5TaPxRgQ42msh7nuDitwZ7irc2HuczL4hc8CHitIV
I0fsMD14eqfK9b4JKnL+Li74D9NfnEe9pmJzh9Fmp33/hzgcJPk11/PEjKAi
i11ZnyS64XF4d5sSNw29MzUMWOrrgiyrbSl+0jRUVXY0CB/aBf55rke61GlI
/AjV/sFGJ5hkKyTov6QhKZ/jH4t/dEDL67/BRyk0ZPyl8y//nTbwU9zK/pw2
hr6oqzs0SjbD4ebwPWfP0dH+nXNJZVhf1qGz6U30mkKPvdK9BfSLYUjnBl49
YQqFFKQySiKLYMQ153NNyRTSCTnekSdcCEIdJ2NGJ6cQ1yvz/JkLuaA94aoz
dG0a8T8Dz4t7PsJK+KzrZ9EZlOLCbil7JBbZMPErTnfMIj/+L43jr+LR6W2p
GTA1i1LJ4StDLYmIjQcOZm6fQ6v7O9zbz6ehm91dSx/PzyGD4UvjR7ey0f5R
9ksX/q/i8o6n+v/iuOwiklGRRIUQUmSko6KyIvGV0SSKhlAhpYyMkJKszOy9
N29773Xd6d4rMzsykn6f35/Px/sz3u9zzuu8zyt9FvmFRcoetS1EXHqsaqf9
51Cg470dtnO1yEq51mveaAEx2ySl69yrQ4ONzBnmTxdQnnjWxQjMh168gOvo
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
GArPE9D/AK/YsJ4=
       "]]}},
    Axes->{True, True},
    AxesLabel->{
      FormBox["\"y\"", TraditionalForm], 
      FormBox["\"y'\"", TraditionalForm]},
    AxesOrigin->{0, 0},
    DisplayFunction->Identity,
    FrameLabel->{{None, None}, {None, None}},
    FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
    GridLinesStyle->Directive[
      GrayLevel[0.5, 0.4]],
    Method->{"ScalingFunctions" -> None},
    PlotRange->{{-1.124525, 0.591238844263263}, {-1.0703297854567058`, 
     1.0524532359921215`}},
    PlotRangeClipping->True,
    PlotRangePadding->{{
       Scaled[0.05], 
       Scaled[0.05]}, {
       Scaled[0.05], 
       Scaled[0.05]}},
    Ticks->{Automatic, Automatic}], ",", 
   GraphicsBox[{{}, {}, 
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], FaceForm[Opacity[0.3]], LineBox[CompressedData["
1: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
akFFiqz9c0lMaQGsAhK/H7hPRWK0/4L9eRZA4knZwRtPqUhk5+0HFZvz8Jqs
EO4YSEWSlYgsmW+dB6X3hx6YRlCRLgjXL+/LmgfmCgpKoTgq0pBhxCP23fn/
wlIkqzxpF/9JzmM3nweL2wO14mlUJJ3AiGPMMA/qqwFZTh+pSDfiVxko2OZh
JiWixPsLFamB2XJpfH4OVon2Rne/UZFK1u5fafg9B4fTgsdYMqlI2sY5Zvlp
c7BUoE+M2D1fjX5CTPaag3/4twx517/nXllxqN4cmLt+n97ejV/N8LjbV3IO
wpmHJf/t3k9/ZNT92f45sHv3IjAjmYrEazxEHzI2CxTBbInS8VSkWq/Bf2kl
szCqn2MbG0lFyunrDavf3auSSm05a4KoSFQjxrr7HszC+9x8wQYvKtLeFO8U
I81ZCGz9Jf/VlYpkI9rUWC00C8cVX5qaWlGRLmuryl2nm4U3Mj6t8/pUpNKN
TOve4hnIOi4tZqRGRQKR62yGD2ag7myu7qeLVKRpYwNmrjMz0FhT8aFTmIok
bTDaJTA4DRLPD0TPslORBk9njHq8noaGoHbZOXoqkqOYURSXxjRQ2M0xkhco
SWp1ItSWxClIevGvKLmKknRi/5fvve5TMB4zSnEgh5K0Ja0inCE9BejgtnFy
AiVJVvURm2L2P5gPdPJVtaMkWTymkln8NAnelaXP3GgpSXwin4IMbCbBqrIm
qnycgqRTR/QSE5qEvi+n9FzrKEiFqwnSPJ8nQH5ZP5YnkoIk/t11WD9nHIIF
hX2OslGQnhU+otVw291ra/VjXy/s4Jm5kYjC8+NAjmWM+py7g1V9c2vXi8dg
QPHle1epHXy6r56duX0U/t4/QKOMtvG9jePSP3f3AbuGxd5Iqm38uvpveJP5
KJCIt+/eq9rCvKKsSteWRiA3UqnpuN4WNnPRHU74NQJ5zbcSG/m2MGa7K63u
PwIvOmIYfy5v4lUpnYjb6iPwVPKwnW7NJh69Zuyae2wE4lVjLS6+28SRVs+5
dQaGIXTyzCjN003sdoTrk/TnYUhKe1t4w2QT8we8m1B2G4bvfvvNO69tYgnd
p6a+hGEgxi6fUDq/if87nKHYyjgMZ/Ypb6qLbuIr5ZwPxFqGQPGO8cs3IptY
5E/lG7/EITATkF6ok97EjFel1YqthiC7Unzg3m685T2q0o0SQ3Cy7Jxkndnu
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
/T/AUvzKtMCwP8cL174j9Pw/W6uXcA==
       "]]}},
    Axes->{True, True},
    AxesLabel->{
      FormBox["\"\[Theta]\"", TraditionalForm], 
      FormBox["\"\[Theta]'\"", TraditionalForm]},
    AxesOrigin->{0, 0},
    DisplayFunction->Identity,
    FrameLabel->{{None, None}, {None, None}},
    FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
    GridLinesStyle->Directive[
      GrayLevel[0.5, 0.4]],
    Method->{"ScalingFunctions" -> None},
    PlotRange->{{-0.0016975864979491303`, 
     0.0028293108298726223`}, {-0.0015995380433887255`, 0.002649732880294996}},
    PlotRangeClipping->True,
    PlotRangePadding->{{
       Scaled[0.05], 
       Scaled[0.05]}, {
       Scaled[0.05], 
       Scaled[0.05]}},
    Ticks->{Automatic, Automatic}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.715264407561141*^9, {3.7152655874829607`*^9, 3.7152656085384455`*^9}, 
   3.715265660066955*^9, {3.715265694500911*^9, 3.715265706829179*^9}, 
   3.7152657647340374`*^9, {3.715265810154033*^9, 3.71526583269378*^9}, 
   3.7152658742322598`*^9, 3.7152659184856577`*^9, 3.7152659619023123`*^9, {
   3.715266252702693*^9, 3.7152662794599295`*^9}, 3.7152663411600733`*^9, 
   3.7152666338047433`*^9, 3.715266764045635*^9, 3.715266839926098*^9, 
   3.7152669137589703`*^9, 3.715285124502807*^9, 3.7152852611151023`*^9, {
   3.715285295816537*^9, 3.7152853036617565`*^9}, 3.715285646566972*^9, 
   3.7152857114350557`*^9, 3.715285743977557*^9, 3.7152857960540037`*^9, 
   3.7153626221810937`*^9, 3.7153627518340406`*^9, {3.7153627849898005`*^9, 
   3.7153628132041764`*^9}, 3.7153628893961964`*^9, 3.715362943903026*^9, 
   3.7153629904999*^9, 3.7153631510905976`*^9, {3.715363317353653*^9, 
   3.7153633278285947`*^9}, {3.715363392018427*^9, 3.715363399770563*^9}, {
   3.7153634358124423`*^9, 3.7153634417934055`*^9}, 3.7153635165066385`*^9, {
   3.715363574581773*^9, 3.7153635885460215`*^9}}],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`t$$ = 10.085791397094727`, Typeset`show$$ = 
    True, Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{
      Hold[$CellContext`t$$], 0, 12}}, Typeset`size$$ = {360., {187., 191.}}, 
    Typeset`update$$ = 0, Typeset`initDone$$, Typeset`skipInitDone$$ = 
    True, $CellContext`t$501535$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, "Variables" :> {$CellContext`t$$ = 0}, 
      "ControllerVariables" :> {
        Hold[$CellContext`t$$, $CellContext`t$501535$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> ReplaceAll[
        ReplaceAll[
         Part[
          $CellContext`DrawSystem[
           Subscript[$CellContext`x, 1], 
           Subscript[$CellContext`y, 1], 
           Subscript[$CellContext`x, 2], 
           Subscript[$CellContext`y, 2], 
           Subscript[$CellContext`x, $CellContext`p], 
           Subscript[$CellContext`y, $CellContext`p], $CellContext`\[Theta]p, 
           Subscript[$CellContext`w, $CellContext`p]], 1], 
         Flatten[{
           Part[
            ReplaceAll[
            Subscript[$CellContext`x, $CellContext`p] -> \
$CellContext`X1[$CellContext`t$$], $CellContext`sol1], 1], 
           Part[
            ReplaceAll[
            Subscript[$CellContext`y, $CellContext`p] -> \
$CellContext`X3[$CellContext`t$$], $CellContext`sol1], 1], 
           Part[
            
            ReplaceAll[$CellContext`\[Theta]p -> \
$CellContext`X5[$CellContext`t$$], $CellContext`sol1], 1], 
           Subscript[$CellContext`x, 1] -> 0, Subscript[$CellContext`x, 2] -> 
           2 Subscript[$CellContext`w, $CellContext`p], 
           Subscript[$CellContext`y, 1] -> 0, Subscript[$CellContext`y, 2] -> 
           0, $CellContext`EquibInputConditions}]], \
$CellContext`NumericParametersTest], 
      "Specifications" :> {{$CellContext`t$$, 0, 12, 
         AppearanceElements -> {
          "ProgressSlider", "PlayPauseButton", "FasterSlowerButtons", 
           "DirectionButton"}}}, 
      "Options" :> {
       ControlType -> Animator, AppearanceElements -> None, DefaultBaseStyle -> 
        "Animate", DefaultLabelStyle -> "AnimateLabel", SynchronousUpdating -> 
        True, ShrinkingDelay -> 10.}, "DefaultOptions" :> {}],
     ImageSizeCache->{411., {228., 235.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Animate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{
  3.715264407561141*^9, {3.7152655874829607`*^9, 3.7152656085384455`*^9}, 
   3.715265660066955*^9, {3.715265694500911*^9, 3.715265706829179*^9}, 
   3.7152657647340374`*^9, {3.715265810154033*^9, 3.71526583269378*^9}, 
   3.7152658742322598`*^9, 3.7152659184856577`*^9, 3.7152659619023123`*^9, {
   3.715266252702693*^9, 3.7152662794599295`*^9}, 3.7152663411600733`*^9, 
   3.7152666338047433`*^9, 3.715266764045635*^9, 3.715266839926098*^9, 
   3.7152669137589703`*^9, 3.715285124502807*^9, 3.7152852611151023`*^9, {
   3.715285295816537*^9, 3.7152853036617565`*^9}, 3.715285646566972*^9, 
   3.7152857114350557`*^9, 3.715285743977557*^9, 3.7152857960540037`*^9, 
   3.7153626221810937`*^9, 3.7153627518340406`*^9, {3.7153627849898005`*^9, 
   3.7153628132041764`*^9}, 3.7153628893961964`*^9, 3.715362943903026*^9, 
   3.7153629904999*^9, 3.7153631510905976`*^9, {3.715363317353653*^9, 
   3.7153633278285947`*^9}, {3.715363392018427*^9, 3.715363399770563*^9}, {
   3.7153634358124423`*^9, 3.7153634417934055`*^9}, 3.7153635165066385`*^9, {
   3.715363574581773*^9, 3.715363588633078*^9}}]
}, Open  ]],

Cell[" ", "Text",
 Editable->False,
 Selectable->False,
 CellFrame->{{0, 0}, {0, 3}},
 ShowCellBracket->False,
 CellMargins->{{0, 0}, {1, 1}},
 CellElementSpacings->{"CellMinHeight"->1},
 CellFrameMargins->0,
 CellFrameColor->RGBColor[0, 0, 1],
 CellSize->{Inherited, 5}],

Cell[BoxData[
 RowBox[{" ", 
  RowBox[{
  "add", " ", "both", " ", "a", " ", "driving", " ", "force", " ", "and", " ",
    "damping"}]}]], "Input",
 CellChangeTimes->{{3.7151971026862116`*^9, 3.7151971026962166`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{"NumericTestParams", "\[IndentingNewLine]", \
"NumericParametersTest", "\[IndentingNewLine]", "EquibInputConditions"}], \
"Input",
 CellChangeTimes->{{3.715361485702137*^9, 3.7153614859301543`*^9}, {
  3.7153615235511284`*^9, 3.7153615237791424`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"\[Kappa]", "\[Rule]", "1"}], ",", 
   RowBox[{"\[ScriptCapitalL]", "\[Rule]", "1"}], ",", 
   RowBox[{
    SubsuperscriptBox["\[Omega]", "s", "2"], "\[Rule]", "100"}], ",", 
   RowBox[{"\[Alpha]", "\[Rule]", "11.881188118811881`"}], ",", 
   RowBox[{"\[Gamma]", "\[Rule]", "0.04905`"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.7153614771090717`*^9, 3.7153614862221403`*^9}, 
   3.715361524023139*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    SubscriptBox["k", "1"], "\[Rule]", "200"}], ",", 
   RowBox[{
    SubscriptBox["k", "2"], "\[Rule]", 
    SubscriptBox["k", "1"]}], ",", 
   RowBox[{
    SubscriptBox["L0", "1"], "\[Rule]", "2"}], ",", 
   RowBox[{
    SubscriptBox["L0", "2"], "\[Rule]", 
    SubscriptBox["L0", "1"]}], ",", 
   RowBox[{
    SubscriptBox["m", "p"], "\[Rule]", "2"}], ",", 
   RowBox[{
    SubscriptBox["h", "p"], "\[Rule]", "0.1`"}], ",", 
   RowBox[{
    SubscriptBox["w", "p"], "\[Rule]", "1"}], ",", 
   RowBox[{"g", "\[Rule]", "9.81`"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.7153614771090717`*^9, 3.7153614862221403`*^9}, 
   3.715361524039139*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{
     SubscriptBox["x", "1"], "[", "t", "]"}], "\[Rule]", "0"}], ",", 
   RowBox[{
    RowBox[{
     SubscriptBox["y", "1"], "[", "t", "]"}], "\[Rule]", "0"}], ",", 
   RowBox[{
    RowBox[{
     SubscriptBox["x", "2"], "[", "t", "]"}], "\[Rule]", 
    RowBox[{"2", " ", 
     SubscriptBox["w", "p"]}]}], ",", 
   RowBox[{
    RowBox[{
     SubscriptBox["y", "2"], "[", "t", "]"}], "\[Rule]", 
    RowBox[{
     SubscriptBox["y", "1"], "[", "t", "]"}]}]}], "}"}]], "Output",
 CellChangeTimes->{{3.7153614771090717`*^9, 3.7153614862221403`*^9}, 
   3.71536152405114*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData["d"], "Input",
 CellChangeTimes->{3.7153626746684732`*^9}],

Cell[BoxData["d"], "Output",
 CellChangeTimes->{3.715362675472006*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"\[CapitalOmega]", "=", "2"}], ";"}], " ", 
  RowBox[{"(*", " ", "Hz", " ", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"d", "=", "0.82"}], " ", 
  RowBox[{"(*", 
   RowBox[{"NonDim", " ", "magnitude"}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{"EquibInputConditions", "=", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{
     RowBox[{
      SubscriptBox["x", "1"], "[", "t", "]"}], "\[Rule]", "0"}], ",", 
    RowBox[{
     RowBox[{
      SubscriptBox["y", "1"], "[", "t", "]"}], "\[Rule]", 
     RowBox[{"0", "+", 
      RowBox[{"d", " ", 
       RowBox[{"Sin", "[", 
        RowBox[{"\[CapitalOmega]", " ", "t"}], "]"}]}]}]}], ",", 
    RowBox[{
     RowBox[{
      SubscriptBox["x", "2"], "[", "t", "]"}], "\[Rule]", 
     RowBox[{"2", " ", 
      SubscriptBox["w", "p"]}]}], ",", 
    RowBox[{
     RowBox[{
      SubscriptBox["y", "2"], "[", "t", "]"}], "\[Rule]", 
     RowBox[{
      SubscriptBox["y", "1"], "[", "t", "]"}]}]}], 
   "}"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"(", 
     RowBox[{"SymetricEOMtoInvestigate", "=", 
      RowBox[{
       RowBox[{"EOM", "/.", "greekTermsSymetricCase"}], "//.", 
       "EquibInputConditions"}]}], ")"}], "/.", "dispNoTime"}], "//", 
   "MatrixForm"}], "//", "TraditionalForm"}]}], "Input",
 CellChangeTimes->{{3.7153618507732964`*^9, 3.715361893492193*^9}, {
   3.715361929364276*^9, 3.7153619320760736`*^9}, {3.7153624001963778`*^9, 
   3.7153624010669546`*^9}, {3.715362678973327*^9, 3.715362701647498*^9}, 
   3.7153627989496217`*^9, 3.715362871520816*^9, 3.715362977318166*^9, 
   3.7153631171951294`*^9}],

Cell[BoxData["0.82`"], "Output",
 CellChangeTimes->{3.715362075953139*^9, 3.7153622810257874`*^9, 
  3.7153624015923023`*^9, 3.715362702911334*^9, 3.7153627995590224`*^9, 
  3.7153628725414934`*^9, 3.7153629777374434`*^9, 3.7153631177695074`*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{
     SubscriptBox["x", "1"], "[", "t", "]"}], "\[Rule]", "0"}], ",", 
   RowBox[{
    RowBox[{
     SubscriptBox["y", "1"], "[", "t", "]"}], "\[Rule]", 
    RowBox[{"0.82`", " ", 
     RowBox[{"Sin", "[", 
      RowBox[{"2", " ", "t"}], "]"}]}]}], ",", 
   RowBox[{
    RowBox[{
     SubscriptBox["x", "2"], "[", "t", "]"}], "\[Rule]", 
    RowBox[{"2", " ", 
     SubscriptBox["w", "p"]}]}], ",", 
   RowBox[{
    RowBox[{
     SubscriptBox["y", "2"], "[", "t", "]"}], "\[Rule]", 
    RowBox[{
     SubscriptBox["y", "1"], "[", "t", "]"}]}]}], "}"}]], "Output",
 CellChangeTimes->{3.715362075953139*^9, 3.7153622810257874`*^9, 
  3.7153624015923023`*^9, 3.715362702911334*^9, 3.7153627995590224`*^9, 
  3.7153628725414934`*^9, 3.7153629777374434`*^9, 3.7153631177755117`*^9}],

Cell[BoxData[
 FormBox[
  TagBox[
   RowBox[{
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {
        SuperscriptBox[
         SubscriptBox["x", "p"], "\[Prime]\[Prime]",
         MultilineFunction->None]},
       {
        SuperscriptBox[
         SubscriptBox["y", "p"], "\[Prime]\[Prime]",
         MultilineFunction->None]},
       {
        SuperscriptBox[
         SubscriptBox["\[Theta]", "p"], "\[Prime]\[Prime]",
         MultilineFunction->None]}
      },
      GridBoxAlignment->{
       "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
        "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}], 
    "\[LongEqual]", 
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"sin", "(", 
              SubscriptBox["\[Theta]", "p"], ")"}], " ", 
             SubscriptBox["h", "p"]}], "-", 
            RowBox[{
             RowBox[{"cos", "(", 
              SubscriptBox["\[Theta]", "p"], ")"}], " ", 
             SubscriptBox["w", "p"]}], "+", 
            RowBox[{"2", " ", 
             SubscriptBox["w", "p"]}], "-", 
            SubscriptBox["x", "p"]}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{"1", "-", 
            FractionBox["1", 
             SqrtBox[
              RowBox[{
               SuperscriptBox[
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"sin", "(", 
                    SubscriptBox["\[Theta]", "p"], ")"}], " ", 
                   SubscriptBox["h", "p"]}], "-", 
                  RowBox[{
                   RowBox[{"cos", "(", 
                    SubscriptBox["\[Theta]", "p"], ")"}], " ", 
                   SubscriptBox["w", "p"]}], "+", 
                  RowBox[{"2", " ", 
                   SubscriptBox["w", "p"]}], "-", 
                  SubscriptBox["x", "p"]}], ")"}], "2"], "+", 
               SuperscriptBox[
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"0.82`", " ", 
                   RowBox[{"sin", "(", 
                    RowBox[{"2", " ", "t"}], ")"}]}], "-", 
                  RowBox[{
                   RowBox[{"cos", "(", 
                    SubscriptBox["\[Theta]", "p"], ")"}], " ", 
                   SubscriptBox["h", "p"]}], "-", 
                  RowBox[{
                   RowBox[{"sin", "(", 
                    SubscriptBox["\[Theta]", "p"], ")"}], " ", 
                   SubscriptBox["w", "p"]}], "-", 
                  SubscriptBox["y", "p"]}], ")"}], "2"]}]]]}], ")"}]}], "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"sin", "(", 
              SubscriptBox["\[Theta]", "p"], ")"}], " ", 
             SubscriptBox["h", "p"]}], "+", 
            RowBox[{
             RowBox[{"cos", "(", 
              SubscriptBox["\[Theta]", "p"], ")"}], " ", 
             SubscriptBox["w", "p"]}], "-", 
            SubscriptBox["x", "p"]}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{"1", "-", 
            FractionBox["1", 
             SqrtBox[
              RowBox[{
               SuperscriptBox[
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"sin", "(", 
                    SubscriptBox["\[Theta]", "p"], ")"}], " ", 
                   SubscriptBox["h", "p"]}], "+", 
                  RowBox[{
                   RowBox[{"cos", "(", 
                    SubscriptBox["\[Theta]", "p"], ")"}], " ", 
                   SubscriptBox["w", "p"]}], "-", 
                  SubscriptBox["x", "p"]}], ")"}], "2"], "+", 
               SuperscriptBox[
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"0.82`", " ", 
                   RowBox[{"sin", "(", 
                    RowBox[{"2", " ", "t"}], ")"}]}], "-", 
                  RowBox[{
                   RowBox[{"cos", "(", 
                    SubscriptBox["\[Theta]", "p"], ")"}], " ", 
                   SubscriptBox["h", "p"]}], "+", 
                  RowBox[{
                   RowBox[{"sin", "(", 
                    SubscriptBox["\[Theta]", "p"], ")"}], " ", 
                   SubscriptBox["w", "p"]}], "-", 
                  SubscriptBox["y", "p"]}], ")"}], "2"]}]]]}], ")"}]}], "-", 
         RowBox[{
          SubscriptBox["c", "1"], " ", 
          SuperscriptBox[
           SubscriptBox["x", "p"], "\[Prime]",
           MultilineFunction->None]}]}]},
       {
        RowBox[{
         RowBox[{"-", "\[Gamma]"}], "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"1", "-", 
            FractionBox["1", 
             SqrtBox[
              RowBox[{
               SuperscriptBox[
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"sin", "(", 
                    SubscriptBox["\[Theta]", "p"], ")"}], " ", 
                   SubscriptBox["h", "p"]}], "-", 
                  RowBox[{
                   RowBox[{"cos", "(", 
                    SubscriptBox["\[Theta]", "p"], ")"}], " ", 
                   SubscriptBox["w", "p"]}], "+", 
                  RowBox[{"2", " ", 
                   SubscriptBox["w", "p"]}], "-", 
                  SubscriptBox["x", "p"]}], ")"}], "2"], "+", 
               SuperscriptBox[
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"0.82`", " ", 
                   RowBox[{"sin", "(", 
                    RowBox[{"2", " ", "t"}], ")"}]}], "-", 
                  RowBox[{
                   RowBox[{"cos", "(", 
                    SubscriptBox["\[Theta]", "p"], ")"}], " ", 
                   SubscriptBox["h", "p"]}], "-", 
                  RowBox[{
                   RowBox[{"sin", "(", 
                    SubscriptBox["\[Theta]", "p"], ")"}], " ", 
                   SubscriptBox["w", "p"]}], "-", 
                  SubscriptBox["y", "p"]}], ")"}], "2"]}]]]}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"0.82`", " ", 
             RowBox[{"sin", "(", 
              RowBox[{"2", " ", "t"}], ")"}]}], "-", 
            RowBox[{
             RowBox[{"cos", "(", 
              SubscriptBox["\[Theta]", "p"], ")"}], " ", 
             SubscriptBox["h", "p"]}], "-", 
            RowBox[{
             RowBox[{"sin", "(", 
              SubscriptBox["\[Theta]", "p"], ")"}], " ", 
             SubscriptBox["w", "p"]}], "-", 
            SubscriptBox["y", "p"]}], ")"}]}], "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"1", "-", 
            FractionBox["1", 
             SqrtBox[
              RowBox[{
               SuperscriptBox[
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"sin", "(", 
                    SubscriptBox["\[Theta]", "p"], ")"}], " ", 
                   SubscriptBox["h", "p"]}], "+", 
                  RowBox[{
                   RowBox[{"cos", "(", 
                    SubscriptBox["\[Theta]", "p"], ")"}], " ", 
                   SubscriptBox["w", "p"]}], "-", 
                  SubscriptBox["x", "p"]}], ")"}], "2"], "+", 
               SuperscriptBox[
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"0.82`", " ", 
                   RowBox[{"sin", "(", 
                    RowBox[{"2", " ", "t"}], ")"}]}], "-", 
                  RowBox[{
                   RowBox[{"cos", "(", 
                    SubscriptBox["\[Theta]", "p"], ")"}], " ", 
                   SubscriptBox["h", "p"]}], "+", 
                  RowBox[{
                   RowBox[{"sin", "(", 
                    SubscriptBox["\[Theta]", "p"], ")"}], " ", 
                   SubscriptBox["w", "p"]}], "-", 
                  SubscriptBox["y", "p"]}], ")"}], "2"]}]]]}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"0.82`", " ", 
             RowBox[{"sin", "(", 
              RowBox[{"2", " ", "t"}], ")"}]}], "-", 
            RowBox[{
             RowBox[{"cos", "(", 
              SubscriptBox["\[Theta]", "p"], ")"}], " ", 
             SubscriptBox["h", "p"]}], "+", 
            RowBox[{
             RowBox[{"sin", "(", 
              SubscriptBox["\[Theta]", "p"], ")"}], " ", 
             SubscriptBox["w", "p"]}], "-", 
            SubscriptBox["y", "p"]}], ")"}]}], "-", 
         RowBox[{
          SubscriptBox["c", "2"], " ", 
          SuperscriptBox[
           SubscriptBox["y", "p"], "\[Prime]",
           MultilineFunction->None]}]}]},
       {
        RowBox[{
         RowBox[{
          RowBox[{"-", "\[Alpha]"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             SubscriptBox["w", "p"], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"sin", "(", 
                 SubscriptBox["\[Theta]", "p"], ")"}], " ", 
                SubscriptBox["x", "p"]}], "+", 
               RowBox[{
                RowBox[{"cos", "(", 
                 SubscriptBox["\[Theta]", "p"], ")"}], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"0.82`", " ", 
                   RowBox[{"sin", "(", 
                    RowBox[{"2", " ", "t"}], ")"}]}], "-", 
                  SubscriptBox["y", "p"]}], ")"}]}]}], ")"}]}], "+", 
            RowBox[{
             SubscriptBox["h", "p"], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"sin", "(", 
                 SubscriptBox["\[Theta]", "p"], ")"}], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"0.82`", " ", 
                   RowBox[{"sin", "(", 
                    RowBox[{"2", " ", "t"}], ")"}]}], "-", 
                  SubscriptBox["y", "p"]}], ")"}]}], "-", 
               RowBox[{
                RowBox[{"cos", "(", 
                 SubscriptBox["\[Theta]", "p"], ")"}], " ", 
                SubscriptBox["x", "p"]}]}], ")"}]}]}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{"1", "-", 
            FractionBox["1", 
             SqrtBox[
              RowBox[{
               SuperscriptBox[
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"sin", "(", 
                    SubscriptBox["\[Theta]", "p"], ")"}], " ", 
                   SubscriptBox["h", "p"]}], "+", 
                  RowBox[{
                   RowBox[{"cos", "(", 
                    SubscriptBox["\[Theta]", "p"], ")"}], " ", 
                   SubscriptBox["w", "p"]}], "-", 
                  SubscriptBox["x", "p"]}], ")"}], "2"], "+", 
               SuperscriptBox[
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"0.82`", " ", 
                   RowBox[{"sin", "(", 
                    RowBox[{"2", " ", "t"}], ")"}]}], "-", 
                  RowBox[{
                   RowBox[{"cos", "(", 
                    SubscriptBox["\[Theta]", "p"], ")"}], " ", 
                   SubscriptBox["h", "p"]}], "+", 
                  RowBox[{
                   RowBox[{"sin", "(", 
                    SubscriptBox["\[Theta]", "p"], ")"}], " ", 
                   SubscriptBox["w", "p"]}], "-", 
                  SubscriptBox["y", "p"]}], ")"}], "2"]}]]]}], ")"}]}], "-", 
         RowBox[{"\[Alpha]", " ", 
          RowBox[{"(", 
           RowBox[{"1", "-", 
            FractionBox["1", 
             SqrtBox[
              RowBox[{
               SuperscriptBox[
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"sin", "(", 
                    SubscriptBox["\[Theta]", "p"], ")"}], " ", 
                   SubscriptBox["h", "p"]}], "-", 
                  RowBox[{
                   RowBox[{"cos", "(", 
                    SubscriptBox["\[Theta]", "p"], ")"}], " ", 
                   SubscriptBox["w", "p"]}], "+", 
                  RowBox[{"2", " ", 
                   SubscriptBox["w", "p"]}], "-", 
                  SubscriptBox["x", "p"]}], ")"}], "2"], "+", 
               SuperscriptBox[
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"0.82`", " ", 
                   RowBox[{"sin", "(", 
                    RowBox[{"2", " ", "t"}], ")"}]}], "-", 
                  RowBox[{
                   RowBox[{"cos", "(", 
                    SubscriptBox["\[Theta]", "p"], ")"}], " ", 
                   SubscriptBox["h", "p"]}], "-", 
                  RowBox[{
                   RowBox[{"sin", "(", 
                    SubscriptBox["\[Theta]", "p"], ")"}], " ", 
                   SubscriptBox["w", "p"]}], "-", 
                  SubscriptBox["y", "p"]}], ")"}], "2"]}]]]}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             SubscriptBox["h", "p"], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"cos", "(", 
                 SubscriptBox["\[Theta]", "p"], ")"}], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"2", " ", 
                   SubscriptBox["w", "p"]}], "-", 
                  SubscriptBox["x", "p"]}], ")"}]}], "+", 
               RowBox[{
                RowBox[{"sin", "(", 
                 SubscriptBox["\[Theta]", "p"], ")"}], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"0.82`", " ", 
                   RowBox[{"sin", "(", 
                    RowBox[{"2", " ", "t"}], ")"}]}], "-", 
                  SubscriptBox["y", "p"]}], ")"}]}]}], ")"}]}], "+", 
            RowBox[{
             SubscriptBox["w", "p"], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"sin", "(", 
                 SubscriptBox["\[Theta]", "p"], ")"}], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"2", " ", 
                   SubscriptBox["w", "p"]}], "-", 
                  SubscriptBox["x", "p"]}], ")"}]}], "+", 
               RowBox[{
                RowBox[{"cos", "(", 
                 SubscriptBox["\[Theta]", "p"], ")"}], " ", 
                RowBox[{"(", 
                 RowBox[{
                  SubscriptBox["y", "p"], "-", 
                  RowBox[{"0.82`", " ", 
                   RowBox[{"sin", "(", 
                    RowBox[{"2", " ", "t"}], ")"}]}]}], ")"}]}]}], ")"}]}]}], 
           ")"}]}], "-", 
         RowBox[{
          SubscriptBox["c", "3"], " ", 
          SuperscriptBox[
           SubscriptBox["\[Theta]", "p"], "\[Prime]",
           MultilineFunction->None]}]}]}
      },
      GridBoxAlignment->{
       "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
        "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}]}],
   Function[BoxForm`e$, 
    MatrixForm[BoxForm`e$]]], TraditionalForm]], "Output",
 CellChangeTimes->{3.715362075953139*^9, 3.7153622810257874`*^9, 
  3.7153624015923023`*^9, 3.715362702911334*^9, 3.7153627995590224`*^9, 
  3.7153628725414934`*^9, 3.7153629777374434`*^9, 3.7153631177955265`*^9}]
}, Open  ]],

Cell[BoxData["\"\<Because of energy conservation one can clearly never get \
chaos from the motion of a single degree of freedom. We therefore add both a \
driving force and damping, in order to remove energy conservation\>\""], \
"Input",
 CellChangeTimes->{{3.7151968713813367`*^9, 3.7151969219088144`*^9}, 
   3.715196987772071*^9, {3.7152162305628853`*^9, 3.7152162320189114`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"EOMtoSolve", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"SymetricEOMtoInvestigate", "/.", "NumericTestParams"}], "/.", 
     "NumericParametersTest"}], "/.", "NumericStructuralDamping"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"numericEqs", "=", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"X1", "'"}], "[", "t", "]"}], "\[Equal]", 
            RowBox[{"X2", "[", "t", "]"}]}], ",", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{
             RowBox[{"X2", "'"}], "[", "t", "]"}], "\[Equal]", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"EOMtoSolve", "[", 
               RowBox[{"[", 
                RowBox[{"2", ",", "1"}], "]"}], "]"}], "[", 
              RowBox[{"[", "1", "]"}], "]"}], ")"}]}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{
             RowBox[{"X3", "'"}], "[", "t", "]"}], "\[Equal]", 
            RowBox[{"X4", "[", "t", "]"}]}], ",", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{
             RowBox[{"X4", "'"}], "[", "t", "]"}], "\[Equal]", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"EOMtoSolve", "[", 
               RowBox[{"[", 
                RowBox[{"2", ",", "2"}], "]"}], "]"}], "[", 
              RowBox[{"[", "1", "]"}], "]"}], ")"}]}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{
             RowBox[{"X5", "'"}], "[", "t", "]"}], "\[Equal]", 
            RowBox[{"X6", "[", "t", "]"}]}], ",", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{
             RowBox[{"X6", "'"}], "[", "t", "]"}], "\[Equal]", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"EOMtoSolve", "[", 
               RowBox[{"[", 
                RowBox[{"2", ",", "3"}], "]"}], "]"}], "[", 
              RowBox[{"[", "1", "]"}], "]"}], ")"}]}]}], "}"}], "/.", 
         RowBox[{
          RowBox[{
           SubscriptBox["x", "p"], "[", "t", "]"}], "\[Rule]", 
          RowBox[{"X1", "[", "t", "]"}]}]}], "/.", 
        RowBox[{
         RowBox[{
          SubscriptBox["y", "p"], "[", "t", "]"}], "\[Rule]", 
         RowBox[{"X3", "[", "t", "]"}]}]}], "/.", 
       RowBox[{
        RowBox[{
         SubscriptBox["\[Theta]", "p"], "[", "t", "]"}], "\[Rule]", 
        RowBox[{"X5", "[", "t", "]"}]}]}], "/.", 
      RowBox[{
       RowBox[{"D", "[", 
        RowBox[{
         RowBox[{
          SubscriptBox["x", "p"], "[", "t", "]"}], ",", "t"}], "]"}], 
       "\[Rule]", 
       RowBox[{"X2", "[", "t", "]"}]}]}], "/.", 
     RowBox[{
      RowBox[{"D", "[", 
       RowBox[{
        RowBox[{
         SubscriptBox["y", "p"], "[", "t", "]"}], ",", "t"}], "]"}], 
      "\[Rule]", 
      RowBox[{"X4", "[", "t", "]"}]}]}], "/.", 
    RowBox[{
     RowBox[{"D", "[", 
      RowBox[{
       RowBox[{
        SubscriptBox["\[Theta]", "p"], "[", "t", "]"}], ",", "t"}], "]"}], 
     "\[Rule]", 
     RowBox[{"X6", "[", "t", "]"}]}]}]}], 
  ";"}], "\[IndentingNewLine]", "NumericTestParams", "\[IndentingNewLine]", 
 RowBox[{"NumericParametersTest", "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{"startValues", "=", 
    RowBox[{
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{"X1", "[", "0", "]"}], "\[Equal]", 
         SubscriptBox["w", "p"]}], ",", 
        RowBox[{
         RowBox[{"X2", "[", "0", "]"}], "==", "0.001"}], ",", 
        RowBox[{
         RowBox[{"X3", "[", "0", "]"}], "\[Equal]", 
         RowBox[{
          RowBox[{"-", "1"}], "-", 
          SubscriptBox["h", "p"], "-", 
          FractionBox["\[Gamma]", "2"]}]}], ",", 
        RowBox[{
         RowBox[{"X4", "[", "0", "]"}], "==", "0.01"}], ",", 
        RowBox[{
         RowBox[{"X5", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
        RowBox[{
         RowBox[{"X6", "[", "0", "]"}], "==", "0.001"}]}], "}"}], "/.", 
      "NumericTestParams"}], "/.", "NumericParametersTest"}]}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{"startValues", "=", 
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{"X1", "[", "0", "]"}], "\[Equal]", 
       SubscriptBox["w", "p"]}], ",", 
      RowBox[{
       RowBox[{"X2", "[", "0", "]"}], "==", "0.00"}], ",", 
      RowBox[{
       RowBox[{"X3", "[", "0", "]"}], "\[Equal]", 
       RowBox[{
        RowBox[{"-", "1"}], "-", 
        SubscriptBox["h", "p"], "-", 
        FractionBox["\[Gamma]", "2"]}]}], ",", 
      RowBox[{
       RowBox[{"X4", "[", "0", "]"}], "==", "0.0"}], ",", 
      RowBox[{
       RowBox[{"X5", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
      RowBox[{
       RowBox[{"X6", "[", "0", "]"}], "==", "0.00"}]}], "}"}], "/.", 
    "NumericTestParams"}], "/.", 
   "NumericParametersTest"}]}], "\[IndentingNewLine]", 
 RowBox[{"T", "=", "12"}], "\[IndentingNewLine]", 
 RowBox[{"sol1", " ", "=", " ", 
  RowBox[{"NDSolve", "[", " ", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"numericEqs", ",", " ", "startValues"}], "}"}], ",", " ", 
    RowBox[{"{", 
     RowBox[{
     "X1", ",", " ", "X2", ",", "X3", ",", "X4", ",", "X5", ",", "X6"}], 
     "}"}], ",", " ", 
    RowBox[{"{", 
     RowBox[{"t", ",", " ", "0", ",", " ", "T"}], "}"}]}], " ", 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"{", 
  RowBox[{
   RowBox[{"ParametricPlot", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"X1", "[", "t", "]"}], ",", 
        RowBox[{"X2", "[", "t", "]"}]}], "}"}], "/.", "\[InvisibleSpace]", 
      "sol1"}], ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", "0", ",", "T"}], "}"}], ",", 
     RowBox[{"AxesLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\"\<x\>\"", ",", "\"\<x'\>\""}], "}"}]}]}], "]"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"ParametricPlot", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"X3", "[", "t", "]"}], ",", 
        RowBox[{"X4", "[", "t", "]"}]}], "}"}], "/.", "\[InvisibleSpace]", 
      "sol1"}], ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", "0", ",", "T"}], "}"}], ",", 
     RowBox[{"AxesLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\"\<y\>\"", ",", "\"\<y'\>\""}], "}"}]}]}], "]"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"ParametricPlot", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"X5", "[", "t", "]"}], ",", 
        RowBox[{"X6", "[", "t", "]"}]}], "}"}], "/.", "\[InvisibleSpace]", 
      "sol1"}], ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", "0", ",", "T"}], "}"}], ",", 
     RowBox[{"AxesLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\"\<\[Theta]\>\"", ",", "\"\<\[Theta]'\>\""}], "}"}]}]}], 
    "]"}]}], "}"}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{
  3.7152162336237745`*^9, {3.715217538821905*^9, 3.715217572815819*^9}, {
   3.715362523926157*^9, 3.7153625572602434`*^9}, 3.7153627376406403`*^9, 
   3.7153628577566977`*^9, 3.7153629352092657`*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"\[Kappa]", "\[Rule]", "1"}], ",", 
   RowBox[{"\[ScriptCapitalL]", "\[Rule]", "1"}], ",", 
   RowBox[{
    SubsuperscriptBox["\[Omega]", "s", "2"], "\[Rule]", "100"}], ",", 
   RowBox[{"\[Alpha]", "\[Rule]", "11.881188118811881`"}], ",", 
   RowBox[{"\[Gamma]", "\[Rule]", "0.04905`"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.715217574811864*^9, 3.7152852457777696`*^9, 3.7153625429727755`*^9, 
   3.715362599864308*^9, 3.715362707103405*^9, 3.7153627379738584`*^9, 
   3.715362802421919*^9, {3.7153628588874445`*^9, 3.715362874233613*^9}, 
   3.715362936237946*^9, 3.715362981476921*^9, 3.7153631208735657`*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    SubscriptBox["k", "1"], "\[Rule]", "200"}], ",", 
   RowBox[{
    SubscriptBox["k", "2"], "\[Rule]", 
    SubscriptBox["k", "1"]}], ",", 
   RowBox[{
    SubscriptBox["L0", "1"], "\[Rule]", "2"}], ",", 
   RowBox[{
    SubscriptBox["L0", "2"], "\[Rule]", 
    SubscriptBox["L0", "1"]}], ",", 
   RowBox[{
    SubscriptBox["m", "p"], "\[Rule]", "2"}], ",", 
   RowBox[{
    SubscriptBox["h", "p"], "\[Rule]", "0.1`"}], ",", 
   RowBox[{
    SubscriptBox["w", "p"], "\[Rule]", "1"}], ",", 
   RowBox[{"g", "\[Rule]", "9.81`"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.715217574811864*^9, 3.7152852457777696`*^9, 3.7153625429727755`*^9, 
   3.715362599864308*^9, 3.715362707103405*^9, 3.7153627379738584`*^9, 
   3.715362802421919*^9, {3.7153628588874445`*^9, 3.715362874233613*^9}, 
   3.715362936237946*^9, 3.715362981476921*^9, 3.7153631208795695`*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{"X1", "[", "0", "]"}], "\[Equal]", "1"}], ",", 
   RowBox[{
    RowBox[{"X2", "[", "0", "]"}], "\[Equal]", "0.`"}], ",", 
   RowBox[{
    RowBox[{"X3", "[", "0", "]"}], "\[Equal]", 
    RowBox[{"-", "1.124525`"}]}], ",", 
   RowBox[{
    RowBox[{"X4", "[", "0", "]"}], "\[Equal]", "0.`"}], ",", 
   RowBox[{
    RowBox[{"X5", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
   RowBox[{
    RowBox[{"X6", "[", "0", "]"}], "\[Equal]", "0.`"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.715217574811864*^9, 3.7152852457777696`*^9, 3.7153625429727755`*^9, 
   3.715362599864308*^9, 3.715362707103405*^9, 3.7153627379738584`*^9, 
   3.715362802421919*^9, {3.7153628588874445`*^9, 3.715362874233613*^9}, 
   3.715362936237946*^9, 3.715362981476921*^9, 3.7153631208835726`*^9}],

Cell[BoxData["12"], "Output",
 CellChangeTimes->{
  3.715217574811864*^9, 3.7152852457777696`*^9, 3.7153625429727755`*^9, 
   3.715362599864308*^9, 3.715362707103405*^9, 3.7153627379738584`*^9, 
   3.715362802421919*^9, {3.7153628588874445`*^9, 3.715362874233613*^9}, 
   3.715362936237946*^9, 3.715362981476921*^9, 3.7153631208885756`*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"X1", "\[Rule]", 
     TagBox[
      TemplateBox[{RowBox[{
          StyleBox[
           TagBox["InterpolatingFunction", "SummaryHead"], 
           "NonInterpretableSummary"], 
          StyleBox["[", "NonInterpretableSummary"], 
          DynamicModuleBox[{Typeset`open$$ = False}, 
           PanelBox[
            PaneSelectorBox[{False -> GridBox[{{
                  PaneBox[
                   ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquarePlusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                   Alignment -> {Center, Center}, ImageSize -> 
                   Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                  GraphicsBox[{{{}, {}, {
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1]], 
                    LineBox[CompressedData["
1:eJw9yX1Qy3EcB/BJWZY6a00qS2tPHvPUTXrw/ajlaVqHo2QqTUgxQ7oc8pSE
VedEOZ240xka7jaG6g+1iPN0csRiym+kra1bpaWV329m77v3ve91b2aGdE2m
G4lEisZLrPWp7Ev2qjOLSY5YUMQ8wXMGpQX990rVrFyV/yeXB3tj2r0yOl3e
51W8Jruiy2UbJSb+xQyLy3z1SdGbRKvL/UmsRVGaAZdPPaZ6108ccjlAsFqk
nGN3+UKHTOO2ggSGUSJmdEUtIW1tHwMvnfbNGqlrzRoLKqebK2J3DPh7QKXT
tpQ5rxIV46DA6Z2V2lCx2BNSnBZq3I17yRSgOX0jy5jdWO4FOfZ/XnrxkE4b
7w05+hGHJUkPxpLafIDfNOywfsVL+cDSidDWMOhwXDKtdQ+DChvoFocNd2r7
T2NUqLlbbSes0F4uPdjgC6JHqt+Eb7P17pRiGoQE/+4l/N2aF16V6Afirg9G
wtFHt+jG8+hwKTT2J+HWpOtpvhY6iD3HYYTPGiM39rVMgmJaeQfh/F42VXfF
Hygz+/WEa5DkWtq2yZCTV/KVsFU4cKsOBUCVu1pHuOBqe5l6fCAoH+S9I7xk
W8Bc1Wvc+fwbdtysbsWyszVB0PZdiWy4BZqSSJJ0CuxKp+f34T4Z9+x6wnIG
VA41FfbgJk9eb+TTguH4CZP8B+56cYSJ8ykYWvwEnTrc59OkW3vuTYW5tGMy
Ne736w5tUsSEgJspt3DzHzOypJjint0MgfADtaZbfWbErSgi/6IzodNyDlgm
Mxq2vdC05TMh2kM7LMfMqONRJJdvYEJi1ecjKToz2l699mi6MBQUYUHTmG/N
yLPhwkO5MhTuJUe5PakzI02ku5IXyAKGd97xjwz81wWVlR5mAfmitqd6twlt
120K29LNAm6moFEW3406/Z4rotazQVgwaiVv7kIjMr3vt4dsuH0CqxVRf6Lp
YcwIK4cDmQnzytHCH8jqM0H47jQHinL3+Oz/ZUCvRMzAkEEOTBeGBWY0GVBj
c3qzVMKF2Zwv8yXzDShZsjJd/pQLPgsmkYPqMGRPTb3vH86Djez2Uo9UDMUW
TBmSVvKAPFQvK5qBIU9slm10lAeXw1cnJMzG0F8/BtcL
                    "]]}}}, {
                   DisplayFunction -> Identity, AspectRatio -> 1, 
                    Axes -> {False, False}, AxesLabel -> {None, None}, 
                    AxesOrigin -> {0, 0.62}, DisplayFunction :> Identity, 
                    Frame -> {{True, True}, {True, True}}, 
                    FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                    Directive[
                    Opacity[0.5], 
                    Thickness[Tiny], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    FrameTicks -> {{None, None}, {None, None}}, 
                    GridLines -> {None, None}, GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> 
                    Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}], 
                    Method -> {
                    "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
                    AbsolutePointSize[6], "ScalingFunctions" -> None}, 
                    PlotRange -> {{0., 12.}, {0.6614415380025215, 1.}}, 
                    PlotRangeClipping -> True, PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
                  GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "12.`"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                   BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}], True -> GridBox[{{
                  PaneBox[
                   ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquareMinusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                   Alignment -> {Center, Center}, ImageSize -> 
                   Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                  GraphicsBox[{{{}, {}, {
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1]], 
                    LineBox[CompressedData["
1:eJw9yX1Qy3EcB/BJWZY6a00qS2tPHvPUTXrw/ajlaVqHo2QqTUgxQ7oc8pSE
VedEOZ240xka7jaG6g+1iPN0csRiym+kra1bpaWV329m77v3ve91b2aGdE2m
G4lEisZLrPWp7Ev2qjOLSY5YUMQ8wXMGpQX990rVrFyV/yeXB3tj2r0yOl3e
51W8Jruiy2UbJSb+xQyLy3z1SdGbRKvL/UmsRVGaAZdPPaZ6108ccjlAsFqk
nGN3+UKHTOO2ggSGUSJmdEUtIW1tHwMvnfbNGqlrzRoLKqebK2J3DPh7QKXT
tpQ5rxIV46DA6Z2V2lCx2BNSnBZq3I17yRSgOX0jy5jdWO4FOfZ/XnrxkE4b
7w05+hGHJUkPxpLafIDfNOywfsVL+cDSidDWMOhwXDKtdQ+DChvoFocNd2r7
T2NUqLlbbSes0F4uPdjgC6JHqt+Eb7P17pRiGoQE/+4l/N2aF16V6Afirg9G
wtFHt+jG8+hwKTT2J+HWpOtpvhY6iD3HYYTPGiM39rVMgmJaeQfh/F42VXfF
Hygz+/WEa5DkWtq2yZCTV/KVsFU4cKsOBUCVu1pHuOBqe5l6fCAoH+S9I7xk
W8Bc1Wvc+fwbdtysbsWyszVB0PZdiWy4BZqSSJJ0CuxKp+f34T4Z9+x6wnIG
VA41FfbgJk9eb+TTguH4CZP8B+56cYSJ8ykYWvwEnTrc59OkW3vuTYW5tGMy
Ne736w5tUsSEgJspt3DzHzOypJjint0MgfADtaZbfWbErSgi/6IzodNyDlgm
Mxq2vdC05TMh2kM7LMfMqONRJJdvYEJi1ecjKToz2l699mi6MBQUYUHTmG/N
yLPhwkO5MhTuJUe5PakzI02ku5IXyAKGd97xjwz81wWVlR5mAfmitqd6twlt
120K29LNAm6moFEW3406/Z4rotazQVgwaiVv7kIjMr3vt4dsuH0CqxVRf6Lp
YcwIK4cDmQnzytHCH8jqM0H47jQHinL3+Oz/ZUCvRMzAkEEOTBeGBWY0GVBj
c3qzVMKF2Zwv8yXzDShZsjJd/pQLPgsmkYPqMGRPTb3vH86Djez2Uo9UDMUW
TBmSVvKAPFQvK5qBIU9slm10lAeXw1cnJMzG0F8/BtcL
                    "]]}}}, {
                   DisplayFunction -> Identity, AspectRatio -> 1, 
                    Axes -> {False, False}, AxesLabel -> {None, None}, 
                    AxesOrigin -> {0, 0.62}, DisplayFunction :> Identity, 
                    Frame -> {{True, True}, {True, True}}, 
                    FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                    Directive[
                    Opacity[0.5], 
                    Thickness[Tiny], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    FrameTicks -> {{None, None}, {None, None}}, 
                    GridLines -> {None, None}, GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> 
                    Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}], 
                    Method -> {
                    "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
                    AbsolutePointSize[6], "ScalingFunctions" -> None}, 
                    PlotRange -> {{0., 12.}, {0.6614415380025215, 1.}}, 
                    PlotRangeClipping -> True, PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
                  GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "12.`"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Order: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Hermite\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Periodic: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["False", "SummaryItem"]}]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                   BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}]}, 
             Dynamic[Typeset`open$$], ImageSize -> Automatic], 
            BaselinePosition -> Baseline], DynamicModuleValues :> {}], 
          StyleBox["]", "NonInterpretableSummary"]}]},
       "CopyTag",
       DisplayFunction->(#& ),
       InterpretationFunction->("InterpolatingFunction[{{0., 12.}}, <>]"& )],
      False,
      Editable->False,
      SelectWithContents->True,
      Selectable->False]}], ",", 
    RowBox[{"X2", "\[Rule]", 
     TagBox[
      TemplateBox[{RowBox[{
          StyleBox[
           TagBox["InterpolatingFunction", "SummaryHead"], 
           "NonInterpretableSummary"], 
          StyleBox["[", "NonInterpretableSummary"], 
          DynamicModuleBox[{Typeset`open$$ = False}, 
           PanelBox[
            PaneSelectorBox[{False -> GridBox[{{
                  PaneBox[
                   ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquarePlusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                   Alignment -> {Center, Center}, ImageSize -> 
                   Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                  GraphicsBox[{{{}, {}, {
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1]], 
                    LineBox[CompressedData["
1:eJwBEQPu/CFib1JlAgAAADAAAAACAAAA88dx3mtMiz4AAACu/JmIuDgxRMod
Csk/0hoblaYBn7tKtCx1tBfaP/q5evW1a+G7+PE93Qti4z+gM58uDEDuu3QL
iVJrmOk/QlMtNYNUEDz5Cj1FyyrwP7F/PHhfwyY8NrWGTtBP8z/Ysr4Kuoos
PPVXIzk7uPY/tMNqk4yRIzyIuxENvRD6P7Af5nygULo7GURRTq4v/T9bMnts
xBrQvJbicbgCSQBAyNV/+DSXEb2ftWMAZt0BQMYMtWWIkw+9Emn+vNRpA0Bs
kNpw9YAOvcaYQmr2FwVAfHYJqV2ID735Wi/OT6kGQBXoJ8PMaBK9bZnFIlxc
CEBEa8b3k9sbvUu4BOxzBwpAV5IBjPkHMb2oaexrw5ULQJ9XidjDA3a9Rpd9
3MVFDUB+LemCBczPvWNXtwMA2Q5AUGiqlyqp273gSc2N9kYQQITUj/Gohum9
Q1gT1HIdEUBGT52WrbUBvuavrfWK5RFAH1kRTYZbab6pxZyPfL4SQGmgst3H
Vm2+rCTgBAqJE0CgiNf3oCBsvuTzdzSdTxRA9LpUaWtnaL48gWTcCScVQFJ/
Q6tjEWO+1FelXxLwFUB7BsB+WuBbvozsOlv0yRZAPj+Dop6AUr558SQR3J8X
QLwD8pr4M0u+pj9jol9nGEBTOdQUkwBRvvNL9qu8PxlAh0bQTXTOZb5/od2Q
tQkaQDlF+G6Ox4i+QWcZMLTPGkDfW7eE/d3iviPrqUeMphtA5wzPCzji5r5E
uI46AG8cQO6rhBcd7em+hkPIpU1IHUDl7DVmlrHuvgcYVuw2Ex5AdiRIXfi0
9L69XDjtJdoeQBJFYK7bBQO/lF9vZu6xH0ACjao+TDc0v9VVfV2pPSBAzTXn
EzX/a7/wWu1DyKogQC+Ijh2+H3G/JpiHB+oVIUDrOQxCLcByv/z5y7jZeSFA
R+dkvuw1dL/iujomNuYhQPuoULRG73e/aKBTgWBLIkBacONeJoyBvwi+lrmN
riJAzUACKjkelb9s0SCWccoiQBRqZOqlDLG/jj9tWA==
                    "]], 
                    
                    LineBox[{{10.623129497959024`, -0.06659924480883489}, {
                    10.771143288824055`, -0.017308409189724122`}, {
                    10.984619919362924`, -0.06526922849160396}, {
                    10.998676985455782`, -0.06659924480883489}}], 
                    
                    LineBox[{{11.359670814091146`, -0.06659924480883489}, {
                    11.389750489311766`, -0.063235904731689}, {
                    11.60174341108313, -0.04466189137842666}, {
                    11.799682441691065`, -0.016343692996444236`}, {
                    11.999999796610169`, 0.018692530344613607`}}]}}}, {
                   DisplayFunction -> Identity, AspectRatio -> 1, 
                    Axes -> {False, False}, AxesLabel -> {None, None}, 
                    AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
                    Frame -> {{True, True}, {True, True}}, 
                    FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                    Directive[
                    Opacity[0.5], 
                    Thickness[Tiny], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    FrameTicks -> {{None, None}, {None, None}}, 
                    GridLines -> {None, None}, GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> 
                    Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}], 
                    Method -> {
                    "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
                    AbsolutePointSize[6], "ScalingFunctions" -> None}, 
                    PlotRange -> {{0., 12.}, {-0.06659924480883489, 
                    0.018692530344613607`}}, PlotRangeClipping -> True, 
                    PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
                  GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "12.`"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                   BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}], True -> GridBox[{{
                  PaneBox[
                   ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquareMinusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                   Alignment -> {Center, Center}, ImageSize -> 
                   Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                  GraphicsBox[{{{}, {}, {
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1]], 
                    LineBox[CompressedData["
1:eJwBEQPu/CFib1JlAgAAADAAAAACAAAA88dx3mtMiz4AAACu/JmIuDgxRMod
Csk/0hoblaYBn7tKtCx1tBfaP/q5evW1a+G7+PE93Qti4z+gM58uDEDuu3QL
iVJrmOk/QlMtNYNUEDz5Cj1FyyrwP7F/PHhfwyY8NrWGTtBP8z/Ysr4Kuoos
PPVXIzk7uPY/tMNqk4yRIzyIuxENvRD6P7Af5nygULo7GURRTq4v/T9bMnts
xBrQvJbicbgCSQBAyNV/+DSXEb2ftWMAZt0BQMYMtWWIkw+9Emn+vNRpA0Bs
kNpw9YAOvcaYQmr2FwVAfHYJqV2ID735Wi/OT6kGQBXoJ8PMaBK9bZnFIlxc
CEBEa8b3k9sbvUu4BOxzBwpAV5IBjPkHMb2oaexrw5ULQJ9XidjDA3a9Rpd9
3MVFDUB+LemCBczPvWNXtwMA2Q5AUGiqlyqp273gSc2N9kYQQITUj/Gohum9
Q1gT1HIdEUBGT52WrbUBvuavrfWK5RFAH1kRTYZbab6pxZyPfL4SQGmgst3H
Vm2+rCTgBAqJE0CgiNf3oCBsvuTzdzSdTxRA9LpUaWtnaL48gWTcCScVQFJ/
Q6tjEWO+1FelXxLwFUB7BsB+WuBbvozsOlv0yRZAPj+Dop6AUr558SQR3J8X
QLwD8pr4M0u+pj9jol9nGEBTOdQUkwBRvvNL9qu8PxlAh0bQTXTOZb5/od2Q
tQkaQDlF+G6Ox4i+QWcZMLTPGkDfW7eE/d3iviPrqUeMphtA5wzPCzji5r5E
uI46AG8cQO6rhBcd7em+hkPIpU1IHUDl7DVmlrHuvgcYVuw2Ex5AdiRIXfi0
9L69XDjtJdoeQBJFYK7bBQO/lF9vZu6xH0ACjao+TDc0v9VVfV2pPSBAzTXn
EzX/a7/wWu1DyKogQC+Ijh2+H3G/JpiHB+oVIUDrOQxCLcByv/z5y7jZeSFA
R+dkvuw1dL/iujomNuYhQPuoULRG73e/aKBTgWBLIkBacONeJoyBvwi+lrmN
riJAzUACKjkelb9s0SCWccoiQBRqZOqlDLG/jj9tWA==
                    "]], 
                    
                    LineBox[{{10.623129497959024`, -0.06659924480883489}, {
                    10.771143288824055`, -0.017308409189724122`}, {
                    10.984619919362924`, -0.06526922849160396}, {
                    10.998676985455782`, -0.06659924480883489}}], 
                    
                    LineBox[{{11.359670814091146`, -0.06659924480883489}, {
                    11.389750489311766`, -0.063235904731689}, {
                    11.60174341108313, -0.04466189137842666}, {
                    11.799682441691065`, -0.016343692996444236`}, {
                    11.999999796610169`, 0.018692530344613607`}}]}}}, {
                   DisplayFunction -> Identity, AspectRatio -> 1, 
                    Axes -> {False, False}, AxesLabel -> {None, None}, 
                    AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
                    Frame -> {{True, True}, {True, True}}, 
                    FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                    Directive[
                    Opacity[0.5], 
                    Thickness[Tiny], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    FrameTicks -> {{None, None}, {None, None}}, 
                    GridLines -> {None, None}, GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> 
                    Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}], 
                    Method -> {
                    "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
                    AbsolutePointSize[6], "ScalingFunctions" -> None}, 
                    PlotRange -> {{0., 12.}, {-0.06659924480883489, 
                    0.018692530344613607`}}, PlotRangeClipping -> True, 
                    PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
                  GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "12.`"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Order: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Hermite\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Periodic: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["False", "SummaryItem"]}]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                   BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}]}, 
             Dynamic[Typeset`open$$], ImageSize -> Automatic], 
            BaselinePosition -> Baseline], DynamicModuleValues :> {}], 
          StyleBox["]", "NonInterpretableSummary"]}]},
       "CopyTag",
       DisplayFunction->(#& ),
       InterpretationFunction->("InterpolatingFunction[{{0., 12.}}, <>]"& )],
      False,
      Editable->False,
      SelectWithContents->True,
      Selectable->False]}], ",", 
    RowBox[{"X3", "\[Rule]", 
     TagBox[
      TemplateBox[{RowBox[{
          StyleBox[
           TagBox["InterpolatingFunction", "SummaryHead"], 
           "NonInterpretableSummary"], 
          StyleBox["[", "NonInterpretableSummary"], 
          DynamicModuleBox[{Typeset`open$$ = False}, 
           PanelBox[
            PaneSelectorBox[{False -> GridBox[{{
                  PaneBox[
                   ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquarePlusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                   Alignment -> {Center, Center}, ImageSize -> 
                   Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                  GraphicsBox[{{{}, {}, {
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1]], 
                    LineBox[CompressedData["
1:eJwB0QMu/CFib1JlAgAAADwAAAACAAAA88dx3mtMiz7njCjtDf7xvzgxRMod
Csk/XEQWsUPu8b9KtCx1tBfaP+XytsRme/G/+PE93Qti4z8NXyEDsX3wv3QL
iVJrmOk/pXiflN3r7b/5Cj1FyyrwPw52YLihs+m/NrWGTtBP8z+WofZ+LYvl
v/VXIzk7uPY/02xW28Cw4b+IuxENvRD6P57o0rm+8t6/GURRTq4v/T8y8hs3
7+Dev5bicbgCSQBAtcoOPQAh3r+ftWMAZt0BQObidR4MTtq/Emn+vNRpA0BT
qTZI2gfVv8aYQmr2FwVAkSH4lmTHzL/5Wi/OT6kGQKoT5KgzsL2/bZnFIlxc
CEDwZkjKpSqWP0u4BOxzBwpAh1FGMTLcxz+oaexrw5ULQM4ls37j5tc/Rpd9
3MVFDUCPLQciKyXhP2NXtwMA2Q5AHIEc5Hnf4j/gSc2N9kYQQMKzL6lqG+I/
Q1gT1HIdEUDcE906FVneP+avrfWK5RFAeY00KcOW1j+pxZyPfL4SQL5QUdGp
/tI/rCTgBAqJE0DQhW90BCrTP+TzdzSdTxRAcWAf+yif1D88gWTcCScVQEOU
g0ym7NU/1FelXxLwFUDNR0hOn/nVP4zsOlv0yRZAhP9CG9aj1D958SQR3J8X
QCnZ8Qd1ntI/pj9jol9nGEDIL036VzXRP/NL9qu8PxlAeMwci9eY0T9/od2Q
tQkaQGSI4gys49Q/QWcZMLTPGkDgWAhISJ7ZPyPrqUeMphtADfTLgDHt2T9E
uI46AG8cQMtARgNortY/hkPIpU1IHUDQZ0EaYHjQPwcYVuw2Ex5AqogZLf8s
wT+9XDjtJdoeQHA1GxZMr5G/lF9vZu6xH0ACWUfrByLMv9VVfV2pPSBA40O5
zsp62L/wWu1DyKogQKXPz1vnfN2/JpiHB+oVIUBL4ZOmnRDev/z5y7jZeSFA
VO+j6lP+27/iujomNuYhQJ4+2xDYlNe/aKBTgWBLIkBvlVOl0H7Rvwi+lrmN
riJAvw98ugLUwr+4OgSuJxojQDyvjAUdMo4/CNwbkI9+I0DcrAfKC6O+P2jc
XS5k6yNA1AewhrWYyz/jFMqpO1YkQGYYiDmTo9M//nHgEuG5JEBpCkRRiwTZ
PykuITjzJSVAryXycPhW3j/zDgxL04olQJRVZLctAeE/zk4hGiD4JUAIPQb+
nMXhP8PGYMZvYyZA2Q8YY5Yr4j9YY0pgjccmQBEDEdCRV+I//V5ethc0J0A6
FFzYGrPhP0J/HPpvmSdAfqNAjl0d4D8I5Sz5//8nQJlnm03oeNs/48DLTQ==

                    "]]}}}, {
                   DisplayFunction -> Identity, AspectRatio -> 1, 
                    Axes -> {False, False}, AxesLabel -> {None, None}, 
                    AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
                    Frame -> {{True, True}, {True, True}}, 
                    FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                    Directive[
                    Opacity[0.5], 
                    Thickness[Tiny], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    FrameTicks -> {{None, None}, {None, None}}, 
                    GridLines -> {None, None}, GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> 
                    Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}], 
                    Method -> {
                    "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
                    AbsolutePointSize[6], "ScalingFunctions" -> None}, 
                    PlotRange -> {{0., 12.}, {-1.124525, 0.5897798018741329}},
                     PlotRangeClipping -> True, PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
                  GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "12.`"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                   BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}], True -> GridBox[{{
                  PaneBox[
                   ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquareMinusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                   Alignment -> {Center, Center}, ImageSize -> 
                   Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                  GraphicsBox[{{{}, {}, {
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1]], 
                    LineBox[CompressedData["
1:eJwB0QMu/CFib1JlAgAAADwAAAACAAAA88dx3mtMiz7njCjtDf7xvzgxRMod
Csk/XEQWsUPu8b9KtCx1tBfaP+XytsRme/G/+PE93Qti4z8NXyEDsX3wv3QL
iVJrmOk/pXiflN3r7b/5Cj1FyyrwPw52YLihs+m/NrWGTtBP8z+WofZ+LYvl
v/VXIzk7uPY/02xW28Cw4b+IuxENvRD6P57o0rm+8t6/GURRTq4v/T8y8hs3
7+Dev5bicbgCSQBAtcoOPQAh3r+ftWMAZt0BQObidR4MTtq/Emn+vNRpA0BT
qTZI2gfVv8aYQmr2FwVAkSH4lmTHzL/5Wi/OT6kGQKoT5KgzsL2/bZnFIlxc
CEDwZkjKpSqWP0u4BOxzBwpAh1FGMTLcxz+oaexrw5ULQM4ls37j5tc/Rpd9
3MVFDUCPLQciKyXhP2NXtwMA2Q5AHIEc5Hnf4j/gSc2N9kYQQMKzL6lqG+I/
Q1gT1HIdEUDcE906FVneP+avrfWK5RFAeY00KcOW1j+pxZyPfL4SQL5QUdGp
/tI/rCTgBAqJE0DQhW90BCrTP+TzdzSdTxRAcWAf+yif1D88gWTcCScVQEOU
g0ym7NU/1FelXxLwFUDNR0hOn/nVP4zsOlv0yRZAhP9CG9aj1D958SQR3J8X
QCnZ8Qd1ntI/pj9jol9nGEDIL036VzXRP/NL9qu8PxlAeMwci9eY0T9/od2Q
tQkaQGSI4gys49Q/QWcZMLTPGkDgWAhISJ7ZPyPrqUeMphtADfTLgDHt2T9E
uI46AG8cQMtARgNortY/hkPIpU1IHUDQZ0EaYHjQPwcYVuw2Ex5AqogZLf8s
wT+9XDjtJdoeQHA1GxZMr5G/lF9vZu6xH0ACWUfrByLMv9VVfV2pPSBA40O5
zsp62L/wWu1DyKogQKXPz1vnfN2/JpiHB+oVIUBL4ZOmnRDev/z5y7jZeSFA
VO+j6lP+27/iujomNuYhQJ4+2xDYlNe/aKBTgWBLIkBvlVOl0H7Rvwi+lrmN
riJAvw98ugLUwr+4OgSuJxojQDyvjAUdMo4/CNwbkI9+I0DcrAfKC6O+P2jc
XS5k6yNA1AewhrWYyz/jFMqpO1YkQGYYiDmTo9M//nHgEuG5JEBpCkRRiwTZ
PykuITjzJSVAryXycPhW3j/zDgxL04olQJRVZLctAeE/zk4hGiD4JUAIPQb+
nMXhP8PGYMZvYyZA2Q8YY5Yr4j9YY0pgjccmQBEDEdCRV+I//V5ethc0J0A6
FFzYGrPhP0J/HPpvmSdAfqNAjl0d4D8I5Sz5//8nQJlnm03oeNs/48DLTQ==

                    "]]}}}, {
                   DisplayFunction -> Identity, AspectRatio -> 1, 
                    Axes -> {False, False}, AxesLabel -> {None, None}, 
                    AxesOrigin -> {0, 0}, DisplayFunction :> Identity, Frame -> 
                    {{True, True}, {True, True}}, 
                    FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                    Directive[
                    Opacity[0.5], 
                    Thickness[Tiny], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    FrameTicks -> {{None, None}, {None, None}}, 
                    GridLines -> {None, None}, GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> 
                    Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}], 
                    Method -> {
                    "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
                    AbsolutePointSize[6], "ScalingFunctions" -> None}, 
                    PlotRange -> {{0., 12.}, {-1.124525, 0.5897798018741329}},
                     PlotRangeClipping -> True, PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
                  GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "12.`"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Order: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Hermite\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Periodic: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["False", "SummaryItem"]}]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                   BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}]}, 
             Dynamic[Typeset`open$$], ImageSize -> Automatic], 
            BaselinePosition -> Baseline], DynamicModuleValues :> {}], 
          StyleBox["]", "NonInterpretableSummary"]}]},
       "CopyTag",
       DisplayFunction->(#& ),
       InterpretationFunction->("InterpolatingFunction[{{0., 12.}}, <>]"& )],
      False,
      Editable->False,
      SelectWithContents->True,
      Selectable->False]}], ",", 
    RowBox[{"X4", "\[Rule]", 
     TagBox[
      TemplateBox[{RowBox[{
          StyleBox[
           TagBox["InterpolatingFunction", "SummaryHead"], 
           "NonInterpretableSummary"], 
          StyleBox["[", "NonInterpretableSummary"], 
          DynamicModuleBox[{Typeset`open$$ = False}, 
           PanelBox[
            PaneSelectorBox[{False -> GridBox[{{
                  PaneBox[
                   ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquarePlusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                   Alignment -> {Center, Center}, ImageSize -> 
                   Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                  GraphicsBox[{{{}, {}, {
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1]], 
                    LineBox[CompressedData["
1:eJwB0QMu/CFib1JlAgAAADwAAAACAAAA88dx3mtMiz4AAIQnTxNTPTgxRMod
Csk/Ijm/LTCOrT9KtCx1tBfaP3XiXpESDsw/+PE93Qti4z/+0iqShRLaP3QL
iVJrmOk/+S98Fx884j/5Cj1FyyrwP/xCDBieQOU/NrWGTtBP8z/aGsmcqmjk
P/VXIzk7uPY/BqBWUVsB3j+IuxENvRD6PwiJAKRycMY/GURRTq4v/T/nSrXt
mGnAv5bicbgCSQBADmr94baeyj+ftWMAZt0BQCdnKNW3Otg/Emn+vNRpA0Ay
CSCnQ67dP8aYQmr2FwVABbij1ya/4D/5Wi/OT6kGQFlqIils9+I/bZnFIlxc
CEARQGfvYsXmP0u4BOxzBwpAa8oo0XkA7D+oaexrw5ULQPoPJXgVy/A/Rpd9
3MVFDUDIlm9ay37fP2NXtwMA2Q5AnCmd/cfUsj/gSc2N9kYQQHg7D7pHQdK/
Q1gT1HIdEUCzzGQN6bPiv+avrfWK5RFA9+mEfDZE3r+pxZyPfL4SQJjuLWjm
JLe/rCTgBAqJE0BVcn20MQa3P+TzdzSdTxRAGH2vFr7vvz88gWTcCScVQNjX
CQhkdqw/1FelXxLwFUA+yUnvuPiov4zsOlv0yRZAVHRRRuGrwb958SQR3J8X
QJmfmyf19cK/pj9jol9nGEADkvIjV7avv/NL9qu8PxlAYwWpMM5pwT9/od2Q
tQkaQHTYjJuQOtk/QWcZMLTPGkDZvbMPFAHLPyPrqUeMphtAuOG6RdMQwr9E
uI46AG8cQDwSfUvaSte/hkPIpU1IHUB3mjP8tWzhvwcYVuw2Ex5AscOnSmBf
5r+9XDjtJdoeQOTUugudn+u/lF9vZu6xH0AdVkO/BP3wv9VVfV2pPSBA0PlG
FaaO4r/wWu1DyKogQADTaESfMce/JpiHB+oVIUAMzuzf5sqzP/z5y7jZeSFA
rkdAvQGWzz/iujomNuYhQBwD83cX29k/aKBTgWBLIkA4E6pLtADiPwi+lrmN
riJAl2HK9jLf5z+4OgSuJxojQBA3eFNVkOQ/CNwbkI9+I0C5dCRKVkveP2jc
XS5k6yNAy7QaDAIb3D/jFMqpO1YkQNoAqfyg8ts//nHgEuG5JEAv4QYEuwHb
PykuITjzJSVApVaXKruo1j/zDgxL04olQJCCuHTHY8s/zk4hGiD4JUArO5Ao
d6qnP8PGYMZvYyZAjI9EVmmlrj9YY0pgjccmQEo5HAo3MZS//V5ethc0J0Bi
qtUKI3zGv0J/HPpvmSdACRJL4tRw1L8I5Sz5//8nQJpwn8myQdq/B/i/nA==

                    "]]}}}, {
                   DisplayFunction -> Identity, AspectRatio -> 1, 
                    Axes -> {False, False}, AxesLabel -> {None, None}, 
                    AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
                    Frame -> {{True, True}, {True, True}}, 
                    FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                    Directive[
                    Opacity[0.5], 
                    Thickness[Tiny], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    FrameTicks -> {{None, None}, {None, None}}, 
                    GridLines -> {None, None}, GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> 
                    Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}], 
                    Method -> {
                    "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
                    AbsolutePointSize[6], "ScalingFunctions" -> None}, 
                    PlotRange -> {{0., 12.}, {-1.061772105332586, 
                    1.0495810216098094`}}, PlotRangeClipping -> True, 
                    PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
                  GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "12.`"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                   BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}], True -> GridBox[{{
                  PaneBox[
                   ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquareMinusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                   Alignment -> {Center, Center}, ImageSize -> 
                   Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                  GraphicsBox[{{{}, {}, {
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1]], 
                    LineBox[CompressedData["
1:eJwB0QMu/CFib1JlAgAAADwAAAACAAAA88dx3mtMiz4AAIQnTxNTPTgxRMod
Csk/Ijm/LTCOrT9KtCx1tBfaP3XiXpESDsw/+PE93Qti4z/+0iqShRLaP3QL
iVJrmOk/+S98Fx884j/5Cj1FyyrwP/xCDBieQOU/NrWGTtBP8z/aGsmcqmjk
P/VXIzk7uPY/BqBWUVsB3j+IuxENvRD6PwiJAKRycMY/GURRTq4v/T/nSrXt
mGnAv5bicbgCSQBADmr94baeyj+ftWMAZt0BQCdnKNW3Otg/Emn+vNRpA0Ay
CSCnQ67dP8aYQmr2FwVABbij1ya/4D/5Wi/OT6kGQFlqIils9+I/bZnFIlxc
CEARQGfvYsXmP0u4BOxzBwpAa8oo0XkA7D+oaexrw5ULQPoPJXgVy/A/Rpd9
3MVFDUDIlm9ay37fP2NXtwMA2Q5AnCmd/cfUsj/gSc2N9kYQQHg7D7pHQdK/
Q1gT1HIdEUCzzGQN6bPiv+avrfWK5RFA9+mEfDZE3r+pxZyPfL4SQJjuLWjm
JLe/rCTgBAqJE0BVcn20MQa3P+TzdzSdTxRAGH2vFr7vvz88gWTcCScVQNjX
CQhkdqw/1FelXxLwFUA+yUnvuPiov4zsOlv0yRZAVHRRRuGrwb958SQR3J8X
QJmfmyf19cK/pj9jol9nGEADkvIjV7avv/NL9qu8PxlAYwWpMM5pwT9/od2Q
tQkaQHTYjJuQOtk/QWcZMLTPGkDZvbMPFAHLPyPrqUeMphtAuOG6RdMQwr9E
uI46AG8cQDwSfUvaSte/hkPIpU1IHUB3mjP8tWzhvwcYVuw2Ex5AscOnSmBf
5r+9XDjtJdoeQOTUugudn+u/lF9vZu6xH0AdVkO/BP3wv9VVfV2pPSBA0PlG
FaaO4r/wWu1DyKogQADTaESfMce/JpiHB+oVIUAMzuzf5sqzP/z5y7jZeSFA
rkdAvQGWzz/iujomNuYhQBwD83cX29k/aKBTgWBLIkA4E6pLtADiPwi+lrmN
riJAl2HK9jLf5z+4OgSuJxojQBA3eFNVkOQ/CNwbkI9+I0C5dCRKVkveP2jc
XS5k6yNAy7QaDAIb3D/jFMqpO1YkQNoAqfyg8ts//nHgEuG5JEAv4QYEuwHb
PykuITjzJSVApVaXKruo1j/zDgxL04olQJCCuHTHY8s/zk4hGiD4JUArO5Ao
d6qnP8PGYMZvYyZAjI9EVmmlrj9YY0pgjccmQEo5HAo3MZS//V5ethc0J0Bi
qtUKI3zGv0J/HPpvmSdACRJL4tRw1L8I5Sz5//8nQJpwn8myQdq/B/i/nA==

                    "]]}}}, {
                   DisplayFunction -> Identity, AspectRatio -> 1, 
                    Axes -> {False, False}, AxesLabel -> {None, None}, 
                    AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
                    Frame -> {{True, True}, {True, True}}, 
                    FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                    Directive[
                    Opacity[0.5], 
                    Thickness[Tiny], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    FrameTicks -> {{None, None}, {None, None}}, 
                    GridLines -> {None, None}, GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> 
                    Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}], 
                    Method -> {
                    "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
                    AbsolutePointSize[6], "ScalingFunctions" -> None}, 
                    PlotRange -> {{0., 12.}, {-1.061772105332586, 
                    1.0495810216098094`}}, PlotRangeClipping -> True, 
                    PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
                  GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "12.`"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Order: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Hermite\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Periodic: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["False", "SummaryItem"]}]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                   BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}]}, 
             Dynamic[Typeset`open$$], ImageSize -> Automatic], 
            BaselinePosition -> Baseline], DynamicModuleValues :> {}], 
          StyleBox["]", "NonInterpretableSummary"]}]},
       "CopyTag",
       DisplayFunction->(#& ),
       InterpretationFunction->("InterpolatingFunction[{{0., 12.}}, <>]"& )],
      False,
      Editable->False,
      SelectWithContents->True,
      Selectable->False]}], ",", 
    RowBox[{"X5", "\[Rule]", 
     TagBox[
      TemplateBox[{RowBox[{
          StyleBox[
           TagBox["InterpolatingFunction", "SummaryHead"], 
           "NonInterpretableSummary"], 
          StyleBox["[", "NonInterpretableSummary"], 
          DynamicModuleBox[{Typeset`open$$ = False}, 
           PanelBox[
            PaneSelectorBox[{False -> GridBox[{{
                  PaneBox[
                   ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquarePlusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                   Alignment -> {Center, Center}, ImageSize -> 
                   Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                  GraphicsBox[{{{}, {}, {
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1]], 
                    LineBox[CompressedData["
1:eJwBEQPu/CFib1JlAgAAADAAAAACAAAA88dx3mtMiz4AAAAAAAAAADgxRMod
Csk/nE7Kezvu/DtKtCx1tBfaP1AGnbckxkO8+PE93Qti4z90a1kvv3NoPHQL
iVJrmOk/JpFvj7Izfjz5Cj1FyyrwPzvIH2bcpoM8NrWGTtBP8z/r2In80zGA
PPVXIzk7uPY/dlo9tZnRbDyIuxENvRD6P6xbo081nVi8GURRTq4v/T97yO4m
4TO7vJbicbgCSQBA5WGViK6TGL2ftWMAZt0BQPRVisgcCwu9Emn+vNRpA0A5
QTcJYZP7PMaYQmr2FwVAnDWW6KVcEz35Wi/OT6kGQAwhgneN9Qs9bZnFIlxc
CEDMp00uXmDRvEu4BOxzBwpAb8U+UHY4+ryoaexrw5ULQG027i1vvCc9Rpd9
3MVFDUBH3EtkauiiPWNXtwMA2Q5AaANWwogNtT3gSc2N9kYQQFL8YBpItMA9
Q1gT1HIdEUBJoNynuEbQPeavrfWK5RFAJ1jWvye/NT6pxZyPfL4SQGKkknsD
WEs+rCTgBAqJE0BYD/DMdTFGPuTzdzSdTxRAHGE5MhrVFT48gWTcCScVQIEI
HayuNkC+1FelXxLwFUB7k/iHNV5DvozsOlv0yRZAQOgy4l9UL7558SQR3J8X
QGPtBWuYtSo+pj9jol9nGEBISDyvwcY6PvNL9qu8PxlAjRcwjnQzPT5/od2Q
tQkaQKA7QvZSPFE+QWcZMLTPGkBCqkat9+m3PiPrqUeMphtAG/ajr29DyT5E
uI46AG8cQJqxQyJYL8c+hkPIpU1IHUB4RvC3+v+0PgcYVuw2Ex5ANGMmIdu7
mz69XDjtJdoeQFJA7YRi1cE+lF9vZu6xH0BohbLEYPLyPtVVfV2pPSBAAiS+
J3fISz/wWu1DyKogQFD8XEoUVVM/JpiHB+oVIUBQmSd3SzVFP/z5y7jZeSFA
jSRaHOooEL/iujomNuYhQKuEvwGk4zK/aKBTgWBLIkCbzNB5A/E2Pwi+lrmN
riJAfZkL1xVXYT+nVC3QYK8iQDcsIoMDV2Y/NA5TNA==
                    "]], 
                    
                    LineBox[{{11.182759969210563`, 0.002727038249820814}, {
                    11.184418795160221`, -0.001636222949916391}}], 
                    LineBox[{{11.964616214907934`, -0.001636222949916391}, {
                    11.966917888771675`, 0.002727038249820814}}]}}}, {
                   DisplayFunction -> Identity, AspectRatio -> 1, 
                    Axes -> {False, False}, AxesLabel -> {None, None}, 
                    AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
                    Frame -> {{True, True}, {True, True}}, 
                    FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                    Directive[
                    Opacity[0.5], 
                    Thickness[Tiny], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    FrameTicks -> {{None, None}, {None, None}}, 
                    GridLines -> {None, None}, GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> 
                    Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}], 
                    Method -> {
                    "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
                    AbsolutePointSize[6], "ScalingFunctions" -> None}, 
                    PlotRange -> {{0., 12.}, {-0.001636222949916391, 
                    0.002727038249820814}}, PlotRangeClipping -> True, 
                    PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
                  GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "12.`"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                   BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}], True -> GridBox[{{
                  PaneBox[
                   ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquareMinusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                   Alignment -> {Center, Center}, ImageSize -> 
                   Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                  GraphicsBox[{{{}, {}, {
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1]], 
                    LineBox[CompressedData["
1:eJwBEQPu/CFib1JlAgAAADAAAAACAAAA88dx3mtMiz4AAAAAAAAAADgxRMod
Csk/nE7Kezvu/DtKtCx1tBfaP1AGnbckxkO8+PE93Qti4z90a1kvv3NoPHQL
iVJrmOk/JpFvj7Izfjz5Cj1FyyrwPzvIH2bcpoM8NrWGTtBP8z/r2In80zGA
PPVXIzk7uPY/dlo9tZnRbDyIuxENvRD6P6xbo081nVi8GURRTq4v/T97yO4m
4TO7vJbicbgCSQBA5WGViK6TGL2ftWMAZt0BQPRVisgcCwu9Emn+vNRpA0A5
QTcJYZP7PMaYQmr2FwVAnDWW6KVcEz35Wi/OT6kGQAwhgneN9Qs9bZnFIlxc
CEDMp00uXmDRvEu4BOxzBwpAb8U+UHY4+ryoaexrw5ULQG027i1vvCc9Rpd9
3MVFDUBH3EtkauiiPWNXtwMA2Q5AaANWwogNtT3gSc2N9kYQQFL8YBpItMA9
Q1gT1HIdEUBJoNynuEbQPeavrfWK5RFAJ1jWvye/NT6pxZyPfL4SQGKkknsD
WEs+rCTgBAqJE0BYD/DMdTFGPuTzdzSdTxRAHGE5MhrVFT48gWTcCScVQIEI
HayuNkC+1FelXxLwFUB7k/iHNV5DvozsOlv0yRZAQOgy4l9UL7558SQR3J8X
QGPtBWuYtSo+pj9jol9nGEBISDyvwcY6PvNL9qu8PxlAjRcwjnQzPT5/od2Q
tQkaQKA7QvZSPFE+QWcZMLTPGkBCqkat9+m3PiPrqUeMphtAG/ajr29DyT5E
uI46AG8cQJqxQyJYL8c+hkPIpU1IHUB4RvC3+v+0PgcYVuw2Ex5ANGMmIdu7
mz69XDjtJdoeQFJA7YRi1cE+lF9vZu6xH0BohbLEYPLyPtVVfV2pPSBAAiS+
J3fISz/wWu1DyKogQFD8XEoUVVM/JpiHB+oVIUBQmSd3SzVFP/z5y7jZeSFA
jSRaHOooEL/iujomNuYhQKuEvwGk4zK/aKBTgWBLIkCbzNB5A/E2Pwi+lrmN
riJAfZkL1xVXYT+nVC3QYK8iQDcsIoMDV2Y/NA5TNA==
                    "]], 
                    
                    LineBox[{{11.182759969210563`, 0.002727038249820814}, {
                    11.184418795160221`, -0.001636222949916391}}], 
                    
                    LineBox[{{11.964616214907934`, -0.001636222949916391}, {
                    11.966917888771675`, 0.002727038249820814}}]}}}, {
                   DisplayFunction -> Identity, AspectRatio -> 1, 
                    Axes -> {False, False}, AxesLabel -> {None, None}, 
                    AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
                    Frame -> {{True, True}, {True, True}}, 
                    FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                    Directive[
                    Opacity[0.5], 
                    Thickness[Tiny], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    FrameTicks -> {{None, None}, {None, None}}, 
                    GridLines -> {None, None}, GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> 
                    Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}], 
                    Method -> {
                    "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
                    AbsolutePointSize[6], "ScalingFunctions" -> None}, 
                    PlotRange -> {{0., 12.}, {-0.001636222949916391, 
                    0.002727038249820814}}, PlotRangeClipping -> True, 
                    PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
                  GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "12.`"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Order: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Hermite\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Periodic: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["False", "SummaryItem"]}]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                   BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}]}, 
             Dynamic[Typeset`open$$], ImageSize -> Automatic], 
            BaselinePosition -> Baseline], DynamicModuleValues :> {}], 
          StyleBox["]", "NonInterpretableSummary"]}]},
       "CopyTag",
       DisplayFunction->(#& ),
       InterpretationFunction->("InterpolatingFunction[{{0., 12.}}, <>]"& )],
      False,
      Editable->False,
      SelectWithContents->True,
      Selectable->False]}], ",", 
    RowBox[{"X6", "\[Rule]", 
     TagBox[
      TemplateBox[{RowBox[{
          StyleBox[
           TagBox["InterpolatingFunction", "SummaryHead"], 
           "NonInterpretableSummary"], 
          StyleBox["[", "NonInterpretableSummary"], 
          DynamicModuleBox[{Typeset`open$$ = False}, 
           PanelBox[
            PaneSelectorBox[{False -> GridBox[{{
                  PaneBox[
                   ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquarePlusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                   Alignment -> {Center, Center}, ImageSize -> 
                   Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                  GraphicsBox[{{{}, {}, {
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1]], 
                    LineBox[CompressedData["
1:eJwBoQJe/SFib1JlAgAAACkAAAACAAAA88dx3mtMiz65FZWcRTEruzgxRMod
Csk/bhbHRklOYTxKtCx1tBfaPyhjUz+tnGk8+PE93Qti4z+a/BjhWzeVPHQL
iVJrmOk/XTotsywDlTz5Cj1FyyrwPwAu+LQU9zS8NrWGTtBP8z8T1193F8aL
vPVXIzk7uPY/LWbnLVkoj7yIuxENvRD6P1hHdFENUZO8GURRTq4v/T90eeHI
jQYwvZbicbgCSQBAxmz7F/jvAD2ftWMAZt0BQPB/utoavDg9Emn+vNRpA0Da
3y/2WV84PcaYQmr2FwVAmduMc5eNCz35Wi/OT6kGQBK1L+jAqi69bZnFIlxc
CEAAG29MJhgwvUu4BOxzBwpAMGtga3TnGz2oaexrw5ULQOwghh1LEXk9Rpd9
3MVFDUBHNoDwQ9HMPWNXtwMA2Q5AedfM8uN/zD3gSc2N9kYQQIuM3B5TNdE9
Q1gT1HIdEUC0nCSJoq71PeavrfWK5RFAqVxsJ3F0az6pxZyPfL4SQF4uOhU+
w0w+rCTgBAqJE0CwDpRkDtRivuTzdzSdTxRAZtiNmpaha748gWTcCScVQJGT
yAxzmVy+1FelXxLwFUAESt12nRZIPozsOlv0yRZA2FmsWhFWYj558SQR3J8X
QLexKZr8CVw+pj9jol9nGEBCfQR/nbE6PvNL9qu8PxlABf8I+PYDPj5/od2Q
tQkaQAOamVNy74I+QWcZMLTPGkCBomDTCrvmPiPrqUeMphtA7uMleIz/yj5E
uI46AG8cQDhpN7vE+NW+hkPIpU1IHUA9ssnENrPevgcYVuw2Ex5AwEMmGvPf
nT69XDjtJdoeQKYO3oCeW/U+lF9vZu6xH0A/ApLbt+s0P343iKFFFiBAbZV5
JRBRYz+W3yYu
                    "]], 
                    
                    LineBox[{{8.18358113282793, 0.002357989822302889}, {
                    8.333559153293635, -0.0007530701725335946}, {
                    8.380174396137848, -0.0014239587978449719`}}], 
                    
                    LineBox[{{8.816855318490354, -0.0014239587978449719`}, {
                    8.949631876630011, 0.0010508792106293137`}, {
                    9.007909808056013, 0.002357989822302889}}], 
                    
                    LineBox[{{10.288507556379548`, 0.002357989822302889}, {
                    10.28891285507134, -0.0014239587978449719`}}], 
                    
                    LineBox[{{11.54940756381125, -0.0014239587978449719`}, {
                    11.549843953937263`, 0.002357989822302889}}]}}}, {
                   DisplayFunction -> Identity, AspectRatio -> 1, 
                    Axes -> {False, False}, AxesLabel -> {None, None}, 
                    AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
                    Frame -> {{True, True}, {True, True}}, 
                    FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                    Directive[
                    Opacity[0.5], 
                    Thickness[Tiny], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    FrameTicks -> {{None, None}, {None, None}}, 
                    GridLines -> {None, None}, GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> 
                    Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}], 
                    Method -> {
                    "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
                    AbsolutePointSize[6], "ScalingFunctions" -> None}, 
                    PlotRange -> {{0., 12.}, {-0.0014239587978449719`, 
                    0.002357989822302889}}, PlotRangeClipping -> True, 
                    PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
                  GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "12.`"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                   BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}], True -> GridBox[{{
                  PaneBox[
                   ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquareMinusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                   Alignment -> {Center, Center}, ImageSize -> 
                   Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                  GraphicsBox[{{{}, {}, {
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1]], 
                    LineBox[CompressedData["
1:eJwBoQJe/SFib1JlAgAAACkAAAACAAAA88dx3mtMiz65FZWcRTEruzgxRMod
Csk/bhbHRklOYTxKtCx1tBfaPyhjUz+tnGk8+PE93Qti4z+a/BjhWzeVPHQL
iVJrmOk/XTotsywDlTz5Cj1FyyrwPwAu+LQU9zS8NrWGTtBP8z8T1193F8aL
vPVXIzk7uPY/LWbnLVkoj7yIuxENvRD6P1hHdFENUZO8GURRTq4v/T90eeHI
jQYwvZbicbgCSQBAxmz7F/jvAD2ftWMAZt0BQPB/utoavDg9Emn+vNRpA0Da
3y/2WV84PcaYQmr2FwVAmduMc5eNCz35Wi/OT6kGQBK1L+jAqi69bZnFIlxc
CEAAG29MJhgwvUu4BOxzBwpAMGtga3TnGz2oaexrw5ULQOwghh1LEXk9Rpd9
3MVFDUBHNoDwQ9HMPWNXtwMA2Q5AedfM8uN/zD3gSc2N9kYQQIuM3B5TNdE9
Q1gT1HIdEUC0nCSJoq71PeavrfWK5RFAqVxsJ3F0az6pxZyPfL4SQF4uOhU+
w0w+rCTgBAqJE0CwDpRkDtRivuTzdzSdTxRAZtiNmpaha748gWTcCScVQJGT
yAxzmVy+1FelXxLwFUAESt12nRZIPozsOlv0yRZA2FmsWhFWYj558SQR3J8X
QLexKZr8CVw+pj9jol9nGEBCfQR/nbE6PvNL9qu8PxlABf8I+PYDPj5/od2Q
tQkaQAOamVNy74I+QWcZMLTPGkCBomDTCrvmPiPrqUeMphtA7uMleIz/yj5E
uI46AG8cQDhpN7vE+NW+hkPIpU1IHUA9ssnENrPevgcYVuw2Ex5AwEMmGvPf
nT69XDjtJdoeQKYO3oCeW/U+lF9vZu6xH0A/ApLbt+s0P343iKFFFiBAbZV5
JRBRYz+W3yYu
                    "]], 
                    
                    LineBox[{{8.18358113282793, 0.002357989822302889}, {
                    8.333559153293635, -0.0007530701725335946}, {
                    8.380174396137848, -0.0014239587978449719`}}], 
                    
                    LineBox[{{8.816855318490354, -0.0014239587978449719`}, {
                    8.949631876630011, 0.0010508792106293137`}, {
                    9.007909808056013, 0.002357989822302889}}], 
                    
                    LineBox[{{10.288507556379548`, 0.002357989822302889}, {
                    10.28891285507134, -0.0014239587978449719`}}], 
                    
                    LineBox[{{11.54940756381125, -0.0014239587978449719`}, {
                    11.549843953937263`, 0.002357989822302889}}]}}}, {
                   DisplayFunction -> Identity, AspectRatio -> 1, 
                    Axes -> {False, False}, AxesLabel -> {None, None}, 
                    AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
                    Frame -> {{True, True}, {True, True}}, 
                    FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                    Directive[
                    Opacity[0.5], 
                    Thickness[Tiny], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    FrameTicks -> {{None, None}, {None, None}}, 
                    GridLines -> {None, None}, GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> 
                    Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}], 
                    Method -> {
                    "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
                    AbsolutePointSize[6], "ScalingFunctions" -> None}, 
                    PlotRange -> {{0., 12.}, {-0.0014239587978449719`, 
                    0.002357989822302889}}, PlotRangeClipping -> True, 
                    PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
                  GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "12.`"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Order: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Hermite\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Periodic: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["False", "SummaryItem"]}]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                   BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}]}, 
             Dynamic[Typeset`open$$], ImageSize -> Automatic], 
            BaselinePosition -> Baseline], DynamicModuleValues :> {}], 
          StyleBox["]", "NonInterpretableSummary"]}]},
       "CopyTag",
       DisplayFunction->(#& ),
       InterpretationFunction->("InterpolatingFunction[{{0., 12.}}, <>]"& )],
      False,
      Editable->False,
      SelectWithContents->True,
      Selectable->False]}]}], "}"}], "}"}]], "Output",
 CellChangeTimes->{
  3.715217574811864*^9, 3.7152852457777696`*^9, 3.7153625429727755`*^9, 
   3.715362599864308*^9, 3.715362707103405*^9, 3.7153627379738584`*^9, 
   3.715362802421919*^9, {3.7153628588874445`*^9, 3.715362874233613*^9}, 
   3.715362936237946*^9, 3.715362981476921*^9, 3.7153631210817018`*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   GraphicsBox[{{}, {}, 
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], FaceForm[Opacity[0.3]], LineBox[CompressedData["
1:eJxV13k0Vd//P3BDCmUohQaSIVOSQoh2SEUJCdEg85gQQpKxRISKBiVCIpll
yHnJmCEZbqYy5l6za0wZf/u+P+/ve63f/YP1WPeuc/Z57ed+7X32mF8/Z8VA
R0fXg//Q/v/vM4Xo/r/PFCpPqlGOkHIv+T/33HLlCC9K+8+JLAqeOb2f/rPn
wlKJYNHkf7YHw8cz60b/szr/ulrvqqUj/+dKEnfog7dCyv/ngQ4m440bJf7z
jFrns6TN+/5zwt9Hz8fuiv3nhhGnpNV3u/+z3/rny9NbKf/dzyS+1fyXvvR/
3+d+WR0QZ2v6NLNG+1BRoKxizEs2rtK+f01sELwb/5uztPlfmyxT7Ro4OEs/
/+uCzRlR3YPspdn/WikxfO96X/bSxH+tV8bw5Ggfe+mjf/2qf3Ob8H7O0sB/
fVxgU0QgaXOpy78uCjuYTrBsKzX+13fpeDgF+HeVyv/rLwvbtu84u7d0afV/
3iF3LGajrnzp8X+9c7r6z8qccalGyv+8plzyI3m0onRH8+o/dpuv4j55pqlU
6fHKP07jHyN4jdtLB9uW/rGwtM5u0TN9pXaP//5jXqmcx2vNlNJMrd//2O5+
WN0R8+nSg1un/vFArtrXhY/0hLCi2j/2bnc5rMZrTRjX6yz/M74wF/GoNXvC
y3PhD80iilu947muEbHvDs3T3EvsvyOArhFv6oOmaTY+vMGVnexAcHwVmqRZ
yME7lD7SjmjYsH2MZpRf3fn5hTXxLOnlMM1t1+aG+B9aECYpdyg0D7Iqn5Vx
vkqwvo4bpPl2dYX55FUTwkSH/xfNBlI6auvjzxOTC0wDNDcPOVypsdAlNvAI
9tMczfGUmZR7mpCYMeyjOSKCSST5/Wmi2cWll2ZrRr32sBw9Qu/jWjfN7QeW
TE3rLxPrf5/6QbP6LSlvN3cnIuHt5k6aE/xiv2gtexAcgQ+/05w9t9GWujOQ
mBT61ULz+T0cBhkRocT+Y52NNKtkfvfXuPiEeNqXVU9zXO4OtZt3XxGStzfX
0BzunSKVeD+NmKfKVP3jkskFK+Y8QnZEpYTmJKuuW5paP4k8usiMf+a7qKjL
1LWb+HvVK55mJ635QVHBHkI+ZkcUzWd3L6w9TekhKqL9A2g2XzgjGsjVS6wV
FN6gWUsswyX2Ri+RslxpSfO1w9sG7Ot7CVYni/M09x/9K1i6uY8o1mpTp1l7
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
       "]]}},
    Axes->{True, True},
    AxesLabel->{
      FormBox["\"x\"", TraditionalForm], 
      FormBox["\"x'\"", TraditionalForm]},
    AxesOrigin->{0.65, 0},
    DisplayFunction->Identity,
    FrameLabel->{{None, None}, {None, None}},
    FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
    GridLinesStyle->Directive[
      GrayLevel[0.5, 0.4]],
    Method->{"ScalingFunctions" -> None},
    PlotRange->{{0.6607065829974189, 1.}, {-0.07884096079541772, 
     0.018692560130567835`}},
    PlotRangeClipping->True,
    PlotRangePadding->{{
       Scaled[0.05], 
       Scaled[0.05]}, {
       Scaled[0.05], 
       Scaled[0.05]}},
    Ticks->{Automatic, Automatic}], ",", 
   GraphicsBox[{{}, {}, 
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], FaceForm[Opacity[0.3]], LineBox[CompressedData["
1:eJwsl3k01d/Xx6XBnJAhKkMSSaWihDaiiKJSUYjKkKikTF8RmTNlDJmHjIWQ
+Rgj8x25hovLNU9XMkT1fH5rPfefu17rfM45e+9z9j77Lf7g2Q1LZiYmJo9d
TEz/+58Mlp7n+stATP//Uwvro/+P+ddP1129unbB+VtJ8f/4o9ywTvYFQbiv
xy/9P7axESfG7j8Kj9VshDkxll5MVRiXOwshvfFm7Bh/0+85WcWvAUFiOT9Y
MBa+M5bFxHwFxI+GndyB8REvx1WxguvAs13H5t8fBlqRMFHy3H0HbjsxtDYw
Vln6ZmEsaQp+ikbJDIwthqYEGasWMLUn5MoUxueuXXM+VGoJat3JB4YwDn8R
+fxux2O4rpyy0I3xjReQeUzlKTiYJUXWYeyhJG4i5O0AQTPfv8ZjzF2ybz20
0wmicxSH3mK8rPvgXUSJKxwocla0xfinoexw93d32GdwiiSHMXUm/jx7mRek
V1f+YMc4+8OAtKHnWxCnleuNbzGQAxuP23dTX/DjqrsfjHF9WrVjrnEgKC4k
ptzFuID50elhp3dwb7UaJ4mx0cqkdUN2CARnFdnmbzLQxpeyK+yH30Pxs/eX
fX4zUGQ2OeAzxEBuOB9FDuO3rjbXIDkWFqT3y+I3GEjTdOVWBmscnLKI8GTH
WLHKVCJzPQFemHYxFNYwlhesbD+cComZEFa0ykAdchm7ljZTwbeYv10K41MX
1K+Xk9Ng1ikx+s8KA2lFRepwx2cAh8P7DqNlLB7hJK+O29nQscn5OZHBQKTf
w74s13NgYf6i+MASAz1y/hgfr58LvN47z8IiAwXzo6E043x44pyQnj3LQBWT
2q68BoVgoshbT6cxUMsjhaZ/qyUwIRRTEDjKQH9fuO/pSy0F27m7qRIjDNTA
KJwbvFYGITnsfKeHGOjf4OUqgy/fQPO1+LU2MgN59x91EA2sBErunU+8JGx+
bWh2vGYVDHCYr18jMNCzlOlwduZqiLikw5LezUDNhSdf53nXQO3Xox6lLdj6
p0zf8F2tgxzfz8rxzQwk1yj/+kJxHRw4Qv7j0MhA5XU+zZeE6mHIrFPqdy0D
8USEHB2ZqIeLlGtytqUMxMlMG+gIaQSHoaOxxcmYf+dMuy/8+w49hnZfqj5i
95HUfcHleQu4uPbqlcUxUCfpL+46rQV+t2Q0e0YykHsasYHU0goXrB1eWvgx
0Msm+cdf49pAZtvvvQaPGUidN1LI4FYXiFtvo9tYMtBdsZMfiru6QPPfrtMv
LLD11ZLzX2l3A+umz97bxgxEl+1Hfgd74Fp2xRsLbew+3CVEs/Hj4M3+mAee
hxiIrZgjaoWFABJbne0LBxnI6cKKT6gGAQRM/ygbCDNQ+l8uS8XXBOgqLTg4
vYeByHZyN3OWCVBpZ+Hx4s8SGn1g/mp+iAhnxqQGxghLqFrj9Fn3EjI0GbQx
OXYtoVvsdV7HF8lwub5PZqV1Ca1X81whyvRChe3ku46aJRRV+6DqZ1IvjPt+
HiBlLSEDgXtMhgF9cOwYT5iB0xJqOev/9vjtfuijDJ1lfr6EHko/QYZh/SBx
NVIz6/ESSpDScDZs7QcnnPmnZpMlZGUxP0ZRGoBeO6akBxpLyI4/Cd8tPAjB
q32pYhxLKFgKptkIQ9DjHvn9z/YlpBk4IcbORoU1TT+JjxuL6KzvenHbBSp8
7b+aED64iK7fbc/1y6HC8LG9JldSFxG19NYt9N8whE1lUsSlFlGLZu2llYAR
uMgnlZ8isIjWhszzxVNHwC36wDIryyJySBHhOFwxApuXSVYxkwvoWhN9Ondq
BAK5SiJzPi0g7/FlvxStUZgdqhSiHFpAh8U8zNJXR+HGA3bL7XwLaP70eftR
DhrsTOaY38e8gCjnk3fPitFAmHnAmnNkHu09f9/F7AoNTH069TkT5lF/cpRa
STwNoseZeLK55tFav7pU3Mkx8Hjua/95cw5JH+LeuKwxBl1b9g8ypudQ0JD9
YvnNMQj58+PX/eY5xCNUtUV9NQZOStEzIu5zaOzQoQ+y38bA8W8DZD6eQy2v
cUkD38dgRKV9h9gdbL1jog90yGNwm8+eNiM/h/R2LEmZrIwBPX0769DELArg
6xgzkBuHwCLe9XXCLKr3prCNnh8HFT4mc9b6WXRVQ+HPUe1xEK1zTmBOmEVX
Tp4wnLEYh22qU4NPrs0iDaX3f1gjxuHBsGH2UeVZ9KgmvNU4cRwO1PFuUI/M
IlUNspt59jicvpOnJ7NtFv0tUF8LqRkHFuO2HL2vM6g8qG+P2fg4jNqV/hRI
mkGrd5w+8CyMQ4xrcHxvwAwSyX+533ZtHOa89jioms0g7c50TlY2OlR7fjce
055BtpymL/R46NDo5sbjdXoGpZf5t5zeRwec3cL9TNYZFH5S4/T0ETrssvr2
5djPaWTy4u7FsuN04D86rFYwNI1CZUQVJRXoIMHH8upI6zTyO/M26pQyHTTW
HxUmFE+j7ltjGyNqdIjcuesOe+I02igT2H7iEh3OWK91OPpPoyivFb39unS4
qHPJqc9hGp0cvvkyW58Oo73/ys6ZTCOzDQ4Bwk06yIH8z6hL0+jzxs+uhDvY
+nmTofMnp1Eh25gy8z1svvbJBQ2RafTrRuHGTjM66GkIvYreOY24/p3KzDKn
g0dzvj99cQr5n9UYGHtAh9U/vwNP90+hX4dLz9U8ogNRcM+IZ9MUmvj54O4p
Kzqcg435ts9TaLZNYkjDmg4XUhoF+eOmUBSx3XQBYxZr93qzt1PI4byC6xkb
OpCVea9n20+h5Hf7evZivPFJ7+TynSm0vyx8Xxj2/eszca0qGlPI3Ml1bzq2
/luTR28Djk2h55lfPQ0s6SCbINxGEphCV/eLCsc+pEPUE+ldh7dNoa2vCWlO
FnQY1v6d4jQ7id5osfUtYP4d+7y1vZ00iQZzLrv+w/yPF/j4QaJuEvFVKmpl
G9Hhyh/N1te5k0hav+z3lCEdTIYebg1GTSJRjSyjegM6LMhbJql5TqKtJxMH
5PXosO9wPU7AcBI5tJIpJHU6LFWsKARdmER7Ci5dY1ehw48v1QXbZSZR2jG/
wyTsvO3aTniz/51AsRtibHLSdDBXDiv/MDWB+iR1myvEsPHAN8XHCRMoxSVZ
YVCIDiVrZ9IdsydQT1dK1SgLHSwVdjkeipxAtbOV0U1/x0HgnW/54OsJdMGK
kq/yaxwsKnJv29+cQEw5f4TnRsbh+RezAK0LE6j13XPFQ+RxsF4fHJWWmUDH
tzUILraNw3qNYS3vPzqi9vWXaH4dh11GJsLCM3T0+Ra3QlfWONA9rxgcJ9HR
kfit7XNx46B30OePRx4dxSTtERj3GAet7xqWnUZ0NGudeqb54jgE5/7+lKlF
R9trGd+2KYxDl6v5nuBTdNT2SP7uyOFxUETPS3046eiZnZagz65xeHpCjeVE
/Ti6O3hC0apxDAxKtx/3/jyO5E/aOpYUjcGB5Rm1iYRxbL44S2byGDx1uh9K
cxpH+uc6r9q7jYHcwI83pXLjaMe4gkyC7BgcPqDVECcyjjT2DQn9ERiDm56+
pe/ZxlGH/gX6NuYxMNrK5aqlj6E/4U1fV8g0CFSnsvMmj6EU/g2ft+40UFR5
/+Qn/xgaK20ZsSkbhUcEswTlnWNI1zpRn+PjKHDMXlr4uEJDf+/67LvpNQrx
fIN38wk0dMrhzlPClVHolZIMZYmkoXTuOJskyggYhysckXhLQ//4uS69qB6B
Axy5PkaONHRWISZ4PmkEThK8+/YZ0lCjasPLgQcj0L7jweqaAA1NTf4SU+oc
hkL9300bLDRU+Z+ErHXIMJhOey/u2xhFFjDmN6U3DO2fZDPKBkaR5C3yi8kf
VJgqlUuyTRtFmumyf+hVQ9C/TrRhVhxFrnt4ZnzeDACfZnTH5pFRdIDXPXbt
xACwU+pyDwqPInbjv2wF1H44VtJyj/Z3BHFeTTIYV+qHn7+jFO3aRtCL6bTx
lMk+GLxfyFddM4JU5UWVL73vA68GKadzRSOII4H2n+L5PnDklb1Y/mEE3b3k
/2QrsBc2zFxfDz0eQUc6zqpqiJPBjfZYK8FsBJkKU/9aNJOAvUvgesDNEcSV
EjdEtiHBr4rzIQzVEXS2hy7eXEAEo/lqDnZ+bP65ad6+EwTIr0h7pMsxgj6V
6bM3d+FB79PTktptI+jW49XXPPZ4kPZLkHSlDqPY6Ti2rk84cPf+l6oSN4xE
+7nStvh7gL/ItnEpYBitGxUmCJl3w+kH6dVcrsPowGvfw7sju2A0fYeHz91h
NEW8IRvwqwMejCw9HtYdRsdwm0Tewx2gvSb/KlN1GAlRL3G+udkO0pzn5V9J
DCOpKknP3QU/gKesaecb/mE0cdNmSqGvFdQjZNXXWYdRYOiX83rMrXBLif/M
aQYVVbrl/rp+8zvIFN7jXqNT0cTK7uDLbs1wuGhn3NEBKjqV1md1LqUJdPAO
v2jfqYhy52GY0HQDEKsnm2xqqOiLYUr5bs4G+PCWWdO8hIrY8vYlcx2vh+D0
+/QfeVR0/d3+70L6dZAV91EkK52KaLpzFtbUWhik3Tb+lUBF2bcnmxv314Dk
lixPeRQVtcQ21V41roL6iI8Vcf5UZKUWFrir8xvsYHcMq/CiotDHRTYXd5TB
Sa3+nGvuVPRQT3Tth1IJqNY/+8/YGfNHx1E51b4YxDd7nPpfUJF1w2WVnuRC
wD9L2I1/SkX/HX/KVJ1SAFof7UrVnlCR9I1vIul/c8Dhz+iQlA0VuRcl9z40
zgK9PXG/fSypSGK3iTpnURqUfsnyevQQ80dceFeWXBK86FrzKLegoiZ72fgX
P2Og3u7GJS9zKmJK/tegaB0Gw7Eyh9B9KmLtKeH5b/ANmFxcNH+BMdNUasfD
szeg9QG/bgLGdbEBRq+KXVDJNJfceWz+nr9lu+q2v0OF7Vdu6GPri+26mXRm
MArpbanuGniA2Ud0/f1a+SMSemYcNfSIila9Ul51d6eiTEFu7TvWVJRG5pRQ
9clEb6d77LRtqajo5Xm7jfM5SKNvz7UieyraOT1a8+tnPnrRq3Y2wgHzb8S0
7v2dQpTZj3ecfUVFwRfVuM8rFqPHpHP6NW7Y+Vu+fDPHX4IMqsb3sr6hoivv
yK2pq6Vo2lN7T4cvFbFvaSTe6PuGmgXIwWzBVDT+J7p4rbICSb85RKqLoCLD
I3KVgUlVaEybf/dyHBWZmQ53Mr2tQUuca6aJqVSEW9LkvWWDkMHHvQIPi6kI
tOSMquLrke4L/qnXVVS0/z7OMj60AX0ao+TyNVNRwYZiT593I/J1kPxd2EVF
K0vXZIveN6DbZ9g0WnqpiK75vmDWtx7JCCbr3hnB7oPuh1O+7nVo8e5u7QdT
2P1tupe7NlOLDjzypsyvUlGg6qINY7ASfRba1vH8DxUV58iv/RosRw7XLOwc
tw+jtmrbuYzRMtRprjy5iuVP/1n3479nShB7f+6TLa5h9DxmTxtjvRgNZ7wW
9+UdRsGFJ038OYoQ776E4xECw6iG+d4PO63P6GnoTLmk8DD6zFL4fcU9F1WZ
3JxQPTCMdlsxFybWZKHGgepBqugw+sO34mPGko6uPtzdwIrlsxL3tSCTkiQk
oXuiuvoQlu9P3UZY7GIR5+wuxqbkMLI5WcRRoBCOZqSP+rYcHkYfRXOuOUp4
o1c+idFiUsOIKROnkTh9H+VZ96qwYmx0SDBCmO0lBB24Fu2JfR8Qtf3nGs0f
9jCcK/yx9VLifSyEuyNAVa69URzbL2JGl08xIQ64D9R2XRMfRmalbWmMoyng
w9Gywo3ZK2AVJpjgmQ6JF00MrPYPo9DhG29T27PgYmj95o19w8gt79hubu5c
YDp1naMXq0fmxjJOCzoFkNSuEfKTZxg9a/F9cvhCIbSRgsNysHju+UvMEiQU
wfH2w2K/sXjXZdv/R3j4FV5J7bg6gZ2Hu2iVs9lSCeg+OCj57C8VXayUPlrr
Ugb3Nmy/Rq9TkQZOXHx96xsYWI2w3lvG6kU1zyzP6wqI3919/vs4FeX/nTfe
fF4Nu68E2y8OURGvVYPsRnsNtLf3BrWQqShqdYrmeAgBmjzf7N+C5ecro9qN
sTqol3zo7YCoSPNC0G6voHrInD9vy/WNinouHwkzONEABTbCv80yqcj7iuUw
zrERRNjkNQQ+UtGzzwdCA/iagPUVleGN5YOKucP590VNcIytI8HTg4p2pPWM
p001w/28U6EiN7H9hS327rnYCq7EstDIy1R0p8fobDKpFZ7U7tvXokxF+KNf
eKOtfsDYCzbKw0NUpH5IwBS9bYPFrVeOAYtDaK2Xv8M4rwPUovmeMUaHkMf2
dz6P5Tuh60FeqwhxCB1UdA34VdoJcU4SL799G0JZdeLGIZVdcDUVig+6D6H6
QzImO4x74MV0u0uW3RBazTlKORTTAyvbXCV/mQwhqxBGYjC+B0aC2FqnVYbQ
i6/YYejg4Idud6DG70FU6ZDIZ3gcDxZWco1804NokFz8g26Jh7mDhiJFvYPI
UrrndMdHPNzZbGq6UTKIVusj+j+yEqD2cLLWxSeDiINvm5lTHwF22P3u9zMa
RIoziU/J7EQI2fxilqA1iCQlwxdjVIgAxivuSqKD6ObbgychiQh1DbZH7vYM
IBEtf9nbd7H3W+ZhYt7RAVT7Q/XEbBkZNFGbgQPfABK4TD/sNEYGZ2/qBNtW
PxJ0Ov7dgrsXnkcVqZZ19CPbiF3lDyx74dRKjDSXXT86YPlCX529D3S2E97+
d7MfpduIe7Oc6oPgYpea+vP9aP6mcaeqcR/EZL+c7GXtRxNueU+Ys/ogctyj
VCmdglBbPlFciQIX1XU/vwqkoH6GFz3JhAJbl2JKQp5R0BOhg94JnhRIj7Jl
MlSmIPH5e4IiTRTQFlkV18b1Ict7TxofX+4HGV6HqDNrvciYm6Vl+dwA2H4S
+WY70IsWgyck9W8NwECItJQP6kUXfYe+6DgMQK3M76gH/r0o1FlzRix7ADjv
OJr38fciySan8WCeQeCJFfZZlCOjQyFjIxvEQSiJYUv32UNGXjbsHvvmBkF0
ZK8t808SusDLw/6LeQj+Xtm3s+IbCXuPK5UnTwwBQ44aKqRGQvefZr+d9hsC
sdZEZ5weEdnN/RexdJQKrhqpakInicjdO1zltioVWLcFfrnKR0TRgp174/Sp
oHbrxKAPhYCqWkPSqxyxfjHtz5aUJQEtcvT7xFVS4aowoeaaKx69u7Ajn3Zx
GHYxD8tkRfcgn6OzhcNSIxBuF+NKd+pBC0esXaVPjIBXUggLv1EPshbauf/l
2RF4X+pH0xTuQRN8268LaI/AdN9boS7lbtR161FCzOMRkBsreq2n2YnO02pV
NwtGIMLjpwGXyg+UU5ViSYVRUIlV4czebEXNblGKhjqjkCqcoyNa1Yo0sizG
B26MAuvFRs00pVa0crDmsYTVKHzRGtzz80wL4k+eEY8NGQXx25LDXpLN6IhY
iLfjyCj4uM3dWBqvQ9dZbtyT/ECDoAuCm17JdSjaLcHVM4MGUkrn7tKN69Cn
efUHq4U04M/PFoWPCLnKeJiea6PBcoTj6XybGjR+M8mf9y8NBHd13R9YKEcB
kcmsek/G4C3bWfZOwy9I+wv7z0mTcahjem1YwP4ZOWZ6Rz9/Og4L8UvoOcpH
o9tFLou+GQeiorxc7OFcVPyqUXoxfRyqj1BUD45nILkBiV6j+XEYz69mWtaP
QjnR/zav+9OhmLs4ff7dB9jVvFsmo3cCtvfJ7vyvuhbGSAKhpqPToCn6ofzi
GwT/qRSPT25Mw6KKldhDiTrQ+BXLG8Q7A2/XOFL/TNZBfnJn6F7NGWiv38af
4NwAKtmFGueyZ+DjjZpr1dnNIMveYWX3chY8Xv8VzjTsgIfnnM9uF56Hy/en
JsoaOmCn5+NQ0pl5GLEImJTD6trQWwPPr/rzIBOwqaDH3QX3arztwn3nwTr8
EO5aTzcQ08UPNTDmIZRDvra1GAddsiWk1PYFiDAeZt45jwNl3Qjj9YkF8LeQ
n3l5BA82GQX8N5kXYSt8M2MRq1M3FzaO8iktwlP25imDIAIMaLu5fMlaBFYd
npjGpyToLsCz/VRbgnHz/exWRSSQKRK/16K/BFJr9apaKyRwyxa6EWe2BJF1
grQKNzIcjRQfPeO+BJ77donr15LB5QBv/Z+gJQjdPE0RY+4Fd1PfkYa4JdgT
cMXBNagXlAd43dS+LUEHt+gJpu5eaPpzVmO9Gfv+ctXBRr4+WMiVoecSl4Av
utW0xqgPuF/fOEMhL0FPz5koSOyDhtYRuTMZSyC22LHz50gfCLTVqHc4LMEY
njm/7xAF2KM5jFJhCeRrE9wufKJAQ3Pp1R3li5AwtSe6bpICqoKmt0VuLcLN
10wtLkf6oewuLjRveQEkdIWuhWX0g9iFRx8UTyyAz7dr88+iB2C1+7naUsEc
1Lm8tSLdGILVt0cefq2fhlsKjAVZ/yHICItSUbWaBsK0UWtL5RDg8RqpyhzT
EHpHUIYgSoUup8e5UbenYPWpsM2NUSq0ZFOPFyxPQG+VQcZ98RGQ/3HHV1Rt
HK7HHrSZUxiB8RbjtsbZMej/LM1/6MoIVNrnipFjx2BstHYyzGEEIiNdRS4y
aMDjF/7BEdO9rYEft8nnjMJBs3i3Ro1RELtCvDpsTAWfkXjZgeujcMKRX0C3
fgj+vbe2yzIfBWe+3uT/ZIbglVngMePXo6BWKL4htTUADW+dzc5/HYUWks/3
wFwK3CguvLSBRkGW+23pX0EKdNS6Nz3tGIU3a4z1E3598BYns+UxPgoCtpEy
jY964fwrj8wLPDTYkZGfFXKUBAI7Q/+rFqGB3kffmO+JRJiwE2v7eZgGRizM
v4t5iKAroHkuXIkGN4T4w1I38TAbsH4oyJQGMYpLm6W9PeBTOO45ZEkD8Z7O
/2wNeiBbXZRv3p4GR5ILjSMiu2Gkp/SUxmtsvemdHUyvO6Hk0vb4TqwO7bjK
z2V7/wd8Mleb40imwa1tR7JO32uFtD0i3GyZNEhnyL25YNQCFXxNO9SxujTT
OnJ2922sX+lNdnIvpcEfg0WFrttNsJ/3zJpzJQ3gTnlps1EjPK9VfVDYSINz
paddr5vXA5mUPTnfQgNLkaCeEUusnxK3L5xrpwGnWWC6MqUWhjvydhV0Y/7I
hDFzTldD/za/MycINGinzX+X26wE89n9Po5kGoTj7TcSuCvgQMl7cKPQoFO9
N+261Deo9dtZdHGQBmOuy+06UArF4XESPVQa1O/2fe159yvc9n42JDpKA4ug
g5XzzkWQ5bL9yOkxGoic/LVx8MQXyDX6c5GdTgOfLx6+6EUe2LLsdM2coMEa
/vCer5WfgPG4gX3nFA08KYqRi7syQNtySFVmmgbSzH9ZntxJARfqn9u8MzTo
2xfWrWgUB4GV7fF1GPs4ojvzbBFQFW947cwsDVzal+Xa/X0hI9C/wh5jtbxW
rbsn7WB6qFvkf5yCb71T8NoeTTdoFp/CODt/fwSt0hftePSnohZbT7PTOUZ5
ewRKmNvznAfjqXypD9LicYgrIIZHFrPHm8dPJkskBVVaZA5wYPaKfOG0GkpL
R/cS/2x1YP7sDrQebp7OQmpz9XtNMX8H05k4LOVykcWip2E1Fg/nMXOWRvsC
VHG5eX4Gi5dmdMCG461CpBYjyjs9TAPe41dX7ZeL0MJ/+3+WDdGgqEAjkBDy
FX0KP1PU0Ie9a0fwnxmoDPmePsdgws6rMEnnYfHtcvShnvyFGzvPXW2P1xZm
K9AN3UmD5A4aNEhyZMzy1KATC0f9xX7Q4MxRj5yvabXIL6pj7EUzDQK2ZMq2
76tD7Oc7v72rwc6/eyezfFY9shv5432jggYnsxYflD9pQCV9J/bPlmDj39zD
Qk42ontcyuYReVg8zV+ckylvQowlullqFna/x27m/XRrRuSXCgTvVBr0OrWR
+VS/o808y6aaGBpcy7LRNEUtqEWKL1rwPQ0+b1d+HeTZiuxjQ95ovsPWv2Nr
yg8/kHqgymkhTxrsXXhUpFvdhph3GnbmPsL2U2Kxf/alE515Y6GaiuWn0412
Qq1tF/o4njr45DYNQithy+1wN3pdW3LK4zINVEi7Q1P0epAt5wpzwhEadH17
9Xl/DQ6pHbEtVhSlQXfx2fb3Qnh0cpQz45MADcKGthOaHPHI3HAEse2kwS//
N0o2MgTk2xo/iBsehTPLtzqr3xOR0OUXOcLkUTh5XXtSaZaI7jHtiFHC6tGM
75uF/zRJKKXQSeX3t1GYo5ep31glIYUp9/pArG+JKJ6xNL/Ti2iX00PWT2J9
zp/KSw3c/WgxfrUg/dAo6O1li1e170dMa/F3RQVGwa+HV/ptWz9Cbn+aAn6P
wJbfjeXnPgPok885glT9CATsNZT/+WsQ5XV9IWZqjYD7nfw2255h1Kd694Ml
Vr8niv/98uAfQQnpJ+6vSY6AlKuwUKnGCBr6y3Tp/fYRWN4292Pq4wj6YPBO
V/31MBjUrK+4GoyitU4PLjcjKiRF4MYTS2ho64vk1JVTVPhzgjlpdISGZPcM
9dVzUGH4TpiYENcYijnz9UlazRCUTonOmVmOoaXHJibyB4bAgXTM3ZR/HE2L
vRhQWBkEFSNTFXX1cbTzbq7iaNsg7LWqfSxsP47ShK+TjzkPQi03Hj43jaPV
a5WTce0DoCCxjf7QkY4cjka79SYPgObZV9KbSXTkE8X8ttpxAMKNXwkEtdER
VVpc8bXwACw/zlgOE59AP4bVtxnP94Pfk93mLFcnUHpaldcg6odx+g5HZ5cJ
dGJM9TtLRD8YFDyyGkmfQF8c2Yf6H/aD5pkER43uCWTeepvJWaEf+t2cUlwq
JtBtjgdjqSz98B/HwO9LDydQ7Xn1Z//1U2AqnHslkmsCVci+zWH+TIHiNmlV
83I6KjE64KXoTQHnD3KR+Q/p6KmS2SL/HQq8O63wyZWbjo5lP3YjMFOA9ehq
6QebceSvZPfXerAP6LQyZluRcUStqnEOLesD3Ws7ywu6xtBBpWe0ELs+GOx5
ZBGqOIZwarxxF4Z74XfjjecNHDRkxvfTOYNKhhcUnfSyD8NI17/VcqmODO3U
4jsCmO7XGSy8XJdOhvyQAys23lTEoNVcnbIlw3vufR3Tz4ZQTDR9E/6R4JOn
7Zbd7QFkYHamXg1IkFDjmsd8oxd9d7Z2MZMhQXMSt+0QiYy8wzefM/hIcFJa
70nJXTKac2R77DhDBB2ehV9G1iTEsavtZOdHIpzivLnqF0xA3Dbfi92CiHDu
HIV+TYiAdq+KMaJdiDAuHMgskIlHVU8l+3huY7qTv2QkrR6H7F68/L5DgAjF
rpg039WD7J9qJ+9kIcLNyw8+cyl0I/Oj3R/t1gmgYHLFIcWsC3ER6xQfDxKg
cugSW+e3DtT3w+sUcw4Btls5ZF32/oGeXvzsvS+RAA0dzzkXKlrRjZrl22Hv
CRDBwtMQ+7MFWe/fVhHxHwF8TghSV+y+IxvDB9+GbhIg7cmtLIJzI9peJfd+
zxUCxP176nSxsAGxI/U7OWoECNJdF+CerUcOGco9LCcIkBzDblRuXYf+jIoK
tksRIMUt2OPoTYRO86EXiwcJsO7HTfgwUINOTn+Our2HAPSbt+RCf1eic+k3
GDFsBMjqUK3ifV+BXvy6EnZ6OwFSO+zHLx0rRx4lu2vd1/AgfYS9tvx5KYq1
tZiWWsZ0/rIe/899JWjlcWig9Dwe/oU8zSK3FGP16vB9uXE8XG14di1CvhA5
2UyeOD6CB+ErdWmd/QXon29IvtcglmtqCQmV9/KQXVFuphQFD3u5O9Ym6Nno
/ti3OREyHtgyXH9edc1CznuP3zQn4MFtrq1thj8D3VD1y13uwYMZaaKivCoV
vb+t1ITrwkNL/NSGJSkJLRtUO2x14CHh34/kHK14FLHB4uvQjoek1DjNU63R
aIewK+FEG9ZnqQRdWzF5jyao6qcVf+DhGfcXUgtLECK8jHJ724oH5OQWMuPq
hR6zpnsKYKxxblD1hdgLdPF7stBCCx7U3sqFu99UQgIaJSJs2HjPV/J5PhN7
+BltZ26FsQvldbJPjgcczRdu2IGt7/ZX2aX8uD9ktIfsH8OYl5Z0Zzs9FC4r
R+syYfYld+R7DCtHwpY6k+w9zP59e55Vv/0ZA3lSSTHLnXgwVum2c4+LB9XL
OrbN3Xg4pcWc0SuXBMobyT54HB4yMrFetS8FyjO7W4SIeOBwcQ7ZCE+DCJKS
QCwWT8mXtp3TahmQxaN2Qw+Lt9ZLDV7ZqUzA0y6ancXOQ+Zm2NNmv0+wgsva
f2cYDyYzIyt1+3OgP4zzeS4ND4dNL34/nJsLypwqcHICD9d8KhK2jueDlo/9
ehd2/k+j4tIkRb/An0X1MjoDD/gg8t+LWoXwTuRV7NFVPDRuuvbWrRbC+oUl
34+/8SD3NtWSK6MICJW1T87/w8MOGxbl41eLocn++rntOwhwzP7ZeenlYhB5
5Ef9xUoAL56jz5kiv4JzhPlbQz4CsIa5Fd5vLQEVvzbrWiECPN3LTFwyKYWJ
M+aMq9h9/xmO7r+cLwVVyc/1FBkCnLitx2LN/A0ISV4bBCxf+p9E9I74Yf2l
W9+3RQUC+J/iuv+ApRy0ZgJq/DUI4PhVqj1iqxw+R+wPGtMmQHqGQorCswpY
uzfw/Z4+Aa5d8JURplZAAOl0Q6IJAVx23UysKayEbQHLmZYPCcCx0FDkv7cK
nmpfV7tkSwC1ztCEnJdVkKbEx7jqgtmvT6rmOFoNmSEBpx09CVB0/8C9O57V
sE+xwafAjwCGmiYfeXDVoO8+X2waTYCptb4j049r4MOBvk7cRwIM7Td7y1tU
A1nKr+3vZBDg1Bklm4aVGqhQTayP/EoAWfrvC10OtRCt86RCu4oAJoZWjxXz
sH5cPL6ao5EAf8zlQ1VHa8HlZuH8QBsB3g3oE6f5EKQQ/ziV4wng/ulIqvpF
BAcK3/ul9GP6eE/Fc91nCI6me1yJpBEgw4wTcX1AsGnbuxQ2Q4D6XhnWsBoE
35s+f4peJsDBxn2tpGEEzfaCiem/CVBhPe429RfBeuihf+XMRLibo9NlxVUH
IY11f4jsRFhcsh9q3lcH8uyVuFVeItzZut0VJVkHS7rqZQdEiLB2X5O9V64O
SA4BE9qHiHCm8NXvMAVs/FF9orMsEVy9jrI2KteB/u6DgjmniSBnk/bRUa0O
mO70hAwqE6F8fb945sU6aFxnUeXRJIKx9vrfu1p1ULNs+vCSHqbL1PjzP2C8
UmWt/Z8hZl9hYqmFZh1MjwgofDEhwqa2Zl6Feh0cXDB5MfqICLtrqvZnqNYB
73NZHR57IlBqy+Ikz9WBzk9H5guviJDENFV0Qb4O1HZIT1q9JkLGGeZfv6Tr
QOqLjto7XyLsK9H6eVW0DloeK5nkhhDBfP6i3pW9ddDaE/a+MZoInVcsCxdY
sPHwoLNkTDe2qgykvl5B8PC2deZoJhG0X6rXupMRDGXUKIyUYv5LyvGVRiBY
8yveha8hghK9fs8fOwS550hbFc1EqHGPd6rXRPDtlP3AYxIRejMsc4bmamGs
rTDs5BARfgy8L9CsqYV34isbM+NEYFHWc7z0rhYCuIMCzq0QQTozoPicWC28
yhl3adskgqdO3MNzkzXwXlap/Op2EoxIJ1xh5NWAm/6D6cO8JNjZ09hccLwG
nqz1TXCdIMH7/UlZssLVMOMU4ZSmQAKyfX3CILEKPse7/CelQoJTyfOHW0Oq
4Mzhgiub2iRgiH4tsfldCVw3G/V09Ukgr++RePRzJTBFmpwMvEWC5+vGw2rm
lXD5cw5HpwUJJnTSFX1QBRxVkVLGW2Pj59VP1tpVwOzXyapGexJI//LRsxKq
AHdjL7B1JUFdQvea8JNyWLb6garCSEDTbvvX8bcM3gxUVe2LJkHa7pv1x1PK
QMvs7mWLeBJodf0aPqVWBjvfUVFeBgmye+1fqriXAtN5CcHPOSQw6NUR1Bcq
Bdmi5dYPn0lQvTRic/BrCZiIDvFLlZNA+Ie8Ixf9K3Dkth5orcb8O/3I+Lz7
V1CWHDe+Xk+CO3su6lzg/QoGNG4doTYS5FeFpNPPF4M4TWD+eT8JQpRzzZ54
FgJXaYG+FpUEuixZnmy7C+Hf5uLc31ESFJV+5rI++wUItYGzYtMkGEjvcXhn
UwBU3DI5YI4EK7d6lJw88iGO3UCAtIjFUyigvCAiD7TdOIf2rZJAr/xFytmy
HNhRm8zBu0GCGtM8m4zmbAiy7hqY3yTBYQHb7AjCJ/DaafVFfxsZ/ur76knP
ZkLVru13SdvJsC1ukntmJQPEzqavqO4iQxfbMOuDP+mwpRdo/I2dDAp3Qm/k
sKfBivFBegsnGU6ueBEjuFMhflsEpXI3GWLWZ5it+VJgWvG3UPgeMhQuSI1a
HksC6pyd72VeMuB2vTNnOfkRnASYto3ykcHaLCanQz4eCrJ+2Jvwk+GS8NBo
t/wHeBM+XFAhQIZb5j+Py56Mgejgb+nrgmSwq8yuWD8WBTY0ZaV9+8gg+YPL
74Z0BJjdzTYTESbDbt+HJjckwkErznLHP4yLWT12SCoGw+zFQeEmETI8rbR1
u304AA7+exlhu58Mr7S/ZT7j9YHcZx/uLWNsUCty6NKmJ5id/2J17wAZem/J
R2h3OQPLDomMTIzf3GQxS1B5BnUC6hoEjE/OXinImb0L/TjVoEGMRwYPyGw3
Ukdfh1Zc6jHWk7PzHDtshUxobpzeGGfkP5ix2XJEU/7jGgcxphKOyNIn3JGt
0yXhGGx/zoVt48tT3ujnrdLwaczezhC37a/M/FFsl1aGEMZ3V7ZiygnvkHUA
581DmH9tkk0pFyTD0Wn9rwlsWDwScI9uqptFoOnyh37tWLzmZLw/NsVGoWCd
9xKPsXh+8AuSyOmJQSXzFE/aXjL0tT0K62aNQxvvBwrOYudBo6wFC6klIPUQ
r8pX3GQwHRkbjcpLRi9rLMrNuMggqu/7vWkxBbnbvWg+xEGG0B1QzsOWhhTG
35hrYPflhGvFJUulDPSKFnDsI3afmi5tc7xqkInuGz92wTNh9j+Z3KZrlYUs
YpR5Sb9JwPrBMFMnLBvx6zukpq6RsHel1uZYWg7KtGQ5rbtCAuuq4LnJr7no
FjeJrjBPArGCwOp8Qj4Kd1IPfDpEgt6PtjM2XoWIasCEP0IhASVLYs5+ZxEq
zIgMREQSKAevemcEFKFxJ172d+0kqN1+3SAwuBiN+TsB+k4C7kzGERmuryhj
qLcej+XvH3ON30PBX9Hpt8GFH76RINbWtdk2sAQNTpkk6RaToNE4jXJmVyli
QZKD1HwS4DOZRNe9SlHh7agrn1JJEOfV53jNqQwpzf/51BJIgqSS+37/XS9H
vrPlDT5vSdDB+981g+ZyVFsr6SH5mgSWJxjvps5WoICRan6u5ySQ0soW0dlX
ia7d/dL7zhCrv66lE3s7qpDicWkh66tYfFJClQ0UqlHuI9aSI5dIwPXw2In9
idUoc2rh5d2zmL5CV3Wu2tSggsJk/3AhEhDxY/9s5mqRsUFNhjQPCQS1YobM
LiKU3y17Pp8Nqx9PExRmPyB0+MyojPNvInw4HmbUL1qHaraET6FlIvideKr+
UrsODT95t3sF02e9LWX8Bs/r0PYI3U+HB4jQnVt7tammDj3heCB+iECEUZ2H
hkZjdSimqZS+u50I9PiMF4dZ65HE5+c9xZVECNzGZfNAvx75fmtvVowjwvTY
mqEssR457lKWKwongu1GuY7ez3rECBZb3h9AhB7Bgx7RPA1ox7cs5TYnItzq
Ikx80G1ArdE/IzmfEmGXQIayvnUD8pbgZqhbYnqvWZBHyrsBHatmt/C/SQSV
6ikPudIG1O8ce/nDFSLMtZSdvdvZgIbPqA4mqhNBqF+7Onm8AZE1xokBJ4jA
6f7+2NM9jcgysnr/MylMT247lflTshE9Re4U3QNEOJYmsBV0rhGJ5DxwncH6
HUmJN2ZTJo3IzOq+WsE2LH6rC6u59o3I8C/jog2mLxNxr/xdXjeiYUX8qsgi
AZjSuu7qBzeijQ7znlY6AZSe1gzLxTciTYFcnWeY/ixi5Yzm/dSIAgYqB7gJ
BCB9CN7YLG5Eb+nJ/3J/EEDoEk/wVE0jWt+yPK5eR4DZs3bt5JZGlD+zbxRf
RoCq6GeKzT2Y/c6t4eYFBFj1m9ct7mtEY088ymbSCcB5ujzo43AjMjkR0O4Q
j9nDj3vhTW9EofUxeqvhBHgk6pL6YKYRCb/pLHfxJ8CFneQu5YVGpORlGrbx
mgDvSQtfORmN6MiAs77rSwI8TP7ORlxuRPszrrqsY/3xNweLwPCfjUhvmTvQ
2YIAkfcaZ9UwXh1YZFq7Q4CNJ0vTY9j8684H7ztfI8BS0ZyKyyJmX3yfxIYm
AfR2tyVuzTaig77Wne7KBJBs3UN5NtmIdL0macynCDDq2DbcM9qIppJyJt9J
EyA2MT/r4EAjcp//e19IlACmODsJI0IjCnI/15PNj62XUHfZva0RRd77VK3K
SQBXf1OOoLpGJBD/MaeXGYuP+IbFm9JGFHf5sYjzBh4GVrXVzHIaUQ7NLGb/
Eh74hDfjJT42okf1hei/IUz/tZpN3/VoRBTR+J2WmD6jGvXKHnraiNLcdoje
xvTfs5iHIRTsPuSEOnZdr8BD0dncdK6zjShp662laSEeUo+aEQIlGtHdnmP4
F5/wcGVaSIjBidkrHHu8JhoPYves+l5TG9BcS6L4z2A80P2EllObG1CLpzXj
jA8ejlHfOH7Oa0BjYc1nqC/wIOvR987jZQPKyRb+cskW06t/N3jU7zSgCb0S
vhoLPGjuU6ROn2tAuHLFHJIBHvxDHhyZW69HYzLjIy7aeBDwdovU7K1Hxrtk
eY6p4WGXlMcpr5J6lFim+7zpBB6G+kPqMp/UI+EjH3Jyj2B6sGCGL0SrHunu
MV5KE8VD4A0O0zsH69FJvwNV7dx4cI5WiovsqEORXyJ1/rDgoeJX7NKOtDrE
/e7hbw0mPKzl3dtl5FSHOsGJwsnAAZOmqGWaSB3a89DjbA4BB2x5jhZBRbVo
ssjQI6gDB4pl7Q1vrtQi22dPBH2acUDrqCSdG61BTSnJRg3fcFAeo+w8z1KD
7K6f4WItwsHNNG3qdGw1chd5f8wmFwcvdVYWPx2uRlPf5RpdE3Egn4O7anu+
Cv3gOn3pWCwO9noZnX1WX4kOK73T3QzHwZPT0rvOXqpE11nRypIPDmIt9UL3
6FSgx63khzpPcTBhjw/6dfob6rbyjluwwcEhj4zS/TllKDk/0b3kIfb9u+mf
7PvL0P66VdMMYxzoBWmWwmYJirqdZNltiAMrh5gaf+sStFcqUO6AAQ6G1Alj
cbivKFg0Y8+hyzjIcmduFE0uRkSTllODGjjYJa+aEM1cjEZoNocqL+Dgvx58
NuVhEZJ/esVtQhEHqj++nsWJFqJJrY90hdM4yFdJ19r96zO6whEuk38CBxcK
qHJiWQVoc7uXFrcMDmpwSQOwmYsePK+8Wn0Yi+dNxe3xXjmYoLjhESeBg2v+
Ex2jzNlILX7B9ZMoDjpwwU9EPLNQSf+psYn9OCCm7OLVXc1AC0pNJkbCmP0W
8j9f2qQjddfLgVuCOPB+O6OeSEpFf40tOIj8ODjnyC3fqpqCnBPLfIf5sP1U
Nid+qiciHhwjXpQXB3fdn7vY/43DBE/eXNQeHGyrSxbeVRSDQu+OC6lx4+DV
va1TrcaRiFV6e434bhzc1jXJcWeEoa/Bz53Oc+HAd6Hi8IRIIIorjaIFceKg
5brFNtopb1Tf3ZvEh/HuS5rN7PZO6DRrmjaJAwcuaidRdII5Wnt373UPxgcK
Av20hu8AuD3u34l937GhHpT88CWclvL6/QpjyQGZ8HI3LyC3dr8Ux/Yzs2f8
CCQHAPHojRFWzJ5/wVfZo7F+c2DvTuIxzF5rqcNsamOREKtPnwjB/Bk49/6U
UkEslKUvfjmG+evhnN7r+CYBxili39n24kDtg73OmEkydFW+qjssgIOQ7Dd2
qqmpkHglUsFLCLNf0L035kM6MAT8v+0XwcH9xRCyU1Qm8EIDaf0ADnTtFnaT
oz5B9kiRqIA4DhbafA8XxOUAftfDlwLSOCg58vtNZmEBVHz/m/hbFgfsaZ+4
yxu+QKnTdnmJkzg4/59AQMRcIczl53erKuHA8+roQxe2r2B7JZhxCrtv32P/
UEVFSiCoUzPH/iKWbxrvBsaPl4JuyK1fpddwMHqhu7jM5BucvXYutgm73yTc
s/NVTuVw/w/rjPA9HFTr3E7siKgAa1pATQqWL/PpS1d34qpAVPTqXVF/HBxp
+FWVcwrTx++jcK5hOKj6qGif1lIHwuIZW6IfcNB7Lj43zLQeGoutHlzH8vl8
6qd3F4IbwFC3o/UWHgdFk2sOeStNEMc7ckpkCNv/+jRj5/tmCJ+4zXpyCgd5
LwPeqB//Dsd1mZDOPxy8iOz+fP1JCyxJPCrUkccDL/VnWejiDzhVqpZbqIqH
Gtomo8a/DX6Fxdbcv4KH4uL9bMli7dAkN+AR+wgPhIDzC/aGHXD3fp+v00es
fu+oNWNq6oKoogMjCsIEEFiNuucygsWtvf/NRVkC5OvuI0Vj+/wqDl5LVCGA
rUNI7IY3HkIt3C3Om2PvW+HCr1ApAvSF6TAL5RFA+t1Z7q7nREgcUCyI1yfC
spJ3rteeXmiTX/3+HutvYt+6oCeWvSCGb9ai/EeEm3fSP/hX9kJ3nI3C3Rwi
UE/G6+hb9kGa0xs9aVas39Ok+65XU4Dh46L5SYwEcibXZ6/w9cMIp9mcsxIJ
njVJnmt63A/RT+and9uRwIf1FY+U4ACMB5RdECSR4OB3ZZKn4yCIPQ11PLJE
gvv1mVm0tkEof791PQjr/1ck009ZSAzB3HqOi/ZFMrCI+ZLycEOQ+6P5X/p9
Mjh9nxZ5JUOFre744BvuZPjEreRg6EWFTflDSoZxZCj/jX+sTaFCWOi7fTll
ZBj35w7Slx8G8ux3vetEMhyk/2djEzgMCzTCRb5lMoRdzqyhKgxDSSJr21Xu
Xnjl2Tm7P5EKQ1Yb99ZleyFwpq712k4qvChf6+XT7oV6gm2549MhcNo2xp36
sBe0cuUk3/UNwl8jPr+9cb2gU/ozJfTLABzbUyUoUdoL+rfFTU7uGQAqx9fJ
4J5eGCI+TZ116IejLdfrPHb2Aa+si1TeOQp8CL2btGzdB5eCiGunCWQIPn72
KZtnH7xcaJ72VyHDoswZC7/oPjBSia2Zz8Lins3J+62uDw50qS7PeBDB+yad
mXcPBZ7Zx0+GKOOBe1j4nosEBS5qFtjdLMCBYH+Jy9UzFBBkkZWXEMNBfVea
mvZtCuBajoyQWXvAJU+G7bkVBUYLo/6+/NMFZ0PFetidKGAatfON1mwn+P3i
ckuMpMCIOd/r9Y52qD9w1D42lQKGa/O7yXVtEG4p6cn6BZu/f5Xna9kPMCXt
ETRspUCz9vxbi+wWiDvpqF2wQoHw7p5D2umN8NKd4e3+lwJzqTns/VkNsBjG
TGtj6QeFioJvt/PrYdD/1OqUUD/EDpkd4nBD8JPZNblSrB8UX43kPgqvgbp7
V29yS/fDFVsObo/cKjjR9yFTS6Eflh9dWKFMf4O0sjxpGeV+ED0sfIyHuwy+
4/a9iVTrBz+lL2WMsyXQzx6d7KvVD+c6DDZfPSqGzfOWLkxX+kEFJ2T0IaoQ
lG4UMXZc6wdBz30NmeEFYOMssBx5Hfv+Face/MuBezh588+G/eDZWWPPeJkF
E34pErfu9ENIz8ilQkYaUGv/iQYa90N40PWF4ZkkEEyZu6B7rx8u0N+r6DB9
gEfXd1h9NOmHhxrT33wOvYf4jbH/Xpv2wwMrd/iV7QP/9XNZL2Lck1FxO+6D
HfQda2D5ifHzu121BrseI2LyNoVAjNcp3xXtQt+ifUl7m4ux9U79ukfQMQ9H
hhEXQ59j+83lGZ8+OBeDTk6SrRoxewQpy8c7bBOREYvg4XzM3uoRqoniQipy
MdVLlr3VDwuG2Q+DxTKRiiHK07jRD/vmUzJf6mWja7fLxZaxeDzpiPy46ZCH
xOSeEs/r9sPtpJuNcu8/I/Vhn5gDl7HzMQpc4iAVIuINP+kijX7Ax77RV7lT
jPgFjVfHVLE60RIr+YL8FV2KXqouO4f517kZ9vVGKcpUVFM6erofhMIoRbs6
ytCLR8rSINcPkwzTXAeNcjTtT7q0KtUPdoOlcb9LK1C7/pcd1/Zh+4e1jHlE
VaMJugzPEk8/pGU4pPr9q0FKAs+PnGXvh+TfpsLN1ggdtTKS/7ZBgQ6H1NR/
gvVISGDNh7FEAXPhxcrtrfVo4M3dNMIkBZxS35R8cWpAMryhG++JFDj/4nAn
B6Z/9ou1Bj5ro8C+H63nG9ya0HQshKwhCkg/mZOUk2xG7U+3ubHlUuDjgRcS
co7fUZmEcU5UEgW+rRSHtQq1IJkZ1r6OCCw/M+TlDte0oH2ME+iSGwX2LOsV
HGf+gTrMrpYF2lNg+ePxpdG0H0iU6i7pbk6BsmOykg812lAq66saBy0K7Hxv
KDf4uh39KbfRKuSggDZzhSXzZCeyj4q86bnVB3r3ikkeHl2o8PjAK+b5PmCt
M+il7e1GVwQU9h3p7IOU7efkz4r2oKP+6h3rgVg9GXL87KSBQ3nrlx87u/TB
p1dEbqYgHFKOMzD4bNUH9G5VTnYcDs02bp+5pNEHlmU/zmaZ4lGhlnz7ydVe
kGo8uPOYAwFRud6AJ60Xfm/TXJwoISByivRwYFcvRJzKuHBinYBey/1TJ2X2
AmdmgsHT10S0/HH3P/3rvUC+8WYf3puEtlWypp78SIZ7ByWZwtx60c/ztLdc
fmS48psgi772onj//qWSZ2T40hF7LXWuFwVfeGr/SIMMjyT8br8x7UMXVHi4
r9JJcFNexr1dmYKOqNWOvRYnwZMhumfWbD8a5n4yJY69X/07T7MGiA2gH1r3
PKIWiHCqFrd+/NYAknbOE5qoJAKjJSMdVzOA1v5GiahdJ8JRpqtzgcGDyFxk
6O8apk85d+740iRGRbV5TaPxRgQ42msh7nuDitwZ7irc2HuczL4hc8CHitIV
I0fsMD14eqfK9b4JKnL+Li74D9NfnEe9pmJzh9Fmp33/hzgcJPk11/PEjKAi
i11ZnyS64XF4d5sSNw29MzUMWOrrgiyrbSl+0jRUVXY0CB/aBf55rke61GlI
/AjV/sFGJ5hkKyTov6QhKZ/jH4t/dEDL67/BRyk0ZPyl8y//nTbwU9zK/pw2
hr6oqzs0SjbD4ebwPWfP0dH+nXNJZVhf1qGz6U30mkKPvdK9BfSLYUjnBl49
YQqFFKQySiKLYMQ153NNyRTSCTnekSdcCEIdJ2NGJ6cQ1yvz/JkLuaA94aoz
dG0a8T8Dz4t7PsJK+KzrZ9EZlOLCbil7JBbZMPErTnfMIj/+L43jr+LR6W2p
GTA1i1LJ4StDLYmIjQcOZm6fQ6v7O9zbz6ehm91dSx/PzyGD4UvjR7ey0f5R
9ksX/q/i8o6n+v/iuOwiklGRRIUQUmSko6KyIvGV0SSKhlAhpYyMkJKszOy9
N29773Xd6d4rMzsykn6f35/Px/sz3u9zzuu8zyt9FvmFRcoetS1EXHqsaqf9
51Cg470dtnO1yEq51mveaAEx2ySl69yrQ4ONzBnmTxdQnnjWxQjMh168gOvo
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
GArPE9D/AK/YsJ4=
       "]]}},
    Axes->{True, True},
    AxesLabel->{
      FormBox["\"y\"", TraditionalForm], 
      FormBox["\"y'\"", TraditionalForm]},
    AxesOrigin->{0, 0},
    DisplayFunction->Identity,
    FrameLabel->{{None, None}, {None, None}},
    FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
    GridLinesStyle->Directive[
      GrayLevel[0.5, 0.4]],
    Method->{"ScalingFunctions" -> None},
    PlotRange->{{-1.124525, 0.591238844263263}, {-1.0703297854567058`, 
     1.0524532359921215`}},
    PlotRangeClipping->True,
    PlotRangePadding->{{
       Scaled[0.05], 
       Scaled[0.05]}, {
       Scaled[0.05], 
       Scaled[0.05]}},
    Ticks->{Automatic, Automatic}], ",", 
   GraphicsBox[{{}, {}, 
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], FaceForm[Opacity[0.3]], LineBox[CompressedData["
1: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
akFFiqz9c0lMaQGsAhK/H7hPRWK0/4L9eRZA4knZwRtPqUhk5+0HFZvz8Jqs
EO4YSEWSlYgsmW+dB6X3hx6YRlCRLgjXL+/LmgfmCgpKoTgq0pBhxCP23fn/
wlIkqzxpF/9JzmM3nweL2wO14mlUJJ3AiGPMMA/qqwFZTh+pSDfiVxko2OZh
JiWixPsLFamB2XJpfH4OVon2Rne/UZFK1u5fafg9B4fTgsdYMqlI2sY5Zvlp
c7BUoE+M2D1fjX5CTPaag3/4twx517/nXllxqN4cmLt+n97ejV/N8LjbV3IO
wpmHJf/t3k9/ZNT92f45sHv3IjAjmYrEazxEHzI2CxTBbInS8VSkWq/Bf2kl
szCqn2MbG0lFyunrDavf3auSSm05a4KoSFQjxrr7HszC+9x8wQYvKtLeFO8U
I81ZCGz9Jf/VlYpkI9rUWC00C8cVX5qaWlGRLmuryl2nm4U3Mj6t8/pUpNKN
TOve4hnIOi4tZqRGRQKR62yGD2ag7myu7qeLVKRpYwNmrjMz0FhT8aFTmIok
bTDaJTA4DRLPD0TPslORBk9njHq8noaGoHbZOXoqkqOYURSXxjRQ2M0xkhco
SWp1ItSWxClIevGvKLmKknRi/5fvve5TMB4zSnEgh5K0Ja0inCE9BejgtnFy
AiVJVvURm2L2P5gPdPJVtaMkWTymkln8NAnelaXP3GgpSXwin4IMbCbBqrIm
qnycgqRTR/QSE5qEvi+n9FzrKEiFqwnSPJ8nQH5ZP5YnkoIk/t11WD9nHIIF
hX2OslGQnhU+otVw291ra/VjXy/s4Jm5kYjC8+NAjmWM+py7g1V9c2vXi8dg
QPHle1epHXy6r56duX0U/t4/QKOMtvG9jePSP3f3AbuGxd5Iqm38uvpveJP5
KJCIt+/eq9rCvKKsSteWRiA3UqnpuN4WNnPRHU74NQJ5zbcSG/m2MGa7K63u
PwIvOmIYfy5v4lUpnYjb6iPwVPKwnW7NJh69Zuyae2wE4lVjLS6+28SRVs+5
dQaGIXTyzCjN003sdoTrk/TnYUhKe1t4w2QT8we8m1B2G4bvfvvNO69tYgnd
p6a+hGEgxi6fUDq/if87nKHYyjgMZ/Ypb6qLbuIr5ZwPxFqGQPGO8cs3IptY
5E/lG7/EITATkF6ok97EjFel1YqthiC7Unzg3m685T2q0o0SQ3Cy7Jxkndnu
fUXn76duDYJ1v7+AXNAmTqxMbOevHIRfUsJRxIJNzFpIvKkYNgiW4Tc5hBY2
sZ+An8G07iDYWDA1/Se1hQsrpgn7uQdBcVc+c/ps4X085c+ixwbA2lO617x1
Cz/Z4Drp+m0ATPLoPPnFt3E6t1dGousA0HFxbj6N2sZneI94MFwYAN+PR/2e
bW7j0lsWdK6lZEiY13k80bGDT3Yml21W90ONFc+rqg4K0qhxYJdZYD+0Zu2w
XDhCSZognu4audoPX93jvd9pUZKCa2xNHvj2AUy2XXavoSQ1CNfvr9bt2Z0/
87klWVSk6GtPTzz43Q1suWPidGNUpLWDKUZRqBuutv3L5+OgJrlbHqIhnOwC
tjzX23nPqEln7qRakV90gs/pDn2679Qk1rkp8tHVDvjtU+a2OERNMhX0M7D/
3Q7Ln9lePSHQkP6zZFBKkWwH0XF6Eo0tDelTJOu++Pg2GDPm5KWKoSE1/WPP
WTNvBTkxI+FLwzQk5tVc40fVLdCS6MjwkJGWpB7p5TAu1AL9ody6jGdpSXT3
vjH9nmqCooSmEDFHWtJqxnaUjloTeAk+MSCG0JKo6NNcaT83Aqd+s3PsJ1oS
SeyN5QBDI+zMkdoKKmhJk/V6VzbuNYC0HUn4VD8tKdDK7d+d0nrII/9Salih
JWUML2gd4qyHrS7zkJJ9dKTAkRPjdxb/ALXEs5glbjqSW9RopmNGHayOajha
SdKRngTZHvY0+A1q+sdtOa7QkYwtA6QSD9bC0qyxNPMNOhLlzWfS0yXVMJ1m
+0fBhI50aJpG1u9+FVS13LfNt6UjXXFO1PbkrYSkQL8aWzc60uWlwdiFlnLw
vns/664nHSnToIVhx68MZuU3UbwvHcm+LDfo57lSYKYOZjgWSEdiSa9cgeFi
eHPVN7vzBR0pWo9wICOKBJMunMLDwXSkHJMn2ScDiJBbv6fz/C5ephLKPDZa
CHtMOAS7dv03FjeLnRUL4JQuf1utHx3pod72jmFaHlAwPKY74EVHeq9/zeUA
fS4k80+OfHhIR2o4LpP53TILeDyEZ1877OYbzCpIG/sFFLsst8bM6Eh81kNd
akbpwCQUMv9Kl44UIHZ9PlXwPXwS7F35okxHovBtcmufj4ewHNNw4Qt0pGfZ
Ej+2Y8Ohkk1AhU2QjuT4xd14+PAT4DTUmX14lI50okHwgPPzIMyQVfs4dYqW
dJAvgrz+MBbz0o21eLTSkgwVRESDG5JwrYuNTfcvWtK+2dzpV+Mf8dqtLWeV
AFqSz5sk0sTkNzxlXxF3z4aWVPujk/2TSzaee6rXwq22ywcHW5sTZj9wqZqp
ZMReWhK77oGm560F2KG2SubGBA0pN0zZh6xQhL3uS+jWV9CQOh6B5r0gEq7o
iXZh8aAhbQWg2CpUjp32MrR6tVOTqk3v/s3yrMAurAUfDmVQk7hmZX3CCitx
tCXbks1DapJsUHk+WagGZ4e4iAexUpNKNi6+/TP0B+c3pfEGylGRKJlv9YjQ
1uPMq43JcjRUpJOW2E04ph4rn1Z5vbX7/x4PW/qZkt2A/6iMDdbepCTdp/+v
/W9zEzb6zz8m3ISCRJMk6/BAtxm7sy3eSOehIMVYyv852dmMy+sNlk5V7OB3
wVwXdNpa8OuMrNNbpds46SDtqX/5bZgnhaGBP3sT2+c7HWEUbsfv/90slxba
7bfHig/TvGnHvVNvPpi/38Ckx0Ucng87sEFAaZhm+Dr2eKd9/9zhLsyq5hlW
Z7aKJ2sM67rdujDZfI+AZPsKVtnOJ15r7cLRnqdr2VVW8OUB6sd2Id1Y6oxF
fJjIMmbuXannGu3G5mZrixLJS1jTwGEw4mIPHq3zjn7KsoRXf1WHfx3swTfm
+CkkFhfwVNphnlsSvTiy+GDFJ7MFzK59mi/fqxeXc4WhmeZ5vFJwTy79UB/O
/mphupw7h+nUh5ejD/bj+3pjp+NHp/EJi5oeFZF+vEW/L7+5YgqLGHH59qj2
4+/yF/6wpP3D7wOuikT59uMTtjpLtWYT+M+Bac2Ct/04s+P4GUOFcdwpTXz1
80c/Xu4r7eT+bwwTnoamao304y9kixizoWHMkDGxOL7Rj5875Z9aKRvCLwNO
PTY8SMYTJdG8A6mDuOke+UXmKTLme/an8+zzAVwx8uJN/zkyPrZe4jlsScbn
/ZDAjCIZF57e0Nqv0o/XZQ6ldN8iY9Vve8RN9XvxR0+7m7dcyLhp4cLHg+Md
mD55//fDT8lY/PiqjFdbGy7d8pXvCiTjt7fsU9crWnCy1n9PPkSScXE30AT/
aMI2BoQJ9wQyFh3cZ03IaMDhz0/uvZVCxu9KGIuuyvzFPy2+up7/RMarh39N
PeOqxXabxRW8WWTsL69xW5WpEhdSvUw8nkfGtgW2Sz9WS3Cm9OWk4z/JWPCf
q1Nhwy/8Nee4Fd8vMp6JLhLL+PEdnzv+JFkOk7F1b5lIneIn/PgwmdqIRMbp
T5i0/W7E4EjbAbWQXexo/+B1WewzCJ84frF21z7n9Y6U83gKvLgtEHqESMZJ
cUUw75ANntUq1E6FZGx2/j2dm9lPiONysu76sZu/ck024+liOPqeO+lWDhmH
sRyk1ThRDgesmbwGv5DxImVv7TxTNcSFdA/7fNitM99Me+fKb2hLuP3lXNJu
PM6EnRWHejgh/rpoM5aMfYS0K/febQTVab19HSFk7DoWl3dSqxmGL4XG1/qS
8cXFhFQuQis4JvOZtjwi47oJH1ta4XZ48JjZeMWOjDks3Qbx4U44bhkULm5C
xjdEVioubXWBS5DXvgBtMnbfrzX2dKAH9kTfWVhVIGN2LY4My/I+EHYOueu/
y4ezAbLnVhr7wW70mP4GKxnTiSVL1+7qhq6ER5LDlGSs49+up5YwCPeMbqrO
TvdjQbcs/6fPh8DHfVbboaIfa481nW26PQLF1WMNw5n92OOtmeIQYRT4aMy+
+MT141oxumBfvjFwsRCVOmfTj++uP9O9PjUO0spBzWpa/dhuZEnZ/M8E5FWT
UyJk+nHAxqWXI18mIVnjBjGNqh97dv1tpLKcAnPf4B5l9j6sKi+8Wm46Cz9v
/DCP7erFj4WZlhzrZmHq1B2nW/G9uNPfKlRAag629ffdkT3Si6cTL/7+QDMP
hU+SaC0aenCUnH6HqfU8HDO3tjv8ogefbVEtOvx3HmpDWq7Rr3fjMurSD5ej
FwDFNaVrfevG9I9idnKWFyCL36xVxLQb//3zMoRKZxEOxPDmZVV0YU/9Sjbu
Q0sQV+NXqfWkE4/Ek0Rzni5DMdHncxJHJz4rJnLcm7wM7PlPvt0s6sCZ0QmK
qfIrELby+g/zUjvO8y7MqN1cgT93NJX5Q/8PSgO1/Ni/WeMQhrtX+D8f4EjB
wCfYv9nzZtncsPg/vI1FY59U17/C4Zuxjl35PwlURLb06Na/xU8luQyx+T+n
4EEl7nvWv52sJiqXAvo/cuWS1+2d1b+zRO5FrJ/6P/RPqbcU09O/dhTn1tnA
+z+zFcDdel3Tvx2EFJW8A/w/hmMgXsvm0r+jK9jBY0T8P3rckmNS9tG/oLyC
ht6+/D+FJhV5nHzRv4yeD9uh+Pw/pzho+/cB0b+DjIX5CDD9P0MHV7UKCtC/
LvzDS6KX/T8Lv9kCrRnPv1ek663Fx/0/NJFKR7kdzr9jEtoLb/X9P3UqxE5P
IM2/Rv+WjZcg/j/dLgowhCHMvzIkKls4Sf4/eULgAW0hy79XOpucSm/+P2Aj
MBYfIMq/ly9MoceS/j9h32WcsB3Jv3yKGeOps/4/GqSx8DcayL8akAla7NH+
P371Im/LFce/cDVd/ont/j+DV8lzgRDGv4BvVch9Bv8/JU20WnAKxb9nMzOw
whz/P1Lc3IiuA8S/ZccBtFMw/z+W/sXlUvzCv6h9kLwsQf8/EAi6pnT0wb8W
LmzgSk//P2pkQf8q7MC/p5ppSata/z+NAclFGse/v0OFXSFLY/8/nZFXimS1
vb/lrxySJ2n/Pw56QDNjo7u/0bZ7xT1s/z9s30T/RJG5v3IH60eLbP8/oIht
ITl/t79Ney9GD2r/P4gPPrJubbW/M/1AWslk/z/7EDrKFFyzv/x3Fx65XP8/
2CblgVpLsb941qor3lH/PwPWhePddq6/cwPzHDhE/z+KcJODAlmqv4FHdp7G
M/8/moxeXYE9pr91Jo+piiD/P4qSx/63JKK/NBxTV4YK/z/AR/G3Bx6cv/if
Ucq78f4/3s830oT5k78eKRolLdb+P+cAbmlEuYe/4C48ity3/j/oZ7I41kBu
v9YUYB3Mlv4/EMbMG18NcT+g++fl/nL+P04cxHf9iYg//0jZLXlM/j/8frDK
IzyUP9TMajg/I/4/wq5YphAonD88V9NIVff9P0mTOKwHBKI/+fGzvr/I/T8k
HL18tu2lP+j+TuqDl/0/Knft07vQqT9eL/hap2P9P6TWxkq/rK0/AfJF3i8t
/T/AUvzKtMCwP8cL174j9Pw/W6uXcA==
       "]]}},
    Axes->{True, True},
    AxesLabel->{
      FormBox["\"\[Theta]\"", TraditionalForm], 
      FormBox["\"\[Theta]'\"", TraditionalForm]},
    AxesOrigin->{0, 0},
    DisplayFunction->Identity,
    FrameLabel->{{None, None}, {None, None}},
    FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
    GridLinesStyle->Directive[
      GrayLevel[0.5, 0.4]],
    Method->{"ScalingFunctions" -> None},
    PlotRange->{{-0.0016975864979491303`, 
     0.0028293108298726223`}, {-0.0015995380433887255`, 0.002649732880294996}},
    PlotRangeClipping->True,
    PlotRangePadding->{{
       Scaled[0.05], 
       Scaled[0.05]}, {
       Scaled[0.05], 
       Scaled[0.05]}},
    Ticks->{Automatic, Automatic}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.715217574811864*^9, 3.7152852457777696`*^9, 3.7153625429727755`*^9, 
   3.715362599864308*^9, 3.715362707103405*^9, 3.7153627379738584`*^9, 
   3.715362802421919*^9, {3.7153628588874445`*^9, 3.715362874233613*^9}, 
   3.715362936237946*^9, 3.715362981476921*^9, 3.7153631212718296`*^9}]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.715216176116166*^9, 3.715216176148164*^9}}]
},
WindowSize->{1350, 685},
WindowMargins->{{-8, Automatic}, {Automatic, 0}},
PrintingCopies->1,
PrintingPageRange->{32000, 32000},
PrintingOptions->{"Magnification"->1.,
"PaperOrientation"->"Portrait",
"PaperSize"->{612, 792}},
FrontEndVersion->"10.1 for Microsoft Windows (64-bit) (March 23, 2015)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[558, 20, 102, 1, 30, "Text"],
Cell[663, 23, 192, 3, 31, "Input"],
Cell[858, 28, 537, 16, 31, "Input"],
Cell[1398, 46, 103, 1, 30, "Text"],
Cell[CellGroupData[{
Cell[1526, 51, 1721, 44, 68, "Input"],
Cell[3250, 97, 33644, 864, 302, "Output"]
}, Open  ]],
Cell[36909, 964, 273, 9, 5, "Text"],
Cell[37185, 975, 1734, 50, 76, "Input"],
Cell[38922, 1027, 271, 9, 10, "Text"],
Cell[39196, 1038, 108, 1, 30, "Text"],
Cell[CellGroupData[{
Cell[39329, 1043, 440, 11, 125, "Input"],
Cell[39772, 1056, 3231, 98, 226, "Output"]
}, Open  ]],
Cell[43018, 1157, 185, 3, 41, "Text"],
Cell[CellGroupData[{
Cell[43228, 1164, 1464, 43, 133, "Input"],
Cell[44695, 1209, 4221, 115, 218, "Output"]
}, Open  ]],
Cell[48931, 1327, 243, 8, 39, "Input"],
Cell[49177, 1337, 1893, 58, 270, "Input"],
Cell[CellGroupData[{
Cell[51095, 1399, 4009, 106, 215, "Input"],
Cell[55107, 1507, 3552, 94, 112, "Output"]
}, Open  ]],
Cell[58674, 1604, 271, 9, 8, "Text"],
Cell[58948, 1615, 1182, 37, 57, "Input"],
Cell[60133, 1654, 264, 6, 33, "Input"],
Cell[60400, 1662, 271, 9, 8, "Text"],
Cell[60674, 1673, 273, 9, 5, "Text"],
Cell[60950, 1684, 271, 9, 8, "Text"],
Cell[61224, 1695, 273, 9, 5, "Text"],
Cell[61500, 1706, 118, 2, 31, "Input"],
Cell[CellGroupData[{
Cell[61643, 1712, 19805, 617, 817, "Input"],
Cell[81451, 2331, 721, 17, 33, "Output"],
Cell[82175, 2350, 548, 10, 31, "Output"],
Cell[82726, 2362, 723, 14, 33, "Output"],
Cell[83452, 2378, 1546, 43, 56, "Output"],
Cell[85001, 2423, 1546, 43, 56, "Output"],
Cell[86550, 2468, 3142, 94, 55, "Output"],
Cell[89695, 2564, 3143, 94, 55, "Output"],
Cell[92841, 2660, 461, 6, 31, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[93339, 2671, 69, 1, 31, "Input"],
Cell[93411, 2674, 52328, 974, 374, "Output"]
}, Open  ]],
Cell[145754, 3651, 126, 2, 31, "Input"],
Cell[145883, 3655, 1247, 30, 72, "Input"],
Cell[147133, 3687, 273, 9, 5, "Text"],
Cell[CellGroupData[{
Cell[147431, 3700, 1278, 35, 52, "Input"],
Cell[148712, 3737, 902, 25, 33, "Output"],
Cell[149617, 3764, 14031, 379, 200, "Output"]
}, Closed]],
Cell[163663, 4146, 273, 9, 5, "Text"],
Cell[163939, 4157, 271, 9, 8, "Text"],
Cell[CellGroupData[{
Cell[164235, 4170, 977, 25, 31, "Input"],
Cell[165215, 4197, 805, 23, 33, "Output"]
}, Closed]],
Cell[CellGroupData[{
Cell[166057, 4225, 650, 16, 25, "Input"],
Cell[166710, 4243, 17994, 479, 200, "Output"]
}, Closed]],
Cell[184719, 4725, 273, 9, 5, "Text"],
Cell[CellGroupData[{
Cell[185017, 4738, 4206, 121, 397, "Input"],
Cell[189226, 4861, 963, 25, 33, "Output"],
Cell[190192, 4888, 848, 23, 33, "Output"],
Cell[191043, 4913, 1250, 35, 54, "Output"],
Cell[192296, 4950, 720, 14, 33, "Output"]
}, Open  ]],
Cell[193031, 4967, 273, 9, 5, "Text"],
Cell[193307, 4978, 271, 9, 10, "Text"],
Cell[193581, 4989, 271, 9, 10, "Text"],
Cell[193855, 5000, 273, 9, 5, "Text"],
Cell[194131, 5011, 271, 9, 10, "Text"],
Cell[194405, 5022, 271, 9, 10, "Text"],
Cell[194679, 5033, 273, 9, 5, "Text"],
Cell[194955, 5044, 209, 3, 30, "Text"],
Cell[195167, 5049, 2072, 57, 126, "Input"],
Cell[197242, 5108, 92, 1, 31, "Input"],
Cell[197337, 5111, 271, 9, 8, "Text"],
Cell[197611, 5122, 271, 9, 10, "Text"],
Cell[CellGroupData[{
Cell[197907, 5135, 1055, 22, 72, "Input"],
Cell[198965, 5159, 14037, 368, 200, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[213039, 5532, 9506, 260, 461, "Input"],
Cell[222548, 5794, 794, 12, 31, "Output"],
Cell[223345, 5808, 2466, 61, 83, "Output"],
Cell[225814, 5871, 1067, 19, 33, "Output"],
Cell[226884, 5892, 1310, 30, 33, "Output"],
Cell[228197, 5924, 1227, 26, 31, "Output"],
Cell[229427, 5952, 739, 11, 31, "Output"],
Cell[230169, 5965, 68994, 1320, 221, "Output"]
}, Open  ]],
Cell[299178, 7288, 273, 9, 5, "Text"],
Cell[CellGroupData[{
Cell[299476, 7301, 46, 0, 31, "Input"],
Cell[299525, 7303, 671, 22, 33, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[300233, 7330, 1595, 43, 72, "Input"],
Cell[301831, 7375, 65591, 1112, 139, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[367459, 8492, 4791, 119, 132, "Input"],
Cell[372253, 8613, 97329, 1625, 233, "Output"],
Cell[469585, 10240, 4177, 81, 480, "Output"]
}, Open  ]],
Cell[473777, 10324, 271, 9, 10, "Text"],
Cell[474051, 10335, 217, 5, 31, "Input"],
Cell[CellGroupData[{
Cell[474293, 10344, 265, 4, 72, "Input"],
Cell[474561, 10350, 454, 10, 33, "Output"],
Cell[475018, 10362, 697, 21, 33, "Output"],
Cell[475718, 10385, 633, 20, 33, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[476388, 10410, 71, 1, 31, "Input"],
Cell[476462, 10413, 70, 1, 31, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[476569, 10419, 1651, 46, 92, "Input"],
Cell[478223, 10467, 246, 3, 31, "Output"],
Cell[478472, 10472, 841, 24, 33, "Output"],
Cell[479316, 10498, 15760, 405, 200, "Output"]
}, Open  ]],
Cell[495091, 10906, 385, 5, 52, "Input"],
Cell[CellGroupData[{
Cell[495501, 10915, 7137, 203, 371, "Input"],
Cell[502641, 11120, 669, 13, 33, "Output"],
Cell[503313, 11135, 912, 24, 33, "Output"],
Cell[504228, 11161, 830, 20, 31, "Output"],
Cell[505061, 11183, 340, 5, 31, "Output"],
Cell[505404, 11190, 69689, 1331, 148, "Output"],
Cell[575096, 12523, 96526, 1614, 233, "Output"]
}, Open  ]],
Cell[671637, 14140, 92, 1, 31, InheritFromParent]
}
]
*)

(* End of internal cache information *)
