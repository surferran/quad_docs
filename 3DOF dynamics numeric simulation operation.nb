(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 10.1' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    571682,      12525]
NotebookOptionsPosition[    566721,      12378]
NotebookOutlinePosition[    567215,      12398]
CellTagsIndexPosition[    567172,      12395]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell["numeric simulation", "Text",
 CellChangeTimes->{{3.714958233706908*^9, 3.7149582394636574`*^9}}],

Cell[BoxData[
 RowBox[{"Quit", "[", "]"}]], "Input",
 CellChangeTimes->{{3.712131429857179*^9, 3.712131432176716*^9}, {
   3.7121626821687746`*^9, 3.712162682492755*^9}, 3.712288672336918*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"dispSimp", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"a_", "[", "t", "]"}], "\[Rule]", "a"}], ",", 
     RowBox[{
      RowBox[{"Cos", "[", "a_", "]"}], "\[Rule]", 
      RowBox[{"c", "[", "a", "]"}]}], ",", 
     RowBox[{
      RowBox[{"Sin", "[", "a_", "]"}], "\[Rule]", 
      RowBox[{"s", "[", "a", "]"}]}], ",", 
     RowBox[{
      SubscriptBox["\[ImaginaryI]", 
       RowBox[{"i_", ",", "zz"}]], "->", 
      SubscriptBox["I", "i"]}]}], "}"}]}], ";"}]], "Input"],

Cell["original equations:", "Text",
 CellChangeTimes->{{3.7149591768587537`*^9, 3.714959184978958*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"(", 
    RowBox[{"quadEqNominal", "=", 
     RowBox[{
      RowBox[{"EulerEquations", "[", 
       RowBox[{"L", ",", 
        RowBox[{"{", 
         RowBox[{"(*", 
          RowBox[{
           RowBox[{
            SubscriptBox["x", "1"], "[", "t", "]"}], ",", 
           RowBox[{
            SubscriptBox["y", "1"], "[", "t", "]"}], ",", 
           RowBox[{
            SubscriptBox["\[Theta]", "1"], "[", "t", "]"}], ",", 
           RowBox[{
            SubscriptBox["x", "2"], "[", "t", "]"}], ",", 
           RowBox[{
            SubscriptBox["y", "2"], "[", "t", "]"}], ",", 
           RowBox[{
            SubscriptBox["\[Theta]", "2"], "[", "t", "]"}], ","}], "*)"}], 
         RowBox[{
          RowBox[{
           SubscriptBox["x", "p"], "[", "t", "]"}], ",", 
          RowBox[{
           SubscriptBox["y", "p"], "[", "t", "]"}], ",", 
          RowBox[{
           SubscriptBox["\[Theta]", "p"], "[", "t", "]"}]}], "}"}], ",", 
        "t"}], "]"}], 
      RowBox[{"(*", 
       RowBox[{"[", 
        RowBox[{"[", 
         RowBox[{"All", ",", "1"}], "]"}], "]"}], "*)"}], 
      RowBox[{"(*", 
       RowBox[{"\[Equal]", "Q"}], "*)"}], "//", "Simplify"}]}], ")"}], "//", 
   "MatrixForm"}], "//", "TraditionalForm"}]], "Input",
 CellChangeTimes->{{3.710471318787363*^9, 3.710471343715891*^9}, {
   3.712162409958474*^9, 3.712162464712139*^9}, {3.712247425617641*^9, 
   3.7122474265932856`*^9}, {3.712248396174243*^9, 3.7122484111631737`*^9}, 
   3.712248778153448*^9, {3.7122492978178225`*^9, 3.7122493089952297`*^9}, 
   3.712288997792865*^9, 3.7122892123182693`*^9, {3.7122900791119747`*^9, 
   3.7122900872063375`*^9}},
 Background->RGBColor[1, 1, 0]],

Cell[BoxData[
 FormBox[
  TagBox[
   RowBox[{"(", "\[NoBreak]", 
    TagBox[GridBox[{
       {
        RowBox[{
         RowBox[{
          FractionBox[
           RowBox[{
            SubscriptBox["k", "1"], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               SubscriptBox["h", "p"], " ", 
               RowBox[{"sin", "(", 
                RowBox[{
                 SubscriptBox["\[Theta]", "p"], "(", "t", ")"}], ")"}]}], "+", 
              RowBox[{
               SubscriptBox["l", "p"], " ", 
               RowBox[{"cos", "(", 
                RowBox[{
                 SubscriptBox["\[Theta]", "p"], "(", "t", ")"}], ")"}]}], "-", 
              RowBox[{"2", " ", 
               RowBox[{
                SubscriptBox["x", "p"], "(", "t", ")"}]}], "+", 
              RowBox[{"2", " ", 
               RowBox[{
                SubscriptBox["x", "1"], "(", "t", ")"}]}]}], ")"}], " ", 
            RowBox[{"(", 
             RowBox[{
              SqrtBox[
               RowBox[{
                RowBox[{
                 FractionBox["1", "4"], " ", 
                 SuperscriptBox[
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{
                    SubscriptBox["h", "p"], " ", 
                    RowBox[{"sin", "(", 
                    RowBox[{
                    SubscriptBox["\[Theta]", "p"], "(", "t", ")"}], ")"}]}], 
                    "+", 
                    RowBox[{
                    SubscriptBox["l", "p"], " ", 
                    RowBox[{"cos", "(", 
                    RowBox[{
                    SubscriptBox["\[Theta]", "p"], "(", "t", ")"}], ")"}]}], 
                    "-", 
                    RowBox[{"2", " ", 
                    RowBox[{
                    SubscriptBox["x", "p"], "(", "t", ")"}]}], "+", 
                    RowBox[{"2", " ", 
                    RowBox[{
                    SubscriptBox["x", "1"], "(", "t", ")"}]}]}], ")"}], 
                  "2"]}], "+", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{
                    FractionBox["1", "2"], " ", 
                    SubscriptBox["h", "p"], " ", 
                    RowBox[{"cos", "(", 
                    RowBox[{
                    SubscriptBox["\[Theta]", "p"], "(", "t", ")"}], ")"}]}], 
                   "-", 
                   RowBox[{
                    FractionBox["1", "2"], " ", 
                    SubscriptBox["l", "p"], " ", 
                    RowBox[{"sin", "(", 
                    RowBox[{
                    SubscriptBox["\[Theta]", "p"], "(", "t", ")"}], ")"}]}], 
                   "+", 
                   RowBox[{
                    SubscriptBox["y", "p"], "(", "t", ")"}], "-", 
                   RowBox[{
                    SubscriptBox["y", "1"], "(", "t", ")"}]}], ")"}], "2"]}]],
               "-", 
              SubscriptBox["L0", "1"]}], ")"}]}], 
           RowBox[{"2", " ", 
            SqrtBox[
             RowBox[{
              RowBox[{
               FractionBox["1", "4"], " ", 
               SuperscriptBox[
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   SubscriptBox["h", "p"], " ", 
                   RowBox[{"sin", "(", 
                    RowBox[{
                    SubscriptBox["\[Theta]", "p"], "(", "t", ")"}], ")"}]}], 
                  "+", 
                  RowBox[{
                   SubscriptBox["l", "p"], " ", 
                   RowBox[{"cos", "(", 
                    RowBox[{
                    SubscriptBox["\[Theta]", "p"], "(", "t", ")"}], ")"}]}], 
                  "-", 
                  RowBox[{"2", " ", 
                   RowBox[{
                    SubscriptBox["x", "p"], "(", "t", ")"}]}], "+", 
                  RowBox[{"2", " ", 
                   RowBox[{
                    SubscriptBox["x", "1"], "(", "t", ")"}]}]}], ")"}], 
                "2"]}], "+", 
              SuperscriptBox[
               RowBox[{"(", 
                RowBox[{
                 RowBox[{
                  FractionBox["1", "2"], " ", 
                  SubscriptBox["h", "p"], " ", 
                  RowBox[{"cos", "(", 
                   RowBox[{
                    SubscriptBox["\[Theta]", "p"], "(", "t", ")"}], ")"}]}], 
                 "-", 
                 RowBox[{
                  FractionBox["1", "2"], " ", 
                  SubscriptBox["l", "p"], " ", 
                  RowBox[{"sin", "(", 
                   RowBox[{
                    SubscriptBox["\[Theta]", "p"], "(", "t", ")"}], ")"}]}], 
                 "+", 
                 RowBox[{
                  SubscriptBox["y", "p"], "(", "t", ")"}], "-", 
                 RowBox[{
                  SubscriptBox["y", "1"], "(", "t", ")"}]}], ")"}], 
               "2"]}]]}]], "+", 
          FractionBox[
           RowBox[{
            SubscriptBox["k", "2"], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               FractionBox["1", "2"], " ", 
               SubscriptBox["h", "p"], " ", 
               RowBox[{"sin", "(", 
                RowBox[{
                 SubscriptBox["\[Theta]", "p"], "(", "t", ")"}], ")"}]}], "-", 
              RowBox[{
               FractionBox["1", "2"], " ", 
               SubscriptBox["l", "p"], " ", 
               RowBox[{"cos", "(", 
                RowBox[{
                 SubscriptBox["\[Theta]", "p"], "(", "t", ")"}], ")"}]}], "-", 
              RowBox[{
               SubscriptBox["x", "p"], "(", "t", ")"}], "+", 
              RowBox[{
               SubscriptBox["x", "2"], "(", "t", ")"}]}], ")"}], " ", 
            RowBox[{"(", 
             RowBox[{
              SqrtBox[
               RowBox[{
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{
                    FractionBox["1", "2"], " ", 
                    SubscriptBox["h", "p"], " ", 
                    RowBox[{"sin", "(", 
                    RowBox[{
                    SubscriptBox["\[Theta]", "p"], "(", "t", ")"}], ")"}]}], 
                   "-", 
                   RowBox[{
                    FractionBox["1", "2"], " ", 
                    SubscriptBox["l", "p"], " ", 
                    RowBox[{"cos", "(", 
                    RowBox[{
                    SubscriptBox["\[Theta]", "p"], "(", "t", ")"}], ")"}]}], 
                   "-", 
                   RowBox[{
                    SubscriptBox["x", "p"], "(", "t", ")"}], "+", 
                   RowBox[{
                    SubscriptBox["x", "2"], "(", "t", ")"}]}], ")"}], "2"], 
                "+", 
                RowBox[{
                 FractionBox["1", "4"], " ", 
                 SuperscriptBox[
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{
                    SubscriptBox["h", "p"], " ", 
                    RowBox[{"cos", "(", 
                    RowBox[{
                    SubscriptBox["\[Theta]", "p"], "(", "t", ")"}], ")"}]}], 
                    "+", 
                    RowBox[{
                    SubscriptBox["l", "p"], " ", 
                    RowBox[{"sin", "(", 
                    RowBox[{
                    SubscriptBox["\[Theta]", "p"], "(", "t", ")"}], ")"}]}], 
                    "+", 
                    RowBox[{"2", " ", 
                    RowBox[{
                    SubscriptBox["y", "p"], "(", "t", ")"}]}], "-", 
                    RowBox[{"2", " ", 
                    RowBox[{
                    SubscriptBox["y", "2"], "(", "t", ")"}]}]}], ")"}], 
                  "2"]}]}]], "-", 
              SubscriptBox["L0", "2"]}], ")"}]}], 
           SqrtBox[
            RowBox[{
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{
                RowBox[{
                 FractionBox["1", "2"], " ", 
                 SubscriptBox["h", "p"], " ", 
                 RowBox[{"sin", "(", 
                  RowBox[{
                   SubscriptBox["\[Theta]", "p"], "(", "t", ")"}], ")"}]}], 
                "-", 
                RowBox[{
                 FractionBox["1", "2"], " ", 
                 SubscriptBox["l", "p"], " ", 
                 RowBox[{"cos", "(", 
                  RowBox[{
                   SubscriptBox["\[Theta]", "p"], "(", "t", ")"}], ")"}]}], 
                "-", 
                RowBox[{
                 SubscriptBox["x", "p"], "(", "t", ")"}], "+", 
                RowBox[{
                 SubscriptBox["x", "2"], "(", "t", ")"}]}], ")"}], "2"], "+", 
             RowBox[{
              FractionBox["1", "4"], " ", 
              SuperscriptBox[
               RowBox[{"(", 
                RowBox[{
                 RowBox[{
                  SubscriptBox["h", "p"], " ", 
                  RowBox[{"cos", "(", 
                   RowBox[{
                    SubscriptBox["\[Theta]", "p"], "(", "t", ")"}], ")"}]}], 
                 "+", 
                 RowBox[{
                  SubscriptBox["l", "p"], " ", 
                  RowBox[{"sin", "(", 
                   RowBox[{
                    SubscriptBox["\[Theta]", "p"], "(", "t", ")"}], ")"}]}], 
                 "+", 
                 RowBox[{"2", " ", 
                  RowBox[{
                   SubscriptBox["y", "p"], "(", "t", ")"}]}], "-", 
                 RowBox[{"2", " ", 
                  RowBox[{
                   SubscriptBox["y", "2"], "(", "t", ")"}]}]}], ")"}], 
               "2"]}]}]]]}], "\[LongEqual]", 
         RowBox[{
          SubscriptBox["m", "p"], " ", 
          RowBox[{
           SuperscriptBox[
            SubscriptBox["x", "p"], "\[Prime]\[Prime]",
            MultilineFunction->None], "(", "t", ")"}]}]}]},
       {
        RowBox[{
         RowBox[{
          FractionBox[
           RowBox[{
            SubscriptBox["k", "1"], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", 
               RowBox[{
                FractionBox["1", "2"], " ", 
                SubscriptBox["h", "p"], " ", 
                RowBox[{"cos", "(", 
                 RowBox[{
                  SubscriptBox["\[Theta]", "p"], "(", "t", ")"}], ")"}]}]}], 
              "+", 
              RowBox[{
               FractionBox["1", "2"], " ", 
               SubscriptBox["l", "p"], " ", 
               RowBox[{"sin", "(", 
                RowBox[{
                 SubscriptBox["\[Theta]", "p"], "(", "t", ")"}], ")"}]}], "-", 
              RowBox[{
               SubscriptBox["y", "p"], "(", "t", ")"}], "+", 
              RowBox[{
               SubscriptBox["y", "1"], "(", "t", ")"}]}], ")"}], " ", 
            RowBox[{"(", 
             RowBox[{
              SqrtBox[
               RowBox[{
                RowBox[{
                 FractionBox["1", "4"], " ", 
                 SuperscriptBox[
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{
                    SubscriptBox["h", "p"], " ", 
                    RowBox[{"sin", "(", 
                    RowBox[{
                    SubscriptBox["\[Theta]", "p"], "(", "t", ")"}], ")"}]}], 
                    "+", 
                    RowBox[{
                    SubscriptBox["l", "p"], " ", 
                    RowBox[{"cos", "(", 
                    RowBox[{
                    SubscriptBox["\[Theta]", "p"], "(", "t", ")"}], ")"}]}], 
                    "-", 
                    RowBox[{"2", " ", 
                    RowBox[{
                    SubscriptBox["x", "p"], "(", "t", ")"}]}], "+", 
                    RowBox[{"2", " ", 
                    RowBox[{
                    SubscriptBox["x", "1"], "(", "t", ")"}]}]}], ")"}], 
                  "2"]}], "+", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{
                    FractionBox["1", "2"], " ", 
                    SubscriptBox["h", "p"], " ", 
                    RowBox[{"cos", "(", 
                    RowBox[{
                    SubscriptBox["\[Theta]", "p"], "(", "t", ")"}], ")"}]}], 
                   "-", 
                   RowBox[{
                    FractionBox["1", "2"], " ", 
                    SubscriptBox["l", "p"], " ", 
                    RowBox[{"sin", "(", 
                    RowBox[{
                    SubscriptBox["\[Theta]", "p"], "(", "t", ")"}], ")"}]}], 
                   "+", 
                   RowBox[{
                    SubscriptBox["y", "p"], "(", "t", ")"}], "-", 
                   RowBox[{
                    SubscriptBox["y", "1"], "(", "t", ")"}]}], ")"}], "2"]}]],
               "-", 
              SubscriptBox["L0", "1"]}], ")"}]}], 
           SqrtBox[
            RowBox[{
             RowBox[{
              FractionBox["1", "4"], " ", 
              SuperscriptBox[
               RowBox[{"(", 
                RowBox[{
                 RowBox[{
                  SubscriptBox["h", "p"], " ", 
                  RowBox[{"sin", "(", 
                   RowBox[{
                    SubscriptBox["\[Theta]", "p"], "(", "t", ")"}], ")"}]}], 
                 "+", 
                 RowBox[{
                  SubscriptBox["l", "p"], " ", 
                  RowBox[{"cos", "(", 
                   RowBox[{
                    SubscriptBox["\[Theta]", "p"], "(", "t", ")"}], ")"}]}], 
                 "-", 
                 RowBox[{"2", " ", 
                  RowBox[{
                   SubscriptBox["x", "p"], "(", "t", ")"}]}], "+", 
                 RowBox[{"2", " ", 
                  RowBox[{
                   SubscriptBox["x", "1"], "(", "t", ")"}]}]}], ")"}], "2"]}],
              "+", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{
                RowBox[{
                 FractionBox["1", "2"], " ", 
                 SubscriptBox["h", "p"], " ", 
                 RowBox[{"cos", "(", 
                  RowBox[{
                   SubscriptBox["\[Theta]", "p"], "(", "t", ")"}], ")"}]}], 
                "-", 
                RowBox[{
                 FractionBox["1", "2"], " ", 
                 SubscriptBox["l", "p"], " ", 
                 RowBox[{"sin", "(", 
                  RowBox[{
                   SubscriptBox["\[Theta]", "p"], "(", "t", ")"}], ")"}]}], 
                "+", 
                RowBox[{
                 SubscriptBox["y", "p"], "(", "t", ")"}], "-", 
                RowBox[{
                 SubscriptBox["y", "1"], "(", "t", ")"}]}], ")"}], "2"]}]]], 
          "+", 
          FractionBox[
           RowBox[{
            SubscriptBox["k", "2"], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", 
               RowBox[{
                FractionBox["1", "2"], " ", 
                SubscriptBox["h", "p"], " ", 
                RowBox[{"cos", "(", 
                 RowBox[{
                  SubscriptBox["\[Theta]", "p"], "(", "t", ")"}], ")"}]}]}], 
              "-", 
              RowBox[{
               FractionBox["1", "2"], " ", 
               SubscriptBox["l", "p"], " ", 
               RowBox[{"sin", "(", 
                RowBox[{
                 SubscriptBox["\[Theta]", "p"], "(", "t", ")"}], ")"}]}], "-", 
              RowBox[{
               SubscriptBox["y", "p"], "(", "t", ")"}], "+", 
              RowBox[{
               SubscriptBox["y", "2"], "(", "t", ")"}]}], ")"}], " ", 
            RowBox[{"(", 
             RowBox[{
              SqrtBox[
               RowBox[{
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{
                    FractionBox["1", "2"], " ", 
                    SubscriptBox["h", "p"], " ", 
                    RowBox[{"sin", "(", 
                    RowBox[{
                    SubscriptBox["\[Theta]", "p"], "(", "t", ")"}], ")"}]}], 
                   "-", 
                   RowBox[{
                    FractionBox["1", "2"], " ", 
                    SubscriptBox["l", "p"], " ", 
                    RowBox[{"cos", "(", 
                    RowBox[{
                    SubscriptBox["\[Theta]", "p"], "(", "t", ")"}], ")"}]}], 
                   "-", 
                   RowBox[{
                    SubscriptBox["x", "p"], "(", "t", ")"}], "+", 
                   RowBox[{
                    SubscriptBox["x", "2"], "(", "t", ")"}]}], ")"}], "2"], 
                "+", 
                RowBox[{
                 FractionBox["1", "4"], " ", 
                 SuperscriptBox[
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{
                    SubscriptBox["h", "p"], " ", 
                    RowBox[{"cos", "(", 
                    RowBox[{
                    SubscriptBox["\[Theta]", "p"], "(", "t", ")"}], ")"}]}], 
                    "+", 
                    RowBox[{
                    SubscriptBox["l", "p"], " ", 
                    RowBox[{"sin", "(", 
                    RowBox[{
                    SubscriptBox["\[Theta]", "p"], "(", "t", ")"}], ")"}]}], 
                    "+", 
                    RowBox[{"2", " ", 
                    RowBox[{
                    SubscriptBox["y", "p"], "(", "t", ")"}]}], "-", 
                    RowBox[{"2", " ", 
                    RowBox[{
                    SubscriptBox["y", "2"], "(", "t", ")"}]}]}], ")"}], 
                  "2"]}]}]], "-", 
              SubscriptBox["L0", "2"]}], ")"}]}], 
           SqrtBox[
            RowBox[{
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{
                RowBox[{
                 FractionBox["1", "2"], " ", 
                 SubscriptBox["h", "p"], " ", 
                 RowBox[{"sin", "(", 
                  RowBox[{
                   SubscriptBox["\[Theta]", "p"], "(", "t", ")"}], ")"}]}], 
                "-", 
                RowBox[{
                 FractionBox["1", "2"], " ", 
                 SubscriptBox["l", "p"], " ", 
                 RowBox[{"cos", "(", 
                  RowBox[{
                   SubscriptBox["\[Theta]", "p"], "(", "t", ")"}], ")"}]}], 
                "-", 
                RowBox[{
                 SubscriptBox["x", "p"], "(", "t", ")"}], "+", 
                RowBox[{
                 SubscriptBox["x", "2"], "(", "t", ")"}]}], ")"}], "2"], "+", 
             RowBox[{
              FractionBox["1", "4"], " ", 
              SuperscriptBox[
               RowBox[{"(", 
                RowBox[{
                 RowBox[{
                  SubscriptBox["h", "p"], " ", 
                  RowBox[{"cos", "(", 
                   RowBox[{
                    SubscriptBox["\[Theta]", "p"], "(", "t", ")"}], ")"}]}], 
                 "+", 
                 RowBox[{
                  SubscriptBox["l", "p"], " ", 
                  RowBox[{"sin", "(", 
                   RowBox[{
                    SubscriptBox["\[Theta]", "p"], "(", "t", ")"}], ")"}]}], 
                 "+", 
                 RowBox[{"2", " ", 
                  RowBox[{
                   SubscriptBox["y", "p"], "(", "t", ")"}]}], "-", 
                 RowBox[{"2", " ", 
                  RowBox[{
                   SubscriptBox["y", "2"], "(", "t", ")"}]}]}], ")"}], 
               "2"]}]}]]]}], "\[LongEqual]", 
         RowBox[{
          SubscriptBox["m", "p"], " ", 
          RowBox[{"(", 
           RowBox[{"g", "+", 
            RowBox[{
             SuperscriptBox[
              SubscriptBox["y", "p"], "\[Prime]\[Prime]",
              MultilineFunction->None], "(", "t", ")"}]}], ")"}]}]}]},
       {
        RowBox[{
         RowBox[{
          RowBox[{
           SubscriptBox["\[ImaginaryI]", 
            RowBox[{"p", ",", "zz"}]], " ", 
           RowBox[{
            SuperscriptBox[
             SubscriptBox["\[Theta]", "p"], "\[Prime]\[Prime]",
             MultilineFunction->None], "(", "t", ")"}]}], "+", 
          FractionBox[
           RowBox[{
            SubscriptBox["k", "1"], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               SubscriptBox["h", "p"], " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{
                  RowBox[{
                   SubscriptBox["x", "1"], "(", "t", ")"}], " ", 
                  RowBox[{"cos", "(", 
                   RowBox[{
                    SubscriptBox["\[Theta]", "p"], "(", "t", ")"}], ")"}]}], 
                 "-", 
                 RowBox[{
                  RowBox[{
                   SubscriptBox["x", "p"], "(", "t", ")"}], " ", 
                  RowBox[{"cos", "(", 
                   RowBox[{
                    SubscriptBox["\[Theta]", "p"], "(", "t", ")"}], ")"}]}], 
                 "+", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{
                    SubscriptBox["y", "1"], "(", "t", ")"}], "-", 
                    RowBox[{
                    SubscriptBox["y", "p"], "(", "t", ")"}]}], ")"}], " ", 
                  RowBox[{"sin", "(", 
                   RowBox[{
                    SubscriptBox["\[Theta]", "p"], "(", "t", ")"}], ")"}]}]}],
                 ")"}]}], "+", 
              RowBox[{
               SubscriptBox["l", "p"], " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{
                  RowBox[{
                   SubscriptBox["x", "1"], "(", "t", ")"}], " ", 
                  RowBox[{"(", 
                   RowBox[{"-", 
                    RowBox[{"sin", "(", 
                    RowBox[{
                    SubscriptBox["\[Theta]", "p"], "(", "t", ")"}], ")"}]}], 
                   ")"}]}], "+", 
                 RowBox[{
                  RowBox[{
                   SubscriptBox["x", "p"], "(", "t", ")"}], " ", 
                  RowBox[{"sin", "(", 
                   RowBox[{
                    SubscriptBox["\[Theta]", "p"], "(", "t", ")"}], ")"}]}], 
                 "+", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{
                    SubscriptBox["y", "1"], "(", "t", ")"}], "-", 
                    RowBox[{
                    SubscriptBox["y", "p"], "(", "t", ")"}]}], ")"}], " ", 
                  RowBox[{"cos", "(", 
                   RowBox[{
                    SubscriptBox["\[Theta]", "p"], "(", "t", ")"}], ")"}]}]}],
                 ")"}]}]}], ")"}], " ", 
            RowBox[{"(", 
             RowBox[{
              SqrtBox[
               RowBox[{
                RowBox[{
                 FractionBox["1", "4"], " ", 
                 SuperscriptBox[
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{
                    SubscriptBox["h", "p"], " ", 
                    RowBox[{"sin", "(", 
                    RowBox[{
                    SubscriptBox["\[Theta]", "p"], "(", "t", ")"}], ")"}]}], 
                    "+", 
                    RowBox[{
                    SubscriptBox["l", "p"], " ", 
                    RowBox[{"cos", "(", 
                    RowBox[{
                    SubscriptBox["\[Theta]", "p"], "(", "t", ")"}], ")"}]}], 
                    "-", 
                    RowBox[{"2", " ", 
                    RowBox[{
                    SubscriptBox["x", "p"], "(", "t", ")"}]}], "+", 
                    RowBox[{"2", " ", 
                    RowBox[{
                    SubscriptBox["x", "1"], "(", "t", ")"}]}]}], ")"}], 
                  "2"]}], "+", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{
                    FractionBox["1", "2"], " ", 
                    SubscriptBox["h", "p"], " ", 
                    RowBox[{"cos", "(", 
                    RowBox[{
                    SubscriptBox["\[Theta]", "p"], "(", "t", ")"}], ")"}]}], 
                   "-", 
                   RowBox[{
                    FractionBox["1", "2"], " ", 
                    SubscriptBox["l", "p"], " ", 
                    RowBox[{"sin", "(", 
                    RowBox[{
                    SubscriptBox["\[Theta]", "p"], "(", "t", ")"}], ")"}]}], 
                   "+", 
                   RowBox[{
                    SubscriptBox["y", "p"], "(", "t", ")"}], "-", 
                   RowBox[{
                    SubscriptBox["y", "1"], "(", "t", ")"}]}], ")"}], "2"]}]],
               "-", 
              SubscriptBox["L0", "1"]}], ")"}]}], 
           RowBox[{"2", " ", 
            SqrtBox[
             RowBox[{
              RowBox[{
               FractionBox["1", "4"], " ", 
               SuperscriptBox[
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   SubscriptBox["h", "p"], " ", 
                   RowBox[{"sin", "(", 
                    RowBox[{
                    SubscriptBox["\[Theta]", "p"], "(", "t", ")"}], ")"}]}], 
                  "+", 
                  RowBox[{
                   SubscriptBox["l", "p"], " ", 
                   RowBox[{"cos", "(", 
                    RowBox[{
                    SubscriptBox["\[Theta]", "p"], "(", "t", ")"}], ")"}]}], 
                  "-", 
                  RowBox[{"2", " ", 
                   RowBox[{
                    SubscriptBox["x", "p"], "(", "t", ")"}]}], "+", 
                  RowBox[{"2", " ", 
                   RowBox[{
                    SubscriptBox["x", "1"], "(", "t", ")"}]}]}], ")"}], 
                "2"]}], "+", 
              SuperscriptBox[
               RowBox[{"(", 
                RowBox[{
                 RowBox[{
                  FractionBox["1", "2"], " ", 
                  SubscriptBox["h", "p"], " ", 
                  RowBox[{"cos", "(", 
                   RowBox[{
                    SubscriptBox["\[Theta]", "p"], "(", "t", ")"}], ")"}]}], 
                 "-", 
                 RowBox[{
                  FractionBox["1", "2"], " ", 
                  SubscriptBox["l", "p"], " ", 
                  RowBox[{"sin", "(", 
                   RowBox[{
                    SubscriptBox["\[Theta]", "p"], "(", "t", ")"}], ")"}]}], 
                 "+", 
                 RowBox[{
                  SubscriptBox["y", "p"], "(", "t", ")"}], "-", 
                 RowBox[{
                  SubscriptBox["y", "1"], "(", "t", ")"}]}], ")"}], 
               "2"]}]]}]], "+", 
          FractionBox[
           RowBox[{
            SubscriptBox["k", "2"], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               SubscriptBox["h", "p"], " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{
                  RowBox[{
                   SubscriptBox["x", "2"], "(", "t", ")"}], " ", 
                  RowBox[{"cos", "(", 
                   RowBox[{
                    SubscriptBox["\[Theta]", "p"], "(", "t", ")"}], ")"}]}], 
                 "-", 
                 RowBox[{
                  RowBox[{
                   SubscriptBox["x", "p"], "(", "t", ")"}], " ", 
                  RowBox[{"cos", "(", 
                   RowBox[{
                    SubscriptBox["\[Theta]", "p"], "(", "t", ")"}], ")"}]}], 
                 "+", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{
                    SubscriptBox["y", "2"], "(", "t", ")"}], "-", 
                    RowBox[{
                    SubscriptBox["y", "p"], "(", "t", ")"}]}], ")"}], " ", 
                  RowBox[{"sin", "(", 
                   RowBox[{
                    SubscriptBox["\[Theta]", "p"], "(", "t", ")"}], ")"}]}]}],
                 ")"}]}], "+", 
              RowBox[{
               SubscriptBox["l", "p"], " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{
                  RowBox[{
                   SubscriptBox["x", "2"], "(", "t", ")"}], " ", 
                  RowBox[{"sin", "(", 
                   RowBox[{
                    SubscriptBox["\[Theta]", "p"], "(", "t", ")"}], ")"}]}], 
                 "-", 
                 RowBox[{
                  RowBox[{
                   SubscriptBox["x", "p"], "(", "t", ")"}], " ", 
                  RowBox[{"sin", "(", 
                   RowBox[{
                    SubscriptBox["\[Theta]", "p"], "(", "t", ")"}], ")"}]}], 
                 "+", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{
                    SubscriptBox["y", "p"], "(", "t", ")"}], "-", 
                    RowBox[{
                    SubscriptBox["y", "2"], "(", "t", ")"}]}], ")"}], " ", 
                  RowBox[{"cos", "(", 
                   RowBox[{
                    SubscriptBox["\[Theta]", "p"], "(", "t", ")"}], ")"}]}]}],
                 ")"}]}]}], ")"}], " ", 
            RowBox[{"(", 
             RowBox[{
              SqrtBox[
               RowBox[{
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{
                    FractionBox["1", "2"], " ", 
                    SubscriptBox["h", "p"], " ", 
                    RowBox[{"sin", "(", 
                    RowBox[{
                    SubscriptBox["\[Theta]", "p"], "(", "t", ")"}], ")"}]}], 
                   "-", 
                   RowBox[{
                    FractionBox["1", "2"], " ", 
                    SubscriptBox["l", "p"], " ", 
                    RowBox[{"cos", "(", 
                    RowBox[{
                    SubscriptBox["\[Theta]", "p"], "(", "t", ")"}], ")"}]}], 
                   "-", 
                   RowBox[{
                    SubscriptBox["x", "p"], "(", "t", ")"}], "+", 
                   RowBox[{
                    SubscriptBox["x", "2"], "(", "t", ")"}]}], ")"}], "2"], 
                "+", 
                RowBox[{
                 FractionBox["1", "4"], " ", 
                 SuperscriptBox[
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{
                    SubscriptBox["h", "p"], " ", 
                    RowBox[{"cos", "(", 
                    RowBox[{
                    SubscriptBox["\[Theta]", "p"], "(", "t", ")"}], ")"}]}], 
                    "+", 
                    RowBox[{
                    SubscriptBox["l", "p"], " ", 
                    RowBox[{"sin", "(", 
                    RowBox[{
                    SubscriptBox["\[Theta]", "p"], "(", "t", ")"}], ")"}]}], 
                    "+", 
                    RowBox[{"2", " ", 
                    RowBox[{
                    SubscriptBox["y", "p"], "(", "t", ")"}]}], "-", 
                    RowBox[{"2", " ", 
                    RowBox[{
                    SubscriptBox["y", "2"], "(", "t", ")"}]}]}], ")"}], 
                  "2"]}]}]], "-", 
              SubscriptBox["L0", "2"]}], ")"}]}], 
           RowBox[{"2", " ", 
            SqrtBox[
             RowBox[{
              SuperscriptBox[
               RowBox[{"(", 
                RowBox[{
                 RowBox[{
                  FractionBox["1", "2"], " ", 
                  SubscriptBox["h", "p"], " ", 
                  RowBox[{"sin", "(", 
                   RowBox[{
                    SubscriptBox["\[Theta]", "p"], "(", "t", ")"}], ")"}]}], 
                 "-", 
                 RowBox[{
                  FractionBox["1", "2"], " ", 
                  SubscriptBox["l", "p"], " ", 
                  RowBox[{"cos", "(", 
                   RowBox[{
                    SubscriptBox["\[Theta]", "p"], "(", "t", ")"}], ")"}]}], 
                 "-", 
                 RowBox[{
                  SubscriptBox["x", "p"], "(", "t", ")"}], "+", 
                 RowBox[{
                  SubscriptBox["x", "2"], "(", "t", ")"}]}], ")"}], "2"], "+", 
              RowBox[{
               FractionBox["1", "4"], " ", 
               SuperscriptBox[
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   SubscriptBox["h", "p"], " ", 
                   RowBox[{"cos", "(", 
                    RowBox[{
                    SubscriptBox["\[Theta]", "p"], "(", "t", ")"}], ")"}]}], 
                  "+", 
                  RowBox[{
                   SubscriptBox["l", "p"], " ", 
                   RowBox[{"sin", "(", 
                    RowBox[{
                    SubscriptBox["\[Theta]", "p"], "(", "t", ")"}], ")"}]}], 
                  "+", 
                  RowBox[{"2", " ", 
                   RowBox[{
                    SubscriptBox["y", "p"], "(", "t", ")"}]}], "-", 
                  RowBox[{"2", " ", 
                   RowBox[{
                    SubscriptBox["y", "2"], "(", "t", ")"}]}]}], ")"}], 
                "2"]}]}]]}]]}], "\[LongEqual]", "0"}]}
      },
      GridBoxAlignment->{
       "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
        "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.5599999999999999]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}],
     Column], "\[NoBreak]", ")"}],
   Function[BoxForm`e$, 
    MatrixForm[BoxForm`e$]]], TraditionalForm]], "Output",
 CellChangeTimes->{3.712290090695434*^9, 3.712451494236684*^9, 
  3.7126462873126726`*^9, 3.712792277000323*^9, 3.712831551283332*^9, 
  3.713461594445388*^9, 3.7139480263324814`*^9, 3.7141519266176453`*^9, 
  3.7141710996346645`*^9},
 FontSize->18,
 Background->RGBColor[1, 1, 0]]
}, Open  ]],

Cell[" ", "Text",
 Editable->False,
 Selectable->False,
 CellFrame->{{0, 0}, {0, 0.5}},
 ShowCellBracket->False,
 CellMargins->{{0, 0}, {1, 1}},
 CellElementSpacings->{"CellMinHeight"->1},
 CellFrameMargins->0,
 CellFrameColor->RGBColor[0, 0, 1],
 CellSize->{Inherited, 3}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"non", "-", 
     RowBox[{"conserving", " ", 
      RowBox[{"forces", ":", "\[IndentingNewLine]", "aerodynamic"}]}]}], " ", 
    "=", "  ", 
    RowBox[{"f", 
     RowBox[{"(", 
      RowBox[{
       OverscriptBox[
        SubscriptBox["x", "p"], "."], ",", 
       OverscriptBox[
        SubscriptBox["y", "p"], "."], ",", 
       SubscriptBox["\[Theta]", "p"], ",", " ", 
       SubscriptBox["w", "x"], ",", 
       SubscriptBox["w", "y"]}], ")"}]}]}], " ", ",", " ", 
   RowBox[{
    RowBox[{"w", " ", "for", " ", "wind", " ", 
     RowBox[{"components", "."}]}], " ", "=", " ", 
    RowBox[{"f", 
     RowBox[{"(", 
      RowBox[{
       SubscriptBox["relV", "x"], ",", 
       SubscriptBox["relV", "y"]}], ")"}]}]}], " ", ",", " ", 
   RowBox[{"relV", " ", "is", " ", "relative", " ", "to", " ", "air"}]}], 
  " "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"dumping", " ", 
   RowBox[{"(", "structural", ")"}]}], "=", " ", 
  RowBox[{
   RowBox[{"f", 
    RowBox[{"(", 
     OverscriptBox[
      SubscriptBox["l", "i"], "."], ")"}]}], "=", 
   RowBox[{"f", 
    RowBox[{"(", 
     RowBox[{
      OverscriptBox[
       SubscriptBox["x", "i"], "."], ",", 
      OverscriptBox[
       SubscriptBox["y", "i"], "."], ",", 
      OverscriptBox[
       SubscriptBox["x", "p"], "."], ",", 
      OverscriptBox[
       SubscriptBox["y", "p"], "."]}], ")"}]}]}]}]}], "Input",
 CellChangeTimes->{{3.7126500437307434`*^9, 3.7126501694208355`*^9}, 
   3.7126502290521765`*^9, {3.7126503014117236`*^9, 3.712650331072315*^9}, {
   3.712650702293164*^9, 3.7126507593603816`*^9}, {3.7126556510753436`*^9, 
   3.7126556677774086`*^9}, {3.714959537089729*^9, 3.7149595639332113`*^9}}],

Cell[" ", "Text",
 Editable->False,
 Selectable->False,
 CellFrame->{{0, 0}, {0, 3}},
 ShowCellBracket->False,
 CellMargins->{{0, 0}, {1, 1}},
 CellElementSpacings->{"CellMinHeight"->1},
 CellFrameMargins->0,
 CellFrameColor->RGBColor[0, 0, 1],
 CellSize->{Inherited, 5}],

Cell["non dim the full equations", "Text",
 CellChangeTimes->{{3.714171644963645*^9, 3.714171664303767*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(", 
   RowBox[{"smallEqs", "=", 
    RowBox[{
     RowBox[{"quadEqNominal", "/.", "terms2"}], "/.", "terms3"}]}], ")"}], "//",
   "MatrixForm"}]], "Input",
 CellChangeTimes->{{3.714171736156269*^9, 3.7141717665215025`*^9}, 
   3.7141718235455046`*^9, {3.714171861060299*^9, 3.7141718691564713`*^9}, {
   3.714172046680708*^9, 3.7141720590047817`*^9}},
 FontSize->36,
 Background->RGBColor[0.87, 0.94, 1]],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", 
   TagBox[GridBox[{
      {
       RowBox[{
        RowBox[{
         FractionBox[
          RowBox[{"r1x", " ", 
           SubscriptBox["k", "1"], " ", 
           RowBox[{"(", 
            RowBox[{"a", "-", 
             SubscriptBox["L0", "1"]}], ")"}]}], 
          SqrtBox[
           SuperscriptBox["a", "2"]]], "+", 
         FractionBox[
          RowBox[{"r2x", " ", 
           SubscriptBox["k", "2"], " ", 
           RowBox[{"(", 
            RowBox[{"b", "-", 
             SubscriptBox["L0", "2"]}], ")"}]}], 
          SqrtBox[
           SuperscriptBox["b", "2"]]]}], "\[Equal]", 
        RowBox[{
         SubscriptBox["m", "p"], " ", 
         RowBox[{
          SuperscriptBox[
           SubscriptBox["x", "p"], "\[Prime]\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}]}]},
      {
       RowBox[{
        RowBox[{
         FractionBox[
          RowBox[{"r1y", " ", 
           SubscriptBox["k", "1"], " ", 
           RowBox[{"(", 
            RowBox[{"a", "-", 
             SubscriptBox["L0", "1"]}], ")"}]}], 
          SqrtBox[
           SuperscriptBox["a", "2"]]], "+", 
         FractionBox[
          RowBox[{"r2y", " ", 
           SubscriptBox["k", "2"], " ", 
           RowBox[{"(", 
            RowBox[{"b", "-", 
             SubscriptBox["L0", "2"]}], ")"}]}], 
          SqrtBox[
           SuperscriptBox["b", "2"]]]}], "\[Equal]", 
        RowBox[{
         SubscriptBox["m", "p"], " ", 
         RowBox[{"(", 
          RowBox[{"g", "+", 
           RowBox[{
            SuperscriptBox[
             SubscriptBox["y", "p"], "\[Prime]\[Prime]",
             MultilineFunction->None], "[", "t", "]"}]}], ")"}]}]}]},
      {
       RowBox[{
        RowBox[{
         FractionBox[
          RowBox[{"c1", " ", 
           SubscriptBox["k", "1"], " ", 
           RowBox[{"(", 
            RowBox[{"a", "-", 
             SubscriptBox["L0", "1"]}], ")"}]}], 
          SqrtBox[
           SuperscriptBox["a", "2"]]], "+", 
         FractionBox[
          RowBox[{"c2", " ", 
           SubscriptBox["k", "2"], " ", 
           RowBox[{"(", 
            RowBox[{"b", "-", 
             SubscriptBox["L0", "2"]}], ")"}]}], 
          SqrtBox[
           SuperscriptBox["b", "2"]]], "+", 
         RowBox[{
          SubscriptBox["\[ImaginaryI]", 
           RowBox[{"p", ",", "zz"}]], " ", 
          RowBox[{
           SuperscriptBox[
            SubscriptBox["\[Theta]", "p"], "\[Prime]\[Prime]",
            MultilineFunction->None], "[", "t", "]"}]}]}], "\[Equal]", "0"}]}
     },
     GridBoxAlignment->{
      "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}},
        "RowsIndexed" -> {}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
         Offset[0.2], {
          Offset[0.4]}, 
         Offset[0.2]}, "RowsIndexed" -> {}}],
    Column], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.7141718700444946`*^9, 3.714172059624795*^9},
 FontSize->36,
 Background->RGBColor[0.87, 0.94, 1]]
}, Open  ]],

Cell["NonDimEq manually settings the terms:", "Text",
 CellChangeTimes->{{3.714172252146077*^9, 3.7141722552141523`*^9}, {
  3.714180452805065*^9, 3.714180462773306*^9}},
 FontSize->24],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   OverscriptBox[
    SubscriptBox["y", "p"], "~"], "[", "t", "]"}], "=", 
  RowBox[{
   RowBox[{
    RowBox[{
     SubscriptBox["y", "p"], "[", "t", "]"}], " ", "/", 
    SubscriptBox["L0", "1"]}], "  ", "or", " ", "any", " ", "other", " ", 
   "of", " ", "the", " ", "lengths", " ", "varialbes", " ", 
   RowBox[{"(", 
    RowBox[{
     SubscriptBox["x", "p"], ",", "r1x", ",", "r1y", ",", "r2x", ",", "r2y", 
     ",", 
     SubscriptBox["h", "p"], ",", 
     SubscriptBox["l", "p"]}], ")"}]}]}], "\[IndentingNewLine]", 
 RowBox[{"t", "=", 
  RowBox[{"\[Tau]", "/", 
   SubscriptBox["\[Omega]", "s"]}]}], "\[IndentingNewLine]", 
 RowBox[{
  SuperscriptBox[
   SubscriptBox["\[Omega]", "s"], "2"], "=", 
  RowBox[{
   FractionBox[
    SubscriptBox["k", "1"], 
    SubscriptBox["m", "p"]], "[", 
   RowBox[{
    FractionBox["g", "l"], "=", 
    FractionBox["1", 
     SuperscriptBox["s", "2"]]}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"A", " ", "is", " ", "non"}], "-", 
  RowBox[{"dimentional", "  ", "form", " ", 
   RowBox[{"of", " ", "'"}], 
   RowBox[{"a", "'"}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"B", " ", "is", " ", "non"}], "-", 
  RowBox[{"dimentional", "  ", "form", " ", 
   RowBox[{"of", " ", "'"}], 
   RowBox[{"b", "'"}]}]}]}], "Input",
 CellChangeTimes->{
  3.7143859742405353`*^9, {3.714387097214754*^9, 3.7143871116663647`*^9}, {
   3.7143878062327795`*^9, 3.714387811703418*^9}}],

Cell[BoxData[
 FormBox[
  TagBox[
   RowBox[{"(", "\[NoBreak]", 
    TagBox[GridBox[{
       {
        RowBox[{
         RowBox[{
          FractionBox[
           RowBox[{
            RowBox[{"(", 
             RowBox[{"1", "-", 
              FractionBox["1", "A"]}], ")"}], " ", 
            SubscriptBox["k", "1"], " ", 
            SubscriptBox["L0", "1"], " ", "r1x"}], 
           SubscriptBox["m", "p"]], "+", 
          FractionBox[
           RowBox[{
            SubscriptBox["k", "2"], " ", 
            SubscriptBox["L0", "1"], " ", "r2x", " ", 
            RowBox[{"(", 
             RowBox[{"1", "-", 
              FractionBox[
               SubscriptBox["L0", "2"], 
               RowBox[{"B", " ", 
                SubscriptBox["L0", "1"]}]]}], ")"}]}], 
           SubscriptBox["m", "p"]]}], "\[LongEqual]", 
         RowBox[{
          SubscriptBox["L0", "1"], " ", 
          SubsuperscriptBox["\[Omega]", "s", "2"], " ", 
          RowBox[{
           SuperscriptBox[
            SubscriptBox["x", "p"], "\[Prime]\[Prime]",
            MultilineFunction->None], "(", "t", ")"}]}]}]},
       {
        RowBox[{
         RowBox[{
          FractionBox[
           RowBox[{
            RowBox[{"(", 
             RowBox[{"1", "-", 
              FractionBox["1", "A"]}], ")"}], " ", 
            SubscriptBox["k", "1"], " ", 
            SubscriptBox["L0", "1"], " ", "r1y"}], 
           SubscriptBox["m", "p"]], "+", 
          FractionBox[
           RowBox[{
            SubscriptBox["k", "2"], " ", 
            SubscriptBox["L0", "1"], " ", "r2y", " ", 
            RowBox[{"(", 
             RowBox[{"1", "-", 
              FractionBox[
               SubscriptBox["L0", "2"], 
               RowBox[{"B", " ", 
                SubscriptBox["L0", "1"]}]]}], ")"}]}], 
           SubscriptBox["m", "p"]], "-", "g"}], "\[LongEqual]", 
         RowBox[{
          SubscriptBox["L0", "1"], " ", 
          SubsuperscriptBox["\[Omega]", "s", "2"], " ", 
          RowBox[{
           SuperscriptBox[
            SubscriptBox["y", "p"], "\[Prime]\[Prime]",
            MultilineFunction->None], "(", "t", ")"}]}]}]},
       {
        RowBox[{
         RowBox[{
          RowBox[{"-", 
           FractionBox[
            RowBox[{
             RowBox[{"(", 
              RowBox[{"1", "-", 
               FractionBox["1", "A"]}], ")"}], " ", 
             SubscriptBox["c", "1"], " ", 
             SubscriptBox["k", "1"], " ", 
             SubsuperscriptBox["L0", "1", "2"]}], 
            SubscriptBox["\[ImaginaryI]", 
             RowBox[{"p", ",", "zz"}]]]}], "-", 
          FractionBox[
           RowBox[{
            SubscriptBox["c", "2"], " ", 
            SubscriptBox["k", "2"], " ", 
            SubsuperscriptBox["L0", "1", "2"], " ", 
            RowBox[{"(", 
             RowBox[{"1", "-", 
              FractionBox[
               SubscriptBox["L0", "2"], 
               RowBox[{"B", " ", 
                SubscriptBox["L0", "1"]}]]}], ")"}]}], 
           SubscriptBox["\[ImaginaryI]", 
            RowBox[{"p", ",", "zz"}]]]}], "\[LongEqual]", 
         RowBox[{
          SubsuperscriptBox["\[Omega]", "s", "2"], " ", 
          RowBox[{
           SuperscriptBox[
            SubscriptBox["\[Theta]", "p"], "\[Prime]\[Prime]",
            MultilineFunction->None], "(", "t", ")"}]}]}]}
      },
      GridBoxAlignment->{
       "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
        "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.5599999999999999]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}],
     Column], "\[NoBreak]", ")"}],
   Function[BoxForm`e$, 
    MatrixForm[BoxForm`e$]]], TraditionalForm]], "Output",
 CellChangeTimes->{{3.7141809407776604`*^9, 3.71418096114718*^9}, 
   3.7141810047443304`*^9, {3.7141810445789814`*^9, 3.714181080771454*^9}, 
   3.7143860139705524`*^9, 3.714386467653723*^9, 3.7143874237010694`*^9, {
   3.714389212153591*^9, 3.7143892387212486`*^9}},
 FontSize->24,
 Background->RGBColor[0.94, 0.91, 0.88]]
}, Open  ]],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
   SubscriptBox["Delta", "Equilibrium"], "=", 
   FractionBox[
    RowBox[{
     SubscriptBox["m", "p"], "g"}], 
    SubscriptBox["k", "i"]]}], "*)"}]], "Input",
 CellChangeTimes->{3.71438606382195*^9}],

Cell[BoxData[
 RowBox[{"greekTerms", "=", 
  RowBox[{"{", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     FractionBox[
      SubscriptBox["k", "2"], 
      SubscriptBox["k", "1"]], "\[Rule]", "\[Kappa]"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     FractionBox[
      SubscriptBox["L0", "2"], 
      SubscriptBox["L0", "1"]], "\[Rule]", "\[ScriptCapitalL]"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     FractionBox[
      SubscriptBox["k", "1"], 
      SubscriptBox["m", "p"]], "->", 
     SuperscriptBox[
      SubscriptBox["\[Omega]", "s"], "2"]}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      FractionBox[
       RowBox[{
        SubscriptBox["m", "p"], 
        SuperscriptBox[
         SubscriptBox["L0", "1"], "2"]}], 
       SubscriptBox["I", "p"]], 
      RowBox[{"(", 
       RowBox[{"=", 
        FractionBox[
         RowBox[{
          SuperscriptBox[
           SubscriptBox["L0", "1"], "2"], 
          SubscriptBox["k", "1"]}], 
         RowBox[{
          SubscriptBox["I", "p"], 
          SuperscriptBox[
           SubscriptBox["\[Omega]", "s"], "2"]}]]}], ")"}]}], "\[Rule]", 
     "\[Alpha]"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      FractionBox["g", 
       RowBox[{
        SubscriptBox["L0", "1"], " ", 
        SubsuperscriptBox["\[Omega]", "s", "2"]}]], 
      RowBox[{"(", 
       RowBox[{"=", 
        FractionBox[
         RowBox[{"g", " ", 
          SubscriptBox["m", "p"]}], 
         RowBox[{
          SubscriptBox["L0", "1"], 
          SubscriptBox["k", "1"]}]]}], ")"}]}], "\[Rule]", "\[Gamma]"}]}], 
   "\[IndentingNewLine]", "}"}]}]], "Input",
 CellChangeTimes->{{3.7143879104856024`*^9, 3.7143879494561462`*^9}, 
   3.7143893333946447`*^9, {3.714389447058155*^9, 3.714389537391204*^9}, {
   3.7143896588765364`*^9, 3.7143896974471874`*^9}, {3.714389794051433*^9, 
   3.71438979622888*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"(", 
     RowBox[{"NonDimEq", "=", 
      RowBox[{"{", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{
           SubsuperscriptBox["\[Omega]", "s", "2"], " ", 
           SubscriptBox["L0", "1"], 
           RowBox[{"(", 
            RowBox[{"1", "-", 
             FractionBox["1", "A"]}], ")"}], "r1x"}], " ", "+", 
          RowBox[{"\[Kappa]", " ", 
           SubsuperscriptBox["\[Omega]", "s", "2"], "  ", 
           SubscriptBox["L0", "1"], 
           RowBox[{"(", 
            RowBox[{"1", "-", 
             RowBox[{
              FractionBox["1", "B"], "\[ScriptCapitalL]"}]}], ")"}], 
           "r2x"}]}], " ", "==", 
         RowBox[{
          SubscriptBox["L0", "1"], " ", 
          SubsuperscriptBox["\[Omega]", "s", "2"], 
          RowBox[{
           SuperscriptBox[
            SubscriptBox["x", "p"], "\[Prime]\[Prime]",
            MultilineFunction->None], "[", "t", "]"}]}]}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{
          RowBox[{
           SubsuperscriptBox["\[Omega]", "s", "2"], 
           SubscriptBox["L0", "1"], 
           RowBox[{"(", 
            RowBox[{"1", "-", 
             FractionBox["1", "A"]}], ")"}], "r1y"}], " ", "+", 
          RowBox[{"\[Kappa]", " ", 
           SubsuperscriptBox["\[Omega]", "s", "2"], "  ", 
           SubscriptBox["L0", "1"], 
           RowBox[{"(", 
            RowBox[{"1", "-", 
             RowBox[{
              FractionBox["1", "B"], "\[ScriptCapitalL]"}]}], ")"}], "r2y"}], 
          " ", "-", 
          RowBox[{
           FractionBox["g", 
            RowBox[{
             SubscriptBox["L0", "1"], " ", 
             SubsuperscriptBox["\[Omega]", "s", "2"]}]], 
           SubscriptBox["L0", "1"], " ", 
           SubsuperscriptBox["\[Omega]", "s", "2"]}]}], "==", 
         RowBox[{
          SubscriptBox["L0", "1"], " ", 
          SubsuperscriptBox["\[Omega]", "s", "2"], 
          RowBox[{
           SuperscriptBox[
            SubscriptBox["y", "p"], "\[Prime]\[Prime]",
            MultilineFunction->None], "[", "t", "]"}]}]}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{
          RowBox[{
           FractionBox[
            SubscriptBox["k", "1"], 
            RowBox[{"-", 
             SubscriptBox["\[ImaginaryI]", 
              RowBox[{"p", ",", "zz"}]]}]], " ", 
           FractionBox[
            SuperscriptBox[
             SubscriptBox["L0", "1"], "2"], 
            SubsuperscriptBox["\[Omega]", "s", "2"]], 
           SubsuperscriptBox["\[Omega]", "s", "2"], 
           RowBox[{"(", 
            RowBox[{"1", "-", 
             FractionBox["1", "A"]}], ")"}], 
           SubscriptBox["c", "1"]}], " ", "+", 
          RowBox[{"\[Kappa]", " ", 
           FractionBox[
            SubscriptBox["k", "1"], 
            RowBox[{"-", 
             SubscriptBox["\[ImaginaryI]", 
              RowBox[{"p", ",", "zz"}]]}]], " ", 
           FractionBox[
            SuperscriptBox[
             SubscriptBox["L0", "1"], "2"], 
            SubsuperscriptBox["\[Omega]", "s", "2"]], 
           SubsuperscriptBox["\[Omega]", "s", "2"], 
           RowBox[{"(", 
            RowBox[{"1", "-", 
             RowBox[{
              FractionBox["1", "B"], "\[ScriptCapitalL]"}]}], ")"}], 
           SubscriptBox["c", "2"]}]}], "==", 
         RowBox[{
          SubsuperscriptBox["\[Omega]", "s", "2"], " ", 
          RowBox[{
           SuperscriptBox[
            SubscriptBox["\[Theta]", "p"], "\[Prime]\[Prime]",
            MultilineFunction->None], "[", "t", "]"}]}]}]}], 
       "\[IndentingNewLine]", "}"}]}], ")"}], "//", "Flatten"}], "//", 
   "MatrixForm"}], "//", "TraditionalForm"}]], "Input",
 CellChangeTimes->{{3.7143876348261805`*^9, 3.714387792648102*^9}, {
  3.7143881320989227`*^9, 3.7143881529918175`*^9}, {3.7143883645383368`*^9, 
  3.714388374252798*^9}, {3.714389166022051*^9, 3.7143891926065807`*^9}}],

Cell[BoxData[
 FormBox[
  TagBox[
   RowBox[{"(", "\[NoBreak]", 
    TagBox[GridBox[{
       {
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{"1", "-", 
             FractionBox["1", "A"]}], ")"}], " ", 
           SubscriptBox["L0", "1"], " ", "r1x", " ", 
           SubsuperscriptBox["\[Omega]", "s", "2"]}], "+", 
          RowBox[{"\[Kappa]", " ", 
           SubscriptBox["L0", "1"], " ", "r2x", " ", 
           RowBox[{"(", 
            RowBox[{"1", "-", 
             FractionBox["\[ScriptCapitalL]", "B"]}], ")"}], " ", 
           SubsuperscriptBox["\[Omega]", "s", "2"]}]}], "\[LongEqual]", 
         RowBox[{
          SubscriptBox["L0", "1"], " ", 
          SubsuperscriptBox["\[Omega]", "s", "2"], " ", 
          RowBox[{
           SuperscriptBox[
            SubscriptBox["x", "p"], "\[Prime]\[Prime]",
            MultilineFunction->None], "(", "t", ")"}]}]}]},
       {
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{"1", "-", 
             FractionBox["1", "A"]}], ")"}], " ", 
           SubscriptBox["L0", "1"], " ", "r1y", " ", 
           SubsuperscriptBox["\[Omega]", "s", "2"]}], "+", 
          RowBox[{"\[Kappa]", " ", 
           SubscriptBox["L0", "1"], " ", "r2y", " ", 
           RowBox[{"(", 
            RowBox[{"1", "-", 
             FractionBox["\[ScriptCapitalL]", "B"]}], ")"}], " ", 
           SubsuperscriptBox["\[Omega]", "s", "2"]}], "-", "g"}], 
         "\[LongEqual]", 
         RowBox[{
          SubscriptBox["L0", "1"], " ", 
          SubsuperscriptBox["\[Omega]", "s", "2"], " ", 
          RowBox[{
           SuperscriptBox[
            SubscriptBox["y", "p"], "\[Prime]\[Prime]",
            MultilineFunction->None], "(", "t", ")"}]}]}]},
       {
        RowBox[{
         RowBox[{
          RowBox[{"-", 
           FractionBox[
            RowBox[{
             RowBox[{"(", 
              RowBox[{"1", "-", 
               FractionBox["1", "A"]}], ")"}], " ", 
             SubscriptBox["c", "1"], " ", 
             SubscriptBox["k", "1"], " ", 
             SubsuperscriptBox["L0", "1", "2"]}], 
            SubscriptBox["\[ImaginaryI]", 
             RowBox[{"p", ",", "zz"}]]]}], "-", 
          FractionBox[
           RowBox[{
            SubscriptBox["c", "2"], " ", "\[Kappa]", " ", 
            SubscriptBox["k", "1"], " ", 
            SubsuperscriptBox["L0", "1", "2"], " ", 
            RowBox[{"(", 
             RowBox[{"1", "-", 
              FractionBox["\[ScriptCapitalL]", "B"]}], ")"}]}], 
           SubscriptBox["\[ImaginaryI]", 
            RowBox[{"p", ",", "zz"}]]]}], "\[LongEqual]", 
         RowBox[{
          SubsuperscriptBox["\[Omega]", "s", "2"], " ", 
          RowBox[{
           SuperscriptBox[
            SubscriptBox["\[Theta]", "p"], "\[Prime]\[Prime]",
            MultilineFunction->None], "(", "t", ")"}]}]}]}
      },
      GridBoxAlignment->{
       "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
        "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.5599999999999999]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}],
     Column], "\[NoBreak]", ")"}],
   Function[BoxForm`e$, 
    MatrixForm[BoxForm`e$]]], TraditionalForm]], "Output",
 CellChangeTimes->{{3.7143891476968637`*^9, 3.7143891929508095`*^9}}]
}, Open  ]],

Cell[" ", "Text",
 Editable->False,
 Selectable->False,
 CellFrame->{{0, 0}, {0, 2}},
 ShowCellBracket->False,
 CellMargins->{{0, 0}, {1, 1}},
 CellElementSpacings->{"CellMinHeight"->1},
 CellFrameMargins->0,
 CellFrameColor->RGBColor[0, 0, 1],
 CellSize->{Inherited, 4}],

Cell[BoxData[
 RowBox[{
  OverscriptBox["\[ScriptCapitalX]", ".."], "=", 
  RowBox[{
   RowBox[{
    RowBox[{"(", GridBox[{
       {"1", "0", "0"},
       {"0", "1", "0"},
       {"0", "0", 
        RowBox[{"-", "\[Alpha]"}]}
      }], ")"}], 
    RowBox[{"(", 
     RowBox[{"1", "-", 
      FractionBox["1", "A"]}], ")"}], 
    SubscriptBox["\[ScriptCapitalV]", "1"]}], "+", 
   RowBox[{"\[Kappa]", 
    RowBox[{"(", GridBox[{
       {"1", "0", "0"},
       {"0", "1", "0"},
       {"0", "0", 
        RowBox[{"-", "\[Alpha]"}]}
      }], ")"}], 
    RowBox[{"(", 
     RowBox[{"1", "-", 
      RowBox[{
       FractionBox["1", "B"], "\[ScriptCapitalL]"}]}], ")"}], 
    SubscriptBox["\[ScriptCapitalV]", "2"]}], "-", 
   RowBox[{"(", GridBox[{
      {"0"},
      {"\[Gamma]"},
      {"0"}
     }], ")"}], "-", 
   RowBox[{"Cmat", ".", 
    OverscriptBox["\[ScriptCapitalX]", "."]}], "+", "Forces"}]}]], "Input",
 CellChangeTimes->{{3.714389892716267*^9, 3.7143898970131283`*^9}, {
  3.714389965562713*^9, 3.714390009608005*^9}, {3.7143900794907255`*^9, 
  3.7143901818982353`*^9}, {3.715216322087405*^9, 3.7152163595562115`*^9}, {
  3.7152163990184126`*^9, 3.715216404562532*^9}}],

Cell[BoxData[
 RowBox[{
  OverscriptBox["\[ScriptCapitalX]", ".."], "=", 
  RowBox[{"f", "[", 
   RowBox[{"\[ScriptCapitalX]", ",", 
    OverscriptBox["\[ScriptCapitalX]", "."]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.715216362092267*^9, 3.715216381693636*^9}}],

Cell[" ", "Text",
 Editable->False,
 Selectable->False,
 CellFrame->{{0, 0}, {0, 2}},
 ShowCellBracket->False,
 CellMargins->{{0, 0}, {1, 1}},
 CellElementSpacings->{"CellMinHeight"->1},
 CellFrameMargins->0,
 CellFrameColor->RGBColor[0, 0, 1],
 CellSize->{Inherited, 4}],

Cell[" ", "Text",
 Editable->False,
 Selectable->False,
 CellFrame->{{0, 0}, {0, 0.5}},
 ShowCellBracket->False,
 CellMargins->{{0, 0}, {1, 1}},
 CellElementSpacings->{"CellMinHeight"->1},
 CellFrameMargins->0,
 CellFrameColor->RGBColor[0, 0, 1],
 CellSize->{Inherited, 3}],

Cell[" ", "Text",
 Editable->False,
 Selectable->False,
 CellFrame->{{0, 0}, {0, 2}},
 ShowCellBracket->False,
 CellMargins->{{0, 0}, {1, 1}},
 CellElementSpacings->{"CellMinHeight"->1},
 CellFrameMargins->0,
 CellFrameColor->RGBColor[0, 0, 1],
 CellSize->{Inherited, 4}],

Cell[" ", "Text",
 Editable->False,
 Selectable->False,
 CellFrame->{{0, 0}, {0, 0.5}},
 ShowCellBracket->False,
 CellMargins->{{0, 0}, {1, 1}},
 CellElementSpacings->{"CellMinHeight"->1},
 CellFrameMargins->0,
 CellFrameColor->RGBColor[0, 0, 1],
 CellSize->{Inherited, 3}],

Cell[BoxData[
 RowBox[{"Quit", "[", "]"}]], "Input",
 CellChangeTimes->{{3.715194288843802*^9, 3.715194290570945*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"\[ScriptCapitalX]", "=", 
   RowBox[{"(", GridBox[{
      {
       RowBox[{
        SubscriptBox["x", "p"], "[", "t", "]"}]},
      {
       RowBox[{
        SubscriptBox["y", "p"], "[", "t", "]"}]},
      {
       RowBox[{
        SubscriptBox["\[Theta]", "p"], "[", "t", "]"}]}
     }], ")"}]}], 
  RowBox[{"(*", 
   RowBox[{"//", "Flatten"}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{"greekTermsSymetricCase", "=", 
  RowBox[{"{", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     FractionBox[
      SubscriptBox["k", "2"], 
      SubscriptBox["k", "1"]], "\[Rule]"}], "*)"}], 
   RowBox[{
    RowBox[{"\[Kappa]", "\[Rule]", "1"}], ",", "\[IndentingNewLine]", 
    RowBox[{"(*", 
     RowBox[{
      FractionBox[
       SubscriptBox["L0", "2"], 
       SubscriptBox["L0", "1"]], "\[Rule]"}], "*)"}], 
    RowBox[{"\[ScriptCapitalL]", "\[Rule]", "1"}]}], "\[IndentingNewLine]", 
   "}"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"greekTermsGeneral", "=", 
   RowBox[{"{", "\[IndentingNewLine]", 
    RowBox[{"(*", 
     RowBox[{
      FractionBox[
       SubscriptBox["k", "2"], 
       SubscriptBox["k", "1"]], "\[Rule]"}], "*)"}], 
    RowBox[{
     RowBox[{"\[Kappa]", "\[Rule]", "1"}], ",", "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{
       FractionBox[
        SubscriptBox["L0", "2"], 
        SubscriptBox["L0", "1"]], "\[Rule]"}], "*)"}], 
     RowBox[{"\[ScriptCapitalL]", "\[Rule]", "1"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{
       FractionBox[
        SubscriptBox["k", "1"], 
        SubscriptBox["m", "p"]], "->"}], "*)"}], 
     RowBox[{
      SuperscriptBox[
       SubscriptBox["\[Omega]", "s"], "2"], "\[Rule]", "1"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{
       RowBox[{
        FractionBox[
         RowBox[{
          SubscriptBox["m", "p"], 
          SuperscriptBox[
           SubscriptBox["L0", "1"], "2"]}], 
         SubscriptBox["I", "p"]], 
        RowBox[{"(", 
         RowBox[{"=", 
          FractionBox[
           RowBox[{
            SuperscriptBox[
             SubscriptBox["L0", "1"], "2"], 
            SubscriptBox["k", "1"]}], 
           RowBox[{
            SubscriptBox["I", "p"], 
            SuperscriptBox[
             SubscriptBox["\[Omega]", "s"], "2"]}]]}], ")"}]}], "\[Rule]"}], 
      "*)"}], 
     RowBox[{"\[Alpha]", "\[Rule]", "1"}], ",", "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{
       RowBox[{
        FractionBox["g", 
         RowBox[{
          SubscriptBox["L0", "1"], " ", 
          SubsuperscriptBox["\[Omega]", "s", "2"]}]], 
        RowBox[{"(", 
         RowBox[{"=", 
          FractionBox[
           RowBox[{"g", " ", 
            SubscriptBox["m", "p"]}], 
           RowBox[{
            SubscriptBox["L0", "1"], 
            SubscriptBox["k", "1"]}]]}], ")"}]}], "\[Rule]"}], " ", "*)"}], 
     RowBox[{"\[Gamma]", "\[Rule]", "1"}]}], " ", 
    RowBox[{"(*", " ", 
     RowBox[{
      RowBox[{
      "make", " ", "sure", " ", "it", " ", "is", " ", "not", " ", "over"}], 
      "-", 
      RowBox[{"determined", " ", "constant"}]}], " ", "*)"}], 
    "\[IndentingNewLine]", "\[IndentingNewLine]", "}"}]}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"already", " ", 
     RowBox[{"here", " ", ":", " ", 
      RowBox[{"replacing", " ", 
       StyleBox["all",
        FontWeight->"Plain"], " ", "former", " ", 
       SubscriptBox["h", "p"]}]}]}], ",", 
    RowBox[{
     SubscriptBox["l", "p"], " ", "with", " ", "new", " ", "2", 
     SubscriptBox["h", "p"]}], ",", 
    RowBox[{"2", 
     SubscriptBox["l", "p"]}]}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"A", 
   RowBox[{"(*", 
    RowBox[{"\[Rule]", 
     SqrtBox[
      RowBox[{
       SuperscriptBox["r1x", "2"], "+", 
       SuperscriptBox["r1y", "2"]}]]}], "*)"}], "=", 
   RowBox[{"\[Sqrt]", 
    RowBox[{"(", 
     RowBox[{
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"Sin", "[", 
           RowBox[{
            SubscriptBox["\[Theta]", "p"], "[", "t", "]"}], "]"}], " ", 
          SubscriptBox["h", "p"]}], "+", 
         RowBox[{
          RowBox[{"Cos", "[", 
           RowBox[{
            SubscriptBox["\[Theta]", "p"], "[", "t", "]"}], "]"}], " ", 
          SubscriptBox["l", "p"]}], "+", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            SubscriptBox["x", "1"], "[", "t", "]"}], "-", 
           RowBox[{
            SubscriptBox["x", "p"], "[", "t", "]"}]}], ")"}]}], ")"}], "2"], 
      "+", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"-", " ", 
           RowBox[{"Cos", "[", 
            RowBox[{
             SubscriptBox["\[Theta]", "p"], "[", "t", "]"}], "]"}]}], " ", 
          SubscriptBox["h", "p"]}], "+", " ", 
         RowBox[{
          RowBox[{"Sin", "[", 
           RowBox[{
            SubscriptBox["\[Theta]", "p"], "[", "t", "]"}], "]"}], " ", 
          SubscriptBox["l", "p"]}], "+", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            SubscriptBox["y", "1"], "[", "t", "]"}], "-", 
           RowBox[{
            SubscriptBox["y", "p"], "[", "t", "]"}]}], ")"}]}], ")"}], "2"]}],
      ")"}]}]}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"B", 
   RowBox[{"(*", 
    RowBox[{"\[Rule]", 
     SqrtBox[
      RowBox[{
       SuperscriptBox["r2x", "2"], "+", 
       SuperscriptBox["r2y", "2"]}]]}], "*)"}], "=", 
   RowBox[{"\[Sqrt]", 
    RowBox[{"(", 
     RowBox[{
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"Sin", "[", 
           RowBox[{
            SubscriptBox["\[Theta]", "p"], "[", "t", "]"}], "]"}], " ", 
          SubscriptBox["h", "p"]}], "-", 
         RowBox[{
          RowBox[{"Cos", "[", 
           RowBox[{
            SubscriptBox["\[Theta]", "p"], "[", "t", "]"}], "]"}], " ", 
          SubscriptBox["l", "p"]}], "+", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            SubscriptBox["x", "2"], "[", "t", "]"}], "-", 
           RowBox[{
            SubscriptBox["x", "p"], "[", "t", "]"}]}], ")"}]}], ")"}], "2"], 
      "+", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"-", " ", 
           RowBox[{"Cos", "[", 
            RowBox[{
             SubscriptBox["\[Theta]", "p"], "[", "t", "]"}], "]"}]}], " ", 
          SubscriptBox["h", "p"]}], "-", " ", 
         RowBox[{
          RowBox[{"Sin", "[", 
           RowBox[{
            SubscriptBox["\[Theta]", "p"], "[", "t", "]"}], "]"}], " ", 
          SubscriptBox["l", "p"]}], "+", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            SubscriptBox["y", "2"], "[", "t", "]"}], "-", 
           RowBox[{
            SubscriptBox["y", "p"], "[", "t", "]"}]}], ")"}]}], ")"}], "2"]}],
      ")"}]}]}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    SubscriptBox["c", "1"], 
    RowBox[{"(*", 
     RowBox[{"\[Rule]", 
      RowBox[{"dr1", "+", "dr2"}]}], "*)"}], "=", 
    RowBox[{
     RowBox[{
      RowBox[{
       SubscriptBox["l", "p"], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"-", 
           RowBox[{"Sin", "[", 
            RowBox[{
             SubscriptBox["\[Theta]", "p"], "[", "t", "]"}], "]"}]}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             SubscriptBox["x", "1"], "[", "t", "]"}], "-", " ", 
            RowBox[{
             SubscriptBox["x", "p"], "[", "t", "]"}]}], ")"}]}], "+", 
         RowBox[{
          RowBox[{"Cos", "[", 
           RowBox[{
            SubscriptBox["\[Theta]", "p"], "[", "t", "]"}], "]"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             SubscriptBox["y", "1"], "[", "t", "]"}], "-", 
            RowBox[{
             SubscriptBox["y", "p"], "[", "t", "]"}]}], ")"}]}]}], ")"}]}], 
      "+", 
      RowBox[{
       SubscriptBox["h", "p"], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"Cos", "[", 
           RowBox[{
            SubscriptBox["\[Theta]", "p"], "[", "t", "]"}], "]"}], 
          RowBox[{"(", " ", 
           RowBox[{
            RowBox[{
             SubscriptBox["x", "1"], "[", "t", "]"}], "-", " ", 
            RowBox[{
             SubscriptBox["x", "p"], "[", "t", "]"}]}], ")"}]}], "+", 
         RowBox[{
          RowBox[{"Sin", "[", 
           RowBox[{
            SubscriptBox["\[Theta]", "p"], "[", "t", "]"}], "]"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             SubscriptBox["y", "1"], "[", "t", "]"}], "-", 
            RowBox[{
             SubscriptBox["y", "p"], "[", "t", "]"}]}], ")"}]}]}], ")"}], 
       "\[IndentingNewLine]", 
       SubscriptBox["c", "2"]}]}], 
     RowBox[{"(*", 
      RowBox[{"\[Rule]", 
       RowBox[{"dr3", "+", "dr4"}]}], "*)"}], "=", 
     RowBox[{
      RowBox[{
       SubscriptBox["l", "p"], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"Sin", "[", 
           RowBox[{
            SubscriptBox["\[Theta]", "p"], "[", "t", "]"}], "]"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             SubscriptBox["x", "2"], "[", "t", "]"}], "-", " ", 
            RowBox[{
             SubscriptBox["x", "p"], "[", "t", "]"}]}], ")"}]}], "+", 
         RowBox[{
          RowBox[{"Cos", "[", 
           RowBox[{
            SubscriptBox["\[Theta]", "p"], "[", "t", "]"}], "]"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", 
             RowBox[{
              SubscriptBox["y", "2"], "[", "t", "]"}]}], "+", 
            RowBox[{
             SubscriptBox["y", "p"], "[", "t", "]"}]}], ")"}]}]}], ")"}]}], 
      "+", 
      RowBox[{
       SubscriptBox["h", "p"], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"Cos", "[", 
           RowBox[{
            SubscriptBox["\[Theta]", "p"], "[", "t", "]"}], "]"}], 
          RowBox[{"(", " ", 
           RowBox[{
            RowBox[{
             SubscriptBox["x", "2"], "[", "t", "]"}], "-", " ", 
            RowBox[{
             SubscriptBox["x", "p"], "[", "t", "]"}]}], ")"}]}], "+", 
         RowBox[{
          RowBox[{"Sin", "[", 
           RowBox[{
            SubscriptBox["\[Theta]", "p"], "[", "t", "]"}], "]"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             SubscriptBox["y", "2"], "[", "t", "]"}], "-", 
            RowBox[{
             SubscriptBox["y", "p"], "[", "t", "]"}]}], ")"}]}]}], 
        ")"}]}]}]}]}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  SubscriptBox["\[ScriptCapitalV]", "1"], 
  RowBox[{"(*", 
   RowBox[{"=", 
    RowBox[{"(", GridBox[{
       {"r1x"},
       {"r1y"},
       {
        SubscriptBox["c", "1"]}
      }], ")"}]}], "*)"}], "=", 
  RowBox[{"(", GridBox[{
     {
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"Sin", "[", 
          RowBox[{
           SubscriptBox["\[Theta]", "p"], "[", "t", "]"}], "]"}], " ", 
         SubscriptBox["h", "p"]}], "+", 
        RowBox[{
         RowBox[{"Cos", "[", 
          RowBox[{
           SubscriptBox["\[Theta]", "p"], "[", "t", "]"}], "]"}], " ", 
         SubscriptBox["l", "p"]}], "+", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           SubscriptBox["x", "1"], "[", "t", "]"}], "-", 
          RowBox[{
           SubscriptBox["x", "p"], "[", "t", "]"}]}], ")"}]}], ")"}]},
     {
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"-", " ", 
          RowBox[{"Cos", "[", 
           RowBox[{
            SubscriptBox["\[Theta]", "p"], "[", "t", "]"}], "]"}]}], " ", 
         SubscriptBox["h", "p"]}], "+", " ", 
        RowBox[{
         RowBox[{"Sin", "[", 
          RowBox[{
           SubscriptBox["\[Theta]", "p"], "[", "t", "]"}], "]"}], " ", 
         SubscriptBox["l", "p"]}], "+", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           SubscriptBox["y", "1"], "[", "t", "]"}], "-", 
          RowBox[{
           SubscriptBox["y", "p"], "[", "t", "]"}]}], ")"}]}], ")"}]},
     {
      RowBox[{
       RowBox[{
        SubscriptBox["l", "p"], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", 
            RowBox[{"Sin", "[", 
             RowBox[{
              SubscriptBox["\[Theta]", "p"], "[", "t", "]"}], "]"}]}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              SubscriptBox["x", "1"], "[", "t", "]"}], "-", " ", 
             RowBox[{
              SubscriptBox["x", "p"], "[", "t", "]"}]}], ")"}]}], "+", 
          RowBox[{
           RowBox[{"Cos", "[", 
            RowBox[{
             SubscriptBox["\[Theta]", "p"], "[", "t", "]"}], "]"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              SubscriptBox["y", "1"], "[", "t", "]"}], "-", 
             RowBox[{
              SubscriptBox["y", "p"], "[", "t", "]"}]}], ")"}]}]}], ")"}]}], 
       "+", 
       RowBox[{
        SubscriptBox["h", "p"], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"Cos", "[", 
            RowBox[{
             SubscriptBox["\[Theta]", "p"], "[", "t", "]"}], "]"}], 
           RowBox[{"(", " ", 
            RowBox[{
             RowBox[{
              SubscriptBox["x", "1"], "[", "t", "]"}], "-", " ", 
             RowBox[{
              SubscriptBox["x", "p"], "[", "t", "]"}]}], ")"}]}], "+", 
          RowBox[{
           RowBox[{"Sin", "[", 
            RowBox[{
             SubscriptBox["\[Theta]", "p"], "[", "t", "]"}], "]"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              SubscriptBox["y", "1"], "[", "t", "]"}], "-", 
             RowBox[{
              SubscriptBox["y", "p"], "[", "t", "]"}]}], ")"}]}]}], ")"}]}]}]}
    }], ")"}]}], "\[IndentingNewLine]", 
 RowBox[{
  SubscriptBox["\[ScriptCapitalV]", "2"], 
  RowBox[{"(*", 
   RowBox[{"=", 
    RowBox[{"(", GridBox[{
       {"r2x"},
       {"r2y"},
       {
        SubscriptBox["c", "2"]}
      }], ")"}]}], "*)"}], "=", 
  RowBox[{"(", GridBox[{
     {
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"Sin", "[", 
          RowBox[{
           SubscriptBox["\[Theta]", "p"], "[", "t", "]"}], "]"}], " ", 
         SubscriptBox["h", "p"]}], "-", 
        RowBox[{
         RowBox[{"Cos", "[", 
          RowBox[{
           SubscriptBox["\[Theta]", "p"], "[", "t", "]"}], "]"}], " ", 
         SubscriptBox["l", "p"]}], "+", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           SubscriptBox["x", "2"], "[", "t", "]"}], "-", 
          RowBox[{
           SubscriptBox["x", "p"], "[", "t", "]"}]}], ")"}]}], ")"}]},
     {
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"-", " ", 
          RowBox[{"Cos", "[", 
           RowBox[{
            SubscriptBox["\[Theta]", "p"], "[", "t", "]"}], "]"}]}], " ", 
         SubscriptBox["h", "p"]}], "-", " ", 
        RowBox[{
         RowBox[{"Sin", "[", 
          RowBox[{
           SubscriptBox["\[Theta]", "p"], "[", "t", "]"}], "]"}], " ", 
         SubscriptBox["l", "p"]}], "+", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           SubscriptBox["y", "2"], "[", "t", "]"}], "-", 
          RowBox[{
           SubscriptBox["y", "p"], "[", "t", "]"}]}], ")"}]}], ")"}]},
     {
      RowBox[{
       RowBox[{
        SubscriptBox["l", "p"], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"Sin", "[", 
            RowBox[{
             SubscriptBox["\[Theta]", "p"], "[", "t", "]"}], "]"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              SubscriptBox["x", "2"], "[", "t", "]"}], "-", " ", 
             RowBox[{
              SubscriptBox["x", "p"], "[", "t", "]"}]}], ")"}]}], "+", 
          RowBox[{
           RowBox[{"Cos", "[", 
            RowBox[{
             SubscriptBox["\[Theta]", "p"], "[", "t", "]"}], "]"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", 
              RowBox[{
               SubscriptBox["y", "2"], "[", "t", "]"}]}], "+", 
             RowBox[{
              SubscriptBox["y", "p"], "[", "t", "]"}]}], ")"}]}]}], ")"}]}], 
       "+", 
       RowBox[{
        SubscriptBox["h", "p"], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"Cos", "[", 
            RowBox[{
             SubscriptBox["\[Theta]", "p"], "[", "t", "]"}], "]"}], 
           RowBox[{"(", " ", 
            RowBox[{
             RowBox[{
              SubscriptBox["x", "2"], "[", "t", "]"}], "-", " ", 
             RowBox[{
              SubscriptBox["x", "p"], "[", "t", "]"}]}], ")"}]}], "+", 
          RowBox[{
           RowBox[{"Sin", "[", 
            RowBox[{
             SubscriptBox["\[Theta]", "p"], "[", "t", "]"}], "]"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              SubscriptBox["y", "2"], "[", "t", "]"}], "-", 
             RowBox[{
              SubscriptBox["y", "p"], "[", "t", "]"}]}], ")"}]}]}], ")"}]}]}]}
    }], ")"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Cmat", "=", 
   RowBox[{"(", GridBox[{
      {
       SubscriptBox["c", "1"], "0", "0"},
      {"0", 
       SubscriptBox["c", "2"], "0"},
      {"0", "0", 
       SubscriptBox["c", "3"]}
     }], ")"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"nameChange", "=", 
   RowBox[{"{", 
    RowBox[{
     SubscriptBox["l", "p"], "\[Rule]", 
     SubscriptBox["w", "p"]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", "\"\<equations with no general forces :\>\"", \
"\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"EOM", "=", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"D", "[", 
       RowBox[{"\[ScriptCapitalX]", ",", 
        RowBox[{"{", 
         RowBox[{"t", ",", "2"}], "}"}]}], "]"}], "\[Equal]", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"(", GridBox[{
             {"1", "0", "0"},
             {"0", "1", "0"},
             {"0", "0", 
              RowBox[{"-", "\[Alpha]"}]}
            }], ")"}], 
          RowBox[{"(", 
           RowBox[{"1", "-", 
            FractionBox["1", "A"]}], ")"}]}], ")"}], ".", 
        SubscriptBox["\[ScriptCapitalV]", "1"]}], "+", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"\[Kappa]", 
          RowBox[{"(", GridBox[{
             {"1", "0", "0"},
             {"0", "1", "0"},
             {"0", "0", 
              RowBox[{"-", "\[Alpha]"}]}
            }], ")"}], 
          RowBox[{"(", 
           RowBox[{"1", "-", 
            RowBox[{
             FractionBox["1", "B"], "\[ScriptCapitalL]"}]}], ")"}]}], ")"}], 
        ".", 
        SubscriptBox["\[ScriptCapitalV]", "2"]}], "-", 
       RowBox[{"(", GridBox[{
          {"0"},
          {"\[Gamma]"},
          {"0"}
         }], ")"}], "-", 
       RowBox[{"Cmat", ".", 
        RowBox[{"D", "[", 
         RowBox[{"\[ScriptCapitalX]", ",", 
          RowBox[{"{", 
           RowBox[{"t", ",", "1"}], "}"}]}], "]"}]}]}]}], "  ", "//.", 
     "nameChange"}], "//", "Flatten"}]}], ";"}]}], "Input",
 CellChangeTimes->CompressedData["
1:eJxTTMoPSmViYGAQB2IQHbFNVX/xmteOTBe9jUB0qdZp7oNAmoXNUxlEH59l
bA+ir9uGuoNorsCVoSB6xZllqSC6bZteNYj2OWzRAqJ3bKroAtEBjA49IPpk
1qwJILrmwd3JIFrm9bUVIHpT7qO9IPrylx2HQLT7u9ajIPpc4f7rYHuWrrgB
ojmvhz8A0U0Foj9BtMonO9ZDQLorzp4XRBfvyhEG0XmXI0VBtMn3WikQfcrz
GZgWMVDQBdFtfwz1QLSDn8rnU0Ba/VEOmH7z4O0vEH2pv/Q3iP62yW7+JSC9
eEolmD53kWc5iLYpywXTfExxq0H0n4X71oHo6CNcB7TXAdUpmx0F0ROOlhaZ
AWk/lRllINpyc3sHiN5ZdqMHRAMAH/bSsg==
  "]],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     SubscriptBox["x", "p"], "[", "t", "]"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     SubscriptBox["y", "p"], "[", "t", "]"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     SubscriptBox["\[Theta]", "p"], "[", "t", "]"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.7144536492724395`*^9, 3.7144536799711857`*^9}, 
   3.7144537206245394`*^9, 3.7144538764141417`*^9, 3.7144718365986366`*^9, 
   3.7144875486594105`*^9, 3.714487611932694*^9, {3.7144876616370716`*^9, 
   3.7144876705012827`*^9}, 3.714905025566207*^9, 3.71519425986091*^9, 
   3.71519429418734*^9, 3.7151944341850977`*^9, 3.7151964600491085`*^9, 
   3.7152164947926664`*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"\[Kappa]", "\[Rule]", "1"}], ",", 
   RowBox[{"\[ScriptCapitalL]", "\[Rule]", "1"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.7144536492724395`*^9, 3.7144536799711857`*^9}, 
   3.7144537206245394`*^9, 3.7144538764141417`*^9, 3.7144718365986366`*^9, 
   3.7144875486594105`*^9, 3.714487611932694*^9, {3.7144876616370716`*^9, 
   3.7144876705012827`*^9}, 3.714905025566207*^9, 3.71519425986091*^9, 
   3.71519429418734*^9, 3.7151944341850977`*^9, 3.7151964600491085`*^9, 
   3.715216494796664*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"\[Kappa]", "\[Rule]", "1"}], ",", 
   RowBox[{"\[ScriptCapitalL]", "\[Rule]", "1"}], ",", 
   RowBox[{
    SubsuperscriptBox["\[Omega]", "s", "2"], "\[Rule]", "1"}], ",", 
   RowBox[{"\[Alpha]", "\[Rule]", "1"}], ",", 
   RowBox[{"\[Gamma]", "\[Rule]", "1"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.7144536492724395`*^9, 3.7144536799711857`*^9}, 
   3.7144537206245394`*^9, 3.7144538764141417`*^9, 3.7144718365986366`*^9, 
   3.7144875486594105`*^9, 3.714487611932694*^9, {3.7144876616370716`*^9, 
   3.7144876705012827`*^9}, 3.714905025566207*^9, 3.71519425986091*^9, 
   3.71519429418734*^9, 3.7151944341850977`*^9, 3.7151964600491085`*^9, 
   3.715216494800664*^9}],

Cell[BoxData[
 SqrtBox[
  RowBox[{
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"Sin", "[", 
        RowBox[{
         SubscriptBox["\[Theta]", "p"], "[", "t", "]"}], "]"}], " ", 
       SubscriptBox["h", "p"]}], "+", 
      RowBox[{
       RowBox[{"Cos", "[", 
        RowBox[{
         SubscriptBox["\[Theta]", "p"], "[", "t", "]"}], "]"}], " ", 
       SubscriptBox["l", "p"]}], "+", 
      RowBox[{
       SubscriptBox["x", "1"], "[", "t", "]"}], "-", 
      RowBox[{
       SubscriptBox["x", "p"], "[", "t", "]"}]}], ")"}], "2"], "+", 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"-", 
        RowBox[{"Cos", "[", 
         RowBox[{
          SubscriptBox["\[Theta]", "p"], "[", "t", "]"}], "]"}]}], " ", 
       SubscriptBox["h", "p"]}], "+", 
      RowBox[{
       RowBox[{"Sin", "[", 
        RowBox[{
         SubscriptBox["\[Theta]", "p"], "[", "t", "]"}], "]"}], " ", 
       SubscriptBox["l", "p"]}], "+", 
      RowBox[{
       SubscriptBox["y", "1"], "[", "t", "]"}], "-", 
      RowBox[{
       SubscriptBox["y", "p"], "[", "t", "]"}]}], ")"}], "2"]}]]], "Output",
 CellChangeTimes->{{3.7144536492724395`*^9, 3.7144536799711857`*^9}, 
   3.7144537206245394`*^9, 3.7144538764141417`*^9, 3.7144718365986366`*^9, 
   3.7144875486594105`*^9, 3.714487611932694*^9, {3.7144876616370716`*^9, 
   3.7144876705012827`*^9}, 3.714905025566207*^9, 3.71519425986091*^9, 
   3.71519429418734*^9, 3.7151944341850977`*^9, 3.7151964600491085`*^9, 
   3.7152164948046637`*^9}],

Cell[BoxData[
 SqrtBox[
  RowBox[{
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"Sin", "[", 
        RowBox[{
         SubscriptBox["\[Theta]", "p"], "[", "t", "]"}], "]"}], " ", 
       SubscriptBox["h", "p"]}], "-", 
      RowBox[{
       RowBox[{"Cos", "[", 
        RowBox[{
         SubscriptBox["\[Theta]", "p"], "[", "t", "]"}], "]"}], " ", 
       SubscriptBox["l", "p"]}], "+", 
      RowBox[{
       SubscriptBox["x", "2"], "[", "t", "]"}], "-", 
      RowBox[{
       SubscriptBox["x", "p"], "[", "t", "]"}]}], ")"}], "2"], "+", 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"-", 
        RowBox[{"Cos", "[", 
         RowBox[{
          SubscriptBox["\[Theta]", "p"], "[", "t", "]"}], "]"}]}], " ", 
       SubscriptBox["h", "p"]}], "-", 
      RowBox[{
       RowBox[{"Sin", "[", 
        RowBox[{
         SubscriptBox["\[Theta]", "p"], "[", "t", "]"}], "]"}], " ", 
       SubscriptBox["l", "p"]}], "+", 
      RowBox[{
       SubscriptBox["y", "2"], "[", "t", "]"}], "-", 
      RowBox[{
       SubscriptBox["y", "p"], "[", "t", "]"}]}], ")"}], "2"]}]]], "Output",
 CellChangeTimes->{{3.7144536492724395`*^9, 3.7144536799711857`*^9}, 
   3.7144537206245394`*^9, 3.7144538764141417`*^9, 3.7144718365986366`*^9, 
   3.7144875486594105`*^9, 3.714487611932694*^9, {3.7144876616370716`*^9, 
   3.7144876705012827`*^9}, 3.714905025566207*^9, 3.71519425986091*^9, 
   3.71519429418734*^9, 3.7151944341850977`*^9, 3.7151964600491085`*^9, 
   3.7152164948086643`*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"Sin", "[", 
       RowBox[{
        SubscriptBox["\[Theta]", "p"], "[", "t", "]"}], "]"}], " ", 
      SubscriptBox["h", "p"]}], "+", 
     RowBox[{
      RowBox[{"Cos", "[", 
       RowBox[{
        SubscriptBox["\[Theta]", "p"], "[", "t", "]"}], "]"}], " ", 
      SubscriptBox["l", "p"]}], "+", 
     RowBox[{
      SubscriptBox["x", "1"], "[", "t", "]"}], "-", 
     RowBox[{
      SubscriptBox["x", "p"], "[", "t", "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"-", 
       RowBox[{"Cos", "[", 
        RowBox[{
         SubscriptBox["\[Theta]", "p"], "[", "t", "]"}], "]"}]}], " ", 
      SubscriptBox["h", "p"]}], "+", 
     RowBox[{
      RowBox[{"Sin", "[", 
       RowBox[{
        SubscriptBox["\[Theta]", "p"], "[", "t", "]"}], "]"}], " ", 
      SubscriptBox["l", "p"]}], "+", 
     RowBox[{
      SubscriptBox["y", "1"], "[", "t", "]"}], "-", 
     RowBox[{
      SubscriptBox["y", "p"], "[", "t", "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      SubscriptBox["l", "p"], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"-", 
          RowBox[{"Sin", "[", 
           RowBox[{
            SubscriptBox["\[Theta]", "p"], "[", "t", "]"}], "]"}]}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            SubscriptBox["x", "1"], "[", "t", "]"}], "-", 
           RowBox[{
            SubscriptBox["x", "p"], "[", "t", "]"}]}], ")"}]}], "+", 
        RowBox[{
         RowBox[{"Cos", "[", 
          RowBox[{
           SubscriptBox["\[Theta]", "p"], "[", "t", "]"}], "]"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            SubscriptBox["y", "1"], "[", "t", "]"}], "-", 
           RowBox[{
            SubscriptBox["y", "p"], "[", "t", "]"}]}], ")"}]}]}], ")"}]}], 
     "+", 
     RowBox[{
      SubscriptBox["h", "p"], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"Cos", "[", 
          RowBox[{
           SubscriptBox["\[Theta]", "p"], "[", "t", "]"}], "]"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            SubscriptBox["x", "1"], "[", "t", "]"}], "-", 
           RowBox[{
            SubscriptBox["x", "p"], "[", "t", "]"}]}], ")"}]}], "+", 
        RowBox[{
         RowBox[{"Sin", "[", 
          RowBox[{
           SubscriptBox["\[Theta]", "p"], "[", "t", "]"}], "]"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            SubscriptBox["y", "1"], "[", "t", "]"}], "-", 
           RowBox[{
            SubscriptBox["y", "p"], "[", "t", "]"}]}], ")"}]}]}], ")"}]}]}], 
    "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.7144536492724395`*^9, 3.7144536799711857`*^9}, 
   3.7144537206245394`*^9, 3.7144538764141417`*^9, 3.7144718365986366`*^9, 
   3.7144875486594105`*^9, 3.714487611932694*^9, {3.7144876616370716`*^9, 
   3.7144876705012827`*^9}, 3.714905025566207*^9, 3.71519425986091*^9, 
   3.71519429418734*^9, 3.7151944341850977`*^9, 3.7151964600491085`*^9, 
   3.7152164948166676`*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"Sin", "[", 
       RowBox[{
        SubscriptBox["\[Theta]", "p"], "[", "t", "]"}], "]"}], " ", 
      SubscriptBox["h", "p"]}], "-", 
     RowBox[{
      RowBox[{"Cos", "[", 
       RowBox[{
        SubscriptBox["\[Theta]", "p"], "[", "t", "]"}], "]"}], " ", 
      SubscriptBox["l", "p"]}], "+", 
     RowBox[{
      SubscriptBox["x", "2"], "[", "t", "]"}], "-", 
     RowBox[{
      SubscriptBox["x", "p"], "[", "t", "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"-", 
       RowBox[{"Cos", "[", 
        RowBox[{
         SubscriptBox["\[Theta]", "p"], "[", "t", "]"}], "]"}]}], " ", 
      SubscriptBox["h", "p"]}], "-", 
     RowBox[{
      RowBox[{"Sin", "[", 
       RowBox[{
        SubscriptBox["\[Theta]", "p"], "[", "t", "]"}], "]"}], " ", 
      SubscriptBox["l", "p"]}], "+", 
     RowBox[{
      SubscriptBox["y", "2"], "[", "t", "]"}], "-", 
     RowBox[{
      SubscriptBox["y", "p"], "[", "t", "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      SubscriptBox["h", "p"], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"Cos", "[", 
          RowBox[{
           SubscriptBox["\[Theta]", "p"], "[", "t", "]"}], "]"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            SubscriptBox["x", "2"], "[", "t", "]"}], "-", 
           RowBox[{
            SubscriptBox["x", "p"], "[", "t", "]"}]}], ")"}]}], "+", 
        RowBox[{
         RowBox[{"Sin", "[", 
          RowBox[{
           SubscriptBox["\[Theta]", "p"], "[", "t", "]"}], "]"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            SubscriptBox["y", "2"], "[", "t", "]"}], "-", 
           RowBox[{
            SubscriptBox["y", "p"], "[", "t", "]"}]}], ")"}]}]}], ")"}]}], 
     "+", 
     RowBox[{
      SubscriptBox["l", "p"], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"Sin", "[", 
          RowBox[{
           SubscriptBox["\[Theta]", "p"], "[", "t", "]"}], "]"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            SubscriptBox["x", "2"], "[", "t", "]"}], "-", 
           RowBox[{
            SubscriptBox["x", "p"], "[", "t", "]"}]}], ")"}]}], "+", 
        RowBox[{
         RowBox[{"Cos", "[", 
          RowBox[{
           SubscriptBox["\[Theta]", "p"], "[", "t", "]"}], "]"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", 
            RowBox[{
             SubscriptBox["y", "2"], "[", "t", "]"}]}], "+", 
           RowBox[{
            SubscriptBox["y", "p"], "[", "t", "]"}]}], ")"}]}]}], ")"}]}]}], 
    "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.7144536492724395`*^9, 3.7144536799711857`*^9}, 
   3.7144537206245394`*^9, 3.7144538764141417`*^9, 3.7144718365986366`*^9, 
   3.7144875486594105`*^9, 3.714487611932694*^9, {3.7144876616370716`*^9, 
   3.7144876705012827`*^9}, 3.714905025566207*^9, 3.71519425986091*^9, 
   3.71519429418734*^9, 3.7151944341850977`*^9, 3.7151964600491085`*^9, 
   3.7152164948206644`*^9}],

Cell[BoxData["\<\"equations with no general forces :\"\>"], "Output",
 CellChangeTimes->{{3.7144536492724395`*^9, 3.7144536799711857`*^9}, 
   3.7144537206245394`*^9, 3.7144538764141417`*^9, 3.7144718365986366`*^9, 
   3.7144875486594105`*^9, 3.714487611932694*^9, {3.7144876616370716`*^9, 
   3.7144876705012827`*^9}, 3.714905025566207*^9, 3.71519425986091*^9, 
   3.71519429418734*^9, 3.7151944341850977`*^9, 3.7151964600491085`*^9, 
   3.715216494824664*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"dispNoTime", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"a_", "[", "t", "]"}], "\[Rule]", "a"}], "}"}]}], ";", 
  RowBox[{"(*", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"EOM", "/.", "dispNoTime"}], "/.", "greekTermsSymetricCase"}], "//",
      "Flatten"}], 
    RowBox[{"(*", 
     RowBox[{"//", "MatrixForm"}], "*)"}], 
    RowBox[{"(*", 
     RowBox[{"//", "TraditionalForm"}], "*)"}], ";", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"EOM", "/.", "dispNoTime"}], "/.", "greekTermsSymetricCase"}], 
      "//", "Flatten"}], 
     RowBox[{"(*", 
      RowBox[{"//", "MatrixForm"}], "*)"}], "//", "TraditionalForm"}]}], 
   "*)"}]}]], "Input",
 CellChangeTimes->{{3.714453761395191*^9, 3.714453846304103*^9}, {
   3.714453912086727*^9, 3.7144539729422607`*^9}, {3.714454024995744*^9, 
   3.7144540588455534`*^9}, {3.714487575151579*^9, 3.71448758735921*^9}, {
   3.7144876801904917`*^9, 3.714487682898553*^9}, {3.7149050523712597`*^9, 
   3.714905067243412*^9}, {3.7149051048245344`*^9, 3.714905258218185*^9}, 
   3.7151943627017345`*^9, {3.7151944189339933`*^9, 3.715194432265826*^9}, 
   3.71521650562212*^9, 3.715217024512539*^9}],

Cell[BoxData[
 FormBox[
  RowBox[{
   RowBox[{"(", "\[NoBreak]", GridBox[{
      {
       SuperscriptBox[
        SubscriptBox["x", "p"], "\[Prime]\[Prime]",
        MultilineFunction->None]},
      {
       SuperscriptBox[
        SubscriptBox["y", "p"], "\[Prime]\[Prime]",
        MultilineFunction->None]},
      {
       SuperscriptBox[
        SubscriptBox["\[Theta]", "p"], "\[Prime]\[Prime]",
        MultilineFunction->None]}
     },
     GridBoxAlignment->{
      "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}},
        "RowsIndexed" -> {}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.7]}, 
         Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
         Offset[0.2], {
          Offset[0.4]}, 
         Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}], 
   "\[LongEqual]", 
   RowBox[{"(", "\[NoBreak]", GridBox[{
      {
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"sin", "(", 
             SubscriptBox["\[Theta]", "p"], ")"}], " ", 
            SubscriptBox["h", "p"]}], "+", 
           RowBox[{
            RowBox[{"cos", "(", 
             SubscriptBox["\[Theta]", "p"], ")"}], " ", 
            SubscriptBox["w", "p"]}], "+", 
           SubscriptBox["x", "1"], "-", 
           SubscriptBox["x", "p"]}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{"1", "-", 
           FractionBox["1", 
            SqrtBox[
             RowBox[{
              SuperscriptBox[
               RowBox[{"(", 
                RowBox[{
                 RowBox[{
                  RowBox[{"sin", "(", 
                   SubscriptBox["\[Theta]", "p"], ")"}], " ", 
                  SubscriptBox["h", "p"]}], "+", 
                 RowBox[{
                  RowBox[{"cos", "(", 
                   SubscriptBox["\[Theta]", "p"], ")"}], " ", 
                  SubscriptBox["w", "p"]}], "+", 
                 SubscriptBox["x", "1"], "-", 
                 SubscriptBox["x", "p"]}], ")"}], "2"], "+", 
              SuperscriptBox[
               RowBox[{"(", 
                RowBox[{
                 RowBox[{
                  RowBox[{"-", 
                   RowBox[{"cos", "(", 
                    SubscriptBox["\[Theta]", "p"], ")"}]}], " ", 
                  SubscriptBox["h", "p"]}], "+", 
                 RowBox[{
                  RowBox[{"sin", "(", 
                   SubscriptBox["\[Theta]", "p"], ")"}], " ", 
                  SubscriptBox["w", "p"]}], "+", 
                 SubscriptBox["y", "1"], "-", 
                 SubscriptBox["y", "p"]}], ")"}], "2"]}]]]}], ")"}]}], "+", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"sin", "(", 
             SubscriptBox["\[Theta]", "p"], ")"}], " ", 
            SubscriptBox["h", "p"]}], "-", 
           RowBox[{
            RowBox[{"cos", "(", 
             SubscriptBox["\[Theta]", "p"], ")"}], " ", 
            SubscriptBox["w", "p"]}], "+", 
           SubscriptBox["x", "2"], "-", 
           SubscriptBox["x", "p"]}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{"1", "-", 
           FractionBox["1", 
            SqrtBox[
             RowBox[{
              SuperscriptBox[
               RowBox[{"(", 
                RowBox[{
                 RowBox[{
                  RowBox[{"sin", "(", 
                   SubscriptBox["\[Theta]", "p"], ")"}], " ", 
                  SubscriptBox["h", "p"]}], "-", 
                 RowBox[{
                  RowBox[{"cos", "(", 
                   SubscriptBox["\[Theta]", "p"], ")"}], " ", 
                  SubscriptBox["w", "p"]}], "+", 
                 SubscriptBox["x", "2"], "-", 
                 SubscriptBox["x", "p"]}], ")"}], "2"], "+", 
              SuperscriptBox[
               RowBox[{"(", 
                RowBox[{
                 RowBox[{
                  RowBox[{"-", 
                   RowBox[{"cos", "(", 
                    SubscriptBox["\[Theta]", "p"], ")"}]}], " ", 
                  SubscriptBox["h", "p"]}], "-", 
                 RowBox[{
                  RowBox[{"sin", "(", 
                   SubscriptBox["\[Theta]", "p"], ")"}], " ", 
                  SubscriptBox["w", "p"]}], "+", 
                 SubscriptBox["y", "2"], "-", 
                 SubscriptBox["y", "p"]}], ")"}], "2"]}]]]}], ")"}]}], "-", 
        RowBox[{
         SubscriptBox["c", "1"], " ", 
         SuperscriptBox[
          SubscriptBox["x", "p"], "\[Prime]",
          MultilineFunction->None]}]}]},
      {
       RowBox[{
        RowBox[{"-", "\[Gamma]"}], "+", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"1", "-", 
           FractionBox["1", 
            SqrtBox[
             RowBox[{
              SuperscriptBox[
               RowBox[{"(", 
                RowBox[{
                 RowBox[{
                  RowBox[{"sin", "(", 
                   SubscriptBox["\[Theta]", "p"], ")"}], " ", 
                  SubscriptBox["h", "p"]}], "+", 
                 RowBox[{
                  RowBox[{"cos", "(", 
                   SubscriptBox["\[Theta]", "p"], ")"}], " ", 
                  SubscriptBox["w", "p"]}], "+", 
                 SubscriptBox["x", "1"], "-", 
                 SubscriptBox["x", "p"]}], ")"}], "2"], "+", 
              SuperscriptBox[
               RowBox[{"(", 
                RowBox[{
                 RowBox[{
                  RowBox[{"-", 
                   RowBox[{"cos", "(", 
                    SubscriptBox["\[Theta]", "p"], ")"}]}], " ", 
                  SubscriptBox["h", "p"]}], "+", 
                 RowBox[{
                  RowBox[{"sin", "(", 
                   SubscriptBox["\[Theta]", "p"], ")"}], " ", 
                  SubscriptBox["w", "p"]}], "+", 
                 SubscriptBox["y", "1"], "-", 
                 SubscriptBox["y", "p"]}], ")"}], "2"]}]]]}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"-", 
             RowBox[{"cos", "(", 
              SubscriptBox["\[Theta]", "p"], ")"}]}], " ", 
            SubscriptBox["h", "p"]}], "+", 
           RowBox[{
            RowBox[{"sin", "(", 
             SubscriptBox["\[Theta]", "p"], ")"}], " ", 
            SubscriptBox["w", "p"]}], "+", 
           SubscriptBox["y", "1"], "-", 
           SubscriptBox["y", "p"]}], ")"}]}], "+", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"1", "-", 
           FractionBox["1", 
            SqrtBox[
             RowBox[{
              SuperscriptBox[
               RowBox[{"(", 
                RowBox[{
                 RowBox[{
                  RowBox[{"sin", "(", 
                   SubscriptBox["\[Theta]", "p"], ")"}], " ", 
                  SubscriptBox["h", "p"]}], "-", 
                 RowBox[{
                  RowBox[{"cos", "(", 
                   SubscriptBox["\[Theta]", "p"], ")"}], " ", 
                  SubscriptBox["w", "p"]}], "+", 
                 SubscriptBox["x", "2"], "-", 
                 SubscriptBox["x", "p"]}], ")"}], "2"], "+", 
              SuperscriptBox[
               RowBox[{"(", 
                RowBox[{
                 RowBox[{
                  RowBox[{"-", 
                   RowBox[{"cos", "(", 
                    SubscriptBox["\[Theta]", "p"], ")"}]}], " ", 
                  SubscriptBox["h", "p"]}], "-", 
                 RowBox[{
                  RowBox[{"sin", "(", 
                   SubscriptBox["\[Theta]", "p"], ")"}], " ", 
                  SubscriptBox["w", "p"]}], "+", 
                 SubscriptBox["y", "2"], "-", 
                 SubscriptBox["y", "p"]}], ")"}], "2"]}]]]}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"-", 
             RowBox[{"cos", "(", 
              SubscriptBox["\[Theta]", "p"], ")"}]}], " ", 
            SubscriptBox["h", "p"]}], "-", 
           RowBox[{
            RowBox[{"sin", "(", 
             SubscriptBox["\[Theta]", "p"], ")"}], " ", 
            SubscriptBox["w", "p"]}], "+", 
           SubscriptBox["y", "2"], "-", 
           SubscriptBox["y", "p"]}], ")"}]}], "-", 
        RowBox[{
         SubscriptBox["c", "2"], " ", 
         SuperscriptBox[
          SubscriptBox["y", "p"], "\[Prime]",
          MultilineFunction->None]}]}]},
      {
       RowBox[{
        RowBox[{
         RowBox[{"-", "\[Alpha]"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            SubscriptBox["w", "p"], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"cos", "(", 
                SubscriptBox["\[Theta]", "p"], ")"}], " ", 
               RowBox[{"(", 
                RowBox[{
                 SubscriptBox["y", "1"], "-", 
                 SubscriptBox["y", "p"]}], ")"}]}], "-", 
              RowBox[{
               RowBox[{"sin", "(", 
                SubscriptBox["\[Theta]", "p"], ")"}], " ", 
               RowBox[{"(", 
                RowBox[{
                 SubscriptBox["x", "1"], "-", 
                 SubscriptBox["x", "p"]}], ")"}]}]}], ")"}]}], "+", 
           RowBox[{
            SubscriptBox["h", "p"], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"cos", "(", 
                SubscriptBox["\[Theta]", "p"], ")"}], " ", 
               RowBox[{"(", 
                RowBox[{
                 SubscriptBox["x", "1"], "-", 
                 SubscriptBox["x", "p"]}], ")"}]}], "+", 
              RowBox[{
               RowBox[{"sin", "(", 
                SubscriptBox["\[Theta]", "p"], ")"}], " ", 
               RowBox[{"(", 
                RowBox[{
                 SubscriptBox["y", "1"], "-", 
                 SubscriptBox["y", "p"]}], ")"}]}]}], ")"}]}]}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{"1", "-", 
           FractionBox["1", 
            SqrtBox[
             RowBox[{
              SuperscriptBox[
               RowBox[{"(", 
                RowBox[{
                 RowBox[{
                  RowBox[{"sin", "(", 
                   SubscriptBox["\[Theta]", "p"], ")"}], " ", 
                  SubscriptBox["h", "p"]}], "+", 
                 RowBox[{
                  RowBox[{"cos", "(", 
                   SubscriptBox["\[Theta]", "p"], ")"}], " ", 
                  SubscriptBox["w", "p"]}], "+", 
                 SubscriptBox["x", "1"], "-", 
                 SubscriptBox["x", "p"]}], ")"}], "2"], "+", 
              SuperscriptBox[
               RowBox[{"(", 
                RowBox[{
                 RowBox[{
                  RowBox[{"-", 
                   RowBox[{"cos", "(", 
                    SubscriptBox["\[Theta]", "p"], ")"}]}], " ", 
                  SubscriptBox["h", "p"]}], "+", 
                 RowBox[{
                  RowBox[{"sin", "(", 
                   SubscriptBox["\[Theta]", "p"], ")"}], " ", 
                  SubscriptBox["w", "p"]}], "+", 
                 SubscriptBox["y", "1"], "-", 
                 SubscriptBox["y", "p"]}], ")"}], "2"]}]]]}], ")"}]}], "-", 
        RowBox[{"\[Alpha]", " ", 
         RowBox[{"(", 
          RowBox[{"1", "-", 
           FractionBox["1", 
            SqrtBox[
             RowBox[{
              SuperscriptBox[
               RowBox[{"(", 
                RowBox[{
                 RowBox[{
                  RowBox[{"sin", "(", 
                   SubscriptBox["\[Theta]", "p"], ")"}], " ", 
                  SubscriptBox["h", "p"]}], "-", 
                 RowBox[{
                  RowBox[{"cos", "(", 
                   SubscriptBox["\[Theta]", "p"], ")"}], " ", 
                  SubscriptBox["w", "p"]}], "+", 
                 SubscriptBox["x", "2"], "-", 
                 SubscriptBox["x", "p"]}], ")"}], "2"], "+", 
              SuperscriptBox[
               RowBox[{"(", 
                RowBox[{
                 RowBox[{
                  RowBox[{"-", 
                   RowBox[{"cos", "(", 
                    SubscriptBox["\[Theta]", "p"], ")"}]}], " ", 
                  SubscriptBox["h", "p"]}], "-", 
                 RowBox[{
                  RowBox[{"sin", "(", 
                   SubscriptBox["\[Theta]", "p"], ")"}], " ", 
                  SubscriptBox["w", "p"]}], "+", 
                 SubscriptBox["y", "2"], "-", 
                 SubscriptBox["y", "p"]}], ")"}], "2"]}]]]}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            SubscriptBox["h", "p"], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"cos", "(", 
                SubscriptBox["\[Theta]", "p"], ")"}], " ", 
               RowBox[{"(", 
                RowBox[{
                 SubscriptBox["x", "2"], "-", 
                 SubscriptBox["x", "p"]}], ")"}]}], "+", 
              RowBox[{
               RowBox[{"sin", "(", 
                SubscriptBox["\[Theta]", "p"], ")"}], " ", 
               RowBox[{"(", 
                RowBox[{
                 SubscriptBox["y", "2"], "-", 
                 SubscriptBox["y", "p"]}], ")"}]}]}], ")"}]}], "+", 
           RowBox[{
            SubscriptBox["w", "p"], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"sin", "(", 
                SubscriptBox["\[Theta]", "p"], ")"}], " ", 
               RowBox[{"(", 
                RowBox[{
                 SubscriptBox["x", "2"], "-", 
                 SubscriptBox["x", "p"]}], ")"}]}], "+", 
              RowBox[{
               RowBox[{"cos", "(", 
                SubscriptBox["\[Theta]", "p"], ")"}], " ", 
               RowBox[{"(", 
                RowBox[{
                 SubscriptBox["y", "p"], "-", 
                 SubscriptBox["y", "2"]}], ")"}]}]}], ")"}]}]}], ")"}]}], "-", 
        RowBox[{
         SubscriptBox["c", "3"], " ", 
         SuperscriptBox[
          SubscriptBox["\[Theta]", "p"], "\[Prime]",
          MultilineFunction->None]}]}]}
     },
     GridBoxAlignment->{
      "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}},
        "RowsIndexed" -> {}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.7]}, 
         Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
         Offset[0.2], {
          Offset[0.4]}, 
         Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}]}], 
  TraditionalForm]], "Output",
 CellChangeTimes->{{3.714453735637596*^9, 3.714453847136096*^9}, {
   3.714453914190747*^9, 3.7144539743302917`*^9}, {3.7144540552494636`*^9, 
   3.7144540609095993`*^9}, {3.714487559431198*^9, 3.7144876141847486`*^9}, {
   3.71448767321735*^9, 3.714487683246559*^9}, {3.7149050871327753`*^9, 
   3.7149051327692537`*^9}, 3.714905163847361*^9, {3.714905209097106*^9, 
   3.7149052587861977`*^9}, {3.7151942709882793`*^9, 3.715194297444499*^9}, 
   3.7151944385009565`*^9, 3.7151964635624332`*^9, 3.715216506466134*^9, 
   3.715216817216214*^9}]
}, Open  ]],

Cell[" ", "Text",
 Editable->False,
 Selectable->False,
 CellFrame->{{0, 0}, {0, 0.5}},
 ShowCellBracket->False,
 CellMargins->{{0, 0}, {1, 1}},
 CellElementSpacings->{"CellMinHeight"->1},
 CellFrameMargins->0,
 CellFrameColor->RGBColor[0, 0, 1],
 CellSize->{Inherited, 3}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"numerics", "=", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       SubscriptBox["h", "p"], "\[Rule]", "0.1"}], ",", 
      RowBox[{
       SubscriptBox["w", "p"], "\[Rule]", "1"}], ",", 
      RowBox[{
       RowBox[{
        SubscriptBox["x", "1"], "[", "t", "]"}], "\[Rule]", "0"}], ",", 
      RowBox[{
       RowBox[{
        SubscriptBox["y", "1"], "[", "t", "]"}], "\[Rule]", "0"}], ",", 
      RowBox[{
       RowBox[{
        SubscriptBox["x", "2"], "[", "t", "]"}], "\[Rule]", 
       RowBox[{"2", 
        SubscriptBox["w", "p"]}]}], ",", 
      RowBox[{
       RowBox[{
        SubscriptBox["y", "2"], "[", "t", "]"}], "\[Rule]", "0"}], ",", 
      RowBox[{"\[Alpha]", "\[Rule]", "0.04"}], ",", 
      RowBox[{"\[Gamma]", "\[Rule]", "2"}]}], "}"}]}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"EOM", "//.", "greekTermsSymetricCase"}], "//.", "numerics"}], "//",
      "Flatten"}], "//", "TraditionalForm"}], "*)"}]}]], "Input",
 CellChangeTimes->{{3.714905364664805*^9, 3.7149054956350822`*^9}, {
  3.714905529255147*^9, 3.7149055385953455`*^9}, {3.7151943222139096`*^9, 
  3.7151943267088933`*^9}, {3.7152167791334095`*^9, 3.715216783337503*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    SubscriptBox["h", "p"], "\[Rule]", "0.1`"}], ",", 
   RowBox[{
    SubscriptBox["w", "p"], "\[Rule]", "1"}], ",", 
   RowBox[{
    RowBox[{
     SubscriptBox["x", "1"], "[", "t", "]"}], "\[Rule]", "0"}], ",", 
   RowBox[{
    RowBox[{
     SubscriptBox["y", "1"], "[", "t", "]"}], "\[Rule]", "0"}], ",", 
   RowBox[{
    RowBox[{
     SubscriptBox["x", "2"], "[", "t", "]"}], "\[Rule]", 
    RowBox[{"2", " ", 
     SubscriptBox["w", "p"]}]}], ",", 
   RowBox[{
    RowBox[{
     SubscriptBox["y", "2"], "[", "t", "]"}], "\[Rule]", "0"}], ",", 
   RowBox[{"\[Alpha]", "\[Rule]", "0.04`"}], ",", 
   RowBox[{"\[Gamma]", "\[Rule]", "2"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.714905378777268*^9, 3.7149054040869217`*^9}, 
   3.714905437488462*^9, {3.714905471967207*^9, 3.714905497271117*^9}, 
   3.714905539307361*^9, 3.7151964776217465`*^9}],

Cell[BoxData[
 FormBox[
  RowBox[{
   RowBox[{"(", "\[NoBreak]", GridBox[{
      {
       RowBox[{
        SuperscriptBox[
         SubscriptBox["x", "p"], "\[Prime]\[Prime]",
         MultilineFunction->None], "(", "t", ")"}]},
      {
       RowBox[{
        SuperscriptBox[
         SubscriptBox["y", "p"], "\[Prime]\[Prime]",
         MultilineFunction->None], "(", "t", ")"}]},
      {
       RowBox[{
        SuperscriptBox[
         SubscriptBox["\[Theta]", "p"], "\[Prime]\[Prime]",
         MultilineFunction->None], "(", "t", ")"}]}
     },
     GridBoxAlignment->{
      "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}},
        "RowsIndexed" -> {}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.7]}, 
         Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
         Offset[0.2], {
          Offset[0.4]}, 
         Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}], 
   "\[LongEqual]", 
   RowBox[{"(", "\[NoBreak]", GridBox[{
      {
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", 
            RowBox[{"cos", "(", 
             RowBox[{
              SubscriptBox["\[Theta]", "p"], "(", "t", ")"}], ")"}]}], "+", 
           RowBox[{"0.1`", " ", 
            RowBox[{"sin", "(", 
             RowBox[{
              SubscriptBox["\[Theta]", "p"], "(", "t", ")"}], ")"}]}], "-", 
           RowBox[{
            SubscriptBox["x", "p"], "(", "t", ")"}], "+", "2"}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{"1", "-", 
           FractionBox["1", 
            SqrtBox[
             RowBox[{
              SuperscriptBox[
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", 
                  RowBox[{"cos", "(", 
                   RowBox[{
                    SubscriptBox["\[Theta]", "p"], "(", "t", ")"}], ")"}]}], 
                 "+", 
                 RowBox[{"0.1`", " ", 
                  RowBox[{"sin", "(", 
                   RowBox[{
                    SubscriptBox["\[Theta]", "p"], "(", "t", ")"}], ")"}]}], 
                 "-", 
                 RowBox[{
                  SubscriptBox["x", "p"], "(", "t", ")"}], "+", "2"}], ")"}], 
               "2"], "+", 
              SuperscriptBox[
               RowBox[{"(", 
                RowBox[{
                 RowBox[{
                  RowBox[{"-", "0.1`"}], " ", 
                  RowBox[{"cos", "(", 
                   RowBox[{
                    SubscriptBox["\[Theta]", "p"], "(", "t", ")"}], ")"}]}], 
                 "-", 
                 RowBox[{"sin", "(", 
                  RowBox[{
                   SubscriptBox["\[Theta]", "p"], "(", "t", ")"}], ")"}], "-", 
                 RowBox[{
                  SubscriptBox["y", "p"], "(", "t", ")"}]}], ")"}], 
               "2"]}]]]}], ")"}]}], "+", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"cos", "(", 
            RowBox[{
             SubscriptBox["\[Theta]", "p"], "(", "t", ")"}], ")"}], "+", 
           RowBox[{"0.1`", " ", 
            RowBox[{"sin", "(", 
             RowBox[{
              SubscriptBox["\[Theta]", "p"], "(", "t", ")"}], ")"}]}], "-", 
           RowBox[{
            SubscriptBox["x", "p"], "(", "t", ")"}]}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{"1", "-", 
           FractionBox["1", 
            SqrtBox[
             RowBox[{
              SuperscriptBox[
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"cos", "(", 
                  RowBox[{
                   SubscriptBox["\[Theta]", "p"], "(", "t", ")"}], ")"}], "+", 
                 RowBox[{"0.1`", " ", 
                  RowBox[{"sin", "(", 
                   RowBox[{
                    SubscriptBox["\[Theta]", "p"], "(", "t", ")"}], ")"}]}], 
                 "-", 
                 RowBox[{
                  SubscriptBox["x", "p"], "(", "t", ")"}]}], ")"}], "2"], "+", 
              SuperscriptBox[
               RowBox[{"(", 
                RowBox[{
                 RowBox[{
                  RowBox[{"-", "0.1`"}], " ", 
                  RowBox[{"cos", "(", 
                   RowBox[{
                    SubscriptBox["\[Theta]", "p"], "(", "t", ")"}], ")"}]}], 
                 "+", 
                 RowBox[{"sin", "(", 
                  RowBox[{
                   SubscriptBox["\[Theta]", "p"], "(", "t", ")"}], ")"}], "-", 
                 RowBox[{
                  SubscriptBox["y", "p"], "(", "t", ")"}]}], ")"}], 
               "2"]}]]]}], ")"}]}]}]},
      {
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{"1", "-", 
           FractionBox["1", 
            SqrtBox[
             RowBox[{
              SuperscriptBox[
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", 
                  RowBox[{"cos", "(", 
                   RowBox[{
                    SubscriptBox["\[Theta]", "p"], "(", "t", ")"}], ")"}]}], 
                 "+", 
                 RowBox[{"0.1`", " ", 
                  RowBox[{"sin", "(", 
                   RowBox[{
                    SubscriptBox["\[Theta]", "p"], "(", "t", ")"}], ")"}]}], 
                 "-", 
                 RowBox[{
                  SubscriptBox["x", "p"], "(", "t", ")"}], "+", "2"}], ")"}], 
               "2"], "+", 
              SuperscriptBox[
               RowBox[{"(", 
                RowBox[{
                 RowBox[{
                  RowBox[{"-", "0.1`"}], " ", 
                  RowBox[{"cos", "(", 
                   RowBox[{
                    SubscriptBox["\[Theta]", "p"], "(", "t", ")"}], ")"}]}], 
                 "-", 
                 RowBox[{"sin", "(", 
                  RowBox[{
                   SubscriptBox["\[Theta]", "p"], "(", "t", ")"}], ")"}], "-", 
                 RowBox[{
                  SubscriptBox["y", "p"], "(", "t", ")"}]}], ")"}], 
               "2"]}]]]}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"-", "0.1`"}], " ", 
            RowBox[{"cos", "(", 
             RowBox[{
              SubscriptBox["\[Theta]", "p"], "(", "t", ")"}], ")"}]}], "-", 
           RowBox[{"sin", "(", 
            RowBox[{
             SubscriptBox["\[Theta]", "p"], "(", "t", ")"}], ")"}], "-", 
           RowBox[{
            SubscriptBox["y", "p"], "(", "t", ")"}]}], ")"}]}], "+", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"1", "-", 
           FractionBox["1", 
            SqrtBox[
             RowBox[{
              SuperscriptBox[
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"cos", "(", 
                  RowBox[{
                   SubscriptBox["\[Theta]", "p"], "(", "t", ")"}], ")"}], "+", 
                 RowBox[{"0.1`", " ", 
                  RowBox[{"sin", "(", 
                   RowBox[{
                    SubscriptBox["\[Theta]", "p"], "(", "t", ")"}], ")"}]}], 
                 "-", 
                 RowBox[{
                  SubscriptBox["x", "p"], "(", "t", ")"}]}], ")"}], "2"], "+", 
              SuperscriptBox[
               RowBox[{"(", 
                RowBox[{
                 RowBox[{
                  RowBox[{"-", "0.1`"}], " ", 
                  RowBox[{"cos", "(", 
                   RowBox[{
                    SubscriptBox["\[Theta]", "p"], "(", "t", ")"}], ")"}]}], 
                 "+", 
                 RowBox[{"sin", "(", 
                  RowBox[{
                   SubscriptBox["\[Theta]", "p"], "(", "t", ")"}], ")"}], "-", 
                 RowBox[{
                  SubscriptBox["y", "p"], "(", "t", ")"}]}], ")"}], 
               "2"]}]]]}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"-", "0.1`"}], " ", 
            RowBox[{"cos", "(", 
             RowBox[{
              SubscriptBox["\[Theta]", "p"], "(", "t", ")"}], ")"}]}], "+", 
           RowBox[{"sin", "(", 
            RowBox[{
             SubscriptBox["\[Theta]", "p"], "(", "t", ")"}], ")"}], "-", 
           RowBox[{
            SubscriptBox["y", "p"], "(", "t", ")"}]}], ")"}]}], "-", "2"}]},
      {
       RowBox[{
        RowBox[{
         RowBox[{"-", "0.04`"}], " ", 
         RowBox[{"(", 
          RowBox[{"1", "-", 
           FractionBox["1", 
            SqrtBox[
             RowBox[{
              SuperscriptBox[
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", 
                  RowBox[{"cos", "(", 
                   RowBox[{
                    SubscriptBox["\[Theta]", "p"], "(", "t", ")"}], ")"}]}], 
                 "+", 
                 RowBox[{"0.1`", " ", 
                  RowBox[{"sin", "(", 
                   RowBox[{
                    SubscriptBox["\[Theta]", "p"], "(", "t", ")"}], ")"}]}], 
                 "-", 
                 RowBox[{
                  SubscriptBox["x", "p"], "(", "t", ")"}], "+", "2"}], ")"}], 
               "2"], "+", 
              SuperscriptBox[
               RowBox[{"(", 
                RowBox[{
                 RowBox[{
                  RowBox[{"-", "0.1`"}], " ", 
                  RowBox[{"cos", "(", 
                   RowBox[{
                    SubscriptBox["\[Theta]", "p"], "(", "t", ")"}], ")"}]}], 
                 "-", 
                 RowBox[{"sin", "(", 
                  RowBox[{
                   SubscriptBox["\[Theta]", "p"], "(", "t", ")"}], ")"}], "-", 
                 RowBox[{
                  SubscriptBox["y", "p"], "(", "t", ")"}]}], ")"}], 
               "2"]}]]]}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"sin", "(", 
             RowBox[{
              SubscriptBox["\[Theta]", "p"], "(", "t", ")"}], ")"}], " ", 
            RowBox[{"(", 
             RowBox[{"2", "-", 
              RowBox[{
               SubscriptBox["x", "p"], "(", "t", ")"}]}], ")"}]}], "+", 
           RowBox[{
            RowBox[{"cos", "(", 
             RowBox[{
              SubscriptBox["\[Theta]", "p"], "(", "t", ")"}], ")"}], " ", 
            RowBox[{
             SubscriptBox["y", "p"], "(", "t", ")"}]}], "+", 
           RowBox[{"0.1`", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"cos", "(", 
                RowBox[{
                 SubscriptBox["\[Theta]", "p"], "(", "t", ")"}], ")"}], " ", 
               RowBox[{"(", 
                RowBox[{"2", "-", 
                 RowBox[{
                  SubscriptBox["x", "p"], "(", "t", ")"}]}], ")"}]}], "-", 
              RowBox[{
               RowBox[{"sin", "(", 
                RowBox[{
                 SubscriptBox["\[Theta]", "p"], "(", "t", ")"}], ")"}], " ", 
               RowBox[{
                SubscriptBox["y", "p"], "(", "t", ")"}]}]}], ")"}]}]}], 
          ")"}]}], "-", 
        RowBox[{"0.04`", " ", 
         RowBox[{"(", 
          RowBox[{"1", "-", 
           FractionBox["1", 
            SqrtBox[
             RowBox[{
              SuperscriptBox[
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"cos", "(", 
                  RowBox[{
                   SubscriptBox["\[Theta]", "p"], "(", "t", ")"}], ")"}], "+", 
                 RowBox[{"0.1`", " ", 
                  RowBox[{"sin", "(", 
                   RowBox[{
                    SubscriptBox["\[Theta]", "p"], "(", "t", ")"}], ")"}]}], 
                 "-", 
                 RowBox[{
                  SubscriptBox["x", "p"], "(", "t", ")"}]}], ")"}], "2"], "+", 
              SuperscriptBox[
               RowBox[{"(", 
                RowBox[{
                 RowBox[{
                  RowBox[{"-", "0.1`"}], " ", 
                  RowBox[{"cos", "(", 
                   RowBox[{
                    SubscriptBox["\[Theta]", "p"], "(", "t", ")"}], ")"}]}], 
                 "+", 
                 RowBox[{"sin", "(", 
                  RowBox[{
                   SubscriptBox["\[Theta]", "p"], "(", "t", ")"}], ")"}], "-", 
                 RowBox[{
                  SubscriptBox["y", "p"], "(", "t", ")"}]}], ")"}], 
               "2"]}]]]}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"sin", "(", 
             RowBox[{
              SubscriptBox["\[Theta]", "p"], "(", "t", ")"}], ")"}], " ", 
            RowBox[{
             SubscriptBox["x", "p"], "(", "t", ")"}]}], "-", 
           RowBox[{
            RowBox[{"cos", "(", 
             RowBox[{
              SubscriptBox["\[Theta]", "p"], "(", "t", ")"}], ")"}], " ", 
            RowBox[{
             SubscriptBox["y", "p"], "(", "t", ")"}]}], "+", 
           RowBox[{"0.1`", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"-", 
                RowBox[{"cos", "(", 
                 RowBox[{
                  SubscriptBox["\[Theta]", "p"], "(", "t", ")"}], ")"}]}], 
               " ", 
               RowBox[{
                SubscriptBox["x", "p"], "(", "t", ")"}]}], "-", 
              RowBox[{
               RowBox[{"sin", "(", 
                RowBox[{
                 SubscriptBox["\[Theta]", "p"], "(", "t", ")"}], ")"}], " ", 
               RowBox[{
                SubscriptBox["y", "p"], "(", "t", ")"}]}]}], ")"}]}]}], 
          ")"}]}]}]}
     },
     GridBoxAlignment->{
      "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}},
        "RowsIndexed" -> {}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.7]}, 
         Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
         Offset[0.2], {
          Offset[0.4]}, 
         Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}]}], 
  TraditionalForm]], "Output",
 CellChangeTimes->{{3.714905378777268*^9, 3.7149054040869217`*^9}, 
   3.714905437488462*^9, {3.714905471967207*^9, 3.714905497271117*^9}, 
   3.714905539307361*^9, 3.71519647764176*^9}]
}, Closed]],

Cell[" ", "Text",
 Editable->False,
 Selectable->False,
 CellFrame->{{0, 0}, {0, 0.5}},
 ShowCellBracket->False,
 CellMargins->{{0, 0}, {1, 1}},
 CellElementSpacings->{"CellMinHeight"->1},
 CellFrameMargins->0,
 CellFrameColor->RGBColor[0, 0, 1],
 CellSize->{Inherited, 3}],

Cell[" ", "Text",
 Editable->False,
 Selectable->False,
 CellFrame->{{0, 0}, {0, 2}},
 ShowCellBracket->False,
 CellMargins->{{0, 0}, {1, 1}},
 CellElementSpacings->{"CellMinHeight"->1},
 CellFrameMargins->0,
 CellFrameColor->RGBColor[0, 0, 1],
 CellSize->{Inherited, 4}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{"EquibInputConditions", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{
       SubscriptBox["x", "1"], "[", "t", "]"}], "\[Rule]", "0"}], ",", 
     RowBox[{
      RowBox[{
       SubscriptBox["y", "1"], "[", "t", "]"}], "\[Rule]", "0"}], ",", 
     RowBox[{
      RowBox[{
       SubscriptBox["x", "2"], "[", "t", "]"}], "\[Rule]", 
      RowBox[{"2", " ", 
       SubscriptBox["w", "p"]}]}], ",", 
     RowBox[{
      RowBox[{
       SubscriptBox["y", "2"], "[", "t", "]"}], "\[Rule]", 
      RowBox[{
       SubscriptBox["y", "1"], "[", "t", "]"}]}]}], "}"}]}], "*)"}]], "Input",
 CellChangeTimes->{{3.7144542274371877`*^9, 3.714454233992959*^9}, {
   3.7144885653756685`*^9, 3.714488615202901*^9}, {3.714488655868425*^9, 
   3.714488666945746*^9}, {3.714500851158784*^9, 3.7145009061293116`*^9}, 
   3.714557558677371*^9, {3.714558012696953*^9, 3.714558042316923*^9}, 
   3.714558089518324*^9, 3.715216695913105*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{
     SubscriptBox["x", "1"], "[", "t", "]"}], "\[Rule]", "0"}], ",", 
   RowBox[{
    RowBox[{
     SubscriptBox["y", "1"], "[", "t", "]"}], "\[Rule]", "0"}], ",", 
   RowBox[{
    RowBox[{
     SubscriptBox["x", "2"], "[", "t", "]"}], "\[Rule]", 
    RowBox[{"2", " ", 
     SubscriptBox["w", "p"]}]}], ",", 
   RowBox[{
    RowBox[{
     SubscriptBox["y", "2"], "[", "t", "]"}], "\[Rule]", 
    RowBox[{
     SubscriptBox["y", "1"], "[", "t", "]"}]}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.7144886177549553`*^9, 3.714488669069767*^9, 3.714500935062709*^9, 
   3.7145575604065228`*^9, 3.714557959931487*^9, {3.7145580231198874`*^9, 
   3.7145580430514174`*^9}, 3.714558106822803*^9, 3.7151944958580227`*^9, 
   3.715196486614707*^9}]
}, Closed]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
   RowBox[{
    RowBox[{"(", 
     RowBox[{"SymetricEquib", "=", 
      RowBox[{
       RowBox[{
        RowBox[{"EOM", "/.", "nameChange"}], "/.", "greekTermsSymetricCase"}], 
       RowBox[{"(*", 
        RowBox[{"/.", "equibTerms"}], "*)"}], "//.", 
       "EquibInputConditions"}]}], ")"}], "//", "MatrixForm"}], "//", 
   "TraditionalForm"}], "*)"}]], "Input",
 CellChangeTimes->{{3.714454096231372*^9, 3.7144541165889826`*^9}, {
   3.7144886393920555`*^9, 3.7144887039593287`*^9}, {3.714500969997345*^9, 
   3.714500977397519*^9}, 3.7145010310150747`*^9, 3.715216616483011*^9, 
   3.715216668914395*^9}],

Cell[BoxData[
 FormBox[
  TagBox[
   RowBox[{
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {
        RowBox[{
         SuperscriptBox[
          SubscriptBox["x", "p"], "\[Prime]\[Prime]",
          MultilineFunction->None], "(", "t", ")"}]},
       {
        RowBox[{
         SuperscriptBox[
          SubscriptBox["y", "p"], "\[Prime]\[Prime]",
          MultilineFunction->None], "(", "t", ")"}]},
       {
        RowBox[{
         SuperscriptBox[
          SubscriptBox["\[Theta]", "p"], "\[Prime]\[Prime]",
          MultilineFunction->None], "(", "t", ")"}]}
      },
      GridBoxAlignment->{
       "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
        "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}], 
    "\[LongEqual]", 
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"sin", "(", 
              RowBox[{
               SubscriptBox["\[Theta]", "p"], "(", "t", ")"}], ")"}], " ", 
             SubscriptBox["h", "p"]}], "-", 
            RowBox[{
             RowBox[{"cos", "(", 
              RowBox[{
               SubscriptBox["\[Theta]", "p"], "(", "t", ")"}], ")"}], " ", 
             SubscriptBox["w", "p"]}], "+", 
            RowBox[{"2", " ", 
             SubscriptBox["w", "p"]}], "-", 
            RowBox[{
             SubscriptBox["x", "p"], "(", "t", ")"}]}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{"1", "-", 
            FractionBox["1", 
             SqrtBox[
              RowBox[{
               SuperscriptBox[
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"sin", "(", 
                    RowBox[{
                    SubscriptBox["\[Theta]", "p"], "(", "t", ")"}], ")"}], 
                   " ", 
                   SubscriptBox["h", "p"]}], "-", 
                  RowBox[{
                   RowBox[{"cos", "(", 
                    RowBox[{
                    SubscriptBox["\[Theta]", "p"], "(", "t", ")"}], ")"}], 
                   " ", 
                   SubscriptBox["w", "p"]}], "+", 
                  RowBox[{"2", " ", 
                   SubscriptBox["w", "p"]}], "-", 
                  RowBox[{
                   SubscriptBox["x", "p"], "(", "t", ")"}]}], ")"}], "2"], 
               "+", 
               SuperscriptBox[
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"-", 
                    RowBox[{"cos", "(", 
                    RowBox[{
                    SubscriptBox["\[Theta]", "p"], "(", "t", ")"}], ")"}]}], 
                   " ", 
                   SubscriptBox["h", "p"]}], "-", 
                  RowBox[{
                   RowBox[{"sin", "(", 
                    RowBox[{
                    SubscriptBox["\[Theta]", "p"], "(", "t", ")"}], ")"}], 
                   " ", 
                   SubscriptBox["w", "p"]}], "-", 
                  RowBox[{
                   SubscriptBox["y", "p"], "(", "t", ")"}]}], ")"}], 
                "2"]}]]]}], ")"}]}], "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"sin", "(", 
              RowBox[{
               SubscriptBox["\[Theta]", "p"], "(", "t", ")"}], ")"}], " ", 
             SubscriptBox["h", "p"]}], "+", 
            RowBox[{
             RowBox[{"cos", "(", 
              RowBox[{
               SubscriptBox["\[Theta]", "p"], "(", "t", ")"}], ")"}], " ", 
             SubscriptBox["w", "p"]}], "-", 
            RowBox[{
             SubscriptBox["x", "p"], "(", "t", ")"}]}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{"1", "-", 
            FractionBox["1", 
             SqrtBox[
              RowBox[{
               SuperscriptBox[
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"sin", "(", 
                    RowBox[{
                    SubscriptBox["\[Theta]", "p"], "(", "t", ")"}], ")"}], 
                   " ", 
                   SubscriptBox["h", "p"]}], "+", 
                  RowBox[{
                   RowBox[{"cos", "(", 
                    RowBox[{
                    SubscriptBox["\[Theta]", "p"], "(", "t", ")"}], ")"}], 
                   " ", 
                   SubscriptBox["w", "p"]}], "-", 
                  RowBox[{
                   SubscriptBox["x", "p"], "(", "t", ")"}]}], ")"}], "2"], 
               "+", 
               SuperscriptBox[
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"-", 
                    RowBox[{"cos", "(", 
                    RowBox[{
                    SubscriptBox["\[Theta]", "p"], "(", "t", ")"}], ")"}]}], 
                   " ", 
                   SubscriptBox["h", "p"]}], "+", 
                  RowBox[{
                   RowBox[{"sin", "(", 
                    RowBox[{
                    SubscriptBox["\[Theta]", "p"], "(", "t", ")"}], ")"}], 
                   " ", 
                   SubscriptBox["w", "p"]}], "-", 
                  RowBox[{
                   SubscriptBox["y", "p"], "(", "t", ")"}]}], ")"}], 
                "2"]}]]]}], ")"}]}], "-", 
         RowBox[{
          SubscriptBox["c", "1"], " ", 
          RowBox[{
           SuperscriptBox[
            SubscriptBox["x", "p"], "\[Prime]",
            MultilineFunction->None], "(", "t", ")"}]}]}]},
       {
        RowBox[{
         RowBox[{"-", "\[Gamma]"}], "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"1", "-", 
            FractionBox["1", 
             SqrtBox[
              RowBox[{
               SuperscriptBox[
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"sin", "(", 
                    RowBox[{
                    SubscriptBox["\[Theta]", "p"], "(", "t", ")"}], ")"}], 
                   " ", 
                   SubscriptBox["h", "p"]}], "-", 
                  RowBox[{
                   RowBox[{"cos", "(", 
                    RowBox[{
                    SubscriptBox["\[Theta]", "p"], "(", "t", ")"}], ")"}], 
                   " ", 
                   SubscriptBox["w", "p"]}], "+", 
                  RowBox[{"2", " ", 
                   SubscriptBox["w", "p"]}], "-", 
                  RowBox[{
                   SubscriptBox["x", "p"], "(", "t", ")"}]}], ")"}], "2"], 
               "+", 
               SuperscriptBox[
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"-", 
                    RowBox[{"cos", "(", 
                    RowBox[{
                    SubscriptBox["\[Theta]", "p"], "(", "t", ")"}], ")"}]}], 
                   " ", 
                   SubscriptBox["h", "p"]}], "-", 
                  RowBox[{
                   RowBox[{"sin", "(", 
                    RowBox[{
                    SubscriptBox["\[Theta]", "p"], "(", "t", ")"}], ")"}], 
                   " ", 
                   SubscriptBox["w", "p"]}], "-", 
                  RowBox[{
                   SubscriptBox["y", "p"], "(", "t", ")"}]}], ")"}], 
                "2"]}]]]}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"-", 
              RowBox[{"cos", "(", 
               RowBox[{
                SubscriptBox["\[Theta]", "p"], "(", "t", ")"}], ")"}]}], " ", 
             SubscriptBox["h", "p"]}], "-", 
            RowBox[{
             RowBox[{"sin", "(", 
              RowBox[{
               SubscriptBox["\[Theta]", "p"], "(", "t", ")"}], ")"}], " ", 
             SubscriptBox["w", "p"]}], "-", 
            RowBox[{
             SubscriptBox["y", "p"], "(", "t", ")"}]}], ")"}]}], "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"1", "-", 
            FractionBox["1", 
             SqrtBox[
              RowBox[{
               SuperscriptBox[
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"sin", "(", 
                    RowBox[{
                    SubscriptBox["\[Theta]", "p"], "(", "t", ")"}], ")"}], 
                   " ", 
                   SubscriptBox["h", "p"]}], "+", 
                  RowBox[{
                   RowBox[{"cos", "(", 
                    RowBox[{
                    SubscriptBox["\[Theta]", "p"], "(", "t", ")"}], ")"}], 
                   " ", 
                   SubscriptBox["w", "p"]}], "-", 
                  RowBox[{
                   SubscriptBox["x", "p"], "(", "t", ")"}]}], ")"}], "2"], 
               "+", 
               SuperscriptBox[
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"-", 
                    RowBox[{"cos", "(", 
                    RowBox[{
                    SubscriptBox["\[Theta]", "p"], "(", "t", ")"}], ")"}]}], 
                   " ", 
                   SubscriptBox["h", "p"]}], "+", 
                  RowBox[{
                   RowBox[{"sin", "(", 
                    RowBox[{
                    SubscriptBox["\[Theta]", "p"], "(", "t", ")"}], ")"}], 
                   " ", 
                   SubscriptBox["w", "p"]}], "-", 
                  RowBox[{
                   SubscriptBox["y", "p"], "(", "t", ")"}]}], ")"}], 
                "2"]}]]]}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"-", 
              RowBox[{"cos", "(", 
               RowBox[{
                SubscriptBox["\[Theta]", "p"], "(", "t", ")"}], ")"}]}], " ", 
             SubscriptBox["h", "p"]}], "+", 
            RowBox[{
             RowBox[{"sin", "(", 
              RowBox[{
               SubscriptBox["\[Theta]", "p"], "(", "t", ")"}], ")"}], " ", 
             SubscriptBox["w", "p"]}], "-", 
            RowBox[{
             SubscriptBox["y", "p"], "(", "t", ")"}]}], ")"}]}], "-", 
         RowBox[{
          SubscriptBox["c", "2"], " ", 
          RowBox[{
           SuperscriptBox[
            SubscriptBox["y", "p"], "\[Prime]",
            MultilineFunction->None], "(", "t", ")"}]}]}]},
       {
        RowBox[{
         RowBox[{
          RowBox[{"-", "\[Alpha]"}], " ", 
          RowBox[{"(", 
           RowBox[{"1", "-", 
            FractionBox["1", 
             SqrtBox[
              RowBox[{
               SuperscriptBox[
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"sin", "(", 
                    RowBox[{
                    SubscriptBox["\[Theta]", "p"], "(", "t", ")"}], ")"}], 
                   " ", 
                   SubscriptBox["h", "p"]}], "-", 
                  RowBox[{
                   RowBox[{"cos", "(", 
                    RowBox[{
                    SubscriptBox["\[Theta]", "p"], "(", "t", ")"}], ")"}], 
                   " ", 
                   SubscriptBox["w", "p"]}], "+", 
                  RowBox[{"2", " ", 
                   SubscriptBox["w", "p"]}], "-", 
                  RowBox[{
                   SubscriptBox["x", "p"], "(", "t", ")"}]}], ")"}], "2"], 
               "+", 
               SuperscriptBox[
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"-", 
                    RowBox[{"cos", "(", 
                    RowBox[{
                    SubscriptBox["\[Theta]", "p"], "(", "t", ")"}], ")"}]}], 
                   " ", 
                   SubscriptBox["h", "p"]}], "-", 
                  RowBox[{
                   RowBox[{"sin", "(", 
                    RowBox[{
                    SubscriptBox["\[Theta]", "p"], "(", "t", ")"}], ")"}], 
                   " ", 
                   SubscriptBox["w", "p"]}], "-", 
                  RowBox[{
                   SubscriptBox["y", "p"], "(", "t", ")"}]}], ")"}], 
                "2"]}]]]}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             SubscriptBox["w", "p"], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"sin", "(", 
                 RowBox[{
                  SubscriptBox["\[Theta]", "p"], "(", "t", ")"}], ")"}], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"2", " ", 
                   SubscriptBox["w", "p"]}], "-", 
                  RowBox[{
                   SubscriptBox["x", "p"], "(", "t", ")"}]}], ")"}]}], "+", 
               RowBox[{
                RowBox[{"cos", "(", 
                 RowBox[{
                  SubscriptBox["\[Theta]", "p"], "(", "t", ")"}], ")"}], " ", 
                RowBox[{
                 SubscriptBox["y", "p"], "(", "t", ")"}]}]}], ")"}]}], "+", 
            RowBox[{
             SubscriptBox["h", "p"], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"cos", "(", 
                 RowBox[{
                  SubscriptBox["\[Theta]", "p"], "(", "t", ")"}], ")"}], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"2", " ", 
                   SubscriptBox["w", "p"]}], "-", 
                  RowBox[{
                   SubscriptBox["x", "p"], "(", "t", ")"}]}], ")"}]}], "-", 
               RowBox[{
                RowBox[{"sin", "(", 
                 RowBox[{
                  SubscriptBox["\[Theta]", "p"], "(", "t", ")"}], ")"}], " ", 
                RowBox[{
                 SubscriptBox["y", "p"], "(", "t", ")"}]}]}], ")"}]}]}], 
           ")"}]}], "-", 
         RowBox[{"\[Alpha]", " ", 
          RowBox[{"(", 
           RowBox[{"1", "-", 
            FractionBox["1", 
             SqrtBox[
              RowBox[{
               SuperscriptBox[
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"sin", "(", 
                    RowBox[{
                    SubscriptBox["\[Theta]", "p"], "(", "t", ")"}], ")"}], 
                   " ", 
                   SubscriptBox["h", "p"]}], "+", 
                  RowBox[{
                   RowBox[{"cos", "(", 
                    RowBox[{
                    SubscriptBox["\[Theta]", "p"], "(", "t", ")"}], ")"}], 
                   " ", 
                   SubscriptBox["w", "p"]}], "-", 
                  RowBox[{
                   SubscriptBox["x", "p"], "(", "t", ")"}]}], ")"}], "2"], 
               "+", 
               SuperscriptBox[
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"-", 
                    RowBox[{"cos", "(", 
                    RowBox[{
                    SubscriptBox["\[Theta]", "p"], "(", "t", ")"}], ")"}]}], 
                   " ", 
                   SubscriptBox["h", "p"]}], "+", 
                  RowBox[{
                   RowBox[{"sin", "(", 
                    RowBox[{
                    SubscriptBox["\[Theta]", "p"], "(", "t", ")"}], ")"}], 
                   " ", 
                   SubscriptBox["w", "p"]}], "-", 
                  RowBox[{
                   SubscriptBox["y", "p"], "(", "t", ")"}]}], ")"}], 
                "2"]}]]]}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             SubscriptBox["w", "p"], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"sin", "(", 
                 RowBox[{
                  SubscriptBox["\[Theta]", "p"], "(", "t", ")"}], ")"}], " ", 
                RowBox[{
                 SubscriptBox["x", "p"], "(", "t", ")"}]}], "-", 
               RowBox[{
                RowBox[{"cos", "(", 
                 RowBox[{
                  SubscriptBox["\[Theta]", "p"], "(", "t", ")"}], ")"}], " ", 
                RowBox[{
                 SubscriptBox["y", "p"], "(", "t", ")"}]}]}], ")"}]}], "+", 
            RowBox[{
             SubscriptBox["h", "p"], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"-", 
                 RowBox[{"cos", "(", 
                  RowBox[{
                   SubscriptBox["\[Theta]", "p"], "(", "t", ")"}], ")"}]}], 
                " ", 
                RowBox[{
                 SubscriptBox["x", "p"], "(", "t", ")"}]}], "-", 
               RowBox[{
                RowBox[{"sin", "(", 
                 RowBox[{
                  SubscriptBox["\[Theta]", "p"], "(", "t", ")"}], ")"}], " ", 
                RowBox[{
                 SubscriptBox["y", "p"], "(", "t", ")"}]}]}], ")"}]}]}], 
           ")"}]}], "-", 
         RowBox[{
          SubscriptBox["c", "3"], " ", 
          RowBox[{
           SuperscriptBox[
            SubscriptBox["\[Theta]", "p"], "\[Prime]",
            MultilineFunction->None], "(", "t", ")"}]}]}]}
      },
      GridBoxAlignment->{
       "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
        "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}]}],
   Function[BoxForm`e$, 
    MatrixForm[BoxForm`e$]]], TraditionalForm]], "Output",
 CellChangeTimes->{{3.714488674553899*^9, 3.714488704303336*^9}, 
   3.7145009790215592`*^9, 3.714501031815095*^9, 3.7145575784505215`*^9, 
   3.7145579633197412`*^9, {3.7145580246168795`*^9, 3.7145580445133843`*^9}, 
   3.7145581081613765`*^9, 3.7151964949432287`*^9, 3.7152166207157803`*^9}]
}, Closed]],

Cell[" ", "Text",
 Editable->False,
 Selectable->False,
 CellFrame->{{0, 0}, {0, 0.5}},
 ShowCellBracket->False,
 CellMargins->{{0, 0}, {1, 1}},
 CellElementSpacings->{"CellMinHeight"->1},
 CellFrameMargins->0,
 CellFrameColor->RGBColor[0, 0, 1],
 CellSize->{Inherited, 3}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"NumericParametersTest", "=", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{
     SubscriptBox["k", "1"], "\[Rule]", "200"}], ",", " ", 
    RowBox[{
     SubscriptBox["k", "2"], "\[Rule]", 
     RowBox[{
      SubscriptBox["k", "1"], "+", "0"}]}], ",", 
    RowBox[{
     SubscriptBox["L0", "1"], "\[Rule]", "2"}], ",", 
    RowBox[{
     SubscriptBox["L0", "2"], "\[Rule]", 
     RowBox[{
      SubscriptBox["L0", "1"], "+", "0"}]}], ",", 
    RowBox[{
     SubscriptBox["m", "p"], "\[Rule]", "2"}], ",", 
    RowBox[{
     SubscriptBox["h", "p"], "\[Rule]", "0.1"}], ",", 
    RowBox[{
     SubscriptBox["w", "p"], "\[Rule]", "1"}], ",", 
    RowBox[{"g", "\[Rule]", "9.81"}]}], "}"}]}], "\[IndentingNewLine]", 
 RowBox[{"NumericEquibInputs", "=", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{
     RowBox[{
      SubscriptBox["x", "1"], "[", "t", "]"}], "\[Rule]", "0"}], ",", 
    RowBox[{
     RowBox[{
      SubscriptBox["y", "1"], "[", "t", "]"}], "\[Rule]", "0"}], ",", 
    RowBox[{
     RowBox[{
      SubscriptBox["x", "2"], "[", "t", "]"}], "\[Rule]", 
     RowBox[{"2", 
      SubscriptBox["w", "p"]}]}], ",", 
    RowBox[{
     RowBox[{
      SubscriptBox["y", "2"], "[", "t", "]"}], "\[Rule]", "0"}]}], 
   RowBox[{"(*", 
    RowBox[{",", 
     RowBox[{"\[Alpha]", "\[Rule]", "0.04"}], ",", 
     RowBox[{"\[Gamma]", "\[Rule]", "2"}]}], "*)"}], 
   "}"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"NumericStructuralDamping", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      SubscriptBox["c", "1"], "\[Rule]", "1"}], ",", 
     RowBox[{
      SubscriptBox["c", "2"], "\[Rule]", "1"}], ",", 
     RowBox[{
      SubscriptBox["c", "3"], "\[Rule]", "1"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"NumericNonStructuralDamping", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      SubscriptBox["c", "1"], "\[Rule]", "0"}], ",", 
     RowBox[{
      SubscriptBox["c", "2"], "\[Rule]", "0"}], ",", 
     RowBox[{
      SubscriptBox["c", "3"], "\[Rule]", "0"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"greekTermsGeneralForTest", "=", 
   RowBox[{"{", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"\[Kappa]", "\[Rule]", 
      FractionBox[
       SubscriptBox["k", "2"], 
       SubscriptBox["k", "1"]]}], ",", "\[IndentingNewLine]", 
     RowBox[{"\[ScriptCapitalL]", "\[Rule]", 
      FractionBox[
       SubscriptBox["L0", "2"], 
       SubscriptBox["L0", "1"]]}], ",", "\[IndentingNewLine]", 
     RowBox[{
      SuperscriptBox[
       SubscriptBox["\[Omega]", "s"], "2"], "\[Rule]", 
      FractionBox[
       SubscriptBox["k", "1"], 
       SubscriptBox["m", "p"]]}], ",", "\[IndentingNewLine]", 
     RowBox[{"\[Alpha]", "\[Rule]", 
      FractionBox[
       RowBox[{"3", 
        SuperscriptBox[
         SubscriptBox["L0", "1"], "2"]}], 
       RowBox[{"(", 
        RowBox[{
         SuperscriptBox[
          SubscriptBox["w", "p"], "2"], "+", 
         SuperscriptBox[
          SubscriptBox["h", "p"], "2"]}], ")"}]]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"\[Gamma]", "->", 
      RowBox[{"(", 
       FractionBox[
        RowBox[{"g", " ", 
         SubscriptBox["m", "p"]}], 
        RowBox[{
         SubscriptBox["L0", "1"], 
         SubscriptBox["k", "1"]}]], ")"}]}]}], "\[IndentingNewLine]", "}"}]}],
   "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    FractionBox["g", 
     SubscriptBox["L0", "1"]], "/.", "NumericParametersTest"}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{"NumericTestParams", "=", 
  RowBox[{
  "greekTermsGeneralForTest", "//.", "NumericParametersTest"}]}]}], "Input",
 CellChangeTimes->{{3.714537390515764*^9, 3.714537495401929*^9}, {
   3.7145394243169956`*^9, 3.7145395200033665`*^9}, {3.714539561885668*^9, 
   3.714539561925669*^9}, {3.714539600756035*^9, 3.7145396078122044`*^9}, 
   3.714539643430365*^9, {3.7145403822630777`*^9, 3.7145404732888412`*^9}, {
   3.7145406031390085`*^9, 3.714540692345502*^9}, 3.7145407345401635`*^9, {
   3.7145408445533953`*^9, 3.7145408712491493`*^9}, {3.714540943577881*^9, 
   3.7145409544539022`*^9}, {3.715216761944151*^9, 3.7152168019028397`*^9}, {
   3.7152168578775063`*^9, 3.715216970161231*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    SubscriptBox["k", "1"], "\[Rule]", "200"}], ",", 
   RowBox[{
    SubscriptBox["k", "2"], "\[Rule]", 
    SubscriptBox["k", "1"]}], ",", 
   RowBox[{
    SubscriptBox["L0", "1"], "\[Rule]", "2"}], ",", 
   RowBox[{
    SubscriptBox["L0", "2"], "\[Rule]", 
    SubscriptBox["L0", "1"]}], ",", 
   RowBox[{
    SubscriptBox["m", "p"], "\[Rule]", "2"}], ",", 
   RowBox[{
    SubscriptBox["h", "p"], "\[Rule]", "0.1`"}], ",", 
   RowBox[{
    SubscriptBox["w", "p"], "\[Rule]", "1"}], ",", 
   RowBox[{"g", "\[Rule]", "9.81`"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.714540661810577*^9, 3.7145406955766535`*^9, 3.7145407351845913`*^9, {
   3.714540862633419*^9, 3.7145408719466143`*^9}, 3.7145409562140727`*^9, 
   3.714557562366824*^9, 3.7145581689004793`*^9, 3.715194461223075*^9, 
   3.7151964987027164`*^9, 3.71521682700043*^9, 3.715216866513716*^9, 
   3.715216897279133*^9, 3.7152169748573303`*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{
     SubscriptBox["x", "1"], "[", "t", "]"}], "\[Rule]", "0"}], ",", 
   RowBox[{
    RowBox[{
     SubscriptBox["y", "1"], "[", "t", "]"}], "\[Rule]", "0"}], ",", 
   RowBox[{
    RowBox[{
     SubscriptBox["x", "2"], "[", "t", "]"}], "\[Rule]", 
    RowBox[{"2", " ", 
     SubscriptBox["w", "p"]}]}], ",", 
   RowBox[{
    RowBox[{
     SubscriptBox["y", "2"], "[", "t", "]"}], "\[Rule]", "0"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{
  3.714540661810577*^9, 3.7145406955766535`*^9, 3.7145407351845913`*^9, {
   3.714540862633419*^9, 3.7145408719466143`*^9}, 3.7145409562140727`*^9, 
   3.714557562366824*^9, 3.7145581689004793`*^9, 3.715194461223075*^9, 
   3.7151964987027164`*^9, 3.71521682700043*^9, 3.715216866513716*^9, 
   3.715216897279133*^9, 3.7152169748573303`*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"\[Kappa]", "\[Rule]", 
    FractionBox[
     SubscriptBox["k", "2"], 
     SubscriptBox["k", "1"]]}], ",", 
   RowBox[{"\[ScriptCapitalL]", "\[Rule]", 
    FractionBox[
     SubscriptBox["L0", "2"], 
     SubscriptBox["L0", "1"]]}], ",", 
   RowBox[{
    SubsuperscriptBox["\[Omega]", "s", "2"], "\[Rule]", 
    FractionBox[
     SubscriptBox["k", "1"], 
     SubscriptBox["m", "p"]]}], ",", 
   RowBox[{"\[Alpha]", "\[Rule]", 
    FractionBox[
     RowBox[{"3", " ", 
      SubsuperscriptBox["L0", "1", "2"]}], 
     RowBox[{
      SubsuperscriptBox["h", "p", "2"], "+", 
      SubsuperscriptBox["w", "p", "2"]}]]}], ",", 
   RowBox[{"\[Gamma]", "\[Rule]", 
    FractionBox[
     RowBox[{"g", " ", 
      SubscriptBox["m", "p"]}], 
     RowBox[{
      SubscriptBox["k", "1"], " ", 
      SubscriptBox["L0", "1"]}]]}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.714540661810577*^9, 3.7145406955766535`*^9, 3.7145407351845913`*^9, {
   3.714540862633419*^9, 3.7145408719466143`*^9}, 3.7145409562140727`*^9, 
   3.714557562366824*^9, 3.7145581689004793`*^9, 3.715194461223075*^9, 
   3.7151964987027164`*^9, 3.71521682700043*^9, 3.715216866513716*^9, 
   3.715216897279133*^9, 3.715216974861331*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"\[Kappa]", "\[Rule]", "1"}], ",", 
   RowBox[{"\[ScriptCapitalL]", "\[Rule]", "1"}], ",", 
   RowBox[{
    SubsuperscriptBox["\[Omega]", "s", "2"], "\[Rule]", "100"}], ",", 
   RowBox[{"\[Alpha]", "\[Rule]", "11.881188118811881`"}], ",", 
   RowBox[{"\[Gamma]", "\[Rule]", "0.04905`"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.714540661810577*^9, 3.7145406955766535`*^9, 3.7145407351845913`*^9, {
   3.714540862633419*^9, 3.7145408719466143`*^9}, 3.7145409562140727`*^9, 
   3.714557562366824*^9, 3.7145581689004793`*^9, 3.715194461223075*^9, 
   3.7151964987027164`*^9, 3.71521682700043*^9, 3.715216866513716*^9, 
   3.715216897279133*^9, 3.7152169748653316`*^9}]
}, Open  ]],

Cell[" ", "Text",
 Editable->False,
 Selectable->False,
 CellFrame->{{0, 0}, {0, 0.5}},
 ShowCellBracket->False,
 CellMargins->{{0, 0}, {1, 1}},
 CellElementSpacings->{"CellMinHeight"->1},
 CellFrameMargins->0,
 CellFrameColor->RGBColor[0, 0, 1],
 CellSize->{Inherited, 3}],

Cell[" ", "Text",
 Editable->False,
 Selectable->False,
 CellFrame->{{0, 0}, {0, 3}},
 ShowCellBracket->False,
 CellMargins->{{0, 0}, {1, 1}},
 CellElementSpacings->{"CellMinHeight"->1},
 CellFrameMargins->0,
 CellFrameColor->RGBColor[0, 0, 1],
 CellSize->{Inherited, 5}],

Cell[" ", "Text",
 Editable->False,
 Selectable->False,
 CellFrame->{{0, 0}, {0, 3}},
 ShowCellBracket->False,
 CellMargins->{{0, 0}, {1, 1}},
 CellElementSpacings->{"CellMinHeight"->1},
 CellFrameMargins->0,
 CellFrameColor->RGBColor[0, 0, 1],
 CellSize->{Inherited, 5}],

Cell[" ", "Text",
 Editable->False,
 Selectable->False,
 CellFrame->{{0, 0}, {0, 0.5}},
 ShowCellBracket->False,
 CellMargins->{{0, 0}, {1, 1}},
 CellElementSpacings->{"CellMinHeight"->1},
 CellFrameMargins->0,
 CellFrameColor->RGBColor[0, 0, 1],
 CellSize->{Inherited, 3}],

Cell[" ", "Text",
 Editable->False,
 Selectable->False,
 CellFrame->{{0, 0}, {0, 3}},
 ShowCellBracket->False,
 CellMargins->{{0, 0}, {1, 1}},
 CellElementSpacings->{"CellMinHeight"->1},
 CellFrameMargins->0,
 CellFrameColor->RGBColor[0, 0, 1],
 CellSize->{Inherited, 5}],

Cell[" ", "Text",
 Editable->False,
 Selectable->False,
 CellFrame->{{0, 0}, {0, 3}},
 ShowCellBracket->False,
 CellMargins->{{0, 0}, {1, 1}},
 CellElementSpacings->{"CellMinHeight"->1},
 CellFrameMargins->0,
 CellFrameColor->RGBColor[0, 0, 1],
 CellSize->{Inherited, 5}],

Cell[" ", "Text",
 Editable->False,
 Selectable->False,
 CellFrame->{{0, 0}, {0, 0.5}},
 ShowCellBracket->False,
 CellMargins->{{0, 0}, {1, 1}},
 CellElementSpacings->{"CellMinHeight"->1},
 CellFrameMargins->0,
 CellFrameColor->RGBColor[0, 0, 1],
 CellSize->{Inherited, 3}],

Cell["\[OpenCurlyDoubleQuote](*simple case \
testings:*)\[CloseCurlyDoubleQuote]", "Text",
 CellChangeTimes->{{3.7143753343649387`*^9, 3.7143753420451508`*^9}, {
  3.715217054360982*^9, 3.715217059889098*^9}}],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
   RowBox[{"trajectory", ":", "\[IndentingNewLine]", "\[Tau]"}], "=", 
   RowBox[{
    RowBox[{"0", ":", " ", 
     OverscriptBox["y", ".."]}], "=", 
    RowBox[{
     RowBox[{"1", 
      RowBox[{"m", "/", 
       SuperscriptBox["s", "2"]}], "  ", "until", " ", 
      SubscriptBox["y", "1"]}], "=", 
     RowBox[{
      SubscriptBox["y", "2"], "=", 
      RowBox[{
       RowBox[{"10", 
        SubscriptBox["L0", "1"], "\[IndentingNewLine]", "    ", 
        OverscriptBox["y", ".."]}], "=", 
       RowBox[{
        RowBox[{
         RowBox[{"-", "1"}], 
         RowBox[{"m", "/", 
          SuperscriptBox["s", "2"]}], " ", "until", " ", 
         OverscriptBox[
          SubscriptBox["y", "1"], "."]}], "=", 
        RowBox[{
         OverscriptBox[
          SubscriptBox["y", "2"], "."], "=", 
         RowBox[{
          RowBox[{"0", "\[IndentingNewLine]", 
           OverscriptBox[
            SubscriptBox["x", "1"], ".."]}], "=", 
          RowBox[{
           OverscriptBox[
            SubscriptBox["x", "2"], ".."], "=", 
           RowBox[{
            RowBox[{"1", 
             RowBox[{"m", "/", 
              SuperscriptBox["s", "2"]}], "  ", "until", " ", 
             OverscriptBox[
              SubscriptBox["x", "1"], "."]}], "=", 
            RowBox[{
             OverscriptBox[
              SubscriptBox["x", "2"], "."], "=", 
             RowBox[{
              RowBox[{"2", 
               RowBox[{"m", "/", "s"}], "\[IndentingNewLine]", "disterbunce", 
               " ", "can", " ", "be", " ", "input", " ", "by", " ", 
               SubscriptBox["x", "1"]}], "+=", 
              RowBox[{"5", 
               SubscriptBox["L0", "1"], " ", "over", " ", 
               FractionBox["1", 
                RowBox[{"100", " ", 
                 SqrtBox[
                  SubscriptBox["\[Omega]", "s"]]}]]}]}]}]}]}]}]}]}]}]}]}]}]}],
   "*)"}]], "Input",
 CellChangeTimes->{{3.7128649918168645`*^9, 3.712864999951256*^9}, {
   3.7128650538669786`*^9, 3.7128653567852306`*^9}, 3.714375349988761*^9}],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.712831792809779*^9, 3.712831794993853*^9}}],

Cell[" ", "Text",
 Editable->False,
 Selectable->False,
 CellFrame->{{0, 0}, {0, 2}},
 ShowCellBracket->False,
 CellMargins->{{0, 0}, {1, 1}},
 CellElementSpacings->{"CellMinHeight"->1},
 CellFrameMargins->0,
 CellFrameColor->RGBColor[0, 0, 1],
 CellSize->{Inherited, 4}],

Cell[" ", "Text",
 Editable->False,
 Selectable->False,
 CellFrame->{{0, 0}, {0, 3}},
 ShowCellBracket->False,
 CellMargins->{{0, 0}, {1, 1}},
 CellElementSpacings->{"CellMinHeight"->1},
 CellFrameMargins->0,
 CellFrameColor->RGBColor[0, 0, 1],
 CellSize->{Inherited, 5}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
   "greekTermsSymetricCase", " ", "must", " ", "be", " ", "used", " ", 
    "again", " ", "because", " ", "this", " ", "is", " ", "where", " ", "the",
     " ", "equilibrium", " ", "point", " ", "is", " ", "refering", " ", 
    RowBox[{"to", " ", ".", "\[IndentingNewLine]", "EquibInputConditions"}], 
    " ", "might", " ", "be", " ", "turned", " ", "of", " ", "later", " ", 
    "for", " ", "better", " ", "investigation"}], " ", "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{"SymetricEOMtoInvestigate", "=", 
       RowBox[{
        RowBox[{"EOM", "/.", "greekTermsSymetricCase"}], "//.", 
        "EquibInputConditions"}]}], ")"}], "/.", "dispNoTime"}], "//", 
    "MatrixForm"}], "//", "TraditionalForm"}]}]], "Input",
 CellChangeTimes->{{3.7145730224935207`*^9, 3.7145730317420354`*^9}, {
  3.714573143376878*^9, 3.714573149965064*^9}, {3.7145731973242517`*^9, 
  3.714573299203663*^9}, {3.715194470232045*^9, 3.715194486098557*^9}}],

Cell[BoxData[
 FormBox[
  TagBox[
   RowBox[{
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {
        SuperscriptBox[
         SubscriptBox["x", "p"], "\[Prime]\[Prime]",
         MultilineFunction->None]},
       {
        SuperscriptBox[
         SubscriptBox["y", "p"], "\[Prime]\[Prime]",
         MultilineFunction->None]},
       {
        SuperscriptBox[
         SubscriptBox["\[Theta]", "p"], "\[Prime]\[Prime]",
         MultilineFunction->None]}
      },
      GridBoxAlignment->{
       "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
        "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}], 
    "\[LongEqual]", 
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"sin", "(", 
              SubscriptBox["\[Theta]", "p"], ")"}], " ", 
             SubscriptBox["h", "p"]}], "-", 
            RowBox[{
             RowBox[{"cos", "(", 
              SubscriptBox["\[Theta]", "p"], ")"}], " ", 
             SubscriptBox["w", "p"]}], "+", 
            RowBox[{"2", " ", 
             SubscriptBox["w", "p"]}], "-", 
            SubscriptBox["x", "p"]}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{"1", "-", 
            FractionBox["1", 
             SqrtBox[
              RowBox[{
               SuperscriptBox[
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"sin", "(", 
                    SubscriptBox["\[Theta]", "p"], ")"}], " ", 
                   SubscriptBox["h", "p"]}], "-", 
                  RowBox[{
                   RowBox[{"cos", "(", 
                    SubscriptBox["\[Theta]", "p"], ")"}], " ", 
                   SubscriptBox["w", "p"]}], "+", 
                  RowBox[{"2", " ", 
                   SubscriptBox["w", "p"]}], "-", 
                  SubscriptBox["x", "p"]}], ")"}], "2"], "+", 
               SuperscriptBox[
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"-", 
                    RowBox[{"cos", "(", 
                    SubscriptBox["\[Theta]", "p"], ")"}]}], " ", 
                   SubscriptBox["h", "p"]}], "-", 
                  RowBox[{
                   RowBox[{"sin", "(", 
                    SubscriptBox["\[Theta]", "p"], ")"}], " ", 
                   SubscriptBox["w", "p"]}], "-", 
                  SubscriptBox["y", "p"]}], ")"}], "2"]}]]]}], ")"}]}], "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"sin", "(", 
              SubscriptBox["\[Theta]", "p"], ")"}], " ", 
             SubscriptBox["h", "p"]}], "+", 
            RowBox[{
             RowBox[{"cos", "(", 
              SubscriptBox["\[Theta]", "p"], ")"}], " ", 
             SubscriptBox["w", "p"]}], "-", 
            SubscriptBox["x", "p"]}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{"1", "-", 
            FractionBox["1", 
             SqrtBox[
              RowBox[{
               SuperscriptBox[
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"sin", "(", 
                    SubscriptBox["\[Theta]", "p"], ")"}], " ", 
                   SubscriptBox["h", "p"]}], "+", 
                  RowBox[{
                   RowBox[{"cos", "(", 
                    SubscriptBox["\[Theta]", "p"], ")"}], " ", 
                   SubscriptBox["w", "p"]}], "-", 
                  SubscriptBox["x", "p"]}], ")"}], "2"], "+", 
               SuperscriptBox[
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"-", 
                    RowBox[{"cos", "(", 
                    SubscriptBox["\[Theta]", "p"], ")"}]}], " ", 
                   SubscriptBox["h", "p"]}], "+", 
                  RowBox[{
                   RowBox[{"sin", "(", 
                    SubscriptBox["\[Theta]", "p"], ")"}], " ", 
                   SubscriptBox["w", "p"]}], "-", 
                  SubscriptBox["y", "p"]}], ")"}], "2"]}]]]}], ")"}]}], "-", 
         RowBox[{
          SubscriptBox["c", "1"], " ", 
          SuperscriptBox[
           SubscriptBox["x", "p"], "\[Prime]",
           MultilineFunction->None]}]}]},
       {
        RowBox[{
         RowBox[{"-", "\[Gamma]"}], "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"1", "-", 
            FractionBox["1", 
             SqrtBox[
              RowBox[{
               SuperscriptBox[
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"sin", "(", 
                    SubscriptBox["\[Theta]", "p"], ")"}], " ", 
                   SubscriptBox["h", "p"]}], "-", 
                  RowBox[{
                   RowBox[{"cos", "(", 
                    SubscriptBox["\[Theta]", "p"], ")"}], " ", 
                   SubscriptBox["w", "p"]}], "+", 
                  RowBox[{"2", " ", 
                   SubscriptBox["w", "p"]}], "-", 
                  SubscriptBox["x", "p"]}], ")"}], "2"], "+", 
               SuperscriptBox[
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"-", 
                    RowBox[{"cos", "(", 
                    SubscriptBox["\[Theta]", "p"], ")"}]}], " ", 
                   SubscriptBox["h", "p"]}], "-", 
                  RowBox[{
                   RowBox[{"sin", "(", 
                    SubscriptBox["\[Theta]", "p"], ")"}], " ", 
                   SubscriptBox["w", "p"]}], "-", 
                  SubscriptBox["y", "p"]}], ")"}], "2"]}]]]}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"-", 
              RowBox[{"cos", "(", 
               SubscriptBox["\[Theta]", "p"], ")"}]}], " ", 
             SubscriptBox["h", "p"]}], "-", 
            RowBox[{
             RowBox[{"sin", "(", 
              SubscriptBox["\[Theta]", "p"], ")"}], " ", 
             SubscriptBox["w", "p"]}], "-", 
            SubscriptBox["y", "p"]}], ")"}]}], "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"1", "-", 
            FractionBox["1", 
             SqrtBox[
              RowBox[{
               SuperscriptBox[
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"sin", "(", 
                    SubscriptBox["\[Theta]", "p"], ")"}], " ", 
                   SubscriptBox["h", "p"]}], "+", 
                  RowBox[{
                   RowBox[{"cos", "(", 
                    SubscriptBox["\[Theta]", "p"], ")"}], " ", 
                   SubscriptBox["w", "p"]}], "-", 
                  SubscriptBox["x", "p"]}], ")"}], "2"], "+", 
               SuperscriptBox[
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"-", 
                    RowBox[{"cos", "(", 
                    SubscriptBox["\[Theta]", "p"], ")"}]}], " ", 
                   SubscriptBox["h", "p"]}], "+", 
                  RowBox[{
                   RowBox[{"sin", "(", 
                    SubscriptBox["\[Theta]", "p"], ")"}], " ", 
                   SubscriptBox["w", "p"]}], "-", 
                  SubscriptBox["y", "p"]}], ")"}], "2"]}]]]}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"-", 
              RowBox[{"cos", "(", 
               SubscriptBox["\[Theta]", "p"], ")"}]}], " ", 
             SubscriptBox["h", "p"]}], "+", 
            RowBox[{
             RowBox[{"sin", "(", 
              SubscriptBox["\[Theta]", "p"], ")"}], " ", 
             SubscriptBox["w", "p"]}], "-", 
            SubscriptBox["y", "p"]}], ")"}]}], "-", 
         RowBox[{
          SubscriptBox["c", "2"], " ", 
          SuperscriptBox[
           SubscriptBox["y", "p"], "\[Prime]",
           MultilineFunction->None]}]}]},
       {
        RowBox[{
         RowBox[{
          RowBox[{"-", "\[Alpha]"}], " ", 
          RowBox[{"(", 
           RowBox[{"1", "-", 
            FractionBox["1", 
             SqrtBox[
              RowBox[{
               SuperscriptBox[
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"sin", "(", 
                    SubscriptBox["\[Theta]", "p"], ")"}], " ", 
                   SubscriptBox["h", "p"]}], "-", 
                  RowBox[{
                   RowBox[{"cos", "(", 
                    SubscriptBox["\[Theta]", "p"], ")"}], " ", 
                   SubscriptBox["w", "p"]}], "+", 
                  RowBox[{"2", " ", 
                   SubscriptBox["w", "p"]}], "-", 
                  SubscriptBox["x", "p"]}], ")"}], "2"], "+", 
               SuperscriptBox[
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"-", 
                    RowBox[{"cos", "(", 
                    SubscriptBox["\[Theta]", "p"], ")"}]}], " ", 
                   SubscriptBox["h", "p"]}], "-", 
                  RowBox[{
                   RowBox[{"sin", "(", 
                    SubscriptBox["\[Theta]", "p"], ")"}], " ", 
                   SubscriptBox["w", "p"]}], "-", 
                  SubscriptBox["y", "p"]}], ")"}], "2"]}]]]}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             SubscriptBox["w", "p"], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"sin", "(", 
                 SubscriptBox["\[Theta]", "p"], ")"}], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"2", " ", 
                   SubscriptBox["w", "p"]}], "-", 
                  SubscriptBox["x", "p"]}], ")"}]}], "+", 
               RowBox[{
                RowBox[{"cos", "(", 
                 SubscriptBox["\[Theta]", "p"], ")"}], " ", 
                SubscriptBox["y", "p"]}]}], ")"}]}], "+", 
            RowBox[{
             SubscriptBox["h", "p"], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"cos", "(", 
                 SubscriptBox["\[Theta]", "p"], ")"}], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"2", " ", 
                   SubscriptBox["w", "p"]}], "-", 
                  SubscriptBox["x", "p"]}], ")"}]}], "-", 
               RowBox[{
                RowBox[{"sin", "(", 
                 SubscriptBox["\[Theta]", "p"], ")"}], " ", 
                SubscriptBox["y", "p"]}]}], ")"}]}]}], ")"}]}], "-", 
         RowBox[{"\[Alpha]", " ", 
          RowBox[{"(", 
           RowBox[{"1", "-", 
            FractionBox["1", 
             SqrtBox[
              RowBox[{
               SuperscriptBox[
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"sin", "(", 
                    SubscriptBox["\[Theta]", "p"], ")"}], " ", 
                   SubscriptBox["h", "p"]}], "+", 
                  RowBox[{
                   RowBox[{"cos", "(", 
                    SubscriptBox["\[Theta]", "p"], ")"}], " ", 
                   SubscriptBox["w", "p"]}], "-", 
                  SubscriptBox["x", "p"]}], ")"}], "2"], "+", 
               SuperscriptBox[
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"-", 
                    RowBox[{"cos", "(", 
                    SubscriptBox["\[Theta]", "p"], ")"}]}], " ", 
                   SubscriptBox["h", "p"]}], "+", 
                  RowBox[{
                   RowBox[{"sin", "(", 
                    SubscriptBox["\[Theta]", "p"], ")"}], " ", 
                   SubscriptBox["w", "p"]}], "-", 
                  SubscriptBox["y", "p"]}], ")"}], "2"]}]]]}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             SubscriptBox["w", "p"], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"sin", "(", 
                 SubscriptBox["\[Theta]", "p"], ")"}], " ", 
                SubscriptBox["x", "p"]}], "-", 
               RowBox[{
                RowBox[{"cos", "(", 
                 SubscriptBox["\[Theta]", "p"], ")"}], " ", 
                SubscriptBox["y", "p"]}]}], ")"}]}], "+", 
            RowBox[{
             SubscriptBox["h", "p"], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"-", 
                 RowBox[{"cos", "(", 
                  SubscriptBox["\[Theta]", "p"], ")"}]}], " ", 
                SubscriptBox["x", "p"]}], "-", 
               RowBox[{
                RowBox[{"sin", "(", 
                 SubscriptBox["\[Theta]", "p"], ")"}], " ", 
                SubscriptBox["y", "p"]}]}], ")"}]}]}], ")"}]}], "-", 
         RowBox[{
          SubscriptBox["c", "3"], " ", 
          SuperscriptBox[
           SubscriptBox["\[Theta]", "p"], "\[Prime]",
           MultilineFunction->None]}]}]}
      },
      GridBoxAlignment->{
       "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
        "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}]}],
   Function[BoxForm`e$, 
    MatrixForm[BoxForm`e$]]], TraditionalForm]], "Output",
 CellChangeTimes->{3.714573363860479*^9, 3.7151945092709103`*^9, 
  3.715196512828076*^9, 3.7152171521546526`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"testValid", "=", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{
        SubscriptBox["x", "p"], "[", "t", "]"}], "\[Rule]", "1"}], ",", 
      RowBox[{
       RowBox[{
        SubscriptBox["y", "p"], "[", "t", "]"}], "\[Rule]", "1"}], ",", 
      RowBox[{
       RowBox[{
        SubscriptBox["\[Theta]", "p"], "[", "t", "]"}], "\[Rule]", "1"}]}], 
     "}"}]}], ";"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"testValid", "=", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{
         SubscriptBox["x", "p"], "[", "t", "]"}], "\[Rule]", "1"}], ",", 
       RowBox[{"(*", 
        RowBox[{
         RowBox[{
          RowBox[{
           SubscriptBox["y", "p"], "[", "t", "]"}], "\[Rule]", "1"}], ","}], 
        "*)"}], 
       RowBox[{
        RowBox[{
         SubscriptBox["\[Theta]", "p"], "[", "t", "]"}], "\[Rule]", "1"}]}], 
      "}"}]}], ";"}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"(", 
     RowBox[{"EOMtoSolve", "=", 
      RowBox[{
       RowBox[{
        RowBox[{"SymetricEOMtoInvestigate", "/.", "NumericTestParams"}], "/.",
         "NumericParametersTest"}], "/.", "NumericNonStructuralDamping"}]}], 
     ")"}], "/.", "testValid"}], "//", "MatrixForm"}], "//", 
  "TraditionalForm"}], "\[IndentingNewLine]", 
 RowBox[{"EOMtoSolve", ";"}]}], "Input",
 CellChangeTimes->{{3.7145730224935207`*^9, 3.7145730317420354`*^9}, {
   3.714573143376878*^9, 3.714573149965064*^9}, {3.7145731973242517`*^9, 
   3.714573299203663*^9}, {3.715194470232045*^9, 3.715194486098557*^9}, {
   3.71519523241648*^9, 3.7151952739570017`*^9}, {3.715195329333274*^9, 
   3.7151954743625917`*^9}, {3.7151955475443764`*^9, 3.715195578432841*^9}, {
   3.7152170962076855`*^9, 3.7152171226129074`*^9}, {3.715217164499918*^9, 
   3.7152171652959347`*^9}, {3.7152172168210945`*^9, 
   3.7152172174090776`*^9}, {3.7152173121590214`*^9, 
   3.7152173219277935`*^9}, {3.715217391622646*^9, 3.7152173946467357`*^9}, 
   3.7152511924677615`*^9, {3.7152665721991787`*^9, 3.7152665725231857`*^9}, {
   3.715266681936824*^9, 3.7152666823368244`*^9}}],

Cell[BoxData[
 FormBox[
  TagBox[
   RowBox[{
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {
        RowBox[{
         SuperscriptBox[
          SubscriptBox["x", "p"], "\[Prime]\[Prime]",
          MultilineFunction->None], "(", "t", ")"}]},
       {
        RowBox[{
         SuperscriptBox[
          SubscriptBox["y", "p"], "\[Prime]\[Prime]",
          MultilineFunction->None], "(", "t", ")"}]},
       {
        RowBox[{
         SuperscriptBox[
          SubscriptBox["\[Theta]", "p"], "\[Prime]\[Prime]",
          MultilineFunction->None], "(", "t", ")"}]}
      },
      GridBoxAlignment->{
       "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
        "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}], 
    "\[LongEqual]", 
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"0.7627808803430645`"},
       {
        RowBox[{"-", "0.7033224290181195`"}]},
       {
        RowBox[{"-", "5.3644913963316725`"}]}
      },
      GridBoxAlignment->{
       "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
        "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}]}],
   Function[BoxForm`e$, 
    MatrixForm[BoxForm`e$]]], TraditionalForm]], "Output",
 CellChangeTimes->{
  3.7151952745734086`*^9, 3.7151953621678376`*^9, {3.715195412780658*^9, 
   3.715195475931634*^9}, {3.7151955676136723`*^9, 3.7151955791613226`*^9}, 
   3.7151965163914356`*^9, {3.7152170921035995`*^9, 3.7152171233409214`*^9}, {
   3.715217154822712*^9, 3.715217174080126*^9}, 3.715217218537101*^9, {
   3.71521731386703*^9, 3.715217322791812*^9}, 3.715217395610728*^9, {
   3.715251186519633*^9, 3.715251193427782*^9}, 3.715266573031196*^9, 
   3.715266683080839*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
   RowBox[{"EOMtoSolve", "[", 
    RowBox[{"[", 
     RowBox[{"1", ",", "All"}], "]"}], "]"}], " ", 
   RowBox[{"(*", 
    RowBox[{"[", 
     RowBox[{"[", "1", "]"}], "]"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"EOMtoSolve", "[", 
     RowBox[{"[", 
      RowBox[{"2", ",", "1"}], "]"}], "]"}], "[", 
    RowBox[{"[", "1", "]"}], "]"}]}], "*)"}]], "Input",
 CellChangeTimes->{{3.715195715246641*^9, 3.7151957527584944`*^9}, {
   3.7151961207661977`*^9, 3.7151961519808755`*^9}, 3.715217426336729*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     SuperscriptBox[
      SubscriptBox["x", "p"], "\[Prime]\[Prime]",
      MultilineFunction->None], "[", "t", "]"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     SuperscriptBox[
      SubscriptBox["y", "p"], "\[Prime]\[Prime]",
      MultilineFunction->None], "[", "t", "]"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     SuperscriptBox[
      SubscriptBox["\[Theta]", "p"], "\[Prime]\[Prime]",
      MultilineFunction->None], "[", "t", "]"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.715195716232295*^9, 3.7151957532648306`*^9}, {
  3.715196125758503*^9, 3.715196152925502*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"(", 
    RowBox[{"2", "-", 
     RowBox[{"Cos", "[", 
      RowBox[{
       SubscriptBox["\[Theta]", "p"], "[", "t", "]"}], "]"}], "+", 
     RowBox[{"0.1`", " ", 
      RowBox[{"Sin", "[", 
       RowBox[{
        SubscriptBox["\[Theta]", "p"], "[", "t", "]"}], "]"}]}], "-", 
     RowBox[{
      SubscriptBox["x", "p"], "[", "t", "]"}]}], ")"}], " ", 
   RowBox[{"(", 
    RowBox[{"1", "-", 
     FractionBox["1", 
      SqrtBox[
       RowBox[{
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"2", "-", 
           RowBox[{"Cos", "[", 
            RowBox[{
             SubscriptBox["\[Theta]", "p"], "[", "t", "]"}], "]"}], "+", 
           RowBox[{"0.1`", " ", 
            RowBox[{"Sin", "[", 
             RowBox[{
              SubscriptBox["\[Theta]", "p"], "[", "t", "]"}], "]"}]}], "-", 
           RowBox[{
            SubscriptBox["x", "p"], "[", "t", "]"}]}], ")"}], "2"], "+", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"-", "0.1`"}], " ", 
            RowBox[{"Cos", "[", 
             RowBox[{
              SubscriptBox["\[Theta]", "p"], "[", "t", "]"}], "]"}]}], "-", 
           RowBox[{"Sin", "[", 
            RowBox[{
             SubscriptBox["\[Theta]", "p"], "[", "t", "]"}], "]"}], "-", 
           RowBox[{
            SubscriptBox["y", "p"], "[", "t", "]"}]}], ")"}], "2"]}]]]}], 
    ")"}]}], "+", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     RowBox[{"Cos", "[", 
      RowBox[{
       SubscriptBox["\[Theta]", "p"], "[", "t", "]"}], "]"}], "+", 
     RowBox[{"0.1`", " ", 
      RowBox[{"Sin", "[", 
       RowBox[{
        SubscriptBox["\[Theta]", "p"], "[", "t", "]"}], "]"}]}], "-", 
     RowBox[{
      SubscriptBox["x", "p"], "[", "t", "]"}]}], ")"}], " ", 
   RowBox[{"(", 
    RowBox[{"1", "-", 
     FractionBox["1", 
      SqrtBox[
       RowBox[{
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"Cos", "[", 
            RowBox[{
             SubscriptBox["\[Theta]", "p"], "[", "t", "]"}], "]"}], "+", 
           RowBox[{"0.1`", " ", 
            RowBox[{"Sin", "[", 
             RowBox[{
              SubscriptBox["\[Theta]", "p"], "[", "t", "]"}], "]"}]}], "-", 
           RowBox[{
            SubscriptBox["x", "p"], "[", "t", "]"}]}], ")"}], "2"], "+", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"-", "0.1`"}], " ", 
            RowBox[{"Cos", "[", 
             RowBox[{
              SubscriptBox["\[Theta]", "p"], "[", "t", "]"}], "]"}]}], "+", 
           RowBox[{"Sin", "[", 
            RowBox[{
             SubscriptBox["\[Theta]", "p"], "[", "t", "]"}], "]"}], "-", 
           RowBox[{
            SubscriptBox["y", "p"], "[", "t", "]"}]}], ")"}], "2"]}]]]}], 
    ")"}]}]}]], "Output",
 CellChangeTimes->{{3.715195716232295*^9, 3.7151957532648306`*^9}, {
  3.715196125758503*^9, 3.71519615293451*^9}}]
}, Closed]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"numericEqs", "=", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"X1", "'"}], "[", "t", "]"}], "\[Equal]", 
            RowBox[{"X2", "[", "t", "]"}]}], ",", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{
             RowBox[{"X2", "'"}], "[", "t", "]"}], "\[Equal]", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"EOMtoSolve", "[", 
               RowBox[{"[", 
                RowBox[{"2", ",", "1"}], "]"}], "]"}], "[", 
              RowBox[{"[", "1", "]"}], "]"}], ")"}]}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{
             RowBox[{"X3", "'"}], "[", "t", "]"}], "\[Equal]", 
            RowBox[{"X4", "[", "t", "]"}]}], ",", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{
             RowBox[{"X4", "'"}], "[", "t", "]"}], "\[Equal]", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"EOMtoSolve", "[", 
               RowBox[{"[", 
                RowBox[{"2", ",", "2"}], "]"}], "]"}], "[", 
              RowBox[{"[", "1", "]"}], "]"}], ")"}]}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{
             RowBox[{"X5", "'"}], "[", "t", "]"}], "\[Equal]", 
            RowBox[{"X6", "[", "t", "]"}]}], ",", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{
             RowBox[{"X6", "'"}], "[", "t", "]"}], "\[Equal]", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"EOMtoSolve", "[", 
               RowBox[{"[", 
                RowBox[{"2", ",", "3"}], "]"}], "]"}], "[", 
              RowBox[{"[", "1", "]"}], "]"}], ")"}]}]}], "}"}], "/.", 
         RowBox[{
          RowBox[{
           SubscriptBox["x", "p"], "[", "t", "]"}], "\[Rule]", 
          RowBox[{"X1", "[", "t", "]"}]}]}], "/.", 
        RowBox[{
         RowBox[{
          SubscriptBox["y", "p"], "[", "t", "]"}], "\[Rule]", 
         RowBox[{"X3", "[", "t", "]"}]}]}], "/.", 
       RowBox[{
        RowBox[{
         SubscriptBox["\[Theta]", "p"], "[", "t", "]"}], "\[Rule]", 
        RowBox[{"X5", "[", "t", "]"}]}]}], "/.", 
      RowBox[{
       RowBox[{"D", "[", 
        RowBox[{
         RowBox[{
          SubscriptBox["x", "p"], "[", "t", "]"}], ",", "t"}], "]"}], 
       "\[Rule]", 
       RowBox[{"X2", "[", "t", "]"}]}]}], "/.", 
     RowBox[{
      RowBox[{"D", "[", 
       RowBox[{
        RowBox[{
         SubscriptBox["y", "p"], "[", "t", "]"}], ",", "t"}], "]"}], 
      "\[Rule]", 
      RowBox[{"X4", "[", "t", "]"}]}]}], "/.", 
    RowBox[{
     RowBox[{"D", "[", 
      RowBox[{
       RowBox[{
        SubscriptBox["\[Theta]", "p"], "[", "t", "]"}], ",", "t"}], "]"}], 
     "\[Rule]", 
     RowBox[{"X6", "[", "t", "]"}]}]}]}], 
  ";"}], "\[IndentingNewLine]", "NumericTestParams", "\[IndentingNewLine]", 
 RowBox[{"NumericParametersTest", "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{"startValues", "=", 
    RowBox[{
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{"X1", "[", "0", "]"}], "\[Equal]", 
         SubscriptBox["w", "p"]}], ",", 
        RowBox[{
         RowBox[{"X2", "[", "0", "]"}], "==", "0.1"}], ",", 
        RowBox[{
         RowBox[{"X3", "[", "0", "]"}], "\[Equal]", 
         RowBox[{
          RowBox[{"-", "1"}], "-", 
          SubscriptBox["h", "p"], "-", 
          FractionBox["\[Gamma]", "2"]}]}], ",", 
        RowBox[{
         RowBox[{"X4", "[", "0", "]"}], "\[Equal]", "1"}], ",", 
        RowBox[{
         RowBox[{"X5", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
        RowBox[{
         RowBox[{"X6", "[", "0", "]"}], "==", "0.1"}]}], "}"}], "/.", 
      "NumericTestParams"}], "/.", "NumericParametersTest"}]}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{"startValues", "=", 
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{"X1", "[", "0", "]"}], "\[Equal]", 
       SubscriptBox["w", "p"]}], ",", 
      RowBox[{
       RowBox[{"X2", "[", "0", "]"}], "==", "0.001"}], ",", 
      RowBox[{
       RowBox[{"X3", "[", "0", "]"}], "\[Equal]", 
       RowBox[{
        RowBox[{"-", "1"}], "-", 
        SubscriptBox["h", "p"], "-", 
        FractionBox["\[Gamma]", "2"]}]}], ",", 
      RowBox[{
       RowBox[{"X4", "[", "0", "]"}], "\[Equal]", "0.001"}], ",", 
      RowBox[{
       RowBox[{"X5", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
      RowBox[{
       RowBox[{"X6", "[", "0", "]"}], "==", "1"}]}], "}"}], "/.", 
    "NumericTestParams"}], "/.", 
   "NumericParametersTest"}]}], "\[IndentingNewLine]", 
 RowBox[{"T", "=", "10"}], "\[IndentingNewLine]", 
 RowBox[{"sol1", " ", "=", " ", 
  RowBox[{"NDSolve", "[", " ", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"numericEqs", ",", " ", "startValues"}], "}"}], ",", " ", 
    RowBox[{"{", 
     RowBox[{
     "X1", ",", " ", "X2", ",", "X3", ",", "X4", ",", "X5", ",", "X6"}], 
     "}"}], ",", " ", 
    RowBox[{"{", 
     RowBox[{"t", ",", " ", "0", ",", " ", "T"}], "}"}]}], " ", 
   "]"}]}]}], "Input",
 CellChangeTimes->{{3.7151956429896145`*^9, 3.7151956983144226`*^9}, {
   3.7151957689011908`*^9, 3.7151957760569324`*^9}, {3.7151959456336617`*^9, 
   3.7151960989317284`*^9}, {3.71519616949548*^9, 3.7151963007035255`*^9}, {
   3.7151963495008574`*^9, 3.7151964040720153`*^9}, {3.715196435651942*^9, 
   3.715196440840378*^9}, {3.715196574947234*^9, 3.7151966136010323`*^9}, {
   3.715196645367077*^9, 3.715196650809683*^9}, 3.7151966914185905`*^9, {
   3.7151967937358932`*^9, 3.715196829596653*^9}, {3.7151968827448683`*^9, 
   3.7151968891461077`*^9}, {3.7151969513829613`*^9, 
   3.7151969801129956`*^9}, {3.715217254127406*^9, 3.7152172944934936`*^9}, {
   3.715266316842909*^9, 3.7152663366119967`*^9}, {3.7152667072460475`*^9, 
   3.715266732477891*^9}, {3.715285084845935*^9, 3.7152850853819466`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"\[Kappa]", "\[Rule]", "1"}], ",", 
   RowBox[{"\[ScriptCapitalL]", "\[Rule]", "1"}], ",", 
   RowBox[{
    SubsuperscriptBox["\[Omega]", "s", "2"], "\[Rule]", "100"}], ",", 
   RowBox[{"\[Alpha]", "\[Rule]", "11.881188118811881`"}], ",", 
   RowBox[{"\[Gamma]", "\[Rule]", "0.04905`"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.715196005734481*^9, 3.715196411904206*^9, 3.715196442289338*^9, 
   3.715196522087208*^9, 3.7151966197440996`*^9, 3.715196651203944*^9, 
   3.7151966919339347`*^9, {3.7151968187124395`*^9, 3.7151968300629606`*^9}, 
   3.7151968898305635`*^9, {3.715196957810219*^9, 3.715196980914527*^9}, {
   3.715217196347955*^9, 3.7152172236012115`*^9}, 3.7152172954306355`*^9, 
   3.715217333696044*^9, 3.715217436564949*^9, 3.7152512003642817`*^9, 
   3.7152663377559943`*^9, 3.7152665926678734`*^9, 3.715266733233904*^9, 
   3.715285086405965*^9, 3.7152852744833903`*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    SubscriptBox["k", "1"], "\[Rule]", "200"}], ",", 
   RowBox[{
    SubscriptBox["k", "2"], "\[Rule]", 
    SubscriptBox["k", "1"]}], ",", 
   RowBox[{
    SubscriptBox["L0", "1"], "\[Rule]", "2"}], ",", 
   RowBox[{
    SubscriptBox["L0", "2"], "\[Rule]", 
    SubscriptBox["L0", "1"]}], ",", 
   RowBox[{
    SubscriptBox["m", "p"], "\[Rule]", "2"}], ",", 
   RowBox[{
    SubscriptBox["h", "p"], "\[Rule]", "0.1`"}], ",", 
   RowBox[{
    SubscriptBox["w", "p"], "\[Rule]", "1"}], ",", 
   RowBox[{"g", "\[Rule]", "9.81`"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.715196005734481*^9, 3.715196411904206*^9, 3.715196442289338*^9, 
   3.715196522087208*^9, 3.7151966197440996`*^9, 3.715196651203944*^9, 
   3.7151966919339347`*^9, {3.7151968187124395`*^9, 3.7151968300629606`*^9}, 
   3.7151968898305635`*^9, {3.715196957810219*^9, 3.715196980914527*^9}, {
   3.715217196347955*^9, 3.7152172236012115`*^9}, 3.7152172954306355`*^9, 
   3.715217333696044*^9, 3.715217436564949*^9, 3.7152512003642817`*^9, 
   3.7152663377559943`*^9, 3.7152665926678734`*^9, 3.715266733233904*^9, 
   3.715285086405965*^9, 3.71528527449139*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{"X1", "[", "0", "]"}], "\[Equal]", "1"}], ",", 
   RowBox[{
    RowBox[{"X2", "[", "0", "]"}], "\[Equal]", "0.001`"}], ",", 
   RowBox[{
    RowBox[{"X3", "[", "0", "]"}], "\[Equal]", 
    RowBox[{"-", "1.124525`"}]}], ",", 
   RowBox[{
    RowBox[{"X4", "[", "0", "]"}], "\[Equal]", "0.001`"}], ",", 
   RowBox[{
    RowBox[{"X5", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
   RowBox[{
    RowBox[{"X6", "[", "0", "]"}], "\[Equal]", "1"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.715196005734481*^9, 3.715196411904206*^9, 3.715196442289338*^9, 
   3.715196522087208*^9, 3.7151966197440996`*^9, 3.715196651203944*^9, 
   3.7151966919339347`*^9, {3.7151968187124395`*^9, 3.7151968300629606`*^9}, 
   3.7151968898305635`*^9, {3.715196957810219*^9, 3.715196980914527*^9}, {
   3.715217196347955*^9, 3.7152172236012115`*^9}, 3.7152172954306355`*^9, 
   3.715217333696044*^9, 3.715217436564949*^9, 3.7152512003642817`*^9, 
   3.7152663377559943`*^9, 3.7152665926678734`*^9, 3.715266733233904*^9, 
   3.715285086405965*^9, 3.715285274495391*^9}],

Cell[BoxData["10"], "Output",
 CellChangeTimes->{
  3.715196005734481*^9, 3.715196411904206*^9, 3.715196442289338*^9, 
   3.715196522087208*^9, 3.7151966197440996`*^9, 3.715196651203944*^9, 
   3.7151966919339347`*^9, {3.7151968187124395`*^9, 3.7151968300629606`*^9}, 
   3.7151968898305635`*^9, {3.715196957810219*^9, 3.715196980914527*^9}, {
   3.715217196347955*^9, 3.7152172236012115`*^9}, 3.7152172954306355`*^9, 
   3.715217333696044*^9, 3.715217436564949*^9, 3.7152512003642817`*^9, 
   3.7152663377559943`*^9, 3.7152665926678734`*^9, 3.715266733233904*^9, 
   3.715285086405965*^9, 3.7152852744993906`*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"X1", "\[Rule]", 
     TagBox[
      TemplateBox[{RowBox[{
          StyleBox[
           TagBox["InterpolatingFunction", "SummaryHead"], 
           "NonInterpretableSummary"], 
          StyleBox["[", "NonInterpretableSummary"], 
          DynamicModuleBox[{Typeset`open$$ = False}, 
           PanelBox[
            PaneSelectorBox[{False -> GridBox[{{
                  PaneBox[
                   ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquarePlusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                   Alignment -> {Center, Center}, ImageSize -> 
                   Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                  GraphicsBox[{{{}, {}, {
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1]], 
                    LineBox[CompressedData["
1:eJwV039Qy2EcB/CpMa3fLVbbqm0VTpyuu9SJvp9Rl1jZTdRImrMkUhrRKClW
fqRO0Q2duY6LoubqdI6SQ+RHrpqoXdLlkGRWbMzk8/zx3HOvf973PO/PfQTb
sqQKOxqNFo6H3Dddi7gNA2PUuZYqxfj0d8p8T6G0/RijvPxsj76gG0XZords
IyVeFrdBg45/ZqIbJkyUoyG9rQYdyxs9WdP6kxrcvLuvAe3lojmfJrVQgjqK
dxctDWANyQKsVF+EtfwOOvWdpD7hiY260/vdqw79saGgRr2YBlvF/56TPMmR
MHtL5QwwzTeOVqADBT1BmSN20FZ8svo4OnjDuhyzmA65w307DqK/TNhfGG6a
CV287vIMtFPShWMv/84CkXdVwna0Yj2rrHv7bEgf5Lkq0At89yTpmx1AvLm9
aRdacKheZOQ7wuoEd5kS3bmC75ShdgIzS1+8D93fnav51OsMHZeuJGWhfaYa
o1QrXCFzlfYuyfukVMhKY9xgUWf7iRT0Oa3LDPtvbmAIgp/J6JS518NKte4Q
lVsZL0cblM3rXFd7wJbw8uB09H6O7pfW5gHDqWsHMkkfyliXkUYWvIpdo9uD
ZrZIGYEbPWHA6K8j711DxZXnMOfAePHTkB1oStdq6bg9Bxw2+VnJfx3ftPc8
SJwLR4v6WWlo06rWiC4mG6rGl4eQfs5oBGq9jg2/FprrSX50+OGtX9O8oCIx
tHMvWtcWw7F384a0vMl5Oegp863orhZvcGi+3ZtN5qli0C7t5EBg76Yo0odi
9PXFLHcu/N4bE0xcWX3qSVwnF0qkBRySV237IB/M4wFzvUso6VOy9vpQBt8H
6GdlE7nogBH5GF3vA8bCjKtknjdTT/Vr831hgYE5Rex8VhI6LvQDxkxdLXGp
E0O48o0fnND+qCJODmNbXkTygRN5Kz0PbVdWO69Aw4crHolRh9Cse/nOJSY+
BDy8fzAf/S/F7WNFtACWF55fegR94BqXrr0sAE/x6eRCdJf8PatpUgDZliV6
4voO7q7H8UKIfRUZdJTsx5+rqpA6IXS8i9MT+9Z9VmmtQohQZ00WoXt+1z5k
bfQHxn1Z2TG0vJ1tLbnhD+YhlYcaHeIp+TM97Q99otqEEvR/DEjH3w==
                    "]]}}}, {
                   DisplayFunction -> Identity, AspectRatio -> 1, 
                    Axes -> {False, False}, AxesLabel -> {None, None}, 
                    AxesOrigin -> {0, 0.999914}, DisplayFunction :> Identity, 
                    Frame -> {{True, True}, {True, True}}, 
                    FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                    Directive[
                    Opacity[0.5], 
                    Thickness[Tiny], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    FrameTicks -> {{None, None}, {None, None}}, 
                    GridLines -> {None, None}, GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> 
                    Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}], 
                    Method -> {
                    "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
                    AbsolutePointSize[6], "ScalingFunctions" -> None}, 
                    PlotRange -> {{0., 10.}, {0.9999222555210241, 
                    0.9999906524659986}}, PlotRangeClipping -> True, 
                    PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
                  GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "10.`"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                   BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}], True -> GridBox[{{
                  PaneBox[
                   ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquareMinusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                   Alignment -> {Center, Center}, ImageSize -> 
                   Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                  GraphicsBox[{{{}, {}, {
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1]], 
                    LineBox[CompressedData["
1:eJwV039Qy2EcB/CpMa3fLVbbqm0VTpyuu9SJvp9Rl1jZTdRImrMkUhrRKClW
fqRO0Q2duY6LoubqdI6SQ+RHrpqoXdLlkGRWbMzk8/zx3HOvf973PO/PfQTb
sqQKOxqNFo6H3Dddi7gNA2PUuZYqxfj0d8p8T6G0/RijvPxsj76gG0XZords
IyVeFrdBg45/ZqIbJkyUoyG9rQYdyxs9WdP6kxrcvLuvAe3lojmfJrVQgjqK
dxctDWANyQKsVF+EtfwOOvWdpD7hiY260/vdqw79saGgRr2YBlvF/56TPMmR
MHtL5QwwzTeOVqADBT1BmSN20FZ8svo4OnjDuhyzmA65w307DqK/TNhfGG6a
CV287vIMtFPShWMv/84CkXdVwna0Yj2rrHv7bEgf5Lkq0At89yTpmx1AvLm9
aRdacKheZOQ7wuoEd5kS3bmC75ShdgIzS1+8D93fnav51OsMHZeuJGWhfaYa
o1QrXCFzlfYuyfukVMhKY9xgUWf7iRT0Oa3LDPtvbmAIgp/J6JS518NKte4Q
lVsZL0cblM3rXFd7wJbw8uB09H6O7pfW5gHDqWsHMkkfyliXkUYWvIpdo9uD
ZrZIGYEbPWHA6K8j711DxZXnMOfAePHTkB1oStdq6bg9Bxw2+VnJfx3ftPc8
SJwLR4v6WWlo06rWiC4mG6rGl4eQfs5oBGq9jg2/FprrSX50+OGtX9O8oCIx
tHMvWtcWw7F384a0vMl5Oegp863orhZvcGi+3ZtN5qli0C7t5EBg76Yo0odi
9PXFLHcu/N4bE0xcWX3qSVwnF0qkBRySV237IB/M4wFzvUso6VOy9vpQBt8H
6GdlE7nogBH5GF3vA8bCjKtknjdTT/Vr831hgYE5Rex8VhI6LvQDxkxdLXGp
E0O48o0fnND+qCJODmNbXkTygRN5Kz0PbVdWO69Aw4crHolRh9Cse/nOJSY+
BDy8fzAf/S/F7WNFtACWF55fegR94BqXrr0sAE/x6eRCdJf8PatpUgDZliV6
4voO7q7H8UKIfRUZdJTsx5+rqpA6IXS8i9MT+9Z9VmmtQohQZ00WoXt+1z5k
bfQHxn1Z2TG0vJ1tLbnhD+YhlYcaHeIp+TM97Q99otqEEvR/DEjH3w==
                    "]]}}}, {
                   DisplayFunction -> Identity, AspectRatio -> 1, 
                    Axes -> {False, False}, AxesLabel -> {None, None}, 
                    AxesOrigin -> {0, 0.999914}, DisplayFunction :> Identity, 
                    Frame -> {{True, True}, {True, True}}, 
                    FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                    Directive[
                    Opacity[0.5], 
                    Thickness[Tiny], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    FrameTicks -> {{None, None}, {None, None}}, 
                    GridLines -> {None, None}, GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> 
                    Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}], 
                    Method -> {
                    "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
                    AbsolutePointSize[6], "ScalingFunctions" -> None}, 
                    PlotRange -> {{0., 10.}, {0.9999222555210241, 
                    0.9999906524659986}}, PlotRangeClipping -> True, 
                    PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
                  GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "10.`"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Order: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Hermite\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Periodic: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["False", "SummaryItem"]}]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                   BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}]}, 
             Dynamic[Typeset`open$$], ImageSize -> Automatic], 
            BaselinePosition -> Baseline], DynamicModuleValues :> {}], 
          StyleBox["]", "NonInterpretableSummary"]}]},
       "CopyTag",
       DisplayFunction->(#& ),
       InterpretationFunction->("InterpolatingFunction[{{0., 10.}}, <>]"& )],
      False,
      Editable->False,
      SelectWithContents->True,
      Selectable->False]}], ",", 
    RowBox[{"X2", "\[Rule]", 
     TagBox[
      TemplateBox[{RowBox[{
          StyleBox[
           TagBox["InterpolatingFunction", "SummaryHead"], 
           "NonInterpretableSummary"], 
          StyleBox["[", "NonInterpretableSummary"], 
          DynamicModuleBox[{Typeset`open$$ = False}, 
           PanelBox[
            PaneSelectorBox[{False -> GridBox[{{
                  PaneBox[
                   ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquarePlusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                   Alignment -> {Center, Center}, ImageSize -> 
                   Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                  GraphicsBox[{{{}, {}, {
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1]], 
                    
                    LineBox[{{0.3060707008593592, 0.00007458186303775477}, {
                    0.3397473608878023, -0.00008992793343412677}, {
                    0.3408248709175566, -0.00009292562070154685}}], 
                    LineBox[CompressedData["
1:eJwBgQN+/CFib1JlAgAAADcAAAACAAAAmz073sf+7z8kKusBIlwYv69BcEHY
F/A/5J8xuZSTFb9OyfIE3O7yPxAdlMLIggo/SRzkip249T+TJFIwKeADPxgO
mZZmUvg/Ra3W0YxH/j5SJBPeWST7P3T3Y3r+NgW/YNlQq1TG/T+DfPxqqcID
v+Wsfp2GLQBACQgQfGpC/75QfzcD+JMBQMWGeETKWwO/JSHSK23iAkBgxGiR
EhQAvzBVT3L3TARAeIE+5D6ABb/p7gOa4LAFQCQk1/7lGv++DFiahM38BkDQ
gNakVGXgvmVTE43PZAhA0JIrkDa96D4oHm5Y1bQJQO0h7FlgKfk+IXurQfAg
C0AEUJ59ue/rPsc9IAxqhgxAaPf7VivD3L7Xz3aZ59MNQPDuQHehg/e+HfSv
RHo9D0DMTjGxkYb7vudzZVmIRxBA3I65Lsct7L6VoA4BA+0QQNypml2D1NA+
XhapN4igEUBgRu7FcP/yPtxztE8PSBJA2dAy0lzB9D51GrH2oP0SQHRHYeRF
UOM+5XNJDuKvE0BHWTYzRw3Svgq1UgclVhRA8Bgssf9K6b5KP02PcgoVQGDg
9cfY/uW+P7G4+MGyFUBg0++77GS8vgvWv9LAVxZALdnpAqx44D7yQ7g7ygoX
QLpN0CucIuw+jpkhhtWxF0C58bF0f3roPkU4fF/rZhhAbcmSYXBQ0z6xvkca
AxAZQOn7QFNxWsG+9PeuRcq1GUAXo0WZLbvUvlJ6BwCcaRpAjXRwfImSxr5l
5NCbbxEbQHyHXjFCe8Q+k5eLxk3HG0ClpLsHWy7fPpf94WHbeRxA4VUDw36K
4j5QS6neaiAdQHfaOa4z+ds+JOJh6gTVHUCOrfidZEzFPq1gi9egfR5AzrPN
9TFWnb4NklA17CIfQJtcSZmlb7C+iAwHIkLWH0B6+emgZ++wPlw3F/jMPiBA
k2NtBDr8zz4CjaMmfpkgQO2Hj4cPstg+E7x9DYfyIEAOw7sINYLYPv5eEOWQ
RSFAKs4oAZa40T53phsEoJ8hQMmjeNI4QsE+ymHfE7DzIUBmfJhzmOutPqvB
G2vFTiJAlkRFmjGisz73+qV6MqgiQDsvGtMmeMU+HqjoeqD7IkAowMvO4WjQ
PtL5o8ITViNAVqtdPQQL0z5hvxf7h6ojQESAo0leMtE+MhRQ+v//I0A37K+T
IIXJPqY4pck=
                    "]]}}}, {
                   DisplayFunction -> Identity, AspectRatio -> 1, 
                    Axes -> {False, False}, AxesLabel -> {None, None}, 
                    AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
                    Frame -> {{True, True}, {True, True}}, 
                    FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                    Directive[
                    Opacity[0.5], 
                    Thickness[Tiny], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    FrameTicks -> {{None, None}, {None, None}}, 
                    GridLines -> {None, None}, GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> 
                    Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}], 
                    Method -> {
                    "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
                    AbsolutePointSize[6], "ScalingFunctions" -> None}, 
                    PlotRange -> {{0., 10.}, {-0.00009292562070154685, 
                    0.00007458186303775477}}, PlotRangeClipping -> True, 
                    PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
                  GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "10.`"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                   BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}], True -> GridBox[{{
                  PaneBox[
                   ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquareMinusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                   Alignment -> {Center, Center}, ImageSize -> 
                   Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                  GraphicsBox[{{{}, {}, {
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1]], 
                    
                    LineBox[{{0.3060707008593592, 0.00007458186303775477}, {
                    0.3397473608878023, -0.00008992793343412677}, {
                    0.3408248709175566, -0.00009292562070154685}}], 
                    LineBox[CompressedData["
1:eJwBgQN+/CFib1JlAgAAADcAAAACAAAAmz073sf+7z8kKusBIlwYv69BcEHY
F/A/5J8xuZSTFb9OyfIE3O7yPxAdlMLIggo/SRzkip249T+TJFIwKeADPxgO
mZZmUvg/Ra3W0YxH/j5SJBPeWST7P3T3Y3r+NgW/YNlQq1TG/T+DfPxqqcID
v+Wsfp2GLQBACQgQfGpC/75QfzcD+JMBQMWGeETKWwO/JSHSK23iAkBgxGiR
EhQAvzBVT3L3TARAeIE+5D6ABb/p7gOa4LAFQCQk1/7lGv++DFiahM38BkDQ
gNakVGXgvmVTE43PZAhA0JIrkDa96D4oHm5Y1bQJQO0h7FlgKfk+IXurQfAg
C0AEUJ59ue/rPsc9IAxqhgxAaPf7VivD3L7Xz3aZ59MNQPDuQHehg/e+HfSv
RHo9D0DMTjGxkYb7vudzZVmIRxBA3I65Lsct7L6VoA4BA+0QQNypml2D1NA+
XhapN4igEUBgRu7FcP/yPtxztE8PSBJA2dAy0lzB9D51GrH2oP0SQHRHYeRF
UOM+5XNJDuKvE0BHWTYzRw3Svgq1UgclVhRA8Bgssf9K6b5KP02PcgoVQGDg
9cfY/uW+P7G4+MGyFUBg0++77GS8vgvWv9LAVxZALdnpAqx44D7yQ7g7ygoX
QLpN0CucIuw+jpkhhtWxF0C58bF0f3roPkU4fF/rZhhAbcmSYXBQ0z6xvkca
AxAZQOn7QFNxWsG+9PeuRcq1GUAXo0WZLbvUvlJ6BwCcaRpAjXRwfImSxr5l
5NCbbxEbQHyHXjFCe8Q+k5eLxk3HG0ClpLsHWy7fPpf94WHbeRxA4VUDw36K
4j5QS6neaiAdQHfaOa4z+ds+JOJh6gTVHUCOrfidZEzFPq1gi9egfR5AzrPN
9TFWnb4NklA17CIfQJtcSZmlb7C+iAwHIkLWH0B6+emgZ++wPlw3F/jMPiBA
k2NtBDr8zz4CjaMmfpkgQO2Hj4cPstg+E7x9DYfyIEAOw7sINYLYPv5eEOWQ
RSFAKs4oAZa40T53phsEoJ8hQMmjeNI4QsE+ymHfE7DzIUBmfJhzmOutPqvB
G2vFTiJAlkRFmjGisz73+qV6MqgiQDsvGtMmeMU+HqjoeqD7IkAowMvO4WjQ
PtL5o8ITViNAVqtdPQQL0z5hvxf7h6ojQESAo0leMtE+MhRQ+v//I0A37K+T
IIXJPqY4pck=
                    "]]}}}, {
                   DisplayFunction -> Identity, AspectRatio -> 1, 
                    Axes -> {False, False}, AxesLabel -> {None, None}, 
                    AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
                    Frame -> {{True, True}, {True, True}}, 
                    FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                    Directive[
                    Opacity[0.5], 
                    Thickness[Tiny], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    FrameTicks -> {{None, None}, {None, None}}, 
                    GridLines -> {None, None}, GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> 
                    Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}], 
                    Method -> {
                    "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
                    AbsolutePointSize[6], "ScalingFunctions" -> None}, 
                    PlotRange -> {{0., 10.}, {-0.00009292562070154685, 
                    0.00007458186303775477}}, PlotRangeClipping -> True, 
                    PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
                  GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "10.`"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Order: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Hermite\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Periodic: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["False", "SummaryItem"]}]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                   BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}]}, 
             Dynamic[Typeset`open$$], ImageSize -> Automatic], 
            BaselinePosition -> Baseline], DynamicModuleValues :> {}], 
          StyleBox["]", "NonInterpretableSummary"]}]},
       "CopyTag",
       DisplayFunction->(#& ),
       InterpretationFunction->("InterpolatingFunction[{{0., 10.}}, <>]"& )],
      False,
      Editable->False,
      SelectWithContents->True,
      Selectable->False]}], ",", 
    RowBox[{"X3", "\[Rule]", 
     TagBox[
      TemplateBox[{RowBox[{
          StyleBox[
           TagBox["InterpolatingFunction", "SummaryHead"], 
           "NonInterpretableSummary"], 
          StyleBox["[", "NonInterpretableSummary"], 
          DynamicModuleBox[{Typeset`open$$ = False}, 
           PanelBox[
            PaneSelectorBox[{False -> GridBox[{{
                  PaneBox[
                   ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquarePlusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                   Alignment -> {Center, Center}, ImageSize -> 
                   Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                  GraphicsBox[{{{}, {}, {
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1]], 
                    LineBox[CompressedData["
1:eJwV0H9Q03UYB/ABsyFuMNhgwNjYxigvxQotUBnfh5JEa7pbyI8bEescx48T
imVcFGTlTQQRLg68Keg606BRE05sGvIdscG1CmoxrCTiZwgmtyHIYAx6+ONz
z73uuee55/0Rvl0sV3lTKJQEfJv18G/Zew2kJjFmJuIRY91JKiomy3v/NhPq
RftSocdJEo2rtwq77cTMjjXlF2tOUrboO7n1mTHCqVCzbrudZPyekuLM1Gki
tU7rcqw6yeUuldrjnCOMDy26N9GGpHeS/uA4CGpRpsW14iSP/LhAHZlfIERD
XQkt6EMRU1XNxiXi8lC9oAEd6q9tzJW7iN2i3vk7aLmYNZopdhPnIiXdVNyX
86dMn9rnIbzSKbty0NNtFc2aGAqMmnf62tGyj+N8XPVeUH7iU3Y+3hcttO04
MeENnJcGspbQzx87WrL8OhX6rXncs5hndt7n4tiNLVD7ZKIoBPPSMy6e/mXt
KaBxElZq0ao3WDWDx33hDq+4cgO9nV+UYb+5Fdit3+1Nxf8SfqhPcgi2gWJW
O96E7pcI6AUaOgxnmSwD6HuD72tnfmeAO7bt1Vk0b9FwoEwSANe29Nofo2fU
qszKg0w47UjxdaAbdP5ePo+YsGbsGBhDZ4e0xlXqAuFyvlePBT2ivnk0ICUI
4r7PK7iOPhne/kTnCQKmdM++T9DT6kP+EwYW9M5tP65A+3XKadFpbJA2n5qI
Rx8mpLUlfsFw3zzSE4Im2o2uno5goB/7LMWN+bYNkzZTegh8Gfhgcgq98Ipx
v9WPA4m7bbts6PNaocbezgH2T/GKPnRy/EdvPcwNhY13Nbkkur37YLgPMwx2
Bleb7qIXl79NtnaGgemWmG9Cy8tolKb8cHjhFK10c1419eul4kAuxD0bEzCI
rr9Q3Sft58LG+arEv9AXPOPK+x9EQEbv0IF/0bLXWkcLBDxwmqvuOtHiCeUc
1c6DPrP0tgf9TU71PV05H6IbJQ4a5mN8LnvxP1EkNEnHOpnoSjpN9PJwJFTR
JY2h6Kw4juvnRAGk67v389HeNVefrtAKIC+F+p4IzeoqZ5xZEMBXdTaLGL2e
zZyuSxbCPENwMhpdep1L1V0RwjmDn3Wzb1X+w7rxWAhT4yQrCq3v4RZajogg
whqZJkAvr14ri20RQUyNwY+H5rc8KNO5RbCe1KgPQ9tWrv7ASouCjox9jmC0
kuS4z3wdBeGToQ1B6Fi2bHVjIwr6n2srDUD/DziJCxI=
                    "]]}}}, {
                   DisplayFunction -> Identity, AspectRatio -> 1, 
                    Axes -> {False, False}, AxesLabel -> {None, None}, 
                    AxesOrigin -> {0, -1.1249}, DisplayFunction :> Identity, 
                    Frame -> {{True, True}, {True, True}}, 
                    FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                    Directive[
                    Opacity[0.5], 
                    Thickness[Tiny], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    FrameTicks -> {{None, None}, {None, None}}, 
                    GridLines -> {None, None}, GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> 
                    Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}], 
                    Method -> {
                    "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
                    AbsolutePointSize[6], "ScalingFunctions" -> None}, 
                    PlotRange -> {{0., 
                    10.}, {-1.1247442579336646`, -1.1234332344586515`}}, 
                    PlotRangeClipping -> True, PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
                  GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "10.`"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                   BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}], True -> GridBox[{{
                  PaneBox[
                   ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquareMinusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                   Alignment -> {Center, Center}, ImageSize -> 
                   Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                  GraphicsBox[{{{}, {}, {
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1]], 
                    LineBox[CompressedData["
1:eJwV0H9Q03UYB/ABsyFuMNhgwNjYxigvxQotUBnfh5JEa7pbyI8bEescx48T
imVcFGTlTQQRLg68Keg606BRE05sGvIdscG1CmoxrCTiZwgmtyHIYAx6+ONz
z73uuee55/0Rvl0sV3lTKJQEfJv18G/Zew2kJjFmJuIRY91JKiomy3v/NhPq
RftSocdJEo2rtwq77cTMjjXlF2tOUrboO7n1mTHCqVCzbrudZPyekuLM1Gki
tU7rcqw6yeUuldrjnCOMDy26N9GGpHeS/uA4CGpRpsW14iSP/LhAHZlfIERD
XQkt6EMRU1XNxiXi8lC9oAEd6q9tzJW7iN2i3vk7aLmYNZopdhPnIiXdVNyX
86dMn9rnIbzSKbty0NNtFc2aGAqMmnf62tGyj+N8XPVeUH7iU3Y+3hcttO04
MeENnJcGspbQzx87WrL8OhX6rXncs5hndt7n4tiNLVD7ZKIoBPPSMy6e/mXt
KaBxElZq0ao3WDWDx33hDq+4cgO9nV+UYb+5Fdit3+1Nxf8SfqhPcgi2gWJW
O96E7pcI6AUaOgxnmSwD6HuD72tnfmeAO7bt1Vk0b9FwoEwSANe29Nofo2fU
qszKg0w47UjxdaAbdP5ePo+YsGbsGBhDZ4e0xlXqAuFyvlePBT2ivnk0ICUI
4r7PK7iOPhne/kTnCQKmdM++T9DT6kP+EwYW9M5tP65A+3XKadFpbJA2n5qI
Rx8mpLUlfsFw3zzSE4Im2o2uno5goB/7LMWN+bYNkzZTegh8Gfhgcgq98Ipx
v9WPA4m7bbts6PNaocbezgH2T/GKPnRy/EdvPcwNhY13Nbkkur37YLgPMwx2
Bleb7qIXl79NtnaGgemWmG9Cy8tolKb8cHjhFK10c1419eul4kAuxD0bEzCI
rr9Q3Sft58LG+arEv9AXPOPK+x9EQEbv0IF/0bLXWkcLBDxwmqvuOtHiCeUc
1c6DPrP0tgf9TU71PV05H6IbJQ4a5mN8LnvxP1EkNEnHOpnoSjpN9PJwJFTR
JY2h6Kw4juvnRAGk67v389HeNVefrtAKIC+F+p4IzeoqZ5xZEMBXdTaLGL2e
zZyuSxbCPENwMhpdep1L1V0RwjmDn3Wzb1X+w7rxWAhT4yQrCq3v4RZajogg
whqZJkAvr14ri20RQUyNwY+H5rc8KNO5RbCe1KgPQ9tWrv7ASouCjox9jmC0
kuS4z3wdBeGToQ1B6Fi2bHVjIwr6n2srDUD/DziJCxI=
                    "]]}}}, {
                   DisplayFunction -> Identity, AspectRatio -> 1, 
                    Axes -> {False, False}, AxesLabel -> {None, None}, 
                    AxesOrigin -> {0, -1.1249}, DisplayFunction :> Identity, 
                    Frame -> {{True, True}, {True, True}}, 
                    FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                    Directive[
                    Opacity[0.5], 
                    Thickness[Tiny], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    FrameTicks -> {{None, None}, {None, None}}, 
                    GridLines -> {None, None}, GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> 
                    Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}], 
                    Method -> {
                    "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
                    AbsolutePointSize[6], "ScalingFunctions" -> None}, 
                    PlotRange -> {{0., 
                    10.}, {-1.1247442579336646`, -1.1234332344586515`}}, 
                    PlotRangeClipping -> True, PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
                  GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "10.`"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Order: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Hermite\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Periodic: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["False", "SummaryItem"]}]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                   BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}]}, 
             Dynamic[Typeset`open$$], ImageSize -> Automatic], 
            BaselinePosition -> Baseline], DynamicModuleValues :> {}], 
          StyleBox["]", "NonInterpretableSummary"]}]},
       "CopyTag",
       DisplayFunction->(#& ),
       InterpretationFunction->("InterpolatingFunction[{{0., 10.}}, <>]"& )],
      False,
      Editable->False,
      SelectWithContents->True,
      Selectable->False]}], ",", 
    RowBox[{"X4", "\[Rule]", 
     TagBox[
      TemplateBox[{RowBox[{
          StyleBox[
           TagBox["InterpolatingFunction", "SummaryHead"], 
           "NonInterpretableSummary"], 
          StyleBox["[", "NonInterpretableSummary"], 
          DynamicModuleBox[{Typeset`open$$ = False}, 
           PanelBox[
            PaneSelectorBox[{False -> GridBox[{{
                  PaneBox[
                   ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquarePlusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                   Alignment -> {Center, Center}, ImageSize -> 
                   Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                  GraphicsBox[{{{}, {}, {
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1]], 
                    LineBox[CompressedData["
1:eJwB0QMu/CFib1JlAgAAADwAAAACAAAAStFeOa+/hj4TwVqkTWJQP1t+433D
3cQ/828V9S0dTz8/lvq2a77VP95l+mVhv1Q/UPQI4wkn4D/r4rVPbNZVPzg0
cm9ZVOU/RHurt5M6UD/3vGVz/fHqP9etq3TuaEU/r0FwQdgX8D9xcw6On3NB
P07J8gTc7vI/bX/9NfE3Mz9JHOSKnbj1PygrmyTCLxa/GA6ZlmZS+D+nhIAN
fKI1v1IkE95ZJPs/ExyBLAAyPr9g2VCrVMb9Pzpk68XW9EO/5ax+nYYtAECr
kUsIsQpJv1B/NwP4kwFAJGDyfhQbS78lIdIrbeICQLVBwUcOb0q/MFVPcvdM
BEBNwNF8e9JJv+nuA5rgsAVA2WC8qUa6SL8MWJqEzfwGQLe8SG1320W/ZVMT
jc9kCEASAfx21tJBvygebljVtAlA+rIZE6sJPb8he6tB8CALQDO8qx193TW/
xz0gDGqGDECUjX88GJArv9fPdpnn0w1AjXVQt5MzG78d9K9Eej0PQGCRkTpr
pO2+53NlWYhHEEAGAYTwIwgOP5WgDgED7RBABBcsf1ubHz9eFqk3iKARQEvG
LIDgMyY/3HO0Tw9IEkBJAgRtr08pP3Uasfag/RJAETDxGsXpKj/lc0kO4q8T
QM0xNMi/Jys/CrVSByVWFEDNwXVq67ApP0o/TY9yChVA625ZGgeXJj8/sbj4
wbIVQOxcsruEKCM/C9a/0sBXFkDZAqOMzQ0fP/JDuDvKChdAk6DBa1hRFj+O
mSGG1bEXQO7mBRE7/ws/RTh8X+tmGECZRkCxsHf3PrG+RxoDEBlAad6MoTmf
x770965FyrUZQF8ldV+Otfm+UnoHAJxpGkCzxAjF5ckGv2Xk0JtvERtA90EN
VLwwDb+Tl4vGTccbQMbEOPqArxC/l/3hYdt5HEDeHxjQgZ0Rv1BLqd5qIB1A
i95SBzl8Eb8k4mHqBNUdQKvunBrHVRC/rWCL16B9HkCASGTZTTQNvw2SUDXs
Ih9ASLST3pQHCb+IDAciQtYfQJoc4Ypz2QO/XDcX+Mw+IEDugO5W+l39vgKN
oyZ+mSBAB230RBNj8r4TvH0Nh/IgQE78TSsC6eC+/l4Q5ZBFIUCmCzaidpaE
vnemGwSgnyFAdu7LOyj83T7KYd8TsPMhQCBWSU68Meo+q8Eba8VOIkD9jQyZ
dmzxPvf6pXoyqCJA6QFJhnML9D4eqOh6oPsiQI2FPyXvHvU+0vmjwhNWI0AQ
4b6+3Of0PmG/F/uHqiNAONTbsw6j8z4yFFD6//8jQPTxAlg4kvE+hda3Xg==

                    "]]}}}, {
                   DisplayFunction -> Identity, AspectRatio -> 1, 
                    Axes -> {False, False}, AxesLabel -> {None, None}, 
                    AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
                    Frame -> {{True, True}, {True, True}}, 
                    FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                    Directive[
                    Opacity[0.5], 
                    Thickness[Tiny], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    FrameTicks -> {{None, None}, {None, None}}, 
                    GridLines -> {None, None}, GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> 
                    Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}], 
                    Method -> {
                    "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
                    AbsolutePointSize[6], "ScalingFunctions" -> None}, 
                    PlotRange -> {{0., 10.}, {-0.000827202804333464, 
                    0.0013328607300008798`}}, PlotRangeClipping -> True, 
                    PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
                  GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "10.`"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                   BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}], True -> GridBox[{{
                  PaneBox[
                   ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquareMinusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                   Alignment -> {Center, Center}, ImageSize -> 
                   Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                  GraphicsBox[{{{}, {}, {
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1]], 
                    LineBox[CompressedData["
1:eJwB0QMu/CFib1JlAgAAADwAAAACAAAAStFeOa+/hj4TwVqkTWJQP1t+433D
3cQ/828V9S0dTz8/lvq2a77VP95l+mVhv1Q/UPQI4wkn4D/r4rVPbNZVPzg0
cm9ZVOU/RHurt5M6UD/3vGVz/fHqP9etq3TuaEU/r0FwQdgX8D9xcw6On3NB
P07J8gTc7vI/bX/9NfE3Mz9JHOSKnbj1PygrmyTCLxa/GA6ZlmZS+D+nhIAN
fKI1v1IkE95ZJPs/ExyBLAAyPr9g2VCrVMb9Pzpk68XW9EO/5ax+nYYtAECr
kUsIsQpJv1B/NwP4kwFAJGDyfhQbS78lIdIrbeICQLVBwUcOb0q/MFVPcvdM
BEBNwNF8e9JJv+nuA5rgsAVA2WC8qUa6SL8MWJqEzfwGQLe8SG1320W/ZVMT
jc9kCEASAfx21tJBvygebljVtAlA+rIZE6sJPb8he6tB8CALQDO8qx193TW/
xz0gDGqGDECUjX88GJArv9fPdpnn0w1AjXVQt5MzG78d9K9Eej0PQGCRkTpr
pO2+53NlWYhHEEAGAYTwIwgOP5WgDgED7RBABBcsf1ubHz9eFqk3iKARQEvG
LIDgMyY/3HO0Tw9IEkBJAgRtr08pP3Uasfag/RJAETDxGsXpKj/lc0kO4q8T
QM0xNMi/Jys/CrVSByVWFEDNwXVq67ApP0o/TY9yChVA625ZGgeXJj8/sbj4
wbIVQOxcsruEKCM/C9a/0sBXFkDZAqOMzQ0fP/JDuDvKChdAk6DBa1hRFj+O
mSGG1bEXQO7mBRE7/ws/RTh8X+tmGECZRkCxsHf3PrG+RxoDEBlAad6MoTmf
x770965FyrUZQF8ldV+Otfm+UnoHAJxpGkCzxAjF5ckGv2Xk0JtvERtA90EN
VLwwDb+Tl4vGTccbQMbEOPqArxC/l/3hYdt5HEDeHxjQgZ0Rv1BLqd5qIB1A
i95SBzl8Eb8k4mHqBNUdQKvunBrHVRC/rWCL16B9HkCASGTZTTQNvw2SUDXs
Ih9ASLST3pQHCb+IDAciQtYfQJoc4Ypz2QO/XDcX+Mw+IEDugO5W+l39vgKN
oyZ+mSBAB230RBNj8r4TvH0Nh/IgQE78TSsC6eC+/l4Q5ZBFIUCmCzaidpaE
vnemGwSgnyFAdu7LOyj83T7KYd8TsPMhQCBWSU68Meo+q8Eba8VOIkD9jQyZ
dmzxPvf6pXoyqCJA6QFJhnML9D4eqOh6oPsiQI2FPyXvHvU+0vmjwhNWI0AQ
4b6+3Of0PmG/F/uHqiNAONTbsw6j8z4yFFD6//8jQPTxAlg4kvE+hda3Xg==

                    "]]}}}, {
                   DisplayFunction -> Identity, AspectRatio -> 1, 
                    Axes -> {False, False}, AxesLabel -> {None, None}, 
                    AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
                    Frame -> {{True, True}, {True, True}}, 
                    FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                    Directive[
                    Opacity[0.5], 
                    Thickness[Tiny], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    FrameTicks -> {{None, None}, {None, None}}, 
                    GridLines -> {None, None}, GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> 
                    Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}], 
                    Method -> {
                    "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
                    AbsolutePointSize[6], "ScalingFunctions" -> None}, 
                    PlotRange -> {{0., 10.}, {-0.000827202804333464, 
                    0.0013328607300008798`}}, PlotRangeClipping -> True, 
                    PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
                  GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "10.`"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Order: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Hermite\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Periodic: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["False", "SummaryItem"]}]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                   BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}]}, 
             Dynamic[Typeset`open$$], ImageSize -> Automatic], 
            BaselinePosition -> Baseline], DynamicModuleValues :> {}], 
          StyleBox["]", "NonInterpretableSummary"]}]},
       "CopyTag",
       DisplayFunction->(#& ),
       InterpretationFunction->("InterpolatingFunction[{{0., 10.}}, <>]"& )],
      False,
      Editable->False,
      SelectWithContents->True,
      Selectable->False]}], ",", 
    RowBox[{"X5", "\[Rule]", 
     TagBox[
      TemplateBox[{RowBox[{
          StyleBox[
           TagBox["InterpolatingFunction", "SummaryHead"], 
           "NonInterpretableSummary"], 
          StyleBox["[", "NonInterpretableSummary"], 
          DynamicModuleBox[{Typeset`open$$ = False}, 
           PanelBox[
            PaneSelectorBox[{False -> GridBox[{{
                  PaneBox[
                   ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquarePlusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                   Alignment -> {Center, Center}, ImageSize -> 
                   Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                  GraphicsBox[{{{}, {}, {
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1]], 
                    
                    LineBox[{{1.694915254237288*^-7, 1.694914679827364*^-7}, {
                    0.09763123756440173, 0.08093202292825304}}], 
                    
                    LineBox[{{0.5401601110901088, 0.08093202292825304}, {
                    0.666546552341635, -0.00914347484668071}, {
                    0.7860716237900791, -0.07599603735958899}}], 
                    
                    LineBox[{{1.1464284881666502`, -0.07599603735958899}, {
                    1.183315295533777, -0.0633401548353038}, {
                    1.3575721192771815`, 0.02678502295008356}, {
                    1.5122244939325697`, 0.08093202292825304}}], 
                    LineBox[CompressedData["
1:eJwBMQPO/CFib1JlAgAAADIAAAACAAAAT16shZVN+z9NDK0H9re0P2DZUKtU
xv0/yqK67pkPoj/lrH6dhi0AQIHorqQnVZm/UH83A/iTAUDCU2xzFVewvyUh
0itt4gJA8rE1Q+Lnrb8wVU9y90wEQOJowMekD5K/6e4DmuCwBUDEaoYO7NKb
PwxYmoTN/AZAaoxVXO9hqD9lUxONz2QIQJ11n7g++qI/KB5uWNW0CUA8OSUk
u/Z8PyF7q0HwIAtAD67zd2/FmL/HPSAMaoYMQBoqes7myaG/1892mefTDUD6
Vq7v+dKXvx30r0R6PQ9An1HNw01YVT/nc2VZiEcQQCIMi9//rpQ/laAOAQPt
EEBSV+oScHiZP14WqTeIoBFAce/j60W2jD/cc7RPD0gSQNLscRTM02a/dRqx
9qD9EkBhm8ULlYSQv+VzSQ7irxNA+7ufY8xrkb8KtVIHJVYUQLsLI+qEZIC/
Sj9Nj3IKFUBD889Enl90Pz+xuPjBshVA5P91srqDiT8L1r/SwFcWQDkmixJI
Wog/8kO4O8oKF0Dbs8v6RkNxP46ZIYbVsRdAczWCwdLccb9FOHxf62YYQGBm
/Qh2MYO/sb5HGgMQGUCz8EQTaxuAv/T3rkXKtRlAEJDdAAd8Yr9SegcAnGka
QCk3pfbnBXE/ZeTQm28RG0AVjiiv8il8P5OXi8ZNxxtATc7lzkaudD+X/eFh
23kcQFrEBb/AxjY/UEup3mogHUB1YQvgbaNtvyTiYeoE1R1AE5f1b0ZUdL+t
YIvXoH0eQEgA+F/2qmm/DZJQNewiH0CoZ4U2oaIfP4gMByJC1h9AcPIRwS5f
aD9cNxf4zD4gQEvxDjRvA20/Ao2jJn6ZIEAZICXcmolePxO8fQ2H8iBAzA0X
u1/URr/+XhDlkEUhQIx1UMsTQ2O/d6YbBKCfIUD3UHSHgbRjv8ph3xOw8yFA
mcKRmZMoUb+rwRtrxU4iQLzA9C4l40o/9/qlejKoIkDrIWe/LjtePx6o6Hqg
+yJAYObOyTZMWj/S+aPCE1YjQCWEQ/pQdTo/Yb8X+4eqI0BNmNkUwQtKvzIU
UPr//yNAj6TGLgVUVr+tS3RE
                    "]]}}}, {
                   DisplayFunction -> Identity, AspectRatio -> 1, 
                    Axes -> {False, False}, AxesLabel -> {None, None}, 
                    AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
                    Frame -> {{True, True}, {True, True}}, 
                    FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                    Directive[
                    Opacity[0.5], 
                    Thickness[Tiny], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    FrameTicks -> {{None, None}, {None, None}}, 
                    GridLines -> {None, None}, GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> 
                    Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}], 
                    Method -> {
                    "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
                    AbsolutePointSize[6], "ScalingFunctions" -> None}, 
                    PlotRange -> {{0., 10.}, {-0.07599603735958899, 
                    0.08093202292825304}}, PlotRangeClipping -> True, 
                    PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
                  GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "10.`"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                   BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}], True -> GridBox[{{
                  PaneBox[
                   ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquareMinusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                   Alignment -> {Center, Center}, ImageSize -> 
                   Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                  GraphicsBox[{{{}, {}, {
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1]], 
                    
                    LineBox[{{1.694915254237288*^-7, 1.694914679827364*^-7}, {
                    0.09763123756440173, 0.08093202292825304}}], 
                    
                    LineBox[{{0.5401601110901088, 0.08093202292825304}, {
                    0.666546552341635, -0.00914347484668071}, {
                    0.7860716237900791, -0.07599603735958899}}], 
                    
                    LineBox[{{1.1464284881666502`, -0.07599603735958899}, {
                    1.183315295533777, -0.0633401548353038}, {
                    1.3575721192771815`, 0.02678502295008356}, {
                    1.5122244939325697`, 0.08093202292825304}}], 
                    LineBox[CompressedData["
1:eJwBMQPO/CFib1JlAgAAADIAAAACAAAAT16shZVN+z9NDK0H9re0P2DZUKtU
xv0/yqK67pkPoj/lrH6dhi0AQIHorqQnVZm/UH83A/iTAUDCU2xzFVewvyUh
0itt4gJA8rE1Q+Lnrb8wVU9y90wEQOJowMekD5K/6e4DmuCwBUDEaoYO7NKb
PwxYmoTN/AZAaoxVXO9hqD9lUxONz2QIQJ11n7g++qI/KB5uWNW0CUA8OSUk
u/Z8PyF7q0HwIAtAD67zd2/FmL/HPSAMaoYMQBoqes7myaG/1892mefTDUD6
Vq7v+dKXvx30r0R6PQ9An1HNw01YVT/nc2VZiEcQQCIMi9//rpQ/laAOAQPt
EEBSV+oScHiZP14WqTeIoBFAce/j60W2jD/cc7RPD0gSQNLscRTM02a/dRqx
9qD9EkBhm8ULlYSQv+VzSQ7irxNA+7ufY8xrkb8KtVIHJVYUQLsLI+qEZIC/
Sj9Nj3IKFUBD889Enl90Pz+xuPjBshVA5P91srqDiT8L1r/SwFcWQDkmixJI
Wog/8kO4O8oKF0Dbs8v6RkNxP46ZIYbVsRdAczWCwdLccb9FOHxf62YYQGBm
/Qh2MYO/sb5HGgMQGUCz8EQTaxuAv/T3rkXKtRlAEJDdAAd8Yr9SegcAnGka
QCk3pfbnBXE/ZeTQm28RG0AVjiiv8il8P5OXi8ZNxxtATc7lzkaudD+X/eFh
23kcQFrEBb/AxjY/UEup3mogHUB1YQvgbaNtvyTiYeoE1R1AE5f1b0ZUdL+t
YIvXoH0eQEgA+F/2qmm/DZJQNewiH0CoZ4U2oaIfP4gMByJC1h9AcPIRwS5f
aD9cNxf4zD4gQEvxDjRvA20/Ao2jJn6ZIEAZICXcmolePxO8fQ2H8iBAzA0X
u1/URr/+XhDlkEUhQIx1UMsTQ2O/d6YbBKCfIUD3UHSHgbRjv8ph3xOw8yFA
mcKRmZMoUb+rwRtrxU4iQLzA9C4l40o/9/qlejKoIkDrIWe/LjtePx6o6Hqg
+yJAYObOyTZMWj/S+aPCE1YjQCWEQ/pQdTo/Yb8X+4eqI0BNmNkUwQtKvzIU
UPr//yNAj6TGLgVUVr+tS3RE
                    "]]}}}, {
                   DisplayFunction -> Identity, AspectRatio -> 1, 
                    Axes -> {False, False}, AxesLabel -> {None, None}, 
                    AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
                    Frame -> {{True, True}, {True, True}}, 
                    FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                    Directive[
                    Opacity[0.5], 
                    Thickness[Tiny], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    FrameTicks -> {{None, None}, {None, None}}, 
                    GridLines -> {None, None}, GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> 
                    Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}], 
                    Method -> {
                    "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
                    AbsolutePointSize[6], "ScalingFunctions" -> None}, 
                    PlotRange -> {{0., 10.}, {-0.07599603735958899, 
                    0.08093202292825304}}, PlotRangeClipping -> True, 
                    PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
                  GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "10.`"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Order: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Hermite\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Periodic: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["False", "SummaryItem"]}]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                   BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}]}, 
             Dynamic[Typeset`open$$], ImageSize -> Automatic], 
            BaselinePosition -> Baseline], DynamicModuleValues :> {}], 
          StyleBox["]", "NonInterpretableSummary"]}]},
       "CopyTag",
       DisplayFunction->(#& ),
       InterpretationFunction->("InterpolatingFunction[{{0., 10.}}, <>]"& )],
      False,
      Editable->False,
      SelectWithContents->True,
      Selectable->False]}], ",", 
    RowBox[{"X6", "\[Rule]", 
     TagBox[
      TemplateBox[{RowBox[{
          StyleBox[
           TagBox["InterpolatingFunction", "SummaryHead"], 
           "NonInterpretableSummary"], 
          StyleBox["[", "NonInterpretableSummary"], 
          DynamicModuleBox[{Typeset`open$$ = False}, 
           PanelBox[
            PaneSelectorBox[{False -> GridBox[{{
                  PaneBox[
                   ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquarePlusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                   Alignment -> {Center, Center}, ImageSize -> 
                   Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                  GraphicsBox[{{{}, {}, {
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1]], 
                    
                    LineBox[{{0.19861030851022604`, 0.4374165806048699}, {
                    0.3397473608878023, -0.13793577335692597`}, {
                    0.43913978519532937`, -0.43869513435090934`}}], 
                    
                    LineBox[{{0.7987392188341028, -0.43869513435090934`}, {
                    0.84203980005796, -0.3492223188133707}, {
                    1.0058214718047613`, 0.13947509669231622`}, {
                    1.1551360578527827`, 0.4374165806048699}}], 
                    LineBox[CompressedData["
1:eJwBUQOu/CFib1JlAgAAADQAAAACAAAAVQZIofAX9j+iRBsdov7bPxgOmZZm
Uvg/H2sFgUW4yD9SJBPeWST7P374VirM/sa/YNlQq1TG/T889nXMRfPXv+Ws
fp2GLQBAg4j8NgRD1b9QfzcD+JMBQOwwa68PIbi/JSHSK23iAkBA4scUYD3D
PzBVT3L3TARAEUIeRjDE0T/p7gOa4LAFQPDY30Hdu8o/DFiahM38BkBKsb/R
bPKhP2VTE43PZAhAAJNjJ686wr8oHm5Y1bQJQMcfKAt31cm/IXurQfAgC0D8
4MOjYJrAv8c9IAxqhgxApQrH7a98iD/Xz3aZ59MNQKHDodBKW74/HfSvRHo9
D0CNLIxwjSDCP+dzZVmIRxBAm7zA0FG0sz+VoA4BA+0QQEBD0NPD9JO/Xhap
N4igEUAElcsNHC64v9xztE8PSBJABsJnf7SNub91GrH2oP0SQBCbnu+++KW/
5XNJDuKvE0DFjpFtUPGfPwq1UgclVhRAZPUWflqgsj9KP02PcgoVQMgdieTG
0LA/P7G4+MGyFUBBuGeFRTOWPwvWv9LAVxZA+iz07Gmrm7/yQ7g7ygoXQF0A
eBFA8au/jpkhhtWxF0CuYgwh4iWnv0U4fF/rZhhAAZLC8Rdqgr+xvkcaAxAZ
QI8RPt8N45k/9PeuRcq1GUD53FaegHWkP1J6BwCcaRpAFoTEcumSnT9l5NCb
bxEbQFhPpvVdhmo/k5eLxk3HG0BWrEQLREWWv5f94WHbeRxArS5jUZtdnb9Q
S6neaiAdQFwbSdv9OJK/JOJh6gTVHUDMaiX76oVnP61gi9egfR5ArwRYycAn
kj8NklA17CIfQJKyON125ZQ/iAwHIkLWH0DW85Vf13WFP1w3F/jMPiBAWIas
6QTjbL8CjaMmfpkgQFx5mWBqfIy/E7x9DYfyIEBFGzh6ECyMv/5eEOWQRSFA
DhD2kum4d793phsEoJ8hQKqfi5yQC3Q/ymHfE7DzIUDV5rAlW7OFP6vBG2vF
TiJAZ/uC0Gmpgj/3+qV6MqgiQC1pxPPWSWE/HqjoeqD7IkDqyeDE0Utzv9L5
o8ITViNAT3+FGYpCgL9hvxf7h6ojQBLZ9HoC/3e/MhRQ+v//I0DMTwg5Z1RH
v2aViTs=
                    "]]}}}, {
                   DisplayFunction -> Identity, AspectRatio -> 1, 
                    Axes -> {False, False}, AxesLabel -> {None, None}, 
                    AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
                    Frame -> {{True, True}, {True, True}}, 
                    FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                    Directive[
                    Opacity[0.5], 
                    Thickness[Tiny], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    FrameTicks -> {{None, None}, {None, None}}, 
                    GridLines -> {None, None}, GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> 
                    Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}], 
                    Method -> {
                    "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
                    AbsolutePointSize[6], "ScalingFunctions" -> None}, 
                    PlotRange -> {{0., 10.}, {-0.43869513435090934`, 
                    0.4374165806048699}}, PlotRangeClipping -> True, 
                    PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
                  GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "10.`"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                   BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}], True -> GridBox[{{
                  PaneBox[
                   ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquareMinusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                   Alignment -> {Center, Center}, ImageSize -> 
                   Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                  GraphicsBox[{{{}, {}, {
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1]], 
                    
                    LineBox[{{0.19861030851022604`, 0.4374165806048699}, {
                    0.3397473608878023, -0.13793577335692597`}, {
                    0.43913978519532937`, -0.43869513435090934`}}], 
                    
                    LineBox[{{0.7987392188341028, -0.43869513435090934`}, {
                    0.84203980005796, -0.3492223188133707}, {
                    1.0058214718047613`, 0.13947509669231622`}, {
                    1.1551360578527827`, 0.4374165806048699}}], 
                    LineBox[CompressedData["
1:eJwBUQOu/CFib1JlAgAAADQAAAACAAAAVQZIofAX9j+iRBsdov7bPxgOmZZm
Uvg/H2sFgUW4yD9SJBPeWST7P374VirM/sa/YNlQq1TG/T889nXMRfPXv+Ws
fp2GLQBAg4j8NgRD1b9QfzcD+JMBQOwwa68PIbi/JSHSK23iAkBA4scUYD3D
PzBVT3L3TARAEUIeRjDE0T/p7gOa4LAFQPDY30Hdu8o/DFiahM38BkBKsb/R
bPKhP2VTE43PZAhAAJNjJ686wr8oHm5Y1bQJQMcfKAt31cm/IXurQfAgC0D8
4MOjYJrAv8c9IAxqhgxApQrH7a98iD/Xz3aZ59MNQKHDodBKW74/HfSvRHo9
D0CNLIxwjSDCP+dzZVmIRxBAm7zA0FG0sz+VoA4BA+0QQEBD0NPD9JO/Xhap
N4igEUAElcsNHC64v9xztE8PSBJABsJnf7SNub91GrH2oP0SQBCbnu+++KW/
5XNJDuKvE0DFjpFtUPGfPwq1UgclVhRAZPUWflqgsj9KP02PcgoVQMgdieTG
0LA/P7G4+MGyFUBBuGeFRTOWPwvWv9LAVxZA+iz07Gmrm7/yQ7g7ygoXQF0A
eBFA8au/jpkhhtWxF0CuYgwh4iWnv0U4fF/rZhhAAZLC8Rdqgr+xvkcaAxAZ
QI8RPt8N45k/9PeuRcq1GUD53FaegHWkP1J6BwCcaRpAFoTEcumSnT9l5NCb
bxEbQFhPpvVdhmo/k5eLxk3HG0BWrEQLREWWv5f94WHbeRxArS5jUZtdnb9Q
S6neaiAdQFwbSdv9OJK/JOJh6gTVHUDMaiX76oVnP61gi9egfR5ArwRYycAn
kj8NklA17CIfQJKyON125ZQ/iAwHIkLWH0DW85Vf13WFP1w3F/jMPiBAWIas
6QTjbL8CjaMmfpkgQFx5mWBqfIy/E7x9DYfyIEBFGzh6ECyMv/5eEOWQRSFA
DhD2kum4d793phsEoJ8hQKqfi5yQC3Q/ymHfE7DzIUDV5rAlW7OFP6vBG2vF
TiJAZ/uC0Gmpgj/3+qV6MqgiQC1pxPPWSWE/HqjoeqD7IkDqyeDE0Utzv9L5
o8ITViNAT3+FGYpCgL9hvxf7h6ojQBLZ9HoC/3e/MhRQ+v//I0DMTwg5Z1RH
v2aViTs=
                    "]]}}}, {
                   DisplayFunction -> Identity, AspectRatio -> 1, 
                    Axes -> {False, False}, AxesLabel -> {None, None}, 
                    AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
                    Frame -> {{True, True}, {True, True}}, 
                    FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                    Directive[
                    Opacity[0.5], 
                    Thickness[Tiny], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    FrameTicks -> {{None, None}, {None, None}}, 
                    GridLines -> {None, None}, GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> 
                    Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}], 
                    Method -> {
                    "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
                    AbsolutePointSize[6], "ScalingFunctions" -> None}, 
                    PlotRange -> {{0., 10.}, {-0.43869513435090934`, 
                    0.4374165806048699}}, PlotRangeClipping -> True, 
                    PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
                  GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "10.`"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Order: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Hermite\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Periodic: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["False", "SummaryItem"]}]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                   BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}]}, 
             Dynamic[Typeset`open$$], ImageSize -> Automatic], 
            BaselinePosition -> Baseline], DynamicModuleValues :> {}], 
          StyleBox["]", "NonInterpretableSummary"]}]},
       "CopyTag",
       DisplayFunction->(#& ),
       InterpretationFunction->("InterpolatingFunction[{{0., 10.}}, <>]"& )],
      False,
      Editable->False,
      SelectWithContents->True,
      Selectable->False]}]}], "}"}], "}"}]], "Output",
 CellChangeTimes->{
  3.715196005734481*^9, 3.715196411904206*^9, 3.715196442289338*^9, 
   3.715196522087208*^9, 3.7151966197440996`*^9, 3.715196651203944*^9, 
   3.7151966919339347`*^9, {3.7151968187124395`*^9, 3.7151968300629606`*^9}, 
   3.7151968898305635`*^9, {3.715196957810219*^9, 3.715196980914527*^9}, {
   3.715217196347955*^9, 3.7152172236012115`*^9}, 3.7152172954306355`*^9, 
   3.715217333696044*^9, 3.715217436564949*^9, 3.7152512003642817`*^9, 
   3.7152663377559943`*^9, 3.7152665926678734`*^9, 3.715266733233904*^9, 
   3.715285086405965*^9, 3.715285274667393*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{"X5", "[", "t", "]"}], "}"}], "/.", "\[InvisibleSpace]", 
    "sol1"}], ",", 
   RowBox[{"{", 
    RowBox[{"t", ",", "0", ",", "T"}], "}"}], ",", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<t\>\"", ",", "\"\<\[Theta]\>\""}], "}"}]}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.715266409030563*^9, 3.7152664367656326`*^9}, {
  3.715266603204102*^9, 3.715266606084166*^9}, {3.715285111197428*^9, 
  3.715285115065485*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
    1.], LineBox[CompressedData["
1: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
pP88HU6wMg9nQY85+I9sJHm/8YBZQFQ0C9KIyD5XsoHAfBHcL2piWZDqCZO7
YzwEPt5WVbb8jAWZHG3LL1xi4BD5653KL8n8jDjGJAcZuNRb6Z9TGgtKaOM9
QvnOwEqiSQfbPpDvY75woyOFgV3tTlvyF7MgvcucoW8iGTj1A5+/dgULovT+
7RH2ZGBJ05slHz+zoN6PZp51+xnY7KVK+9/vLOjWcFqnoDgD35/4u7T5BwvK
fI37mBbomO3+WfWH/SyInqKPvn2g48Ndgmfpf1mQWQ+j6cN9OvbdxfBbmyT7
lUgNPeJMx6OfVIvcVlnQmU4TMxsqHbdwiqrpibGikV2cxfNuNCxg8fl08AZW
tMDYa+0ANKyXFupTKMuKYnzHvR/w0zDWmsqX28OKTuRUcEu/rcPpIV/3seqy
oub/zg57t9TiGysRe0uvs6LMq34Dd6eq8ZertrHXg1mRfcnyimVmNZYePTir
Fk7ep3SrDtlU45rO8fy8x6yI8YT7x+EvVZgHn1LPeceKahMCDV2fVOIXwTJH
kgdY0ek/Y6/se8rwxOLSS+tRVtR+mgj8oViGNb2aWDbNsKLbfqc17G+U4kGb
OzXPmdkQdg4OnOIpwXuOjeo8lmJDFw+ex9uphbiSvcgw3JQNMewWt7aPvcci
gY9ytM+wodmQ4lof2ffYYd5FYJ01GzKzWxc3bf4Ocw1t/B7sxoY8z+aL37yW
hU0Zt07dCGdDet/7lfaNpeK+u8aW7uVsqKvCInVFIwZzCA45me1Yh448aQmw
PvoS5u5Yav23Zx16OjGoK/AtGQZWv0kP71+HZr1ubcg89wrqRopaA4+uQ207
jFh0PNJITrmrlWm5Di2wWW94dTsL2IMUZVjur0N9TXhffdZHmJtLWdF/vA7t
3zP35LhDHgy4ibfFPV+HXtUnpkduyIe6c8z3d6WvQ4LpqQcPhBdAmGrjikXl
OnSO38Zxs0ExsI97t+VMr0NBzXy2T+5hmLP/+2FpcR0CSqiCM6UCBjou3Ndi
YkcZH2uV/rOvgDriuHY7Dzua3PFNT525EsJSJT+yy7EjHp1jCCtUgfeG+/dN
FNhRuLDuE/FrVeAQy+qSoMyOCl+ta3corQLtkBEZZWBHslL9PI061cBuVX7/
vAU72sftcyfIpAbmmpRd0q3YUVXMcrj4wxoYOJGmPW3Hjg69/O0S/rUG6g48
+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
htJI+qWbNh//H8Q+RQY=
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{
    FormBox["\"t\"", TraditionalForm], 
    FormBox["\"\[Theta]\"", TraditionalForm]},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageSize->{300., Automatic},
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None},
  PlotRange->{All, All},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.7152664373056173`*^9, {3.715266597415976*^9, 3.7152666065754423`*^9}, 
   3.715266739610051*^9, {3.715285091942085*^9, 3.715285116461512*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"{", 
   RowBox[{
    RowBox[{"ParametricPlot", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"X1", "[", "t", "]"}], ",", 
         RowBox[{"X2", "[", "t", "]"}]}], "}"}], "/.", "\[InvisibleSpace]", 
       "sol1"}], ",", 
      RowBox[{"{", 
       RowBox[{"t", ",", "0", ",", "T"}], "}"}], ",", 
      RowBox[{"AxesLabel", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"\"\<x\>\"", ",", "\"\<x'\>\""}], "}"}]}]}], "]"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"ParametricPlot", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"X3", "[", "t", "]"}], ",", 
         RowBox[{"X4", "[", "t", "]"}]}], "}"}], "/.", "\[InvisibleSpace]", 
       "sol1"}], ",", 
      RowBox[{"{", 
       RowBox[{"t", ",", "0", ",", "T"}], "}"}], ",", 
      RowBox[{"AxesLabel", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"\"\<y\>\"", ",", "\"\<y'\>\""}], "}"}]}]}], "]"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"ParametricPlot", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"X5", "[", "t", "]"}], ",", 
         RowBox[{"X6", "[", "t", "]"}]}], "}"}], "/.", "\[InvisibleSpace]", 
       "sol1"}], ",", 
      RowBox[{"{", 
       RowBox[{"t", ",", "0", ",", "T"}], "}"}], ",", 
      RowBox[{"AxesLabel", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"\"\<\[Theta]\>\"", ",", "\"\<\[Theta]'\>\""}], "}"}]}]}], 
     "]"}]}], "}"}], "\[IndentingNewLine]", 
  RowBox[{"(*", "DrawAnimation", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{"Animate", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"DrawSystem", "[", 
       RowBox[{
        SubscriptBox["x", "1"], ",", 
        SubscriptBox["y", "1"], ",", 
        SubscriptBox["x", "2"], ",", 
        SubscriptBox["y", "2"], ",", 
        SubscriptBox["x", "p"], ",", 
        SubscriptBox["y", "p"], ",", "\[Theta]p", ",", 
        SubscriptBox["w", "p"]}], "]"}], "[", 
      RowBox[{"[", "1", "]"}], "]"}], "/.", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           SubscriptBox["x", "p"], "->", 
           RowBox[{"X1", "[", "t", "]"}]}], "/.", "sol1"}], ")"}], "[", 
        RowBox[{"[", "1", "]"}], "]"}], ",", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           SubscriptBox["y", "p"], "->", 
           RowBox[{"X3", "[", "t", "]"}]}], "/.", "sol1"}], ")"}], "[", 
        RowBox[{"[", "1", "]"}], "]"}], ",", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"\[Theta]p", "->", 
           RowBox[{"X5", "[", "t", "]"}]}], "/.", "sol1"}], ")"}], "[", 
        RowBox[{"[", "1", "]"}], "]"}], ",", 
       RowBox[{
        SubscriptBox["x", "1"], "->", "0"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        SubscriptBox["x", "2"], "->", 
        RowBox[{"2", " ", 
         SubscriptBox["w", "p"]}]}], ",", 
       RowBox[{
        SubscriptBox["y", "1"], "->", "0"}], ",", 
       RowBox[{
        SubscriptBox["y", "2"], "->", "0"}]}], "}"}]}], "/.", 
    "NumericParametersTest"}], ",", 
   RowBox[{"{", 
    RowBox[{"t", ",", "0", ",", "T"}], "}"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.7151968713813367`*^9, 3.7151969007097683`*^9}, {
   3.71519698944118*^9, 3.7151970217035537`*^9}, {3.7152511387726035`*^9, 
   3.7152511523688965`*^9}, 3.7152512188736677`*^9, {3.7152512626228604`*^9, 
   3.7152512780146103`*^9}, {3.7152640524903307`*^9, 
   3.7152640590455008`*^9}, {3.7152640977274103`*^9, 3.7152641517096634`*^9}, 
   3.715264196061022*^9, {3.7152643599824553`*^9, 3.7152644064611177`*^9}, {
   3.715265504249199*^9, 3.715265607742456*^9}, {3.715265653946825*^9, 
   3.715265656570883*^9}, {3.7152656901205235`*^9, 3.715265705761154*^9}, {
   3.7152657462494707`*^9, 3.715265761777974*^9}, {3.7152658050299215`*^9, 
   3.71526583162175*^9}, {3.7152658688641443`*^9, 3.715265873316239*^9}, {
   3.7152659154247065`*^9, 3.7152659169016294`*^9}, {3.7152659595622597`*^9, 
   3.71526596009027*^9}, {3.7152662612388773`*^9, 3.715266278739915*^9}, {
   3.7152668379580574`*^9, 3.7152668389140773`*^9}, {3.715266904159856*^9, 
   3.7152669127909517`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   GraphicsBox[{{}, {}, 
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], FaceForm[Opacity[0.3]], LineBox[CompressedData["
1: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
OAsLiMuvVRbI+BThmCFGlzzCeUZtBh1y0bZDmzGDWB7y/Y5+w5H69cPqGEJJ
YOs3tMKPuiOT6wIIVYmlr+hS7fKn3SPuEGovQO7/V9OFNWM2EsovP/5JxsNQ
beqPjadCVbTsLHqB5ikvnZ4Jp/Vlyfiwh3YKz65N5ECX8aNF9Jp7dw13bf8I
5Snbf5Pnc9zvr2lUBEnb+P+iFR0UN718XgLTjhcZ8fo1Oov7HczKoM/u+2p0
22kWdf5f5dBR27EW/X6aISMosBJ2ybGxo4Om83Z1ileDjE0AN9ozRD6+tagG
Yo4/3YI2+ZKSG0Svh6/9dqJo6WXFqeyQRrjwo0gcTVHhMvup0QzDwmbyaG0n
kVfJLa3w2aZICR3bHn45ProNdLzukv1Hj3vnLTcHCpwipvTJ4xkXT4QKUkG9
OM0YXbuRPbZoigq3lBquoU9SqrUDCjtgx711D9EH1pQ84TLoBM7uoGj0xOyo
j/S9bsgOXpdO/v5Oe/76nmIPhFW0F6J1/ZSTeJZ7oO+WKRVtWBeuyOf8GSIv
bB0g44WYjlpZKPbB1ag9X9EGtsPr6HN9kLMfyPi/pkQXuwC5foj6pshPzpeL
c20s/PuB+6vHTvTQTyYqjPWD9KFlNfSlb5BGCRuANYpXHqHvF7qe452mw6P1
GYFopX7hzeePDMKDEPUP6KBgvXP2AYMr55OvRHNaCIeK7RmCY9TgDnQdD6NS
htMQPHkuN0puPy+axVg3BFK8+9nI8dWoTGPIeBhOhAcJod9t0iiyjh2GKqfd
suR8OGkiIG16GLQaNhuilc8msB11GIFanohodEcxn7G+8yjw0GvJ+fRRBXq7
WOEoDDKIN6Et/QskAhdGYZek4zy6sUYzWfTWGPCmW7OR8UZSlQ/UosfAxSVQ
BD19Y47ze/cY1Eyaku+Pm04iXSPq4yDEss4MvZvyPVHy3jgMmvaS7xs6y7Yn
32PHIav2zwf0Vy79qAWmCdh/VusjWsZC6rGc7AQkc+a1oGclbmeMGE3ATYJh
mfx/ya6qIilpAq4t3uLF96PYqfUJ69smYGZoQQJ94ZHF2enZFZddOYcuC3Qd
2aUwCa67NKzR0uV1mo/OTUKLjLInGe/0Veuivv0kjDHcz0JfHfj7/GryJNRr
5NSjPZeqxSOrJoHKs5aO7jtsc/nM50m4LmC9hKZbyV12mJmETRwjXPh9kXC1
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
OQKEo1FeHSyejdJHC7ar/NjqWQf/Aw3maoo=
       "]]}},
    Axes->{True, True},
    AxesLabel->{
      FormBox["\"x\"", TraditionalForm], 
      FormBox["\"x'\"", TraditionalForm]},
    AxesOrigin->{0.9999199999999999, 0},
    DisplayFunction->Identity,
    FrameLabel->{{None, None}, {None, None}},
    FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
    GridLinesStyle->Directive[
      GrayLevel[0.5, 0.4]],
    Method->{"ScalingFunctions" -> None},
    PlotRange->{{0.9999221783387127, 
     0.9999933645491779}, {-0.00008902021026220284, 0.0000730246744714043}},
    PlotRangeClipping->True,
    PlotRangePadding->{{
       Scaled[0.05], 
       Scaled[0.05]}, {
       Scaled[0.05], 
       Scaled[0.05]}},
    Ticks->{Automatic, Automatic}], ",", 
   GraphicsBox[{{}, {}, 
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], FaceForm[Opacity[0.3]], LineBox[CompressedData["
1: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
       "]]}},
    Axes->{True, True},
    AxesLabel->{
      FormBox["\"y\"", TraditionalForm], 
      FormBox["\"y'\"", TraditionalForm]},
    AxesOrigin->{-1.1248, 0},
    DisplayFunction->Identity,
    FrameLabel->{{None, None}, {None, None}},
    FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
    GridLinesStyle->Directive[
      GrayLevel[0.5, 0.4]],
    Method->{"ScalingFunctions" -> None},
    PlotRange->{{-1.1247444802475113`, -1.1234315137731046`}, \
{-0.000827222094891085, 0.001369603293097985}},
    PlotRangeClipping->True,
    PlotRangePadding->{{
       Scaled[0.05], 
       Scaled[0.05]}, {
       Scaled[0.05], 
       Scaled[0.05]}},
    Ticks->{Automatic, Automatic}], ",", 
   GraphicsBox[{{}, {}, 
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], FaceForm[Opacity[0.3]], LineBox[CompressedData["
1:eJxUV3c8lu/3lwayQ1SEkh2RPiE5USKiEmUlhKK0NKhkj+y912Nvj70dHjt7
71VmqRQiit/z/fN3/3O/3q8zruus65zDa/JE04ySgoICaCgo/vf//98y6P9q
P9nFZgGW4u+UdmZ/APHHRtdFWlsojl5ThY8/IHfFKKBt1QNY/r6Q8/H5Ac8z
8u5yHvcDX5psD8KjH8D83Om+WXIgfJl5Rblb9Qf0xdQP2pDCoe+/z64VO9/h
lrczl3FrFATN87YcGvoOGQ9c2653xYKPelNYb853GFDNL+02T4Dr9JReFre/
w4yDm/6gShowv6Lm9Q/5BpILpX1nKtJhu/4zq5zxN7BwN338RzgT2M7RbZuK
fINwY6EZU8ocSBw5JnKhYgn4129ozlvkwju5qfwthyUwD9gxVLxPhKkXe1Yv
Ky3BM937TaZNedB5kMsqvuUrXFkTL+d/mQ/m6c88Sz98hZ2R7XZN3gIwSWlU
fKHyFfbuMRBtflEIN6l3OXyt/QJe3OdBkaoE9LU7Oa2SFyHsgKr209QS+PQl
1uA//UUwu6Ue16xUCiDz5UwH4yIwvXicNvyuDG7azn23f7kA7wdYPEp6K2Dc
5ruo1+l5eKxEc/SxaSV0+iR/uj81B5Vdt1TYVyrBZ/EqtYL3HGwwzVcL7q+G
6I2SKxTTs3C0jj3qGmMNtJ2vq9axn4FxD+Jt3ms1sIs3RQr5ZsCogSTb71MD
DC9L+2+0fAYW218rQ1S1sJKTUs/C9BlEEw8pMH6vhWgDgm5h8DScW/wvIYeP
BM3+/vMnpKbh2/7RGC49EvzlIp1e7ZmC/8xdhO/VkmCFYKKFDFNwid5AU8+x
Driztl9Z74zB1Z0l4395dbDfZuXhY74xgLNjjcLTdcD7tbPTQGUUHqr3DXCd
q4eXFfUnb/gMA2XIGN+UWT38Yo1ve5kzBMwBQYL8fvXg8KP0WGvHIMgICxdK
j5P5scziEv0AhL0RYNlN2QDNpZdeuon0g3bknqqrJxpApSbc6cyVPuBfvF2l
e78B/ruf0HnQuQe29r3yPOLWAFeLeUbM47qBT43NXTexAbL9gp7cregC8+B3
HCrDDRDTSbFDM9sOUHQ0f/1nAzj1yZbGHmmDkczfybw0jeAwfGz5z42PwLvY
st5wtBGun+LVkvZoBi7nocoZyUbIeZ/58FV1I/T7mex/r9QIypZnq7tW60Hz
RNpawK1GaAiX7b0nUgc3DXaCeMwbYeLhZcmrJrUgZ993VPhFI8wGJ96/ehrB
TUdDJNehEWgvWBw+klgB9/58MyB6NYKu0eHkc6ylsMda6rZYSCMctlsRn3Ur
hJiBhCqhmEaI4pL4rLFFhGjXxdOJiY1AacLccfdzBiQIx7pEpTVCfkhxu11f
InTkDXWxZDUCnU7JeH1wBBQf11Giz2mEdwV3UibZ3OGnxyjDBzLWofwdZxNz
D9m+8Op5ZDdC51zi/Yvm/vhNDbToMhvhqtSfsg21WNSgSbl5MLURSiM3XbeZ
U1DjUfxOKqERBOo1l2t/Z6HSuW7qushGKF4vN1xezMMPcqPcFoGNsPzG0v2N
VhE+/c94LcqjEZ7pLDu1lZdiULeP7B27RoBdofcKOCuRPf5va87TRnjjarb+
1xaxNPJYd6BJI6TrR8vKWdRiHWnIhvZmI3gX3ojdPFCHLoc2fh5WbAT74uhb
vOX1qBqv+7BOvBEiVZVZwg0bcWbjuerCvkaIaxLtYI1rwcflR3Islhvgj9ix
pq+yrahrGj3nM9QAZ/lEDQp725Bz8vTzlqQGsHyqSFO91YlLx++zznk0QHpY
mN2Dhi70PEe6TXzYAFKm/yblvLoxKNWTXe9kA0y6Y1skcy8m99xsALoGEE19
F87Q04vurjHPJxfrQTqjpJng34e3n0eZ6BLqofkAh9gW1QB2H1+2kn1bDyQZ
r9SsmgG8MNg48elmPfRKrjbdfD2Igy5M22G76oF2Y+yh3sQQRuQmC/gM14Ep
LJ+idh5GfYmRdTtiHdS8eUTXdmIEFzlvnr2rXwfB+TLer81GMVM7eUdbvA5c
nFz+XqMcQ+NI06PalOT6pWRg44kZwyNmEjy2ySTQ9v3126NtHIeZejOSXpKg
xf2CCovxBGYRN/tnL5HfhwWBazYrE6jU2DVbPFULTiyldqPUU/iL6rz9Gn0t
xJ/SpE46NI1GjDWnTw3WQA+7QvCa3jRqKbmfiYmrAR4jsfeHo6bxq4opN5dY
Dfx88tyuh/0TnpZ5Rf9kAcHczCHqrtYnbI4Kf8tvjdDM6Cla6PcJ9WPvd8i5
VIOh2CWxdMrPWGB3qSGT/B4+aVtvuiT7GZ/9u3ujyq8K/pQ/mIl5+hmv7ObT
WAipBPU79H/fD3/G5X/lFy8ElUOU13J4edQMvrpvdiSVsRx0Y/Wf7mqZwarY
KdNfnmXAzNRNWF2dwU/9K8d03pcCJcfeuSGVWXy219jJ+XcJ7MvXMWl8OosU
aqIni6xKQGNNl0E3bBbF/H15NXSLgV8pyODB1Cx2CI8tNbYXgfNEc/knyjlk
ws7vDxSKYODL2IN/x+fwcrdxuBp/ITzoofmP0WQOk9vHamLCCiD9wSDbHvs5
1JGV5ZOjLoB9zBvNwZFzyMwnKew4nwetM+Mkt/Y5HLq1GitzKw+uOeSKzs/M
4UW2W1+M64lQRDl6bXpzDg8tPlyllCSClsNqzQvGeZQsDVZVk88Fd3p/VsKx
eeRepv2YzJ4DSdUKk2ZS89ih4isrsJwFX2ulSkiX5rEkP8hnuikTvHcVvi25
OY+UJAbCXGwG+PDseX7JeB7vUKuqqbxMh6+8G3MWVvP4mt3fhEMtDRKp7wkI
2szjtoNI1QOeVMgfZHewd5zHoAFzCbW1ZOAIXDz/9MM8/kz3DuluSYIu2czs
Tb955Hv1sZY+NhGIVLpc3CHz6NhvH8D8PAFabrNwT4TPo43RzaTvSgTQ0MjP
lo6ax+ftwgqR3PHQeE3pjlj0PAb43RFx+RUD3c92GXeS6Ufvy5l8S46Cxhdp
2ZyR85i/+EQpQDcCNjn+nmUPm8dn2XfW+nd5Qv3R6lUMnEeDa/Fe9KRgsHsy
NsTuM490BaqHBV8HwsXZ8X08bvOoSyIsUZz0B8mS+v0jdvPYj++lnjZ5wZV7
+vbKL8j+G3vzcvQ/d3C//2jHwmIefeMftjqnOcE3BdKJi3fm8X48TaumzDt4
81TAp+/aPJYbr85yCFiD6DPzLm6FeUw7uu1VeMYUKElXPPkl5jH+HSd9X8pd
lPaWirCin8ePtvK3GKef4n+UtyD/zxzKGQ422XXZYqBjVWg5Of7vLmnvHvzo
ikEFA+LcJXNYHj6dfv6MJ/Y8qx+zj53DA6wxk2WRvhh7/SlztsscCs1o+1Fk
BmGsRvqTV+pzqJfx7UBWfwhWicyssJ+aw5qHeMXqXxjazw8b+DPPYU7JBffq
i9H49TnFNFP3LPqZRDGAVgLaEpUvxCrOYsxbU21Dg0TkbyPIK3HO4sBsAl2E
SRJqT6abjJDr6fnj8BoRixRMoqhrHk2YwZQiynMWFqlo9UPrnobNDE5cHPP3
uZ+GjscbtyquzmDhRasw3TsZuECVsyf012dMUZ0uXtDKRNFmBnOa+s/43FTJ
46RqFnI3bSe7Bn9GkhtTfOrJHCwPjPuYIvkZK5dZjvp9JeKXNPpdK/c+oYKs
b7PnnTyU0NWRYhH7hMZGbu2nO/KQdAD6dNenUeSsbpJtZj7SbG4ftHSfxpes
z4yUtQuR5zXH9p7YKTwZoGjGW1mIJt3tfE3GUyiy8aHGkbcIBe6ciu/km8Jm
uaHEuvkirI9a23C/MYl5vys5eo1LMNs354/+jXEMul7ERllfguYdpSkUdWMo
8e/1c3W+UpxS1s2H02PYyjnMyz9ZirwnrIVKGUfRNfrPQIZMGT49WfaK6t0I
wsAlddnAMmR4SdfIOT+M/+3RoLE4X476/ZfVG8qGsHjPJgeFfzmOigu+f8w7
hFSH93MGTpWjbGtSIY3HIF5fSVGJfFuBV7qs7RQ1B3Aw/4zRp/BKFKRx91sZ
7cVQ7bXFjZFKDDsiQXdPrhdjndM//jpchYmrP0S5onsworCCzyO4Ck+ZrHjF
6Hbjke6d+9wdVfgoY/STbUkXbmXuCQ3YW41dPDyM7axd2FzgUrZtVY0hu8+d
pI5uxx+Pchd/x1bj8dTk+q2bbaiXvXa4vr0anS9vNEvRtuJ57n7NYT5EVk66
Mx2vm1H9/WNFbnVEwSRBEb2TTZhpdmLvf9aIDX8WMpw+NWD8mPbt3lLEpGHK
3h21OmSTGajWHUJ8s/CF2Z6ChErEno3cNcSZ9U7z5cIanDy2ueshdQ3+fuZy
qKenGl23n/2YZa3BtLJEu7/nKnH80Yl6FZ4arBM8+tQzuQx3lah6BAnX4L7w
Od0UxhIs+TcS2Hi6BqtTKrts3xTiKNfne5/O1eByAW3Xybk8ZLRoeTuvWIMd
FTnxA8k5+OvUqt6ASg0Ou14OLnZMR8GmFsdc9Rrc3jX3UN0oCa/bEZ9a36jB
lGFBiRHnWHxzoSL9mFYN/n0uT9+pHoxuyD9bpV2DLxZtWc/Iu2BBzYcjl2/V
IIVK/OiniG3568Wnr1SS6RsRHks5ai5APPDCkpcsb2x6YHFUNhiOk6P9iqw/
XKdZjf1yLPxtXrOpJJ8fne7m/ep4EvzkmjBcJd/P5nOcmdHRdLhFUlXivliD
QVGdpW9ZciBYhS1AXq4GFe2l/sg75kEk4VLhTakaNDiUFuC7VgDa1ZM8RiI1
6J0rleNuXgxFft9UzHhrkFr76u29faWQsu9lrOnBGtzFZRzy6XwFsLPaBd3d
T/bX4dmnm4lVoONMfTN3E3Ffe+9R1t01EJd4RytmAnFqjPSIT7IWuoRYRrxr
EG+ptTVw3iXBJMaJ2L9HvD3tw+eQXw/lNMJCOwaIk1kMLmcbGuBuwFORThlE
fguzhKn+Rvjew9X56Hs1Fi6W/tez3AwmO+2OCo3V6Ed/9iLFVgs4pSSLvIiu
xgZly+kvlK3QabLksetSNWbRFO2upW2Hrq33NvfYqjEnrvVBIF0HVDG0n5Cc
rcIU7yzS0v5OiGix/XTCoQrdDzTW7nXoAjljYduhxEoUs/h2XsOsB+zzs0oP
WFQilWethsRoD3DXct4aFa1EmhNE9/RrvbB5jTdHiFiB7+4NS12U6oO3r+88
LH1SgcE02l66SX1QNUBXMn+yAnUlz+/5caAfDnmcizmXQq5niQEj56/9YJ+R
x2hpVI7Ht+Q1bbQHACaMKq8eItMjPG2HqgbAcKDUUdG9DCcqacMaPwzCGpN7
qoNWKWbQN1qP0A/Dda3O81N7SlH4+OXlFMthCPQzS+QqLMGCoz+9yxuGwS+L
uUuZnPcxl7KVU1+NwKUwgW6oKMaH4VP0tm0jYC7PtSRiXozmP9o+O/GMQrt8
0/zv0iIsErvBeapuFHylHfZPGxVh7F9Z6TbmMeBnJa73UxVh4PKmUqDhGOzs
P1O7rlmIsfzn3f1/jcFkuR1tzUQ+Ur48RLlnzwRou1KXJtvnY1F5ZmPsxQkw
rBWvaeDOx5r8xynqjhNgFpGo2k5+z1UI1byTvyeA7lw4Re0WEZ963X9eJTYJ
9s7ttlQRRPT9Pa2SajoJR/K451UTczH1uadF6MdJcOtu/HRgJAcvXp78Gb45
CT7Z2pL5jDmYc/f7++usU+AixdGQ9joLiadnuQxhCvhyhakOZWTiyYfNd81v
ToFv242SwNEMPLx8Zf6x+RR40tf+7TuXjopa3Dn2H6aAqiitU0Q3DblpP13v
jZyCTz70pTEvU/GOUcT1PxlTUKyj3ikbkIIf/k1p/yybgr9F92VYspJRsmWe
p6JpCsTa07nONibh3uP3P97qm4J5f6Po4slE/JbUY18/OQVrK0P9hI0E7FuI
ebznyxSsLtz9Qs2cgEkecvUHV6bgvYni5pYgAVWOHsvZ2pyCbY0LIl4X4pFd
S8WoYNc0rJbKHvPJjUVW/jFjeappeLu2dvndeDR2foaHMbTTYOhMX7CbNgoD
b104080wDRSBY1oXpSMwVTnDZoRpGpquVx/WNwtDfQfV72XM0/D+B/2KZWAI
/m75pvGUjOtPXGsLxCBkDEo33machpM98cK/lgLwkV/KFTP6aWC91SqXdtgf
C5ysNVJopmH7MY9xWoA3HvpYWELaMw1LG8b3hX94YD+Job1iewo+3pqYZ9Vw
Ra6PJwYC16cgPZhDPiXHEU+cjz185ccUNPpm35M59g6HW6yWJ2enoNJM+J7l
1xdY4biyV3eU7A9WAcHc5w8x13RCuLhzCgzENkVnJPSQx3hB7A9pCq5nTl3j
u30c3pi1Th8vmgJpM3nHIz8MQcBIgUU6ZQq+K1RIPs2yggDYE3Q2dApK05ci
LdbeQZO09UUK6yk4xmmzTPjrCAxDmcvtd6fguNXOhs4bV/BhfRjkpzYFwYfM
Fy488IaLwL68zj0F50WE5nYG/cDt8A2lROopaOccDtckBADFm6nksKlJYF3Y
xzm7OwS+pnx0lbedBPxb2vaDGAon7morxylOQpWGVwalfjjEU0qcZ9o/Cbl7
K0IHyPOu1YcElA6agEjqEao8GgLIDfS7KvmNQ+pm+uhSDwF2GcfLtVwZB4X7
CenKkQkg0TE45005DsfifrkLkfuCCg03fHs8Br/LqvgjZpJAouEeY9ixMTBI
6hP8k5gM5qKTglF9o8CZs+xmyJkK6xD0o/30KDw4tbWp3p8KNL5DNvunR+CW
igElpXca4Eer3VXeI+BV773k/SsdugtoDOInh4Ez3pCWOzELLqTUhZ56MQSF
6dbChy9ng9PVEadk9iFYbH/3IHEuG+pkb2cOlg1Cj0RkxXmeXJCqGovx3xwA
m+KRRsNyItDRji3yP+4Hh09LEim78oD/xYFz2tT94Dx56GeIch7Q/A23eUfo
AwEpPG3UmQdu+USuvq5eELH23VHryAfKn8sljnw9IGu49cZufwHIhjc5Xivp
ht35PKvySgXQmNdxVutKNwQzKPaZFxdA+SnZCt6HXdB9K6iieakA6t41l62u
dYK9XbNoHm8hfAiqXtJk7QSO5tE79O6FEGrb/FhbvR1+Rkv/fldSCNSiNqaH
HrQBZ/6rFsu5QjgdvyusxbEV8nQ4b5VBEZgHGwiI5beAFdWoGLtlEWiZhl2m
bGkGkY5b7N8Ci6CR2ZyBcrIJ3nNeOPF3sggkGcYn66gbwXrKs1tyTzE0GAf7
JHM2wKkz6lFj/MXwJ+qfyC/xeuAIM9njer8Y4OozZ1ptEiTm6N11ci2GY2fH
CevmtRBkqbTyg1AM7+oH7XxsamDl+BOhwwPFkOr6/dXimSrwUHv0r/9bMbDO
/Of+8XYFdDwcsqLYUwKnHCKy3tqWgVqiLVsERwnkPDBh5IwqgQ/hU5/iRErg
wLhC/MfKIuBOuHyW7XwJbBb7ZSdPFICLHv+7P1dL4PchrqetFPkgabB5WF2/
BDSFKnj0jhMhUeG8HdMDMj/Tq+VJ7yzQSLagu2RdAu1Fo4a3+tIgm3dTYuFd
CWy5X9m+yZUMFtGXdf65lMCQ2lcFtgcEeCp6QdzFqwRem4rvyrKIAsKlinE7
/xL4dyk1NJ4qGHxXjoZ+DSqBQJFfeetaH6BVucezI6QEOFreWzeovoQv1+S+
C4SWwHJ4vG/h6l18f7j+10ZwCbmvaFLRhzohR3HXR8XAErh+OLGazt8fjx6Q
SdvnWwI6O2/1vrSH4U+zA0NKHiUwxio5K7InDp/ZlMpSOpZAkYJgt8ShRCwW
3dV73obM/+BYzYGsFBwzIyVuWpH9qVBd7CSbgZv7enJlTch0P8kstfps7A9q
evRDuwS4w3+/tXAj4vAU13kDlRJY9V72thXMx775HJKTTAmUiH44cqG5AIMS
tOJMhUrgp52ibKpZEW4+vPVyNzk+/Gu7t8IpSjA/o4jLeG8JFB7UHNwJL8Xf
DOIrxmPFMLqJzmO1FfgvsrqEprEYgt073IU1q3D5xvvntjnFcIKSrj1mshqD
6G3/lL0tBo8MG4WeDfJcbCN0x8+InH9bdSzUFbXYMbo6e+ZSMTD6hpSnvSXh
b17B9B2qYqArTm6j3KjDjgfcVIILRfD7O0kyvaAe5btkx0WaioCotpwfbNWA
1xtCHLodiyBaunOTfawR+c5IsNneKYKOLGGI9W/CtQ9pRCrpIuil+xJ6+WIz
bqR88pxdLIQ7Ogu2IwktqH9jV4BsbSF8Euh2LLz2EVO58ZRTGLn+Ol9G+Gx+
RLEjz0/+vlAIZx+IrXGqtuHDVQftLvcCEEoxrZrq7MDjj9gG2W8XwOMjoucm
HnYif8Xmj0cnCmBD+75hJ2UX/pBNcFbHfGDeLxh+IqILv3jr/5j0zAfp4Q2N
4E9dmBv6iN1XOx/qEy2dB4S7kUmpceHqQh70NC+HtJR04/3jAtJmxDz475ep
94u/3bjrJJN/2us8aCyUkZiHHnxxJjMZd+eBeGJ9MXtdDx5+Q/oceYAIYQ+q
8m6W92K8AjX7j7RckDzD8/Trai8Wh/wOPi+SC3VaD63OiPVhylNJtQqRHCje
4fcbjO7Dz/sYj2ylZ4N3ffsDkZ4+9CO9UPnJnw0Xr7V8FdzXj/+a/3zh5coC
eSERHQ7LfnxxpGbrUWgmGFm6b+yN7EeSaOSCH0MmDFIq7A1p7kdHTToNh610
qDY9fTCQdwAvTx2Qv/s0HU6l3XL8pzaA40xLW9IzaZAY68619+UA8quvdO40
p4J/+HzxZ9IAHtjF7ff5ZCpcrLuyRfoygAOLfdzVASmgbv8q8Q/TIOqeELNz
uZUMLPxfx8x1BrH1wRSbe0kSTDBKOkbZDuKe8eGRbPYk4F+me3A8YhCZWHID
Q/oT4PY+6xbh3kG0lGTWszqdANovN4TSvw1i2vmm36H+BNi+ui/CZt8Q+t5j
7eX6Fg+j6REfwrmGsL/nnC79lXiwTct9TH16iLzHM21Pq8QBdcCvtqbLQ3h9
STI2bTsG3JhFewZ0hrBxifeha0E0TFrQ7f/PYgj/qcrL+N2PAn/di7vmXpPl
CxfGxg5HAnu8w6V5lyH8Oego7NoeDj//WhvJ+g+htonl71j7MIgUb5+ejBjC
rF272RQkQiFg/Zz2EGEIp+5l6Tl9CoYbrE+V+dKGcOEdRtsGBcFCoJFSfdYQ
OlO4152/FAgOr77wl+UO4VW565dmV/1h3K3v6Z68IdQsl2qnU/MDh6i/mEoc
Qkqels+Ps7zhi9eFvKScIXyx20Cfi8ETYsTfT//NGEKV6q+kS0/d4Yhh0Le8
5CF8k/EqnbnXBea+33neEDuEtMe2Yoj/OYF9WQWdTOgQiv77bhj9nz08CPHU
ZfAeQs/HUd9OUr6BC82Pdik7DKF5nq6TVdcLcFg+Lz/7nGzfW4Ko0cUnoMgw
mf713hCeUuD/E7xkChI3aiYNbg4hdXg7z2VZbfizcOPtOYUhdAijP7bPai8o
793D4XlyCDlb4/05e27ix/7LN9Q4hrDkqn7W3JXHyKEJVKcWB/HFU908rTMv
sOzKaLlO5yBu1mZT0l+wRU3m2pztgkEU2+ycJxAcUaopiLnLZhB/Rrt+CORy
QZJWhhOl7iC+Ovy2hCnUDeFxMnfN2UFc379iz/HOC32do6e/LA+g6imD9zcX
fTDlKIn6busA5qtaPAAhf5Ry4TZ6lDSAxqdZH+/1DkQX2yPCxpoD6Ns6dpK5
PAgP3w4euC4wgHMD/UKts8HYreJeubjZjzyud/l2/xeGOTcGbgrG9uNu5ZWW
O3rhqDueGzxg1Y/s5VV/uN9FoIT59kmQ68eRn3+Vgkui0FpnzeN6fx/uWJxY
kdgXj/dZxn782ujFL6Vf+QVc4rFZXYN3gNSLB6+8CCZREDA5XG6myqsXz9iK
CPauEZBP7jt35uFepJntIWV3JGLsITUBq5M9yKU8Ki+kkITuSbdN5n50o8Bz
BiHO/CRMURN87ZrXjfbtYuE3/ZIxsniq8bJkN7rC1wM2/6Uiq62M6A3hLuSr
Fb14NDoVH5rXjS60dWJHh5gWC0UaZo6OU5MudqLkmsyuEVIapv1HaLhxsgND
+AT+PTidgXuZ02yWllvR+Cktgc0rA8OOB1F0GLaitOC+f8tTGRjNnLLu3foR
30jkveBzz8TGouGfzYQWPPDY7a1wVRZO6ZoJKis2kfcGIu2vvdnotK//Kk9a
I075X93VdTUbp4x4G4/TN6LxHeGxur5sNGVq0+jqq8cwW1bhPrYcpO1UyfQ+
W4+K1+vdlrVykInGnSUyog4HLvHIXW7PQZbNoF2d+iTUs+KvebsvF4sJJ//Q
VNai2ssbA0XnczGMUmKh8kgt7vl32UciJRfl7t7ivFeAOFRkYft0MBcfGize
oX9ajWLxTwVu7yZiHdsD+TWRKhz8zrDmL07ESdYwy1ZCOX5zUvgnfImIfx0C
bk7pl+Ew558Q0m0iRk44CzmwlaK6/S+925ZE1GuvkKruKMbf3dZ/Ft4Ssafm
eWG2exF6t8iov/YmorncLpLxhULcdo+WoYwmIuU75sffNvKRRtHFkr6UiH6p
u2YGLYjIrc4f6lNPRH+KI/fKLuVgn1H21f1dRKSp21mmKc5ExbRjpc4jRAwf
+LDeKJCOrhp+lJufiaj2NuAvW2QKanZJ6VktEZFJz8mOkz4JEw/UHJxYIeKb
7CseOw4EZNDWS726ScQEOmJl09cYVHd/9rZsh4gn3ryxHxsMxyllU1nmPXlo
ANbue6eCUJvW6sRzqjx8vP6odaLfB5+piY2M0eQhE+vXrxU/nVGY2nWXJm0e
ZofoDGsKviDbo3Gph4xrWr23+AaP4nitpZohGWstZW0bHLOGHL/Jjt9k+XJK
hda5287QJfuEGE3W76ZKo7LO5gPK574MXSefL86rHP7YLAhYaXglWCny0OvJ
4OT+c+FwV2GWME++f6A5F4cfbQzE18rxtq0SsaxXQuDO13j47nyuk/SNiLFm
xlH8GonA8lu9r22WiAM3Oqz35CTDqOuUztcxIso5pp8b3J8GzIS7rty9RMwe
O/7e3jQDvIuzvCybibhhPL46Xp4Fsp5qje2VRPxu2X+xjz4XDF6lRKoSiTi7
uSiSkEPecwYFHn9KIOL56W4Gj748MKeWTQkNJqJNM1Wt90Y+KHX25TxwJWJu
2l01wuFCEJ3ocXtkSsQLY28lanSKgWAqHULQJGLqp9jt7BclQLoWMLMJRBy8
+O7mc99S8OiYX+fhIGLh0xGxyxXlsL73uc5PSiKO6G66yXZUwEJMGu/IcC4e
uvrRs2OiEkS33FpH3+ViijJrR9xGNXQ6JCR/U8tFGati/WmKGjiv9d3f7FAu
0u8791rQpQbGvj/5Gpabg9EKAvbVbrXw+9VtOz2bHJyrreyi2EcCii4elyDI
QWKQZcGkMwniNK4efNuSjTPfN4wM3tZBNp04Snpnoxedd//31TrwEV9mslYn
17OTNR+VVT0U9jF8iWvNwmNxSUn5Og3Qceze2MmSTPxHv9Chz9UEGrYTiTmP
M/GV2WCoi2cTrKhnfprgy0SDccPnNL+b4L7l8gETnwykdb2+xtLcDF4NEqII
GXja6eacn1gLBMsmyE8tp2Mqj0abVlAL+Mm8vulyLR0NNyp1029/hN7b8/oH
/qVh9VrvHomSj3AinP7+m/Q09HBcivvJ2gqRqUEB37dTMbjtfjZ9ayvEvarD
3TEp2B5z8/Jl3naQfW4V8J9sCi6KHGL6bdMOYWf/BCsNJGODnlrBo452cD3Z
dvwgbTI6LdbWxj7vgDQ1l8y5xCQUSxW7rlnbAae8LPzyziXhwmcqryr6Tjj4
loao/SARK2+2/8qN64TIvSW+8v8SsP63B0FithOYxCLpFQIS8OxDvb/irF1w
lGFePL+YgMi23T16swueS0i7nVIhYJ+O+8C3Z11QW/R238JQPIrVT6p1+3aB
pKGsgtJyHDZUfrChaeiClpAy/4f0cRh6lJBqMNEFRsJJDy8JxWLvDZaz7393
wThpdHLyYgzWXKgzsaLvhoNPUik07kSjyGkVS6Hj3dCRi7RxL6NwL9vacN7Z
bhizfHbhs3ckDllYuO1T64bC9UQOt9JwnFiyXGF53A1sXPxn9pL3rBv6wyZt
dt2wee+SVelUKJ6r6n503bsb9ga6/stdCcENy4aFuIhumMsNOvV3bwhm8ee1
lid3w4s1MaVs9mDsDdJ/SiB2g7GMs0WvYBAKXLJS1irvBkPNytb3MoFo3OJb
20vqhoKD+yLxSgAqFj24xvOxG5jveFOm6Pqjc0SisWxXN9zaWDN36fHFSaqF
B8f6u8G74mSFyk9v1PsYPzI01A0ulhfPlTF6odv7228MR7tBr2SpZO3kBxRI
1FArHOuG4r3tf7iuuqNhGUFzlIyZyt1bbli6oobio5A+Mv+MdM0PooczsmML
B2G4G47OHTqjn+qI48T+aYWBbpgqqKqf8rbHz+/z1kq6u8HOJFebp+0tlpHk
bfe0dUNAsA5HAZ0NnmIR+y7Y0A3PNwYDBjRe4JDH9zn+qm6wlruq3Bz4FOXl
fqztFHQDK0/aW688C1xRissuSu8GVSXONQ5FE3Svtoq/EtsNlp6m+x/kauOH
6hajqoBuqFlZy60IPYccW9aeB1y6gWLeP0nACECox3O/2stuIHIE9gx43IJ9
p599f2DWDTyM/7jmQkzgjEaA4mOtbhDgdVXZmbSAS1raLHcUuyG7rfXrYbEX
cFqC/c7O4W7gn9IvKWx8DTeXyg6W7CX7g/V4V5HeW9hx+Uht/KMLfnAon6CS
dYSmJnqzEOyC5knz72/+OoFuTlYxX0oXWN+r9JWsdAExtkBGolcXJAmZpu1I
esB1G46TDeR8z2qfEYlq+wCb+9JStaS7QNCNh2R7zwu05ML4aDm7oEq1liLT
wxeOr8TELdV2wo+y594WtP5w/VKS4F2XTrA2vTW92uUPfu++qEsqdcJURcuP
K7cDgV/p6BgDqQOcZLK3dtiDIKG41PHY+w6Q65BZ2jsYBNnPnslkSneArSSf
0Mi1EKCOsDM6ld4OITu5/2JFwkEqvHU93qYNhmoTzdrGw0H9E9faL8E2iPlS
vrnjEwEdNFtps4OtYE5ZsnZrIRIawP1QvUQrUN9kL/nkHANDGjoqdAMtYFNa
FaB3IhZWbzj9on7XAuaL3Tlh9WScnTHXz9MCDLP0uUp/4+AkheSPP+bNcOGi
XtyQAAFY6bJucc41wvvkZeYrTwiw3EHTedW5EY5uvyl3KCLAz4w3Rg7cjdCd
f4NZVj4BZNmiLtFqN8CNBx+63C8kwnZEipBlUR2UZtx0/myXCOuJV6St1Opg
se2P9HJZIlg/WXdKmyJBl7nEeRaxJJjZkf/9iZoEsSTxRaV9yRD2TNqP/0YN
SN5/Iv1NOhk8o7BQqw6hfWg8S8oyGQxNBZZkPlfDypRka3RzMhySKNfr464C
TTqGtPK1ZHhX8FAqWa4S4oog7DlvCnBUxU956lTA6WwVlcwXKRBdd+1zq08Z
sDD/vC0UnQJaP/h7FVNLgfloIJscKQVmd841760pgUBoJx3enwo7Pq/YUn8U
wRNJef5ZkVS4emdyF2FfEXzN+FFy4Woq/N2Vz3aUqxBGKi4NpXmkAkNgVPSQ
Sj4MXsvl2U5JhbLHTjfeqObB5V9utwl1qfDnZ5dUqxoRsi3D8wImUmFu6KBX
WUQOUC6p93Ssp8KDHKFRh6gskLPXadFhTAO6scg0hpgMsHRZyhA/kQaB0mf/
c41Ng2h9ea+bMmlQFdnauC8+BSZNnd7Xq6VB+DBfTBEhCS5TfAt3MiDjVsa/
BYkJ8Mkn/7vPwzT4T1mXny8lHugplHDOJg1OcObeu64ZA0Y6OOzjkgbvRu7R
1OlGgFGSEpWLbxrkb31d/GQSAjWDRowfQ9PgOg9t4S+rAJCeiygzikmDh500
Jy1/e8KvQ6dnVBLSQEOOjXKYzRkmVmWbnZPTIHis0//By1ewvWFSdCA1DU7t
nP++JKJPno8Mtn6npIG1/BGHE8nGuNtzY1GCzC/V/oRf3sQGPU5ur9QT0qBQ
z3vaiTwP1n9Xm8yLTgNK/QLW9XQvXDzXa7cZkgaLC19ld7ICUMTZlRDvkwZF
WgfmfRxCMJrnJVeKcxroLJf+fnAtAqlu7F+nI9s75bBZqXkoBn+GUdkOWqbB
C2K7E9WTeCw+cH6FiuyvtqrOCaJGApZMvCmKJ/vT8c5eC3eRJGzXUmZJIvv7
lZ8aj9XeFNynNBvLyp8GrJddiy+NpaJ8Ws/RNaY0KOt/4/4zNx1ZXvDpq2ym
QmyQ+9oth0zkif1xhPkTOf59++7pkOeYm0cbJDSbUyGLp0p1+GAuDrhXFDBk
p4INfwnt3cdEZPbrHb3inwoy3+3HX17LQ0Ul9Zl9z1PBidI8OFEsHxmpnr1n
kUiF7KuivvTzBShfoNFnwUDmx6pb4jWF2Ct+vuHalxQY3qz4cDqsCAvsXS2G
Y1LAy++dcp58CbY0vA1xeZkCti12E8yMpbhdUKneoZYCjIL3N46Nl6IsmvCq
rybDSF2eO//zcuSVpyzzbEwG2blxO0qZCjQ5y2H7OiwZVvuJzMb/KvA023P/
J2eSwWpcwtf2fRVaDhBfOVMmw1JAuxTXuWpUiq6su92RBLdaGhTY16pR9cIR
Gy2TJHARD062PlWDev8l3HMTTgLdasN1rQ81mJM+mu/1MxFSBMVoO6ZqkHGY
1/X4u0R4+UKI54VXLToaeX844JIAxvsYvzF3kjBP1OdD5KUEEGGIGGg7XIf7
rOgdBPYkgNMhaklaszo0PXeCwtSBAPqxShy71+rwbe+9aq7zBLB+OT1VJFuP
qkrWtcsb8XCC3e3RxPt6RJWqh+tW8aBJY/HGhbIBK4732Z0RiAfVXfd7txQa
8NQXO+2LGAfsYbwxY/YNeNV+4s7p6FgQtdPw6/zdgD9l83gUL0XDA7djp2S7
G/Gzo9rpzowoOBx67UXp7ibUYtFwZWSKAmpdJWEfqSb8N3hvdWAgAhachYZP
BzTh7dPFWS+kI4DxsAj37qom5N6ka/8VHg69fBFnj883ofzhy++qboVB+OqU
7fX/mrE46n4KT2EodM63L+vpN+PUEO2TAKZQoMtS7yO+b0YGnTyJI49CwJrN
ZeR6fDMyPZSya2kMhif/6Axka5pRqjO8N5UnGNpX/jFbTTTj6qPfhbW2QUA7
lle8sNmMfOt/OQaEAuEYU0dRmVgLOhX2R807BMD6sSUXhsstqKNOlWEy6A8p
RdKimfotyJ2RXqd50h+yMxnM/Z604MfRtF63vX5gzGL2rdyxBQkSg08ccn0g
If1D98nAFjRl8DRI1/GGU6msLQvxZP1Xrtpy7PKCK+2HY5eyW/B+eVryTNoH
EB4nHpYta0EXaeFavusewBj+lbqH1IKXo/Qzf/x2g/9wUrLoYwseKW+6aBDj
CuMsCSYzXS1o/eiPheNFF7hwW9nEqL8Fyz+8/fdy0QliVGe2hIZasJtT/8t1
P0ew5n1LpzjcghwJXVOCZxzgipYscwaZ/mqPtbxgsR0owq+BewMtKFWUhzco
34Le7g3hZz0tKBbwuWxTwwb8auNHetta8FaPL+Fa9EsYjVQo8GloQZoCma/v
vjwHOaK4U3xlC8ZbWdLmyjyF7GM1rAz5Lbhko/GNj/UhiLCoSA8lt+AYxekr
qSVmIPd3s5wivAUXdj/zPW9oBO1rbFUfPMj3897MtWW6BeqzVd9fvm7B67Fz
fHODlyHR+CxDs2kLUpymNNn1iwbKdjUNO10n8w8NyNN7XMTXBnmM6bItKGpx
jl9QQwsbqM89Pn+cbM+JaJJIhyF6xaQVKO5vwYGHDkxRAxZ4YkxhKaOXnD9L
oWtyWY9ROeWu6NHSZuzo7b59svoZygSMyl+Iasbq9tdMbq6v8PDVNcfoO814
9cX5UP8ZGzRs53cbk2tGSvnqm3oX3iKtZO/uwcPNKKRx/mPWN3s0oq4/QNXb
hPadxINvuR3xjkj0a8XsJpwOusxw4bITWgUf/HfRrQmjnX6eWfJxQZVEFrdk
cr3s77knfHbPBxT/9+LQRedGPCaTXi7P6YmXcsUd6bQa8V15J/8vCS+8/e3L
rZLjjZjdGkw4fssHP6ap6CI2YI7aFC1HjT86aicq7nypx9qhA+K0igEY7SFT
LltQj9rR2gJxpADsmCAuvnxTj4f5me75YyBqnVdW3tpbj3OXwe1bajCezzob
VMBch/ObyvfPHw3BnCZjB8MeEpameKrsBIbgngOsN4UDSXiqVPsP6XUoBh2N
bTjDSEIrV8tzJSfDkbgYcTV0pwYF/gWa7AkLR4biwTJSWQ02RqY+iNoOxzeh
jzxOW9egwdb6reDmCJzK+dez0ITIoyp0RVo5CoX6AtYW3lShU/7He3oJURjx
uGb0w0wlhrsxaidvRWHCz/1//l2tRLOKCpeUtGhMUPkd6nq4AjP0Dr3S/huN
Ay5nDmXZl2NcYYkYt0YMit9JXW79XIY7fh6G619j8Jfn4rWj6eR+QM+3n0I6
Ft9IcZ0y3V+KNXI9s+xOsWhyTPXgR8sSZKy3i7JgisOEYJM0TqFivPczdilt
fzwm7A/Z+BZdgMdMPT8qi8Tjky/qWte+5OOe8isFJarxyMzN8Wfv2Xws3fYq
3OsWj0Ob/+iSO4goo2A1OU2IR9dTrm9TDhFR8suYjFdlPM7gDVnD5hzsO/ax
S/F7PHIcknnHuJyJfHR/iq/tJeDSijhMO2WgNOMhHoEjBDzrTP+Tjy0dI89f
N20WJ2DPt3qXlZRUtL72RPb0RQJSBhlXmEmn4BT0Rd7XJuCe/Pq9wS1JGHnZ
/r2ZOQF1MsN7Q/USceRlWkGVCwF7c+RK376Lx056gXX2QAJarZIMuI7E4lrk
EuFcLAE/XFRozz0fhY91WrMF0wnIfNYyedIoHJeAdGMyn4AyN264jbuE4Jef
AiJGFQQ0pfqFQ+mBaHCOaTqTRNZPaG6hiPfD04u+h+uaCaiu6sBI9eMDmjSX
vE9pJ+Dib9lXxxRccDQ5tvBWNwFLRW9cNjlph/4at+/19RKwTOzXq2NTz/Cl
35oETz8Bly99PkZlpYddut29smTsr/bgKYOTJhwWjjQ50UdAiq3Lit+TnsDD
tEnhabK+N+JGA3N/3sD8Nz/bJx0EvPeX4RkTrTPks0REdbcQkKilXSQT5AHL
kovj1PUEjKUWVjvI5gsNpo99DlYR8CDFSAJ/cwBokQ6ubxUSMJ2ZfkzRKRhu
7Dn+oDyTgJrN6zoF0mEQcX3I4CaBgK8qElWufo2Af2Faec0hBNR3OnZsJiIa
wrrvqnN+IKDq6v3mG5fiwGW1luP6WwJeXj3N+N9aPHxaV9wye0RAqSNeu/de
ToDWnoyxuwYEDNIrkHQMToQ772qTQI2AVLH8DKFTSVDwVeMclQwBz3QbUokL
p8AjPSf/0hME3FtqHX32WSpU5JQuaDOT86E1SCe6KA2+mUe/NJyNx/hMNopT
/2VCtPxIcEd7PH7XFO+WeZ4F4rSZXlJF8WhK3PbVzsyGREv+/q8O8ajOw64h
t58IPOJOBxTNyPmZ//rByQQiHNIN5g5XIef3VdpQJ+k8eHw4WOsaXTzuzpES
lTbKh5HR5YZHw3H4nSNc0+NnPtjUju/VDI/DCiuGySOOBcAls+NhS66vv1yd
yUuRhZDec81l5ksMvtSUK9QqLYZCTyFGzYQYvEkVLgOSJcBE4hZQ0IlBDbEM
uucZJcAWsutnGUbjFLXFlciQUtg5fj5a41k0Pr3d/cGFugxIHGea3vBG40GN
+w3xtmUQtULLRLSLwgl2YrDurXKIPivJ2SAUhd3t7MVLteVw3G5T+ENfJLp+
P64fK1IBXJ/2f/iPPxK5U0mqan8qyH1ydbCzPBwN9ti817CrgiXdtt59d8JR
5E4Ete5wFSzEF//j2g5Dv75Dm3dPVwPl1J+BfefD0Cz+eq/2dDUsf/vuPDsS
itVnWI7In0EQ1RLTqya/n4IP1T3Z3BEktOvtbHJCcDsq/prigRqQFYpoMVcJ
Qa9XQV37pWsgf1vH0GI6GD31jxvXG9TA6IvHhEamYAwsLrDel1gDl22SnOLN
AtFm9iNHxrFa+FMn8/vHRgDeDRnWmYBaaMj9JO/pFYC6vk+ct/RrwSt/nlCe
44+xXQfCl/xrgTlHmmAI/vj0WPyf6vRaoD/qc7sn1g+rfxywfF1bC4Knx/Oj
Rn1wJiJUOuJbLawfnf/xcMMbFZSOru+iJMHkvoMSCqzeeJzG1vUaGwloS/qe
CYl7YdfVT0GOAiRI3vLJlrziiT6vQ3rCpEmgRMiatDT5gKHL7T8DVEhAERm1
e+qNB5493kR4cpsE3SyfZeMD3fEuu2PhKTMSuB0kJJalu+Hm7qhn/c9I8HFk
7xnZGleMzhmUMbQjweUIhTnxARccGPtj1epOgoNeLjlpX51RRqv+MVcACT4t
bLvkUzjj7ZE/0VoRJND6OmWkz+aEJKk7us/iSeDRqieTJ+SINEJ5e16kkICf
FL2XdN4Ba96V7hhkkqCQMcf2bOJ7tFk7kymaSwKD1eT88I/v8OFFLYvPeSRY
alOqrfv5BkP6rk46FpBAx7nlXy+HLVY7RjPSFJJg9cLX0Bl4jUe9X+1+Q6Yn
iJtVMN1/iQtSDPX9ZPkrtj8jrH2tUasqVI+LrF9WWdVYsPgZhplf7LpBPt/X
9aZDcOUTnHumLPa/+5kc9koWw4dYRsd1fjOOBCK7TNfV6+6jKV8JpUI4CXZ/
eBZ/tuUevu1713XFjwSeIs3Jxgl38f2EFttBV7J+t1HRP8W3sUzlYEOqLQlK
gzi+PSNcw/tnZ9YprEjA8eOXg38NoI7/SMPxu+T4yPNea6rqr74rw6Z84DoJ
0nZZjI6uy4MGBzGoA0jQoVz+5xvrNVg/0FSnJ0aCLxdvn4Rrt0GY8dWP0iMk
OKE/Z9lGexcqfg2JfaUiAbGrvbX97j249I0pcuVXLVCnTZ1lO3Mfrl4Zse4b
qwWKX/13O7oew+uz30yFs2thRLA1457aM1CNoWNODqqFyNnpnFARa3gk3qK4
27YWqlb8vQU+v4Jf9g1GLy/UQuY5jt1Xym2A6sDotC+5Hib+FcgJ+r6Bptcy
B8J218KM1On2VJH3UBv399N7Ug0MnVGSYlyzh4zlomnT+BoQz0EB43EHoM1z
4rpsVwOZytob12Kc4LHsswkqqRqInWp2SNzjBk8YKqg7RRB0hICdftgN+F5W
DNENVUOTBfGxRKY7EDrll147VYPLglrvW5UPUMhnvrTaXQXT/yW0e7J4QlT5
K7ODr6vg9aXGC/xjnrBf2+asy+EqaKjqfNhn5g1/2wV27hlUgp/MNFMXvw/0
KCs6zm5WQGcwB43wrA80/+V/2RNWAash9p2tun7g2UZ7j6G9HCarVVpHmALg
miqBb+tEGYRciL5y0TwAwt33WdeUlsKTp+eKTpcHgEJB8isp1VIY2Nnxj7gT
CIGRPZWqFiVw+A5H+t7sQDgi+Ydz+3cx6AU2RM1vBsLvKKoOJ+diEKm8tLAd
EARxq3TafBFFsObFcPrkaBDQvONWuHmsCHpw+L+6Y8Egv6WR9TqjEGT3m6px
ZJPxATnRhpICkC6g3tydEwK/94y+e9qUB6Vba2e3FkJg+4KvYZhaHjjMW9Rd
PxYK6o8/tO/uJIJSrWEBg38ozE1flyWk5oLFOU4m6/pQWDKyUHLNyIGDz4Yz
Tq6HwvuHBduyWdngLtDmGXM7DNhb7RhNsjLBWkq+WcM1DGxWO4i/MzJAmU1I
SiMvDNpurAQlpqWDZ3t9nPiecIh3ox33JqQCq0RKLoNIONAZNHB+i06B2CQe
2/+uh8Ov+/oZWWHJMGexLmMYEg4qMr6Nfl6JkHVgUuJOUTgo7J8xGiDv8T62
r2YSesPhqaCHEcmOAPSqu3vElsMh4tBtNbNX8VAq3vqGgjYCTBr1NAjjsUA9
wHKXnS8CAg52roh0RMObhWM7z89FwIx4faBPdSREHZAfPXAjAi5xrfy3mBMO
33YyrH+bRsCZL6xLxnGh4OhwTJ/rdQQcFTk0e9g/GCIVWv+5u0fAw87m3Wcd
A+HzS5WbZ0Mj4GOndN7gc38I1tXXFk2MgMiLqzZyH71hVLDh3/2cCHhnc27x
NtEDFrmVL38tiYAOEYsbl8JdYONNgmAJRkC5Sty1S04OIPMqPLatgXz+653d
Z8Zt4LP6F4LoxwiImNahZ6l4CgLyuqJDbRFQrMn149p5YzjnnHK2qz0CauaC
x7gZeUFTN6iKjYy3ZVwde44YYtzfqZJ0srxi2fbNs0efYO0c90mfxgh4asMe
9crvNdKFZc3U1kRA88iinbO7PX7edUtKtSwC9vws1DetcEav0LgXgsQIsOl8
nmOe445K9XTbhskRcDigX8E72gu1N3mElsMjQFneJT7c1Q83Uu9qTHhGwIXl
wIzUwgB8KXe1UeQt2X48tVaWGISsApaLIxYR8ILpydqMXwiyDMoxfb8VAYv3
CU/324ZhYYVy0H3FCKBWPSJKdzcCz11iaL0iGgG7zp361qoQhV8mWZjCWCOA
Ak/bivDGkD23q+7GVjicOVjoS/cvFg3qdObfTYWDuIMmR7plPDKE36PhrA8H
iUN19D+1CPhT+lCpZAqZ36tG8Mb5BGRpM1nvMwsHp67C3hPUSVhfOJt8/2I4
vGfoN3P4koSvbv3kdOAOhydbfbz4MRnn8xzIk0cYeBU3HilyScVDJisfGTPD
4NGPaX1NwzSUKW37Y+IYBg+yxD/GnUlH+1np5F6hMHCnmpNiH8/Ao301Ruw7
ofCr9w7F5bhMHHtb2C7SGwqSHhMdynezkPGvakD/61Bo0qlJSBjKxuWBRM3n
KqFgo7EHvwTkIM/Tvsjv7KFwdfwg3YxKLip+EgwJLggBj8r/Ts/cJmJVFWV+
g30IPBNXVerOJWKUAY/IrGoIdDel7nPbl4fXFwOptseDQUWRL+cMMQ+NUmIO
7doIghevk6xkVvMx5+qjvUyVQSCa7837S6EAZROzLpy0D4I2kQ8+Wr4FKLFS
/zeRMgjEFhbv7T9eiH1n5IX21QXCKvFe2e2Hhchf8fCvu1MgZNZzxijmF+Im
N//3re0AuDn8enbmXBHmq2iV/q4IAGUj8TOh74vQ67KtwzGbADgrf2NxCItQ
dxZNj373h3L7ee198sXYplBmdD3BD7BY3bqSXCkZV/UEtZj8YLKTJJF/twRf
spUc3GPnCyteUjkCISX45Ozw/1Fc3fFcvl1YhSSrKJXdoLJHSHKMsvfK3nvv
vffee++9SUY5URIhlSgp4tegzLSkvN/3z+tz32ef57qfyyZFk8DnDxLGEv7c
QXnxq48D+5PgYwP3ghdXD9rqJqhdO5cEkUcVC2cNe5Cc7cpT3Y0E4KZx+rZ/
m6Bfgy+NDGslQAQLH/HQYg9KGB1c5boTDzoXDDu+H+lF657lu0cD4+BX0Ous
1lu9eI6uRiT3TSyYwWFNoaBepHooFSF9LRYs3D7e5yjtxarI6Ncsv6JBKqFX
5tZiL/oY1FVb60TDZns6Vca/XmzAN/3b7VFw4c+bPVGGPjyoUn7oGWUUeEtw
NCgJ92FNYYAVuX0kZGkf7BhV68PQ5pyRugcR8K7ArrvDtg8/m9oydjNFwOM6
1nLSkD5czhFSF/cNB1e2z3HDGX0o8uOH2s2pMLDn547eqO7Dk2dryd5cDAMp
EpPmqDt9aCB7+CnVwVAwSf17OnqkD5/dfdde1x4M53dJ6LZe9uG0ZHRYrlkQ
GEtZcIwu9eEQRcW/dapAePVx6T/K9T78azC/MXTXH6yc9N7izz4M4Vii53Dw
g1i6nPKF/T40IX15hZfeF0IYg984k/Zjw+9nHw1qvcF35Ozrh0f7seDIgImi
iBc0fPsjK0vdj2armQknRzzgypE5r280/fjH3ODWK113aPfK7Zgg4FWWKBmN
CVdoFO52n6Hqx4sd9nuw5gQWJUOR1AR/QcqB75opHaDynsKTAJJ+FHswuf6E
xxau17y6fOZfH46/TRV4om4FZvdvRG/s9GHiYUeHeU9zOHuc+vPeCiH/gr9C
pnzG0NJn03PjLaH+rnr1lcBboMQsYTM62YeX+9a2u8c0QLU81jx5oA9Lhot+
q4nJw2y7C31mUx9yeSCL++RVUPhznORtXh8SfQsMOj55BJyWxLlcIvvQzt2A
ZE9OEF/17tYoOPWhEIR3Ns3dwAvTBqkeWn04w2d46+ohddyJdNz/ItqH1YYc
80qZOjjJcO1YL2MfdrCzj/EzGaLW+uy7ecL+xDjR1sipm6FxY3SOwUIvDime
Crs4ao3/XF8UeRT2Inm0MTlxmB2el/lcTOfbi2TthoprAo44oqKALBq9SE9F
t8Ik64Z6k79Gwoh68V3n1gx1lDd6HC1ZfavcgzvaTFwWEz7I2fS14ypjD97j
Xlc5QeeHtr9OaLCu3sHptDRG1fwAPK3+4WxZ+B1sW7zzq3E2EJfUid2kle6g
iSzXJUbaYCy1cuOIoL2D0bdV9L+EhWLi2KzUemk3Ln4+dzZTPwyXjETenLfq
xsxR46YTW2H4rqVciZKjG3+JVK9eYIjAr/c1WMjqb+PsgPnnSIMoHC9ksr9W
0oUZ6O78+kMUimVNFmbrdaH/eJKXhms0Kpo+uTRxjMA/zHqq8UExaK83Pb4a
1onSVYOBKqFx+CK8OD1KswOF/1rpf96NwxNxroZOxB3Ic/foAyeveBQbGms3
u92OZOdcw+jNE7C7r5svlq4dI2nbGDRYk/CB6Zre97RWrL9uypEVmYRL0afS
xLdb8MiiyMz8f0moaUrey6/ZggwjzIIu5ckoNssWoUbVjIG37bNa95Kx7qCr
fLJDE16m99P9pJOCI88fnawcbsSuvIBezoOpeNVNkDXcrwFbHe6K8uuk4pnh
nGiTqXrc6I6cZa5Jxbr2CgUJjnqM+PiB7wVrGg4D5zTv81r8nnjEKrU1DU9k
3JAgY67G7yV0ZUlTaej/tSHpgmsV/tfE6OC5mYaHphzlCrESL59iPrPLlY6/
8gwV+00qsKvhjU+eQjpmBdFxBDaXY5YeOzuTdToOzRpUDvwpw+SSNIeZvHSs
6nO6+ZO7FA+yvfA50p6O1youeJ14XIw1rrzLLI/T0Yjkjni6eREKPHOo+76d
jtzr49I/M/IRDYqCukgzsMCfW5iCMw9zXGzzdU5nYLwzscz0UA7anHWtvH4t
A20LJuhebGViocRbqijFDAyk+pQuFJ+Bny0K/jbqZWBJa697CWs66i6PNNwm
6POYoWPcSm6p+Mfqr1a5ewZSeQzduVeahCtJz4VdgzLwZH6J2MDTeBQkWkhj
icnAeQt08iGKxXXLvtKOlAws3b1OQiMQhVzGe2UXcwj+EwX7u6zC8ZnUn8Xw
ogxsWX7ryMgfTNDdPn8HyjOQhDJEL6HQFwuuMbUtVmfg1WyHikNHPLBEqKbj
U10G0pytMm7/ZofKJiMD0w0ZOK6dlGjba4i0C8IpdY0ZmGb7QDzAWRgt3zbM
WRJwwWvqah93dfixKGVymHCfdZxc7MsVS2BuctzNrM3AtrZnwVKXXEDs7fFX
5FUZ+FtdW+Z4vBcITndyOJdmIG0f7ejfn/6wszl2+m4+oV/72+snzUPBLnP6
3a+MDIwiXagns4gAfwaV2vOJGahoy6qkThMNx1baKiUjMnA3t/KyeH8s9Dy9
d0TVLwMzEhbP11gkQL/SgqqqcwYu+W9p2pMmw02bp8dlzDNwqn9007wmFb7U
kf/g1s5AyuKXbMJs6XC9mDKfRjYDJTYc5QWcM2ByXLvoq3AGGow+TqG9kwkC
g0ZlD9gzUIo1mf7xvyw4vvqV1/4QYX6S9HaWsbnwfVyWt2QzHY1pt14uDuYB
B9dR1YX5dJSjkFIk2c2HGLH4+8kd6dix/fo4qWURwGzx/r/CdJxkdZl4kFkM
Gk+eC0VFpeOtn1SGXwZLoDVLS++5Zjp+TCE1YUosA7nyIMFS0XQUdSb5w8Zc
Dg4LtFRxTOl4+6uP2L3WcgipML1+5780VI3R7y2arIAfCekck3ZpeFi9OuPG
bhXYyr9JvCeXhleIHvVKh1dD1t+kH28upOEq6dheOWkNjNqrRZtiKtJddlq1
p6iF7beGVC99UlE/Ne3boySC/pFq6L3HlYqVYpdEnY/WQYnMH8t/mSn4K3Dy
YOiheug4461vfjMFjUps1BeC6uGUOouJyvdk9GFJsPPYqQenj6wRM+rJ6Ejl
HnvmXQNcNTdnVv2ZiLvRGaxLBU3QI1Vel1+ciEyF2lVyJM1gJhEoUCydiI43
yv/rcW4Grh/uKf/FJSBfN8dok2gLBH2Ujxa6nICjvHFR7IUt8ONE46j2WDz6
S6vwFPxpgXJbo3GWw/F4sV1Qxqy7FWYbXHJmK+Nwy/QWnS5ZG/iOruX5QxxW
Tg+wewi1gdsPEtMcz1gs8wnniYlvg6+sNDUrT6Pxn/2SxyZ7Ozgdy5VqsIrG
y6KqiQUEPao3WvUl/lcUOpwsW+FxbYfjGU/uDTJFYbZTgd/xznboOseaytEa
ieans+tNX7TDdIjH4AhE4iKcYcvcboegzNjC5yYRWGRp918ddwe8u7LxVXEt
HE+WtvDEK3SAqGkP2enAcKxtm+hWsuoAGbbMiudZYXjSw/aNdw4BKw6xjrOG
4f32qA/zzR3wq43ipYteKFalrb89/7ADtBNphv5FBGOR0pqX7loHtLCPGmJE
EIqdZiKeONAJjSJUiV7hgWg3w6G/SdcJvRQ7vHyhARhfXXzyPnsnKO6kXCYO
8seD9VQL10Q6QVZz2fignx++L2zQsZTtBGWV4t/inr547mCas7B2JxQ6m2wO
O/vg5fOpt2+bdYLGKcqjrbbeuEsvPvnesRPW21OPk5t7YcW3y3r93p3wvWT8
6Wd9T+Se2PgmHdIJ4TcajhpremB5H7O0f3QntB2mTvVTdEfS50rLJomdcEDl
/VkVaTe0u3TUbyeV4G+LivW1pwtOzWyWiWV2gtH7pxLPLJxQbjPtH392J8QI
PBes0XDA2cRQ/jcE7LOTkRUoaYf+aqSkIgR8qmXezIvXBuPbc7/JEuzNWPTI
OpmtcJF2MJAirRPsdH781KeywKxrWszxhPgXe9Sv0v81xZ41ZsMBQn45IQOP
pt8ZosnGTnszIX+tU6c8+IduYQFJTYWeTyfkl8IJj1otjPp+sPm+UyeY6/HQ
3WFSQ66oefVP5p3w34UKc+stWayQ1KCe1OkEPQmyF+tZ19FjIabNR74TFuXX
p+9XX0YdJler5asE/FOW4f3xwzBV89vi5OVOmK9Ljxw6Igj2F0/+d+x0J/S7
aN4JzlYAwUcPVBy/dcDZgUXt9sfq4H9NqGbiXQfUq1ZtXBrSBlLD72YHRjuA
iHbErL7GCHzkf299yO+Au9GbTXnyZjAesT9VGNYBFqUFA2zXLCDiO70At00H
rOv9YUmktwHXF/Y/1gj7up9G4cp7wI7Aq3n052g6YOzk5rOyT/bQF/ZAGLba
Ie/q8jOPBmdYLvy9KtLWDh8lC+6rRniAXDWlYyhbO2QtjanctfOE6hR2Zak/
bSA73nuKRcUL1I7+qjo03QZx9Hg3hdoHHLWf++dGtEHiqNL9sDUfuPfl/QtX
vTZwt4rUFRj1BbqmO+a63G2gGc6oUubvDxZYvdFT1wrj6it/bqgGQEkHo/9h
lVbwyZFu92MNhB1DuztpGy2Q5nd73uReENwkpk3w4G2BBsWI7+9nQyGYoeeY
amETXL9cqRx2MwxepMuJGF9tgqjaQ6WvisOgcL0x5NRMI1xhKH80rRgO+OAS
T+vRRsjS+96Qkh0BeV0+PCx29WCY7pHw+78I0Be5HK6xVwdEV0udqQQjYTT1
obNtah1QpMfbXHwSCZPyc18NOmphcoSSe3Q1CsSf5CrxfK2GLvPZf5y80eCa
mPNZwa8a6p4YqLJ6RENYS1Bv5KFqaO37FND+LRpsPR8YuNJXgfQmj4O8QAwY
3H+7y1tWCS9MXfqsXWMgWIsynetiJQxJstRzfoiBns6gPz+vVMA7wyvGU0yx
MN5V9fdlfzmkECcXf9OOhf8sOzSopMrhhKbievNALEgLqSk1KZTB3COa/b7Q
OHAXUaH+r64ISK0GYpia4uA25aHQ9cZCqLMfFNiciYOkD3dCOFoK4NSyf9US
RzyYJBnTW7Tlgap73H0i1Xiwm147H9GWC6+LSpoTPeJhkvpuI2VbDuQSZdX+
1x0PqKVBVdWcBYJa4+TtM/Fw6+Udk4nGTHjnO/Dl4048HLleeKy0PgNe/cnx
jj6WAORySuYXa9OBfqTsRSJXApg8H4rzq0qDMoVxn983E+Cuh8XT6zKpMCg2
FTdpnABu+QV72teT4VT7q1NtcQnAtuL4Q48/Hvzm8tjvFSbA6+SmL2GcsTDa
Vzck0JwALBG55SsXouHM+Y9Cx+4lgHdUWFMbaySEfuYZ1nuSAH2a/WXfGMKB
as6s/8irBMjTEblQxhsCr8b0Tc8vJ4BRzirXyMUA+JH081fd1wQQWBIJzz3n
A6T3JaZydxJgS+6nsjIrQTd+aPbc2k0A9jexZVISTnA55C/rnf0EmGFmVimU
tILBTEq+1YOJcL62qvRSmh7M8Qz8SiROhM1nJyy9taVAW2/jeTEBt0mLw8KA
OFKcDj/JdigR4vQ5op7u6eKivxYDPVEi1P0tJqE3scTWSNmr4X8SwDrCOiJA
2BElSBg8nhDy2Qw6bCE2646nKvw/yxHyLes1c7Wh8kHjWC7NX+8T4F2WakWA
ZACWcnY6vHuZAGdNOy/wOYfgtTCtqL2RBHjh27zNqhiOB1aJUnR6EqDZubLo
jkEkhg6aBH+tSYC4nP29a3bReMOURv5hZgJM/SQhSvGIxQWG3uWFEEL8nN30
ZP94fKe2d1PaLgF0/NlKzwQn4pRWsNW6WgLYVQ3QnghOxhthC0KfriRADtPJ
eSP/VHzM/aiJ90wCXPh+ZftzTxp+6ZoeHNuLhx+HIygud6ZjL901dpJ78ZAm
nGkdVp6JfsR3fjYWxIP4p9qjftlZKNln863TJx4eX1juEovNxkfH3Np+XoqH
gx3F2iuWuehCpJF97UA8uAmQOPeq5uGOqteX/++7RI3lOKNIPnpVpwncD46D
4ImXldZEhai3SyO3pBoHLZ3PrvO+L8RG2skTMcxx4BDOaaGNRbi2Sqlo3RsL
Xgv1lcGeJWjDQHyW6l0MPJdlzSV+W4apPdZ2jypjYCdYe5FXuhxp/gtf47CL
gZXg8iNz1eW4N/jm3u7XaCBjPESTZVeBZ2u8qHyao8H3R4Z33kgFzm9Ff2hx
ioZQTeNt4guVqCWge9btE4FfLpLIE7+pJOglOwbiyijwZDFISxGswptm5zud
jKMgw2M/0TWhCiUTJD48n4yEBI7LQecFqzGGItUiuyoCwuvj9JZca9CwPMjU
7VYEHDNe0WroqyHU/8Vf9UgEzI+lfa85VIvyZNmR3A7hYOKqFyaQVovPrt++
eO10OLy0Dz1590UtahrmG1mPhEFy55yO64k6/PTXfP4iWxgcf37jsnxmHVbc
lrpbnB8KCd9NnOye1mF/SVuXzkYI5JA8bK89Uo/HTJ4YiucEw2BcdJmfXz3u
LnP6RH0KggTFtR/EzfWoa3k93lEkCOL9HjyqXqhHobz6m8ovAqC3wZGLBRqw
y7jwQtPZALibQlt10bEBB+4s7q26+UPBDvVfrewGpCp8tyFC7ge86auxFP81
oITxCzFTHV8IXxObziVrRGL2rDe5pT7w7uRDYSnORowT3w5y5fcGWkZrz1WH
RuR78KSJw98L4pg2bD/HNqKfznbuufuecIVqo4GoshHDG3T53Ug9YWJ2fEXg
biO2sL8SOaPsAf8x0TaHvmjEoGYnDZ50dxC+75X86XMj2p4lP9/70g0iSqrO
Oe41or9djc7IaTfIytMhO0rVhJvDLqee9LkAb4rY9AhTE6qtWr+RlHKGU6ak
rBWcTZhNzCx5ZMQRjn9xjCoQaULFNxEZ15UdYPkYc0G7VBPGCIUx/5yyA43O
p78/KTQhzB7gU9OxBcZWQXEJ9SZ0T/h23PS1NZB92Pvdpd2E1P6qmpLGVtBu
kHpQ5VYT+n2yPE7x3gJY3maykOk14Sky8cE5K3OQCrxr+lm3CcXsz+bGPzOF
8c76ZxtaTeicfE18+LUReJHsRbKqNaE8r6hS/pI+rK1rRQfJNyHVoeRi4a+6
8HVd4z8SySYkutdCMflDCy5H5bQOXGnCIurjHmkHNcCAe+h73aUmjDC6pWrM
ogz89t7DjxiasCRvkbxTXBYsu9W5z1A0oapY/XiksSTUZO5cq95tRFZx698W
xFfAp6qDzOETYV4FKtWeTWchJzdE3/F5IxIplZateh9EDYv6xKb+RmyTKmoq
eMGJs2fsiPgJ88siq21uD5XGkWZv4WPOjbjLlpwA4vIY2sXT56nWiAW+V5Nc
t1Uw+4A6CQcf4X6999yFam10HCn1Sf7agORH+wzLvW+hn5OoqdzjBhx89N+Y
qLQBxrdRZplWNKBdLQSQPjXFtajvLT0aDej2O/CXh5w5st3wrT/A0YA37ktn
nqm2QOragtWe3XqcGmLkkdK3xuiLo1pRxfXILNd9LK/VBuVadaLLnepR7e+j
Qt1DdqjQEEMDYvU4lG7g0FfhgMYTr2Qpn9VhcY9lhsi6IzYYB/6RLajD7xWb
HOPCzlguMMxIa1GHGe+kXnwZcMXflYYLXmu12C8r1xuj7YHE0XGjG99qkLLD
6YPpsgfyJxg23OuuQcEn8lndbp544a/0tJtfDdKYU80OxnhhDXPwj7xf1Rh7
8Pp0TqkPHo/hqXb5WoUHhf7VV7L54rSgoMKHmipUZT1SsFvui9zU9nPWZlV4
IPfKU5diP9QVPTmQO1WJ1T/TZp6GBODx6oXbN2sq8JXYnlvSdgDmLLI8zNCv
wEdkZXE2VoF4rfMf0lBU4Onijzam0kE4cbKmu9OlHM1TDf57/zEY29sjVs5z
lqHOhc9CpEohSKytYE/TXoopnIz3zzWHoB0rCVUieSl6hWS9EHMMxSDN3uBH
vcUY/FOUXsQ2DG+On38WRF6Iz55Z5v5OC8Ne+vzDR40KsOfet4qG3jC0BpWT
FU352KWWK/j8cDg+OhsXc0IpD2vekjff5CbgBVHtw/m5uF/57mO5Rjg+GwxY
4fqYg0dpKa1ocsOx7U5huURINiZT0yWx9oSjU7+5qeRoFsYzRl4/8SocJa0/
nCmnzcJzxUukdXQRWJ15ZqihJgPbzGqu3OCPQPGBWi37jXQ0Fho3G1SOwIgA
X9YOkXRsZ82zNwqLwO3xcAqGlFTMkflywT8vAi0dZ/UcGVOQL3G30Ks1Atfr
fdTZG5IwO4jxmupwBI7XpYWZiyTijNeZaJK5CEzjcwwQeBiPzKPCqgVrEXid
cqywRT0OG5W6wimIInGl7/LZL/MxGPX+3XQcWyQypr3V2t2JxL6fx55k8EXi
3/4LAT8JeVBKd7zyl4jErEHDP0cow9GFdPDrdaVIVLaR4EoRCMXqvylXFnQj
cUnXoDJWKQg3GzlPmphH4vlUk6FL1v447SH9rc8hEpusXn0oDvXBuc4Q/h8e
kSjJqeNAWeiJiVOJV2gCIrFK2KKp/I4bBt88phkcFok93Ue0g3kccZp/RCo3
OhLLn7vXCmxZYVz8cr9JfCTO/SeaketqjK6t3ZPTiZG4TfSewphEA5tI/dJ2
kyLRjD034WCGAFpvm9A/I+C6h/1nnzyWgHsvK/z1Cff5HbQ0tv9qwSvawIms
uEjs/TwQ/5vZDHgCWLmioiIxzb6Y6baoDUTahX+7GBqJ8XLZ6Y+VnODSz4OP
ovwiMXvXpHeF0x3wxL58vlskSvOeQTEeL/ja+ZTNzjYSL91OEK3l8gXdwcnv
20aR2LwvQbzPHgD53LoO1zQicSpqmOg4UzCk233nlLkRiezBTMf1DofBGa+3
VyiEI3H+ynj0y+BwiD+S1ZnHHolaZG3Tq1sR0OSk+Wz1RCSqVhoHhVtGwY33
Gv3ExJE4022/G/E8Gs41Pin+vBmB9Vt2468kYoGe6ndV3nwEJh3cdHWqi4OC
Zk8Dm7YI/BL8/vGORyJkN/ldjyfsl/MLlih8kQRM1ALGEaERmEuS8c+DPwX4
vxn8OqAYgQc4PtaVuaeB3/P0R8ncEbhobm+cz5AOPx+nu+5SR2Cr09m5+Qfp
UEXCGx3xLBypHnw9xkydCdeYWnWr2sLxs7R64pEOAj6WUdCZEo4xniuDZ7Sy
QIpfVqZWLhzfqJkvx6dmQwHPLkXG2XAU58tIenk5B9gbZ4777oUh9+Vi17MP
cyB0w2xOvDkMvybrTxdu5sJN6n8D56PC0D9X9WBPZB6oCNJt0xmEYdQBRecu
unzIzJYWYDoUhtpKJ+Z4+QqgVzJDyjErBDNI5LhNlItgL92DIl0wBNfyPR3r
J4rgKfWVZ4eeBaPbH87cfOVi4FsWzNoiDcZLczFOGjIlwPgiTzS4NAjFGNgC
KftL4BbP4XO+wkHYi1pit/hKgd5Q4+SsaSCmvhVVHDhSBnojOsMqBP6753BZ
sUayDMpfdJFqRwZgwJpprIJPGdDlWkXyl/sj24+PNHfelsG6DG3B5QlfPNfz
qWunqBw2yY8+PWPsi2ckdvSSHpWDyvqS+eGvPnjbXVFpd70c3tH2PNgm9cGc
jIpiTfEKqJK1uk6U6Y2M9Sovr5pXAMvTgEoOZm8UkMT4ragK+NyWVbrE74UJ
nhMbk48roJtn2SG6zxP7Ls7/t/25AsbPiiWbSXviVd30t8uHK+FJd67UOzUP
3Fd6YXZJuhKEA1fI0l66ozD3c54g40r4/O91ep6BOxb0GMbm+VbCvVDD1HEL
N2SNXJ64XFcJbgvqFNTjrvjFWoG5bKASBm/SXnV75oLWD8ss376oBMql3TPj
L53xT9F26NKnSti2JL4o8NoJT6/L6bTuVsKxQK6Z9jeOyN1dPyxDUQVks66F
Bm8dsPIba2cpYxX4cjxZu/bOHj9Xde8PcVbBP4ZrMtbv7NDusWdy89UqmM4Y
p/341hZ/9AeLm8pWwZvA1AuT8zbYWUoyMatRBYcC4re53ljjBfe8bnqjKqCg
Srx37LUVxgQK3GGxroKuHqvRxBlLpCWfStp0qoK+3Y96DS8skNTO+XuCZxW8
1V5qCZoyx8JF0tYNvyrgkeegOj5hhpSY58sSXAWCDRSe3zJMMU+VhZIhrArO
/Cr9FJ1ojH5zOdzL4VUgEFS//zvSED83/8nxi6iCXyJjki5B+niOTvHwPOF8
lauS7wDhf8RKL0ScimAfa/RS+5mzDn4cztqhJvh/+pxJ8K+NFh6eSFx7T4hf
bc3YV2mmgWFKywzRhPx035gqDd9WxT7BYMo/hPztXIrSmxsV0Z/R3e4mob6z
THNfr1bKYljRzHNrQv1cYcSHqoqkMVNxeNtYswq0zah2FPmuo/c9bRdeuSoI
Sizc2OC8giuJRV/eiFWBpA11vLb+ZexU7qKx5q4C1rN1u11P6DA3pzNynLkK
+E4JtJeQkoIeUccqLXUVhOydM1IyugA9rCNfxP9VQvy/d74tnmJgt5ipLfa6
EqI2yexDL0iBRHMA2fHhSvhx4MJNcsqbkPA7UuB5ayUwk5T5fptUhmYt/7ET
EZXgq7QPXtrqEGoQu19sXwkmL0L9f0howlcRfu1T6pXwRVnu3kUKXXgtS7Ly
9XQlVJV2GFtGGcNpW7t8vfIK+ObiJxiqYQpZN0uaDMMr4HZrb0xvshkkTbKy
uJhVABVHmeGwpgUske5dHmeoAIt+oRuDApbwi7tCnulXOTzM2+P8S2MFM7rK
k3EvyiFBL3iX7LE1eBTLnemLLYc3T9+/HyqzgS2Bj1bRZuVA1zc1muZrC/d6
z7H6iJYT5nGySJzFHvjuRm0//1AGc8nURF06TpC3Zdo8IVwGZJk3Zr8wOQPl
WzxOT+ATnSdulz4vO8PvcL0a8dulQFRV9ZTM3hX+8Prd/PijBChFPrJ5EN4l
UdPiAGb7Yjhz68YTphh3eJKixid9sBhqdwq2YxfcYTPdYu1EQREU24b1x6V4
gPuj7dCV4UJwddYSfTHvCQxP2k+SUBcAQ0/RiyPcXsAVZEbvXJIPZERBa4uB
XlBss3/uHlc+PG+6d9rihDcMssU855fNg9rVQ7kmIj5Qsa/4Q9w5B+73Jj+Q
CvKBe7e+n+nYyYajjixvmtEH7Cc4JBQDs4GKhHzshLQvjNpMCx6IyYKn8mts
r4X84DiltadBRgbk+VDQ9jn7AXuubVYPbQY4tuwwHav2gwOzQcveWekQJkLa
fIbaH6YSK+O4stJAO+bsyKiUP7wnp2e6QpsG0XNr7J89/OF7zVCPz7lU+J3s
u+w45Q/7jUFtA2eSYW314szEnj84CdrUnDqRBPc+C8vncQSAzub8fgNVIvRq
P1uw8AuAOyTDUd37cSDwLe22eUkAdFAHM6n+jAUxI0+yR0MBEGMqe8VwPQZa
GM/H3yUNBI3Kno7jb6LgnuF1stWLgWDT1vWHty8SYlNWyfgVAqFPxELjW14E
mNDV3E6zDYRxmTRWN99wSFZeFSWLCgSfBcqZXp0weL4RfDenJBDK7yV8G7EN
gaQDt46K3wmEsDmu08TngyCq/nznr4lAYP5S06ey6A+WFSUKE0uBcN5Synis
yBfe1gRZ9X0PhKWuGzGl+t5Q7e6Tf580CKo0f/dtn/QEy3syIYsngoCurTZs
ZdoNBm8U1Z05FwRt4Xy9mhzO4D4k0uLKEwRB6+x1rTV2cG5r4vwiQb/zJT54
JXTRCiIST1Y4QRDwhPA0GuiZwlXl0f4TN4Pg15K15mNrXfjnUnpmXj4IwrJc
tDK2FUFKtO/6oGIQuOn6/bmvIgAhMk4XRwjYTDvbZo6LH7Wy+hY2CPdZy6q/
wg1FNOZpsLtO8Ncm1uB8f1MHr56QfNxOiGfkxZmT1G2C0crhh9REg6CYkzMy
qNcSF2c9WOh5g2DIROfyveN2+LnvNBsFoU/KMtOJQzZOeOV3ACUffRB4/Ofp
X2nghrY5hStRZEGgvW6rczDUA8/lhPVR/AqEuSs2+wZlXtgsxJM7+iEQYqq8
sxIGfFA63cF44FkgCJad6XV97YeF6e2m6/2BcFd/XvHLZgC+3rfYMqoKhI9v
fG++Iw5Gmpp31pSJgdAm0FB16UQoaqpG0RxyCwSKK6cEZgm6ZGio84aUViDh
+1tG9uxwjJgY13kiFAirmjm/PXMjsEaUN7eKLhC8zaiMW3Mj8fqkmNHUdgBQ
eV+2G82OQu3y8QGuhgD48/ixk2FiDGa6+dFaRQYACfdp666IWDxFIX50zyAA
7E98oGj1jcPWI1z9piQBUPR2eUrbIAFT73WbCL3yB2X9Y70f5BJxx1skKLDe
HzQqiF8tCyTh2bzZPx5y/kD8gl/zG1EK9mrpKHDR+UO6ro3/6nIKut2J/mS/
4Ad8CzquZx6m4imG/q+R7n5wqbCZ99e9NOQXKlKxF/WD8df89AOX0rH7EH/C
h7++kGIYME+alY5hT9s4eqIIOIRUjsIqA8MvMaudlvWFFtHVooHRDCy3alxk
J/WFSuafFxe4M5FI7PJTowgf0Cwdv6G7lYmc4XNdY47eEDrFIZRklY2jJL9p
KS96Q5Sy9IjEnWzc6fQKVVn2grgD5OluZDmY9fm23LyuFzBEpny4WZODsfRy
MULUXiB+1zNpeTsH/55uzC155AlXlq/k71zPxZOrET/6BTxBcLqc0fppLoqa
DV3w/+QBj8m9WgdO5OGDXccvhoUe4EbmtRhqkIe861l/q4k84JCAqg73Qh7m
kt3VfTXoBvT8c3MfpvORsUbxu6qbG1RqS/LyURWgqH2NIB2zGxBJkMDTmwUY
M7GZAhsu8MI25y9xWwEaKqS5v5d1gd3LryzylgrwNDPfIaViZ7Dutdz0py1E
38WZilJZJzC4LrPF6laINC/TPpfmO0LObQqG5cJCVOZrV8744gCx/8jnvg4X
YrCmybBfkj0MvNLxfE5XhPpFAe8j3tjBDZY6i+arRRiz8nCs4ZIdYd5fTk4Y
FSHXrFp96AMbkN489uJVcREOFT1yk6a2gY40/bcP+ouwpXW2XtXAGpQojNu3
Zosw6GzJ9dYqK4j5pzplvl2EO7G6J1zXLaEj27af9mgxqh4SFcgXIbyflFsc
h88WY35SQqpomAXkNH90ERcpRubU+ZN6j81h/K3ekS7FYlz3vtt+kMYclg7r
ubkYFSNjU4+CzC0zYM3eYXRyKsYPVzFNQdwUxtYl4poDijHTJpTHatQYuEPk
OAVji3GtcxK+6hhBVhNz6N/0Ykz6NZr7870ByCxP71EUFuNQsB91kbM+/Bo1
YrWoKEaf2aqojV+3gFZ7d+xvbTFuf/9tfzhKF2qoCgzfNxbjUaP3rL+pdEDt
464oVUsx5iU9JJ/L14KGkTej0QRseJQyHs9rgnrpHy+F5mKsMDz/d6BVHd7q
ny43aChG9wOf0954q8LX5W9dfdXF+HBvLG8oSQkYLyvSO5YW40rLw2njKnkg
Of2Gxzm3GKeX++le3b0Jqt7WnkPJxfisNl7dcEYaGl1/f3SKKMaxqwtsbEsA
NMf/TLp4E/rz4meH1BkxcC+Wch+zIcRz8Dd00BGCYc0q2gjdYlzMJro5x8EN
ux67f3JvFGNMqAazaBMb/JVgcKPiJ/gjitQYHyVG+XenadlJipEmXbmmJY4N
53MUrjavFmFSheKw8AtupCB20r01WYQ/Kk8SHWW7hs333rw+l1aEVd1P4Wq+
JDJVTNKquhTh/eqjiddKZLC0sOllg2IRdleE3bYtUsCXf73yjv4rRInNqGTe
bGWM+UfsTP+yEB/1JS+Ex6thueGKu3VDIRY+32En7tDEoh8tCa/VCjFCo1fx
lbMeGml9SKuLKcDS5q/aH17q4+KzhTh59QJkIPJQO3jNENvZ7MrVTxUgNecl
Bto9Y9xyMn/bVJmPlgpTzG9vmWL1vPX9o7b56PFv2Y1fzwzpkpO3P13Mxzye
oZW6RnOcMm9t5qnLQ1etwqRRTQv88c7Ysco6D9GUnJ31lwVGqea9b2bLQ4sp
PR2561ZYGGxlnZGdi8vcjgn+bTYo8PZUg7xzDs4oh5yVkbfFFjY1pQOsOSh8
Z8B2l6BH4n+NkYc8y8YrAsvt1IfsUYKT/v08Xzam2NPubQg4oqHX+u+l95m4
EjcoLNPriKcNMmdcEzNRSNPLQ/a6Ey7mrDB/F8xEg+MdU5ISzugxrfnlUEQG
ju/lHZY554qP/zoobR5PR6H8MlK9HFe0KQyk3+9Kw2Okeobeh9ywyUUv57pu
Gh55wycl5uaGhwNZFce5UrH5EWt1W5Ubhv12XbrrkIKvrj9PfjPrhttbCc9u
1ibjEdc7+TfE3NHRVLdanzEJPRwZs4Pt3XF0bIrqgE4ipq/1CpvnuqPYd+Or
AUkJuC+rIXt2wx3/O/5Ei/FXHO55Tqqbp3jg48zdgJ4H0XgknHXdps0DObR1
Gm4ejMbg4e8uos888MWFfQM+ySicnDDmE6P2RE7O5UmVvghMyb7EZsflib6P
RCPzfoTjdsHQmrG8J95n+BzsJhCOTkuU3aVBnuiy/PvrukYoWn3M21/N8kSx
pbVTQSPBONxYcX+v0RPn1D7xR4gHYXgmfdn0oCeSNe4+PdUegCn/lm94zHji
P3fxxFsX/HFWZUfn5Yonbpwb/KOT74tyS0IBf/94IpVkcS8npQ8ufN/OLWT0
wndXLEP7dzzw5lEPqmOcXsioOfyhys4d7+w/Pack6oUyd2IZYntdseEgo6Hi
DS9kYioAowonzJKxFqFW88JdlZK4H4n2+Gmr71qBnheeHHKTi/SxwdPXub58
MfPChq21cV4LSyzRfvyY2M4Lt7S37S+pmeFX25JbH5y90OBR1zuxQAP0rrl3
JsXDC5k5SYw8DLWxBa5k73sTcDbTm9oQZTxqSaco5ueFFuwnHLxUJfFod85d
CX8vLMshOrRfyIq3Um7XUhIwjcVTG+J5XmCRk1Gq8/VCo5N9F5fJb8DrbpVd
aoK/nShr+v0j6rDbuXRY1t0LS7J4f06T6cIuHc2IkpMXinv/pCs9YAQqbcsJ
Z228cKVtr4541wzsjRxrnph44Z2xnpGFDUsY2uhyktf1Qj921VnhJRt4KjnJ
V6DshQ8XDR4vTNkDOfvwzSEpLxQ8GZzY1u8EH71r/w1e8cKrHzSPhVa4gvPe
mdaCi17Y63e2PE3aHewbfD6rnPHCH7Z8z7rbPeD0q8ctb8m9cL5X+W8JsxdE
1JYcV971RPpv142E472hRSz6fOFnT1TNGzvvsOUDZZ1Hvo+/9EQent5kjlt+
YC7Um7VM2A/jq1MThn3+YP5yInIkxxMfDqW3vPULgqarKjt5oQR7xdG7JNPB
8Imby+eWrSda6MsE63OFwiWvsJ+Vgp5IPckVzbgaBmyf6WuFT3liQtZC01R6
OMyM0TzFPx741ItB9adIBFyOGB9H9EB/ForAgNBIqLy09PBamQdK9LTefMQa
BYkf/vn3EP5Tkw/3Hba8HwVnM/QGBq554O6jXVLX3Wiw6Xt+Rq3OHZdeiRT9
0YsDLaUip4/h7mjtRlN9aiUOQkrp9UsM3FEr4skBY9946JZm+x54xB29LcNv
SackQMDvy+W1C25I1P+hfOZkIjClLLzb73LDDSOpJb/iRBjkoaSUNnZDiiel
rJNVSeBb7cYtwOeG0h5OLt4XkqFP/bmc4UE3FDGX46atSoY7gY9qxuRd8Z2g
KBljYQoI0opQ26IzboWwM34USQPui+qQrO+Mm+T17x+7psEhaW59g20n1CH3
ic2oSYOZkZddxKxOKOwze/0ZTTpkjhlmbXQ54vnrkbVSN9LhmpjdpyJ5R0yy
JadJ80kHJx+ZJUMnBzxOUr+Js+mgMHnpcNCePQrEwnYxaQb01w/nBxK+s+mE
VhItoQwIPKByULjGDheFznhfS8qApqNS9yyf2qDj+QS3Ge5MeHw9dkDplg1G
nq/QA61McN4eklB9Z4294YqTnr6ZQHbq1uL9FSv8W1V089rdTKirmKCVdLHC
A1nrouPzmUD9n/fqzy1LHOFnKz6/lwl2o8tdvD8tUKdUvJxDhKB3bQOp0M8C
D1PYFU9pZsEtmY3O6t/mOBoQRSrhnAX3H+UZffE3x5HYq9GuBH08ZvQMc3+b
IddTniGrkiyIdtvO6vAzw2NrR22YbmcB2VwDe+y6KWYE+53OH8uClJzk5xMf
jJHatkTj1VYWQcfSmB5bNEK1XzUchYeygVfo+4nQ14aoxOk4ykKXDYeCWKPZ
nxtg+pOzzjbnsqGi4Soj/Zg+Pr/dYe/Knw3fDT4pmg3q4dH/9k9ck8iGz+xT
Ycd6bqGc+sbjUYVssKkr4BZr0cXkHevXDNrZYBCwdn+lUgcXxuRL+I2zoUXY
tYE3XxtlJ4Jcjlpng4rvI32GFC18/P1jWb1jNkh35EvejdDExcS/SRTuBH8y
gnNsvhp4nD1mUMg7G8h1ZvQMHdVRY3+V/5xfNtx16LizMaCKx8Wvz7/yzwZ2
y/MklLXK+IQoZUA3IBuauFtfcaUq4rb7+kwx4XxQrUGdWlEeTXVfHvH1zQYB
dopNCRJZdN1OPvDBMxtEN8TVl+7LoHHkrYMrLtlA9qmKnDVYCk1k3dWj7LKh
YTfN67qXBIp8LVfqMcuGpdDuv4c3r6Ki68irmFvZULUZcHfF+QoevLtCvK2c
DT8kSe5yrfPh6sLxt38kCf0d+UUlvHQREz4ru9QIZsMcJ1Pd7hsWtF8uH/52
nmBvYOtDeYACad8xbH4gzMPM0f/9NZt1CdKPD3dDCPMyzXJ9NpJwAibJarfv
b2aBX7pwy6Wic5CftUjaMk/Yj0UZOftcATh+OVUqqy0LNLfWB5/uCMM3E+v1
jLwsuM00035A5RrorE3Vy4VmQcPoxge9H1LwTvWy/jt5wr6UV7g/P30DTkv4
vxjmzALxi/GV7GKywNxea+9CmQWZed1nX7kpgniqNS/1RCaYXcAb32OUgatx
mImqMRPCDEkfOeSrgiVf4I03sZngFZdV6qqvAXT6/42vXc8E5UMjX0UNdGC6
0J1RqygDxm4L8Kxp60Kn3+i3c+4ZkERl8FtD5Rb8/Xc+YeFGBvj1WF3YEdYH
zyixLvaVdLiUmHTwxEUD4JBmvtjXmw7zZL/Nm08awhF2fQb5+HSoIc7qOPrV
CC5wGytaXkgHYTkF/e7nxmDhvP/w11Ya7NyfKanoNgGR/Bca+ffSwKX9gNHh
a2bg8ekFP6VmGkypt/9b+2wOvamHv3kvpkCi9kv9YnULYA+3ppZ3TIFssiCO
e90WMHQn9pbvTjIkpp5pvRpiCSrOWSa0B5PhiSaE5/62ggdb1JuKRxNBJZ4+
4pq2NXyuHaSlSUiAkJBPthzN1rCwrBMZcjgBHhg9rHqkbwOJGw5Cof/i4Ftj
fUpnsS3sCDMncbyLARP/2H2GD7bwiEI2Nd8oBpbcv4euXLaDMO42Ova5aKAn
Ibeta7cDyoNeM63Po0B8dRmyt+3Acnhp4p5KFHhp3jV/y28PHt2B1YcfRwLP
v4dpPo32sPMrzc6tLwIGHc6xP/hgD+u3kbJMIAKKmubpLJgdINI3mJS7IRw0
sJsqJcEB/ItjbcJyw2BrJ4nOSdURRuuom7Zmg0D/VQD7qUBH8DBK2djDQGj3
5aYnr3GEnrmPQQq1AUC5OvOu74cjZGlKjq94+sHBe48NfBmd4MPryaum+r4w
rOS97yXpBMpymvL6Ej7gmrOlxhfpBPOPrCaZD3tBgW5n1Fq5ExxY7co8+sUD
rMeNpVYHnKBu6+8gTrrDyG6xNfucE9wtfvlRqcMN7vzH+qz8mxNoGFWyhHO6
AndypqXRUWdoHabONtp2ApafFXs6bM5g95NBQanXAaIv7AWmXHEGLfdvui5h
dqDLoDxIIu8MNzoHX3+Us4GrtasD/XrOQMem8+8ltRVkNy8ebrd1Bjf1Em2j
V+aQZDQS9tHLGR6eT74lKGMK/DhDZRzmDJLu74sNZw0gf1E290SCMwxdCj3u
7qwLc0/U9mkynKF7q1Gpk0QTjiRd4lLPc4aTrw3wgaQSiHFRHJoucgadwIxR
v0BpiLjDa19c6gykZ+mGj/gJwg/RcZnmMmdooJ508uQhgtsU58KICZiv60Z/
5D0ejPeHlKpiQj6Rc1K3DCSRc8FbPjXfGaKUxbSj/srjrh530qNMZ4iXYwgT
HSfw6MEJYeUkZ6iuJ6fROqGDWT/6L5yNdIYnKlRyM/r6yKBhLqzo5wyFYgoZ
MfnGKMZ9XvaRozPoXnPlpVs1Q50aR4E8Y2fID/9FcZ+Y8M7NlrwaVHEGim2N
U/WM1hg11XrqprgzvJY8EtXOb4u7XJEC5y85w4FAVfG7MvbIzbayaE7nDBWM
fZ+aNR0xZbL/I9E/Jzg1T2TqaOKMybovSYk/OsGA62zAaxtXzJ+jJnYZd4Lf
sr/j12+74fmgm+VS7U4Q4xMZ3tztjsVG6uXhWU7QXW5FU3TbA72KyUf4fJzg
9rmfFU0dnnjGTPWlhq4TdNzKrn7W7IWS4Q9Evh9zAlbR4aRzJT7oMq7+0HTV
EYgbZ4XLan3x9oiIHumgI4ixXO4safHDZt43RKftHaGo4Jn5UlcAthGffZIs
5ggXRPAKWVcg3iT7LqhO7ggd7B9L3NuCkPdNRsKzKge4rKVS+bIsBKeYg0wL
XB2AQW8srTMrFLNzFrMeijoA22D1iwnpMIwQ7WbWeGQPvU4fv1zkDUe5c8Ts
7yft4FVuzuWdnQhUUA7PlE+2g68+nYnqFpG4dPpZkriiHeT6GRH/m4gk6F62
L+/RFnQ20suulEWh9elE0VI/An/sXfftIo3Glvm7C0R8tuBUQ/7E2TEaGbsn
FEYLbMDs9NalAN4YfIaNOeKqNnDma7XOg5QYVLtSf9qZyAb82M71CHyNwTtu
oVdYzK1h5pj2hFt5LDpErDUG0lmB19WSgJWdOFxynUpNHrCEpRFP1Q834pHf
gVkv3dYShFYPJn7IiMeyZrH78QT+tLs+qfPfxQSUS7z4PdHIAoxzx1zfuCUg
57SGdOEBC/hnIkT3uDsBa4zZov/Km8Of6P4xH/FEvB/HiiZfzOAyn4OIUFAi
ckQkJ64kmcF7xvQbb3sT8dR+zgO+QlOgvTX37zNPEp6t0TLOfm0CZls3j8rZ
JOHARbaLMSdNIN32rk9sYRIqHfH6cDOJoFOMODJr9pOw5wnvLYFhQ2BTFNWO
4EnGc++CfT7sGcD10PqbYobJ6K3j/NNZ0ACqR1f8JqKTMUuWMmXOTh80f9ru
i7Uko9aI0/rVYj2gmclYDZ9Oxpi1gvGCqVvQLvhaqfxXMurmlD8vFNIFWQXP
bmuxFBSthCh9ax3Iu8h25oheCn5w4pnSytaGvegHmRGeKZh3+n1A/kMtUNmk
zH6elIJJT8fkr37TBPMfnam/K1Nw67bJPyk2Tdhkt//+sycFA79Rmw2pasAw
zXuRyScp+L5FQ2A0UB1qpJ8+DppPwRpmHs8xdTXQVfp0mvhLCjoYJn041K4C
wzknxnh/pmCF58UftTTKwJLjR6FwIBV/PStJf+6qCFVzZHQaR1LRYiiAq3RS
HgqUChIUqFPxCwf/lUvccnBR5g+DEG0qln4QPpOUeBO8GXY9j59IxaR3RIrL
KzJQz2Mt8ZEuFQe+HxJUlJeGlRlyjvbjqShDdVtmvkYSjF16X3tRpaLqyeMv
7Y9KAJcaHBQkS8XMJyW8C6NioEjzWnltn1DfU0cjtXgReMz+or/6ewpCt5X9
hoIQXLy+R2W6koI9IlMb347yQ+WmFQvjmxQ8fm712LlSTkh7x/RoYSwFaX8K
Fv2+dAG4qkTmmwj9Ih44aVHvzgT974bEYqpScKboD8m1PBqI4Jzqc0lJwS71
RIVpmXWJbg63K/Y+Kdg9om+S+PsA9rl1RvoZpeD90ztEnd0n8P5PjpRSyRRc
HEoskBRgQ03LgPfvz6bg3fzwCN1xbtwXV2B5/D4ZHWg5tc0OC+CM796K50Ay
NnTorT4+fwVFXdvvKuYnY4q1yy9XrWvIwp0iFq+QjDmNqozKVhKYdP/r8C/m
ZFQ0aE9W6pFE0oa+05XbhH0dSU02uidD0D+ifL1ZSVhVfnvsjPhNtD6WUspj
mYTs/CtuQj2yGLXbFr/Fm4Q7deK9rHUKeEI0z8fzYSL+4hzof8SghD6W/iri
SYmYX0Tz2SVJGQsDzeVsNBNR+pNHsJOVGk7ZaatsvU7A5DXTz2PW6ugpt+Zn
VJiA6wHWobfpNfDuRlLkdcMEzP1KpmLto4liajd5/Gbi8eo6lRITsw4GXDKs
cuuPw7zHR2+oPdDBi0JfMjjd47B45vCbOBtdrNG4r5twIQ4fbbrRbNTcwgSy
4nPKCbEoJCZYVEZlgGqNH3iybsRgzq2mo2crDVBDquQSy2Y0TqqViNtdMcQj
TZVbYQXRqIR2pGe1jHA7Vz5/6UsUmgvNRIV5mGDjowe7c+GROOtfS9v5xQRH
tRSOMHNG4s937XsPLEzRtDRcKPlFBJbOqM1cuWCG/AzFsqRnI3Co5frJ8n0z
9DLSFzjQHYZThbOkzoLm6NE+4SGjH4Yaxx8knbAxx/MCOiL4MxSTJDJbd0bM
MV7vHkNASAiWn3nYcTvYApPUJ1PMQgJRcERtk6/OAm86djk/6Q/AT+efmwY8
s0DytEIu+V/+yBRvTebJaok3RW1Xa1z80HxO6Q2LrCU+fCPfW1bnixYeL2hz
HCxx8fEFsvn3PvjsqPvK61ZL9B18Miyr6Y0H9IxYq6cscfdrOnFKvBe6xlX/
Fdq0xG7l2y6y9z1xlih0t5TTCvdyJxPFuDyQgXTuWICcFfK9pvmZbO6Om/1f
4k9aWKHqfwFnInLccKonICkr0wpX/lVt/fznjDXIQO3dYIWFN5NmBGydsPVH
39KJ+1Zo7fTmCNVTB+wmvxTtM22F03oK8uXC9hjxgbc/55MVSquF3SAuscU3
JHs1Pr+t8Jf906uqJDaoJU/ufpLcGpnnTmnmOFlhSPyslM9pa5ybkrjz7YUF
fq1elMrhsEad0HOZwdfMUSCgIt9HyBqduDVZcmRNcXEp351e0hqV0yybP540
woS7Mtt+itaYFw/nGT7rofMa441CLWu87/x81rxPB49sMbWEGFpjMLPpsZVk
TVz11f94zsIas7beBvQPq6Im2YW7ibbW2EO/4vrKQx6TLs7863a0xsejD3vD
z0njoslQcI2LNSrdaGJlbRPBHH4gM3SzxrGvZC1uMuz4i73C+SUBE50UK+AQ
/SGhNiwZfJKAC5IOPbh3jxM+ZriRshDsK548cWtUEwP/l2qLGw7W6EIdYFxo
IAPVsW3iCTbW6NYfJuEQqwBmWQfjNsys0W5si3ajWQ3szrbzshlY43FpIr0v
HzUhUI+jnFXTGkVPuW3bfNMBXeMphQ15a0w5ajEkuacHPbfoc1MkrHEPN/jU
DhgReNb2x76ANdq+Fqi1+1/D5R1OBR/FcYREqayGmYzMBiHh2Hu7rmtd69pk
73WtqyQJpR0NJEJGEY6SSIjMUrSNsonUW+/98/v8zvec3/Oc8TwfJhfY1Ckz
pCvhie8SRDuq/7lCjU58EXm3J/62spLgiHcHftXWP+ZbPHGkJ4dD9qcHZJjI
xZevUZD8wKs0/4wndEkJi1V/oWDn4RyWI6Le4HjVKNmlj4Jjys/efq/xgWw/
V5HGRgpK1DRM3NX2gzrHXdltt+jzlivZbdPrDybKonaJp+n+1md2/cRAqMi7
e5zLjoIDn0lyy/LBEEka+bOgSkH9Esp1yblgEPChBGQJ0udzPdWr4F4IGDq2
tbNMeODLbzwP/4iEwblHByanmz1Q2ZZL8N1oGGhwrkoXXPHA+yq6pV3Z4TDv
f+SRg40HXrpr+O7eSgSckw3eFi3ngUbmlw0yb0fCvbD68ABWD+QKr+S1sI4C
IDZenKp1x1//lrM8SqKBXSz1XlSmO7oH2bIWmscASb/+3A8yXRs1J15djgGV
bK7AAmZ3rBFY46tWioO87+myQ0Nu+POYxNaHg3EAFQfJbMVumGuds04KjofF
rZq9LjpuaNjunGhZmADyLnIqRqGuOO1WLHzwUxLcWudtLT3uipeHDE35lah0
3o3gFGF2xeIuA/feGCp4nb/J1SfmgqmO6bOK/1HBdL+XT2oVGaWeuFI/qiUD
o5OzYqYqGcu3l9cejEuG7If81EdGzqjPjkbFy8kgeb3TeLnXCaXUZINfyKWA
3GgBe6m1E+6bWSlP9UqBL90+/+7YOmLo888rDwZSQKhe3pfJxB7jWS/L115N
BTZ/zzCBdhIqq3zcYfQyFTbijHn+qZNwfGWix309Fa4FhxTry9LveZDbdSHz
NNBSfPcei4h4+z3X+ebINBjhNlCR5iPiO6U3smPX0iD664lPG78JeISDiTVr
Mg2K3krnRwQS8KjREwUB9nTwvddPZR+3wad7igPFZdLhdlYs/zMzG/Sf1ZMp
MU6HoSqjwfIma2QqOPSt0CcdqCYe/K+krVF8enUXV3o6HDj73fXoRSu8XS+u
unEjHRLejZasBVtiJyezklx/OpjZ3TtyvtsC628tOLN9S4ciY45Z1XpzNAuA
fad/pUNr+EjO4nUzZJvwFKjjoMGlvECHLpopTjLs8qQJ0GClg8NsONAEfRUv
uP2ToYH22x/eEgRjJF0+EyOiSoOfuSZlL48ZYaJNCc+MPg1SGt25R4QM8Tb1
zGUnaxqQ9gTetN9kgHnaM6HRdN6fjrpDpEzqIV+jN4uGJw1Kr+sfZHupiyub
qxoqAmjARjwtQ7yvg+umgWsdoTQ4+1rBxOWcNirOm0uciaLByaaWYsVwLfSu
WH/zXywNxD0l/30jauI7j3UZ/gQaaIxz9W8L08C8WGmLb3RN3mCYM1JRwyx7
/0hXuhagWCbc+u8YPvcpGMyMo//HVaXkeJsyau84fdUrmgYqSgt5CqeO4t+H
ooyrYTSIkar0L7dQwI0O1aPKJ2ggTC0ndvAdRuXSSn95bxoo/9PYMG6Ww9pW
55ExMt3PnSDZZy6FGhO/KjVtaeDucKzJ5ZMY3vbizSIb03WG3YxKtAi+OtVI
UtagQajWV4+j+3bjkJwga88hGuS0XDDdUcmJg8ohaftEaWD43Tm40GKj5XvW
TJsSFw1EXjINehp91FDmaq7lZKTBGm1Td9MZbviqpe7POZYOuo9TWNUUBSC1
3nqn6vN0uNSlzyrgKwo98zlSh6rS4fmY3iHHX9IQtrPUIY2aDlti3htIqB6E
jO2vMye90sFUVN3yQ+NhCMn8OSNkmg48a1HTanNHoeLi+BUe7nTYyJhnyd2k
AvN/fgmMrqRBz/K/fW95VWE6CeVjh9KApZDxUe8hDZhMXadQ8tJgKil/6oKQ
DgiZp9cKMaWBk0gGZzK/LgxrSyWKjaVCo8mRykg+PTjAdMpQpCYVYmTT5ixY
DcDpaV8Kq2sqZA1xE/b8NgBQ9NBdU0yFs4tyTxtmDaHMmrVshi0VOrrEx0y6
jSEinsPkW0UKtLPL08QfmcDNbs0zq4kpMNWf8vhOkSmMVZ804LVIATGONo2A
QHNgkxa5l/8jGRg+NCb4LlsC1U5wfF0gGep7n/oedbaCiG2/UzdNUeFxOfNQ
bbsVkFnF5nUeUIG2Ne2/x7nWcFHmrFCELhUe8VNFggQIcLG55j/m1kRYW+Mr
sY8jAPeenMtGxokQ1yX1Z2CUAATvJS6lgQSwmhe19jprC5c48vvFPsbD3XHZ
LedniKBya1pHaS4W8hNk47LV7UBx+xli/olYyEg62fgr2w5CN8zOv5mNgfk5
nde75EjQ/Fns2bHpaPiRsLetLYYEIzINXRTPaAg1UHgw8IwEOWyxMgUfomB4
q3AkN9EejtyJZ1AYjISCumMuGlftQfLGX/EK00ggWGc+efrBHg5/JX6zeBYB
1x6KW/RSHCD5E0fuoepw8HKv5K8gOcKLaK7thimhcOkNKc31nCOwM77MWVgJ
gYeJbeKOnY7A2087z+wdAkbmw8Yih53ghVf1hxyjYCCIO09NujtB0HVHZsXw
INi7vXt5IdcJuk/oPXYlnIDCMOGTT2adQPuK6KIpVwBIFk7I0HY7Q/yeHQfk
F/xg7k1qK03LGeTv9FoH9vjCN6cVrWPZzvBSceCCIc0bupsSmGeqneFECJ8U
q7sX8Go+Jg4OOMO9brlyironHBjvtrXhIoOo1UCkwbI7lG8nj36TJwNPDVl5
tscNbjC13as2IsP+wt/jkaWukFtw512NOxlU1e2WpllcYGDQpnI2hgzxj8fb
5hudwM5Sw8flLBkmDZunhYMdYEvhkMmWW2ToDhflvyJOgh/2mde/15Ih+6X6
9pQxW2Dk6bnN2k6GrDcaCavnbOAIhfOWwwAZ9srbCvAZWYEvG8uHyQkyVF2N
NtvCZA4aZIWN+zNkeDE/x94WZgTpgk8Yq5fpfk3N8xcndcFmxp1zfoMMfPff
j3c6a8Ijnx5lPwYX2FoZXCteoQyoVnd+P7MLGGSwTA4ZykE4+ysQYHWBvdEW
SQkZfPDqrNBZPboWqvvy6UD4Dqy0WnR1o8f3CV07OVcsg0ue07Yh9Hyir5qE
OqnK2JGxWB9Fr/fTYtPZw7maWPQvdyZyiQz9yXw8o2Q9nOG1swuZIkMZ7eI5
Dglj3Mzd4eH7jgxrk6c2kibNMRQCIt16yUDOWy0M77fC3M+vVh1byKDmRa74
T4aARMtfRo7l9P6c1OM/mkrEbdx+iu4XySAxNXFrdZiEfbn7GcNTyDAsQm3i
l3TEPFY2tnw/MnQVXuBKC3PGqDu/CtstyUB7nWfD0eSCIZpnpvx2kWGMiak4
XMQdr5ct639dcwbJBZnKeA0PfCK/9VbisDMoqdy4YuZAQRnBp/JC9HkabFh7
tPm0F5ZHLt+W9XaG4boAv74b3hjOvs3XT8MZtrDXZ4g88MHceC5K2qQTDJvd
ZeGj80GEgvM23wYn+v6qB1x544+lUl022afo72KtPL4fA3CoT+ddhZgTBAf7
PCiaOoF5DIFV1fOO4HN5Y2ZuMggVdBb1tjQ4guhm6Uix0GC0b2gK79B3hOqd
e0VXfUNQ6OHBEhUOR1iQIVBOfw7BsrxoX65eBwidE6rPcgxFQ8ZlPl4LB7ik
kj9epx+G317Othpuc4BtPTsi+hrC0J7jQsvGC3vwiFYUU5MJR63LdccXNeyh
LOyn/zxbBArusqVqrZHgybQIQSYiAh2oz4ok75NAVvjgSuFEBHY3rIr37CLB
njr+k6KVkaglX9olM0aE03e3Wy8oR6Or2ojQyEkiXOv0VPM6H41fe4WZjI8S
YfSo5PkfC9EYU/ZLvijTFjR/nIncezMGfT627c5TsIXEP25hjWsxOKC2dNt7
jAAkdv9gR5NY1Fab/TIgSYCrFTE2537EolTvkkpMtw3ws9+vEFKNw2qX3iCB
YBuYWwpfuJYeh3X+B4ajaq2Bn1In6cEXj5w2cn8Nj1hB8S+fkEdCCXjpvdRx
rWFL6J4OHqHaJaBhiOvjUzGW8IKlpT0gOwFvuMo36sVbQNgWbeHSnwlYoNBF
+NtiDsd4aX+WJRORvHOnOI3BHDafl9J3skvEkJidSgpUU3A5/uVHXFUivo1s
xuAWE/DNCG09/DYRU5Rk71b8NobNY4VHGZiSUMFjeX1V2RhyFGfbv0kmYV1J
aZ0tfa+dcodmvpgkYd/9j19HKwyhdWlEcCMwCc33K+acnjQAPkLoqHh2Eu5k
iA+sJOnDBy7vrpbOJJxqvlqhkqMHLIHNK9Kfk7DQ1DhrX4cunLAk5N77nYSi
Af06kf/pwGizt6PIFipKMm96r61A57DlmZMR3FSs3hZHyvPRBhTbXzEkQMX2
5KH6sGtaoF+etF9LnIoU+/vr8/2a4PQ1yOCRLBXzzxQJ8bBqgoiMR/hxBSpW
yl+wHg3TgNrRTpaXKlR0nzhzhG1MDVSMdth5q1PRWNh9/JXWcegZKW3boUXF
gA/GdgalxyBvgrGkQ4eKB/zmbtI4VYCn+YNTlh69frPW5J1wJZjdmhbkok/F
KAudG01vFeGBXH+7Fl0LRwfxfNJUgFmTy1aK9PgrOdo5ciWHQTq/mlmFnq93
UcWpftshWD4y3WemSUXp6WupktOyMEDgLo1Uo+Kdz4y8jQ+lwFaCKb5GmYpd
aRf+WWdIAPNghgbLESqSEgnDIqT94JcZ+TFAhopcKYqy1tIiwB1ZSPy+n4rh
xm4HZP7sgYhnI2eT+an4vPhkgEIJN9TONFw4xEVF2dpX1+XK2YG0ENH/azMV
d7QcFKsV+6NRNRsd0/wrCRkMNA417umkX5D4sicfk7DK+HZ8E/vPltLddgc3
0fvJfKBv35fkzZjS5MeYXp6Ep8YCd/nL7sa2oCehtsFJGH16b9MiSQi3s3Qw
l1kk4dWMgdYgEMUbwZkvjOWSMCZdbbjT4QBGjdVPxX9OxCc5z3yH3GUwSvLF
Jt6mRKwqTP7+3UseH5tV/WTNS8TfI6vCJoePoHhT8HY2tURkzfkw86NcAQd7
NnEIcybivuOcdOw/imOmE6dujCeg3phDQMtOFWSW+Nz0IzYBSReUk5teqGOv
LK1Zoige9S80hwQ4AH5SfPNI0DUeKX0jKy1hmnjbWf+zrmA8dpiumB3+rYXb
GTj+qOfG4eYVfiWmJm0MDKliETSOw9cMTNGvY3VwdokjQp8hDnmEv16HJV1s
6ix4nOsdi2vRe7c+K9NDmZsdM093x+KMxtsDu930seY31zNSZwz+zPkby9Jh
gBVFadoDojFo38vQ2RtpjFIfs7cNtkehCWfVWpmACUp/tJVl8o9C/id/vzO1
mqDzrZv5/ZxRuJc1xZzhnykWVOe+DbOOxOCSc135l80wKzFsnbgUgd9V+WaS
FczxE9dg3u+cCHzFreWj62yB3g5P2+92haP+c8NFtjkLdFkqvtbmGY5porrH
mDQs0Zy/IQL/haGptrsndlji7w/1DQmHwpDnLgy9e2GF94ubmBhpIWgfWzZd
w2qNr+t3q/LuCcGf8qO8HNrWuLQnV9ziXjBORIZaydVao9Wh/ufll4MwYfmV
/NKMNVIyTep9G0/g5M/YBWkRG7xuCZ/qRwOxO77oxXy6Dc7nOFIMdwZgtMjB
v1H1NsiYcfBdpYw/Xt/bLhLw1Qartlh8mdX1Qylbeb8cDQKOlHVMKYT7INZz
32/yIaCxXjerS6Y3HqsW32t2joAkSth68Q0v1JJpKsh7T8ClUzXtAx0UPHko
O9+A0RYvgcL3sbceyJc28Mxhvy1WLcrZGMy6Y/jm1FeX3W3R8qmfbPYON3xZ
+bq6PckWYwQvtmTtc8UOe29O0yu22Hpa4IovhYxcNe4/fHtssdxjlTP7jgOS
5tReMnyh+8OvrJTQuVxF5d6nxXVbDJbd8vfGVyI+KD4to76ViByBK1UXWWxx
yet2xydBIroI1lBqxW2wt9Zv9JMcEW2bPwfx6lth/jTthroaERtDpribeszx
1DD/lWVDIvLZ8YPrDhNkklqyYCEQkUfMX9yRYID/A0SrqNQ=
       "]]}},
    Axes->{True, True},
    AxesLabel->{
      FormBox["\"\[Theta]\"", TraditionalForm], 
      FormBox["\"\[Theta]'\"", TraditionalForm]},
    AxesOrigin->{0, 0},
    DisplayFunction->Identity,
    FrameLabel->{{None, None}, {None, None}},
    FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
    GridLinesStyle->Directive[
      GrayLevel[0.5, 0.4]],
    Method->{"ScalingFunctions" -> None},
    PlotRange->{{-0.07660526891826452, 
     0.08297142106751909}, {-0.3733504356236221, 0.3647923073517281}},
    PlotRangeClipping->True,
    PlotRangePadding->{{
       Scaled[0.05], 
       Scaled[0.05]}, {
       Scaled[0.05], 
       Scaled[0.05]}},
    Ticks->{Automatic, Automatic}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.715264407561141*^9, {3.7152655874829607`*^9, 3.7152656085384455`*^9}, 
   3.715265660066955*^9, {3.715265694500911*^9, 3.715265706829179*^9}, 
   3.7152657647340374`*^9, {3.715265810154033*^9, 3.71526583269378*^9}, 
   3.7152658742322598`*^9, 3.7152659184856577`*^9, 3.7152659619023123`*^9, {
   3.715266252702693*^9, 3.7152662794599295`*^9}, 3.7152663411600733`*^9, 
   3.7152666338047433`*^9, 3.715266764045635*^9, 3.715266839926098*^9, 
   3.7152669137589703`*^9, 3.715285124502807*^9, 3.7152852611151023`*^9, {
   3.715285295816537*^9, 3.7152853036617565`*^9}}],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`t$$ = 8.000635147094727, Typeset`show$$ = 
    True, Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{
      Hold[$CellContext`t$$], 0, 10}}, Typeset`size$$ = {360., {188., 192.}}, 
    Typeset`update$$ = 0, Typeset`initDone$$, Typeset`skipInitDone$$ = 
    True, $CellContext`t$293047$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, "Variables" :> {$CellContext`t$$ = 0}, 
      "ControllerVariables" :> {
        Hold[$CellContext`t$$, $CellContext`t$293047$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> ReplaceAll[
        ReplaceAll[
         Part[
          $CellContext`DrawSystem[
           Subscript[$CellContext`x, 1], 
           Subscript[$CellContext`y, 1], 
           Subscript[$CellContext`x, 2], 
           Subscript[$CellContext`y, 2], 
           Subscript[$CellContext`x, $CellContext`p], 
           Subscript[$CellContext`y, $CellContext`p], $CellContext`\[Theta]p, 
           Subscript[$CellContext`w, $CellContext`p]], 1], {
          Part[
           ReplaceAll[
           Subscript[$CellContext`x, $CellContext`p] -> \
$CellContext`X1[$CellContext`t$$], $CellContext`sol1], 1], 
          Part[
           ReplaceAll[
           Subscript[$CellContext`y, $CellContext`p] -> \
$CellContext`X3[$CellContext`t$$], $CellContext`sol1], 1], 
          Part[
           
           ReplaceAll[$CellContext`\[Theta]p -> \
$CellContext`X5[$CellContext`t$$], $CellContext`sol1], 1], 
          Subscript[$CellContext`x, 1] -> 0, Subscript[$CellContext`x, 2] -> 
          2 Subscript[$CellContext`w, $CellContext`p], 
          Subscript[$CellContext`y, 1] -> 0, Subscript[$CellContext`y, 2] -> 
          0}], $CellContext`NumericParametersTest], 
      "Specifications" :> {{$CellContext`t$$, 0, 10, 
         AppearanceElements -> {
          "ProgressSlider", "PlayPauseButton", "FasterSlowerButtons", 
           "DirectionButton"}}}, 
      "Options" :> {
       ControlType -> Animator, AppearanceElements -> None, DefaultBaseStyle -> 
        "Animate", DefaultLabelStyle -> "AnimateLabel", SynchronousUpdating -> 
        True, ShrinkingDelay -> 10.}, "DefaultOptions" :> {}],
     ImageSizeCache->{411., {230., 237.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Animate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{
  3.715264407561141*^9, {3.7152655874829607`*^9, 3.7152656085384455`*^9}, 
   3.715265660066955*^9, {3.715265694500911*^9, 3.715265706829179*^9}, 
   3.7152657647340374`*^9, {3.715265810154033*^9, 3.71526583269378*^9}, 
   3.7152658742322598`*^9, 3.7152659184856577`*^9, 3.7152659619023123`*^9, {
   3.715266252702693*^9, 3.7152662794599295`*^9}, 3.7152663411600733`*^9, 
   3.7152666338047433`*^9, 3.715266764045635*^9, 3.715266839926098*^9, 
   3.7152669137589703`*^9, 3.715285124502807*^9, 3.7152852611151023`*^9, {
   3.715285295816537*^9, 3.7152853037417555`*^9}}]
}, Open  ]],

Cell[" ", "Text",
 Editable->False,
 Selectable->False,
 CellFrame->{{0, 0}, {0, 3}},
 ShowCellBracket->False,
 CellMargins->{{0, 0}, {1, 1}},
 CellElementSpacings->{"CellMinHeight"->1},
 CellFrameMargins->0,
 CellFrameColor->RGBColor[0, 0, 1],
 CellSize->{Inherited, 5}],

Cell[BoxData[
 RowBox[{" ", 
  RowBox[{
  "add", " ", "both", " ", "a", " ", "driving", " ", "force", " ", "and", " ",
    "damping"}]}]], "Input",
 CellChangeTimes->{{3.7151971026862116`*^9, 3.7151971026962166`*^9}}],

Cell[BoxData["\"\<Because of energy conservation one can clearly never get \
chaos from the motion of a single degree of freedom. We therefore add both a \
driving force and damping, in order to remove energy conservation\>\""], \
"Input",
 CellChangeTimes->{{3.7151968713813367`*^9, 3.7151969219088144`*^9}, 
   3.715196987772071*^9, {3.7152162305628853`*^9, 3.7152162320189114`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"EOMtoSolve", "=", 
  RowBox[{
   RowBox[{
    RowBox[{"SymetricEOMtoInvestigate", "/.", "NumericTestParams"}], "/.", 
    "NumericParametersTest"}], "/.", 
   "NumericStructuralDamping"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"numericEqs", "=", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"X1", "'"}], "[", "t", "]"}], "\[Equal]", 
            RowBox[{"X2", "[", "t", "]"}]}], ",", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{
             RowBox[{"X2", "'"}], "[", "t", "]"}], "\[Equal]", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"EOMtoSolve", "[", 
               RowBox[{"[", 
                RowBox[{"2", ",", "1"}], "]"}], "]"}], "[", 
              RowBox[{"[", "1", "]"}], "]"}], ")"}]}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{
             RowBox[{"X3", "'"}], "[", "t", "]"}], "\[Equal]", 
            RowBox[{"X4", "[", "t", "]"}]}], ",", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{
             RowBox[{"X4", "'"}], "[", "t", "]"}], "\[Equal]", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"EOMtoSolve", "[", 
               RowBox[{"[", 
                RowBox[{"2", ",", "2"}], "]"}], "]"}], "[", 
              RowBox[{"[", "1", "]"}], "]"}], ")"}]}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{
             RowBox[{"X5", "'"}], "[", "t", "]"}], "\[Equal]", 
            RowBox[{"X6", "[", "t", "]"}]}], ",", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{
             RowBox[{"X6", "'"}], "[", "t", "]"}], "\[Equal]", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"EOMtoSolve", "[", 
               RowBox[{"[", 
                RowBox[{"2", ",", "3"}], "]"}], "]"}], "[", 
              RowBox[{"[", "1", "]"}], "]"}], ")"}]}]}], "}"}], "/.", 
         RowBox[{
          RowBox[{
           SubscriptBox["x", "p"], "[", "t", "]"}], "\[Rule]", 
          RowBox[{"X1", "[", "t", "]"}]}]}], "/.", 
        RowBox[{
         RowBox[{
          SubscriptBox["y", "p"], "[", "t", "]"}], "\[Rule]", 
         RowBox[{"X3", "[", "t", "]"}]}]}], "/.", 
       RowBox[{
        RowBox[{
         SubscriptBox["\[Theta]", "p"], "[", "t", "]"}], "\[Rule]", 
        RowBox[{"X5", "[", "t", "]"}]}]}], "/.", 
      RowBox[{
       RowBox[{"D", "[", 
        RowBox[{
         RowBox[{
          SubscriptBox["x", "p"], "[", "t", "]"}], ",", "t"}], "]"}], 
       "\[Rule]", 
       RowBox[{"X2", "[", "t", "]"}]}]}], "/.", 
     RowBox[{
      RowBox[{"D", "[", 
       RowBox[{
        RowBox[{
         SubscriptBox["y", "p"], "[", "t", "]"}], ",", "t"}], "]"}], 
      "\[Rule]", 
      RowBox[{"X4", "[", "t", "]"}]}]}], "/.", 
    RowBox[{
     RowBox[{"D", "[", 
      RowBox[{
       RowBox[{
        SubscriptBox["\[Theta]", "p"], "[", "t", "]"}], ",", "t"}], "]"}], 
     "\[Rule]", 
     RowBox[{"X6", "[", "t", "]"}]}]}]}], 
  ";"}], "\[IndentingNewLine]", "NumericTestParams", "\[IndentingNewLine]", \
"NumericParametersTest", "\[IndentingNewLine]", 
 RowBox[{"startValues", "=", 
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{"X1", "[", "0", "]"}], "\[Equal]", 
       SubscriptBox["w", "p"]}], ",", 
      RowBox[{
       RowBox[{"X2", "[", "0", "]"}], "==", "0.001"}], ",", 
      RowBox[{
       RowBox[{"X3", "[", "0", "]"}], "\[Equal]", 
       RowBox[{
        RowBox[{"-", "1"}], "-", 
        SubscriptBox["h", "p"], "-", 
        FractionBox["\[Gamma]", "2"]}]}], ",", 
      RowBox[{
       RowBox[{"X4", "[", "0", "]"}], "==", "0.01"}], ",", 
      RowBox[{
       RowBox[{"X5", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
      RowBox[{
       RowBox[{"X6", "[", "0", "]"}], "==", "0.001"}]}], "}"}], "/.", 
    "NumericTestParams"}], "/.", 
   "NumericParametersTest"}]}], "\[IndentingNewLine]", 
 RowBox[{"T", "=", "120"}], "\[IndentingNewLine]", 
 RowBox[{"sol1", " ", "=", " ", 
  RowBox[{"NDSolve", "[", " ", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"numericEqs", ",", " ", "startValues"}], "}"}], ",", " ", 
    RowBox[{"{", 
     RowBox[{
     "X1", ",", " ", "X2", ",", "X3", ",", "X4", ",", "X5", ",", "X6"}], 
     "}"}], ",", " ", 
    RowBox[{"{", 
     RowBox[{"t", ",", " ", "0", ",", " ", "T"}], "}"}]}], " ", 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"{", 
  RowBox[{
   RowBox[{"ParametricPlot", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"X1", "[", "t", "]"}], ",", 
        RowBox[{"X2", "[", "t", "]"}]}], "}"}], "/.", "\[InvisibleSpace]", 
      "sol1"}], ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", "0", ",", "T"}], "}"}], ",", 
     RowBox[{"AxesLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\"\<x\>\"", ",", "\"\<x'\>\""}], "}"}]}]}], "]"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"ParametricPlot", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"X3", "[", "t", "]"}], ",", 
        RowBox[{"X4", "[", "t", "]"}]}], "}"}], "/.", "\[InvisibleSpace]", 
      "sol1"}], ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", "0", ",", "T"}], "}"}], ",", 
     RowBox[{"AxesLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\"\<y\>\"", ",", "\"\<y'\>\""}], "}"}]}]}], "]"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"ParametricPlot", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"X5", "[", "t", "]"}], ",", 
        RowBox[{"X6", "[", "t", "]"}]}], "}"}], "/.", "\[InvisibleSpace]", 
      "sol1"}], ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", "0", ",", "T"}], "}"}], ",", 
     RowBox[{"AxesLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\"\<\[Theta]\>\"", ",", "\"\<\[Theta]'\>\""}], "}"}]}]}], 
    "]"}]}], "}"}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{
  3.7152162336237745`*^9, {3.715217538821905*^9, 3.715217572815819*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      SuperscriptBox[
       SubscriptBox["x", "p"], "\[Prime]\[Prime]",
       MultilineFunction->None], "[", "t", "]"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      SuperscriptBox[
       SubscriptBox["y", "p"], "\[Prime]\[Prime]",
       MultilineFunction->None], "[", "t", "]"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      SuperscriptBox[
       SubscriptBox["\[Theta]", "p"], "\[Prime]\[Prime]",
       MultilineFunction->None], "[", "t", "]"}], "}"}]}], "}"}], "\[Equal]", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{"2", "-", 
         RowBox[{"Cos", "[", 
          RowBox[{
           SubscriptBox["\[Theta]", "p"], "[", "t", "]"}], "]"}], "+", 
         RowBox[{"0.1`", " ", 
          RowBox[{"Sin", "[", 
           RowBox[{
            SubscriptBox["\[Theta]", "p"], "[", "t", "]"}], "]"}]}], "-", 
         RowBox[{
          SubscriptBox["x", "p"], "[", "t", "]"}]}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{"1", "-", 
         FractionBox["1", 
          SqrtBox[
           RowBox[{
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{"2", "-", 
               RowBox[{"Cos", "[", 
                RowBox[{
                 SubscriptBox["\[Theta]", "p"], "[", "t", "]"}], "]"}], "+", 
               RowBox[{"0.1`", " ", 
                RowBox[{"Sin", "[", 
                 RowBox[{
                  SubscriptBox["\[Theta]", "p"], "[", "t", "]"}], "]"}]}], 
               "-", 
               RowBox[{
                SubscriptBox["x", "p"], "[", "t", "]"}]}], ")"}], "2"], "+", 
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"-", "0.1`"}], " ", 
                RowBox[{"Cos", "[", 
                 RowBox[{
                  SubscriptBox["\[Theta]", "p"], "[", "t", "]"}], "]"}]}], 
               "-", 
               RowBox[{"Sin", "[", 
                RowBox[{
                 SubscriptBox["\[Theta]", "p"], "[", "t", "]"}], "]"}], "-", 
               RowBox[{
                SubscriptBox["y", "p"], "[", "t", "]"}]}], ")"}], "2"]}]]]}], 
        ")"}]}], "+", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"Cos", "[", 
          RowBox[{
           SubscriptBox["\[Theta]", "p"], "[", "t", "]"}], "]"}], "+", 
         RowBox[{"0.1`", " ", 
          RowBox[{"Sin", "[", 
           RowBox[{
            SubscriptBox["\[Theta]", "p"], "[", "t", "]"}], "]"}]}], "-", 
         RowBox[{
          SubscriptBox["x", "p"], "[", "t", "]"}]}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{"1", "-", 
         FractionBox["1", 
          SqrtBox[
           RowBox[{
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{
               RowBox[{"Cos", "[", 
                RowBox[{
                 SubscriptBox["\[Theta]", "p"], "[", "t", "]"}], "]"}], "+", 
               RowBox[{"0.1`", " ", 
                RowBox[{"Sin", "[", 
                 RowBox[{
                  SubscriptBox["\[Theta]", "p"], "[", "t", "]"}], "]"}]}], 
               "-", 
               RowBox[{
                SubscriptBox["x", "p"], "[", "t", "]"}]}], ")"}], "2"], "+", 
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"-", "0.1`"}], " ", 
                RowBox[{"Cos", "[", 
                 RowBox[{
                  SubscriptBox["\[Theta]", "p"], "[", "t", "]"}], "]"}]}], 
               "+", 
               RowBox[{"Sin", "[", 
                RowBox[{
                 SubscriptBox["\[Theta]", "p"], "[", "t", "]"}], "]"}], "-", 
               RowBox[{
                SubscriptBox["y", "p"], "[", "t", "]"}]}], ")"}], "2"]}]]]}], 
        ")"}]}], "-", 
      RowBox[{
       SuperscriptBox[
        SubscriptBox["x", "p"], "\[Prime]",
        MultilineFunction->None], "[", "t", "]"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "0.04905`"}], "+", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"1", "-", 
         FractionBox["1", 
          SqrtBox[
           RowBox[{
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{"2", "-", 
               RowBox[{"Cos", "[", 
                RowBox[{
                 SubscriptBox["\[Theta]", "p"], "[", "t", "]"}], "]"}], "+", 
               RowBox[{"0.1`", " ", 
                RowBox[{"Sin", "[", 
                 RowBox[{
                  SubscriptBox["\[Theta]", "p"], "[", "t", "]"}], "]"}]}], 
               "-", 
               RowBox[{
                SubscriptBox["x", "p"], "[", "t", "]"}]}], ")"}], "2"], "+", 
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"-", "0.1`"}], " ", 
                RowBox[{"Cos", "[", 
                 RowBox[{
                  SubscriptBox["\[Theta]", "p"], "[", "t", "]"}], "]"}]}], 
               "-", 
               RowBox[{"Sin", "[", 
                RowBox[{
                 SubscriptBox["\[Theta]", "p"], "[", "t", "]"}], "]"}], "-", 
               RowBox[{
                SubscriptBox["y", "p"], "[", "t", "]"}]}], ")"}], "2"]}]]]}], 
        ")"}], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"-", "0.1`"}], " ", 
          RowBox[{"Cos", "[", 
           RowBox[{
            SubscriptBox["\[Theta]", "p"], "[", "t", "]"}], "]"}]}], "-", 
         RowBox[{"Sin", "[", 
          RowBox[{
           SubscriptBox["\[Theta]", "p"], "[", "t", "]"}], "]"}], "-", 
         RowBox[{
          SubscriptBox["y", "p"], "[", "t", "]"}]}], ")"}]}], "+", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"1", "-", 
         FractionBox["1", 
          SqrtBox[
           RowBox[{
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{
               RowBox[{"Cos", "[", 
                RowBox[{
                 SubscriptBox["\[Theta]", "p"], "[", "t", "]"}], "]"}], "+", 
               RowBox[{"0.1`", " ", 
                RowBox[{"Sin", "[", 
                 RowBox[{
                  SubscriptBox["\[Theta]", "p"], "[", "t", "]"}], "]"}]}], 
               "-", 
               RowBox[{
                SubscriptBox["x", "p"], "[", "t", "]"}]}], ")"}], "2"], "+", 
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"-", "0.1`"}], " ", 
                RowBox[{"Cos", "[", 
                 RowBox[{
                  SubscriptBox["\[Theta]", "p"], "[", "t", "]"}], "]"}]}], 
               "+", 
               RowBox[{"Sin", "[", 
                RowBox[{
                 SubscriptBox["\[Theta]", "p"], "[", "t", "]"}], "]"}], "-", 
               RowBox[{
                SubscriptBox["y", "p"], "[", "t", "]"}]}], ")"}], "2"]}]]]}], 
        ")"}], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"-", "0.1`"}], " ", 
          RowBox[{"Cos", "[", 
           RowBox[{
            SubscriptBox["\[Theta]", "p"], "[", "t", "]"}], "]"}]}], "+", 
         RowBox[{"Sin", "[", 
          RowBox[{
           SubscriptBox["\[Theta]", "p"], "[", "t", "]"}], "]"}], "-", 
         RowBox[{
          SubscriptBox["y", "p"], "[", "t", "]"}]}], ")"}]}], "-", 
      RowBox[{
       SuperscriptBox[
        SubscriptBox["y", "p"], "\[Prime]",
        MultilineFunction->None], "[", "t", "]"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{"-", "11.881188118811881`"}], " ", 
       RowBox[{"(", 
        RowBox[{"1", "-", 
         FractionBox["1", 
          SqrtBox[
           RowBox[{
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{"2", "-", 
               RowBox[{"Cos", "[", 
                RowBox[{
                 SubscriptBox["\[Theta]", "p"], "[", "t", "]"}], "]"}], "+", 
               RowBox[{"0.1`", " ", 
                RowBox[{"Sin", "[", 
                 RowBox[{
                  SubscriptBox["\[Theta]", "p"], "[", "t", "]"}], "]"}]}], 
               "-", 
               RowBox[{
                SubscriptBox["x", "p"], "[", "t", "]"}]}], ")"}], "2"], "+", 
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"-", "0.1`"}], " ", 
                RowBox[{"Cos", "[", 
                 RowBox[{
                  SubscriptBox["\[Theta]", "p"], "[", "t", "]"}], "]"}]}], 
               "-", 
               RowBox[{"Sin", "[", 
                RowBox[{
                 SubscriptBox["\[Theta]", "p"], "[", "t", "]"}], "]"}], "-", 
               RowBox[{
                SubscriptBox["y", "p"], "[", "t", "]"}]}], ")"}], "2"]}]]]}], 
        ")"}], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"Sin", "[", 
           RowBox[{
            SubscriptBox["\[Theta]", "p"], "[", "t", "]"}], "]"}], " ", 
          RowBox[{"(", 
           RowBox[{"2", "-", 
            RowBox[{
             SubscriptBox["x", "p"], "[", "t", "]"}]}], ")"}]}], "+", 
         RowBox[{
          RowBox[{"Cos", "[", 
           RowBox[{
            SubscriptBox["\[Theta]", "p"], "[", "t", "]"}], "]"}], " ", 
          RowBox[{
           SubscriptBox["y", "p"], "[", "t", "]"}]}], "+", 
         RowBox[{"0.1`", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"Cos", "[", 
              RowBox[{
               SubscriptBox["\[Theta]", "p"], "[", "t", "]"}], "]"}], " ", 
             RowBox[{"(", 
              RowBox[{"2", "-", 
               RowBox[{
                SubscriptBox["x", "p"], "[", "t", "]"}]}], ")"}]}], "-", 
            RowBox[{
             RowBox[{"Sin", "[", 
              RowBox[{
               SubscriptBox["\[Theta]", "p"], "[", "t", "]"}], "]"}], " ", 
             RowBox[{
              SubscriptBox["y", "p"], "[", "t", "]"}]}]}], ")"}]}]}], ")"}]}],
       "-", 
      RowBox[{"11.881188118811881`", " ", 
       RowBox[{"(", 
        RowBox[{"1", "-", 
         FractionBox["1", 
          SqrtBox[
           RowBox[{
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{
               RowBox[{"Cos", "[", 
                RowBox[{
                 SubscriptBox["\[Theta]", "p"], "[", "t", "]"}], "]"}], "+", 
               RowBox[{"0.1`", " ", 
                RowBox[{"Sin", "[", 
                 RowBox[{
                  SubscriptBox["\[Theta]", "p"], "[", "t", "]"}], "]"}]}], 
               "-", 
               RowBox[{
                SubscriptBox["x", "p"], "[", "t", "]"}]}], ")"}], "2"], "+", 
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"-", "0.1`"}], " ", 
                RowBox[{"Cos", "[", 
                 RowBox[{
                  SubscriptBox["\[Theta]", "p"], "[", "t", "]"}], "]"}]}], 
               "+", 
               RowBox[{"Sin", "[", 
                RowBox[{
                 SubscriptBox["\[Theta]", "p"], "[", "t", "]"}], "]"}], "-", 
               RowBox[{
                SubscriptBox["y", "p"], "[", "t", "]"}]}], ")"}], "2"]}]]]}], 
        ")"}], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"Sin", "[", 
           RowBox[{
            SubscriptBox["\[Theta]", "p"], "[", "t", "]"}], "]"}], " ", 
          RowBox[{
           SubscriptBox["x", "p"], "[", "t", "]"}]}], "-", 
         RowBox[{
          RowBox[{"Cos", "[", 
           RowBox[{
            SubscriptBox["\[Theta]", "p"], "[", "t", "]"}], "]"}], " ", 
          RowBox[{
           SubscriptBox["y", "p"], "[", "t", "]"}]}], "+", 
         RowBox[{"0.1`", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"-", 
              RowBox[{"Cos", "[", 
               RowBox[{
                SubscriptBox["\[Theta]", "p"], "[", "t", "]"}], "]"}]}], " ", 
             RowBox[{
              SubscriptBox["x", "p"], "[", "t", "]"}]}], "-", 
            RowBox[{
             RowBox[{"Sin", "[", 
              RowBox[{
               SubscriptBox["\[Theta]", "p"], "[", "t", "]"}], "]"}], " ", 
             RowBox[{
              SubscriptBox["y", "p"], "[", "t", "]"}]}]}], ")"}]}]}], ")"}]}],
       "-", 
      RowBox[{
       SuperscriptBox[
        SubscriptBox["\[Theta]", "p"], "\[Prime]",
        MultilineFunction->None], "[", "t", "]"}]}], "}"}]}], 
   "}"}]}]], "Output",
 CellChangeTimes->{3.715217574811864*^9, 3.7152852457777696`*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"\[Kappa]", "\[Rule]", "1"}], ",", 
   RowBox[{"\[ScriptCapitalL]", "\[Rule]", "1"}], ",", 
   RowBox[{
    SubsuperscriptBox["\[Omega]", "s", "2"], "\[Rule]", "100"}], ",", 
   RowBox[{"\[Alpha]", "\[Rule]", "11.881188118811881`"}], ",", 
   RowBox[{"\[Gamma]", "\[Rule]", "0.04905`"}]}], "}"}]], "Output",
 CellChangeTimes->{3.715217574811864*^9, 3.715285245789768*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    SubscriptBox["k", "1"], "\[Rule]", "200"}], ",", 
   RowBox[{
    SubscriptBox["k", "2"], "\[Rule]", 
    SubscriptBox["k", "1"]}], ",", 
   RowBox[{
    SubscriptBox["L0", "1"], "\[Rule]", "2"}], ",", 
   RowBox[{
    SubscriptBox["L0", "2"], "\[Rule]", 
    SubscriptBox["L0", "1"]}], ",", 
   RowBox[{
    SubscriptBox["m", "p"], "\[Rule]", "2"}], ",", 
   RowBox[{
    SubscriptBox["h", "p"], "\[Rule]", "0.1`"}], ",", 
   RowBox[{
    SubscriptBox["w", "p"], "\[Rule]", "1"}], ",", 
   RowBox[{"g", "\[Rule]", "9.81`"}]}], "}"}]], "Output",
 CellChangeTimes->{3.715217574811864*^9, 3.715285245793768*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{"X1", "[", "0", "]"}], "\[Equal]", "1"}], ",", 
   RowBox[{
    RowBox[{"X2", "[", "0", "]"}], "\[Equal]", "0.001`"}], ",", 
   RowBox[{
    RowBox[{"X3", "[", "0", "]"}], "\[Equal]", 
    RowBox[{"-", "1.124525`"}]}], ",", 
   RowBox[{
    RowBox[{"X4", "[", "0", "]"}], "\[Equal]", "0.01`"}], ",", 
   RowBox[{
    RowBox[{"X5", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
   RowBox[{
    RowBox[{"X6", "[", "0", "]"}], "\[Equal]", "0.001`"}]}], "}"}]], "Output",
 CellChangeTimes->{3.715217574811864*^9, 3.715285245797768*^9}],

Cell[BoxData["120"], "Output",
 CellChangeTimes->{3.715217574811864*^9, 3.71528524580177*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"X1", "\[Rule]", 
     TagBox[
      TemplateBox[{RowBox[{
          StyleBox[
           TagBox["InterpolatingFunction", "SummaryHead"], 
           "NonInterpretableSummary"], 
          StyleBox["[", "NonInterpretableSummary"], 
          DynamicModuleBox[{Typeset`open$$ = False}, 
           PanelBox[
            PaneSelectorBox[{False -> GridBox[{{
                  PaneBox[
                   ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquarePlusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                   Alignment -> {Center, Center}, ImageSize -> 
                   Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                  GraphicsBox[{{{}, {}, {
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1]], 
                    LineBox[CompressedData["
1:eJwVz31Q0wUYB3AYbCR4EBgEGmLM3IpRIPKibOwJSNh4cWMb2xgbOAUTZGAU
5Q5m4pBJMAttOskSZydv00wmYpoiUIHLzYbZeQV2dMUfeK4t27Qd9Pz+eO65
z93z3PN8X1bWl1SR/Pz8mFhE97wUVDseNpbVPfERysnWsu4xvyxcZisyGN2q
ACfb7Mycshc/D1pzxfdn0O+pumb0W6LBItNekKF5xQm0Q0tx8ELHsa9C0SNF
nVGa1PUgIAtTb5Kc7INKunKCSocadexcC/rvxD1B3GoGfDzAcjHRmyIT6E3c
JBgdbO8NQB+ZdjmtrI1wPF0kdfg72ZkyfXWObBNUVLVFnUVTTM0f3hCmwSlL
B7cZXRqQtcjJzQDG0SqnBO3JcgT+I98Cre5POGnoy8nfjJkETNAttcbFoL9b
bkpobMyCYPK1oz7Mm+hubezLBZhxWCrm0ZRbjdSTrDfhrwl+/B20TnOnv6cg
GxRTdN4o2mgoIZ3Oy4Hqq64fzqEFn0HysCQXxOarQwb0ttejD9t2vgVTi4HH
29EP1sRceqTYCtKvH/+uRod6Dl5ao8oDr35wrwp9NzH6UGFtPkgct7070Ped
nx7Q7uDA/uvPBsrQbb0tAmsDF0Qj8V189C2z3hO1pwA2lF+e46D7zq14Z29z
Ibwx/lSejbYnqiId7UUQ/MB8LZP4P8zXkX6gGK6/zaeloRdm3T8PHtkGNaKU
80noRW2HOnwrD3piFOEM4t7DsM/tYzz4TznvpaFdG6eHXszng2/R5KaiaSnG
9ZWTfPDUU7vXoZNeO9WeVFQCP22fzY5F+9ssApK1BOcb1KvR7s05w+J8Acwb
h/2j0aM9ZL9UmwBq5tIMkei8wV+HVxUJIZzN7VyF7r+4IFTfE4LzD64+HM3Q
7D68UyYCdxXDGoZ+37u0gfeLCO7vauaFog27py6MV5TCrsev/LYS3aLr682Y
LYXV811nQ4g8dT5acpkYzAMSfTB6O6fNePGhGNjjcZoVaLIj/t0UhQQWTj89
8RyxL3iymfWnBL59prkShI46yTw2XSuFXordRSHu60+IpQtS6KzMKCQ8tO9V
SkN9Gaw87+kjE/9H2GJ1j8pg0n43jrD6TP86epMMZiMMxkB0ndc7UuCTgXVt
MJUwzVd+pWFfOdgq628EoC3/PjHF+sshYnJGTjjkC5P39n45KOt0IYS5az/w
LC/L4cf0mpsk9P/6Zap+
                    "]]}}}, {
                   DisplayFunction -> Identity, AspectRatio -> 1, 
                    Axes -> {False, False}, AxesLabel -> {None, None}, 
                    AxesOrigin -> {0, 0.9999}, DisplayFunction :> Identity, 
                    Frame -> {{True, True}, {True, True}}, 
                    FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                    Directive[
                    Opacity[0.5], 
                    Thickness[Tiny], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    FrameTicks -> {{None, None}, {None, None}}, 
                    GridLines -> {None, None}, GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> 
                    Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}], 
                    Method -> {
                    "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
                    AbsolutePointSize[6], "ScalingFunctions" -> None}, 
                    PlotRange -> {{0., 120.}, {1.00000000203389, 
                    1.0008876598393224`}}, PlotRangeClipping -> True, 
                    PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
                  GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "120.`"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                   BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}], True -> GridBox[{{
                  PaneBox[
                   ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquareMinusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                   Alignment -> {Center, Center}, ImageSize -> 
                   Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                  GraphicsBox[{{{}, {}, {
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1]], 
                    LineBox[CompressedData["
1:eJwVz31Q0wUYB3AYbCR4EBgEGmLM3IpRIPKibOwJSNh4cWMb2xgbOAUTZGAU
5Q5m4pBJMAttOskSZydv00wmYpoiUIHLzYbZeQV2dMUfeK4t27Qd9Pz+eO65
z93z3PN8X1bWl1SR/Pz8mFhE97wUVDseNpbVPfERysnWsu4xvyxcZisyGN2q
ACfb7Mycshc/D1pzxfdn0O+pumb0W6LBItNekKF5xQm0Q0tx8ELHsa9C0SNF
nVGa1PUgIAtTb5Kc7INKunKCSocadexcC/rvxD1B3GoGfDzAcjHRmyIT6E3c
JBgdbO8NQB+ZdjmtrI1wPF0kdfg72ZkyfXWObBNUVLVFnUVTTM0f3hCmwSlL
B7cZXRqQtcjJzQDG0SqnBO3JcgT+I98Cre5POGnoy8nfjJkETNAttcbFoL9b
bkpobMyCYPK1oz7Mm+hubezLBZhxWCrm0ZRbjdSTrDfhrwl+/B20TnOnv6cg
GxRTdN4o2mgoIZ3Oy4Hqq64fzqEFn0HysCQXxOarQwb0ttejD9t2vgVTi4HH
29EP1sRceqTYCtKvH/+uRod6Dl5ao8oDr35wrwp9NzH6UGFtPkgct7070Ped
nx7Q7uDA/uvPBsrQbb0tAmsDF0Qj8V189C2z3hO1pwA2lF+e46D7zq14Z29z
Ibwx/lSejbYnqiId7UUQ/MB8LZP4P8zXkX6gGK6/zaeloRdm3T8PHtkGNaKU
80noRW2HOnwrD3piFOEM4t7DsM/tYzz4TznvpaFdG6eHXszng2/R5KaiaSnG
9ZWTfPDUU7vXoZNeO9WeVFQCP22fzY5F+9ssApK1BOcb1KvR7s05w+J8Acwb
h/2j0aM9ZL9UmwBq5tIMkei8wV+HVxUJIZzN7VyF7r+4IFTfE4LzD64+HM3Q
7D68UyYCdxXDGoZ+37u0gfeLCO7vauaFog27py6MV5TCrsev/LYS3aLr682Y
LYXV811nQ4g8dT5acpkYzAMSfTB6O6fNePGhGNjjcZoVaLIj/t0UhQQWTj89
8RyxL3iymfWnBL59prkShI46yTw2XSuFXordRSHu60+IpQtS6KzMKCQ8tO9V
SkN9Gaw87+kjE/9H2GJ1j8pg0n43jrD6TP86epMMZiMMxkB0ndc7UuCTgXVt
MJUwzVd+pWFfOdgq628EoC3/PjHF+sshYnJGTjjkC5P39n45KOt0IYS5az/w
LC/L4cf0mpsk9P/6Zap+
                    "]]}}}, {
                   DisplayFunction -> Identity, AspectRatio -> 1, 
                    Axes -> {False, False}, AxesLabel -> {None, None}, 
                    AxesOrigin -> {0, 0.9999}, DisplayFunction :> Identity, 
                    Frame -> {{True, True}, {True, True}}, 
                    FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                    Directive[
                    Opacity[0.5], 
                    Thickness[Tiny], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    FrameTicks -> {{None, None}, {None, None}}, 
                    GridLines -> {None, None}, GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> 
                    Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}], 
                    Method -> {
                    "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
                    AbsolutePointSize[6], "ScalingFunctions" -> None}, 
                    PlotRange -> {{0., 120.}, {1.00000000203389, 
                    1.0008876598393224`}}, PlotRangeClipping -> True, 
                    PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
                  GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "120.`"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Order: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Hermite\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Periodic: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["False", "SummaryItem"]}]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                   BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}]}, 
             Dynamic[Typeset`open$$], ImageSize -> Automatic], 
            BaselinePosition -> Baseline], DynamicModuleValues :> {}], 
          StyleBox["]", "NonInterpretableSummary"]}]},
       "CopyTag",
       DisplayFunction->(#& ),
       InterpretationFunction->("InterpolatingFunction[{{0., 120.}}, <>]"& )],
      False,
      Editable->False,
      SelectWithContents->True,
      Selectable->False]}], ",", 
    RowBox[{"X2", "\[Rule]", 
     TagBox[
      TemplateBox[{RowBox[{
          StyleBox[
           TagBox["InterpolatingFunction", "SummaryHead"], 
           "NonInterpretableSummary"], 
          StyleBox["[", "NonInterpretableSummary"], 
          DynamicModuleBox[{Typeset`open$$ = False}, 
           PanelBox[
            PaneSelectorBox[{False -> GridBox[{{
                  PaneBox[
                   ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquarePlusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                   Alignment -> {Center, Center}, ImageSize -> 
                   Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                  GraphicsBox[{{{}, {}, {
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1]], 
                    LineBox[CompressedData["
1:eJwBwQM+/CFib1JlAgAAADsAAAACAAAApJfSL/OtCkAxaekQsBb6Pq3wO8nQ
ThBAmOgRgfQi+r51bo3UjjoYQGiiSEMN5wO/UE4rJ4b+H0C1WJWhH3QDv7dN
jBZ+NSRAIjxIOSS5Ab+DYihixCMoQKvjJJlDEAC/8S1sB0pmLEA1RTcgCeL8
vjQVKyh2SjBA5+okShH9+b6PyvLwzD0yQJyTdZ2ljve+O1uOZkNbNECyAIa4
piz1vgajfIC/VDZAZ8XSUy0r875WAz7sSUQ4QKKwzDb6YvG+9z7TBPRdOkCA
9IRqt0fvvrYxu8GjUzxAE2Id0Q5X7L7G/3Yrc3M+QDOUwOhadum+LfOCc6hE
QEC/RK1O7evmvgbCcyOaPUFAnBQnScjH5L6Ifs6pm0tCQFtwUMRyruK+mZZS
AqBHQ0Ah0X6NF+rgvlOcQDG0WERANb23FAth3r5PLhiJz2RFQKL1/bxxVtu+
2hsZs+1eRkD+yZ+gjsbYvg73g7MbbkdAOLXHS4tE1r7RLRiGTGtIQOxXBpgG
KNS+1/CVgYRjSUAt4N+3zUfSvoWhfVPMcEpABltT2kBx0L7CrY73FmxLQDPs
S+T3yc2+qKcJcnF8TEA15iXWC8PKvtAtbhXTh01AWl3fq6AWyL6ID/yKN4FO
QJKmylVA1sW+6N7z1quPT0BwbIyWQ6HDvuyEinoRRlBAbLuVtBrFwb6F4A+e
0MFQQFuKaqVQHsC+8jLKrBdIUUDihWmkj/68viczmSRgxVFAAHNM3oxEur4w
Kp2HME1SQCJ0B0c+mbe+Ac+1UwLMUkAEeHYWr1q1vvM5Q7RXSFNAuwweB2Vc
s765mwUANc9TQNru3WvJaLG+R6vctBNNVEBoLsTAuoevvqmx6FR61VRAtty1
fR9RrL4sfmmJZFtVQGjCJhoZe6m+d/j+JlDYVUAg/p43rRanvpZpya/DX1ZA
FV0zELm/pL59iKihON5WQHKpeE+Fx6K+hW38JzFaV0Bg7GkwyAahvmFJhZmx
4FdAeaj+Q2Wfnr4F0yJ0M15YQF4r3KotvJu+fVP1OT3mWEDrbfSeBuiYvhaa
PJTKa1lAzZQ+cVBqlr53jphXWehZQIM+4F/mUJS+rHkpBnBvWkANGiBQQkKS
vqkSzx2I7VpA08s5kdSHkL56oqkgKHZbQFyimYGbrY2+bfj4t0v8W0BNyTId
w7CKvif8XLhweVxABihaEyEuiL619vWjHQFdQPVRtUJnuIW+C5+j+Mt/XUC7
UaOHbaWDvkoeePf//11AQ5RhLMfAgb7MNs6k
                    "]]}}}, {
                   DisplayFunction -> Identity, AspectRatio -> 1, 
                    Axes -> {False, False}, AxesLabel -> {None, None}, 
                    AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
                    Frame -> {{True, True}, {True, True}}, 
                    FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                    Directive[
                    Opacity[0.5], 
                    Thickness[Tiny], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    FrameTicks -> {{None, None}, {None, None}}, 
                    GridLines -> {None, None}, GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> 
                    Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}], 
                    Method -> {
                    "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
                    AbsolutePointSize[6], "ScalingFunctions" -> None}, 
                    PlotRange -> {{0., 120.}, {-0.00003796109414039712, 
                    0.00002488005071153119}}, PlotRangeClipping -> True, 
                    PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
                  GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "120.`"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                   BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}], True -> GridBox[{{
                  PaneBox[
                   ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquareMinusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                   Alignment -> {Center, Center}, ImageSize -> 
                   Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                  GraphicsBox[{{{}, {}, {
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1]], 
                    LineBox[CompressedData["
1:eJwBwQM+/CFib1JlAgAAADsAAAACAAAApJfSL/OtCkAxaekQsBb6Pq3wO8nQ
ThBAmOgRgfQi+r51bo3UjjoYQGiiSEMN5wO/UE4rJ4b+H0C1WJWhH3QDv7dN
jBZ+NSRAIjxIOSS5Ab+DYihixCMoQKvjJJlDEAC/8S1sB0pmLEA1RTcgCeL8
vjQVKyh2SjBA5+okShH9+b6PyvLwzD0yQJyTdZ2ljve+O1uOZkNbNECyAIa4
piz1vgajfIC/VDZAZ8XSUy0r875WAz7sSUQ4QKKwzDb6YvG+9z7TBPRdOkCA
9IRqt0fvvrYxu8GjUzxAE2Id0Q5X7L7G/3Yrc3M+QDOUwOhadum+LfOCc6hE
QEC/RK1O7evmvgbCcyOaPUFAnBQnScjH5L6Ifs6pm0tCQFtwUMRyruK+mZZS
AqBHQ0Ah0X6NF+rgvlOcQDG0WERANb23FAth3r5PLhiJz2RFQKL1/bxxVtu+
2hsZs+1eRkD+yZ+gjsbYvg73g7MbbkdAOLXHS4tE1r7RLRiGTGtIQOxXBpgG
KNS+1/CVgYRjSUAt4N+3zUfSvoWhfVPMcEpABltT2kBx0L7CrY73FmxLQDPs
S+T3yc2+qKcJcnF8TEA15iXWC8PKvtAtbhXTh01AWl3fq6AWyL6ID/yKN4FO
QJKmylVA1sW+6N7z1quPT0BwbIyWQ6HDvuyEinoRRlBAbLuVtBrFwb6F4A+e
0MFQQFuKaqVQHsC+8jLKrBdIUUDihWmkj/68viczmSRgxVFAAHNM3oxEur4w
Kp2HME1SQCJ0B0c+mbe+Ac+1UwLMUkAEeHYWr1q1vvM5Q7RXSFNAuwweB2Vc
s765mwUANc9TQNru3WvJaLG+R6vctBNNVEBoLsTAuoevvqmx6FR61VRAtty1
fR9RrL4sfmmJZFtVQGjCJhoZe6m+d/j+JlDYVUAg/p43rRanvpZpya/DX1ZA
FV0zELm/pL59iKihON5WQHKpeE+Fx6K+hW38JzFaV0Bg7GkwyAahvmFJhZmx
4FdAeaj+Q2Wfnr4F0yJ0M15YQF4r3KotvJu+fVP1OT3mWEDrbfSeBuiYvhaa
PJTKa1lAzZQ+cVBqlr53jphXWehZQIM+4F/mUJS+rHkpBnBvWkANGiBQQkKS
vqkSzx2I7VpA08s5kdSHkL56oqkgKHZbQFyimYGbrY2+bfj4t0v8W0BNyTId
w7CKvif8XLhweVxABihaEyEuiL619vWjHQFdQPVRtUJnuIW+C5+j+Mt/XUC7
UaOHbaWDvkoeePf//11AQ5RhLMfAgb7MNs6k
                    "]]}}}, {
                   DisplayFunction -> Identity, AspectRatio -> 1, 
                    Axes -> {False, False}, AxesLabel -> {None, None}, 
                    AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
                    Frame -> {{True, True}, {True, True}}, 
                    FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                    Directive[
                    Opacity[0.5], 
                    Thickness[Tiny], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    FrameTicks -> {{None, None}, {None, None}}, 
                    GridLines -> {None, None}, GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> 
                    Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}], 
                    Method -> {
                    "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
                    AbsolutePointSize[6], "ScalingFunctions" -> None}, 
                    PlotRange -> {{0., 120.}, {-0.00003796109414039712, 
                    0.00002488005071153119}}, PlotRangeClipping -> True, 
                    PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
                  GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "120.`"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Order: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Hermite\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Periodic: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["False", "SummaryItem"]}]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                   BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}]}, 
             Dynamic[Typeset`open$$], ImageSize -> Automatic], 
            BaselinePosition -> Baseline], DynamicModuleValues :> {}], 
          StyleBox["]", "NonInterpretableSummary"]}]},
       "CopyTag",
       DisplayFunction->(#& ),
       InterpretationFunction->("InterpolatingFunction[{{0., 120.}}, <>]"& )],
      False,
      Editable->False,
      SelectWithContents->True,
      Selectable->False]}], ",", 
    RowBox[{"X3", "\[Rule]", 
     TagBox[
      TemplateBox[{RowBox[{
          StyleBox[
           TagBox["InterpolatingFunction", "SummaryHead"], 
           "NonInterpretableSummary"], 
          StyleBox["[", "NonInterpretableSummary"], 
          DynamicModuleBox[{Typeset`open$$ = False}, 
           PanelBox[
            PaneSelectorBox[{False -> GridBox[{{
                  PaneBox[
                   ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquarePlusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                   Alignment -> {Center, Center}, ImageSize -> 
                   Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                  GraphicsBox[{{{}, {}, {
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1]], 
                    
                    LineBox[{{
                    2.0338983050847454`*^-6, -1.1245249796610997`}, {
                    0.000041297218252332115`, -1.1245249496541363`}}], 
                    LineBox[CompressedData["
1:eJwlzX0s1HEcB/BzYpU8ndHFPHTkVK6RnhT65JnzeD8czumBMvPcNWJo5OHY
Ulse8lQh6y4kc5S1aRRbR45ZslYYxSXqJN39cZ36fb9/fPbZa+/3Z5/9lzI4
l6kUCsXp/5C7+WzqnTWpK5jLHs3razZeKT2md/zmn4afZYOLpPudXw61EW4w
S/+xRHp0O/uwQOABVlTaV9KszWKByBugX5+2Qlp3WGDb4H4OaPPzyMLCCXEj
2xOejinkpOtrOdSHfl5QvPPNN9JEEzhLor1BupS0Sjr0CL1ClugDPvoa5I8W
+3rX431Buhr6nbSB8mavRbofTHm0I0+x6GVBKf5QZ6tA/qCoKSpJCIAzNsfW
SJe2FBDjmYHAUfOQh7uqlGapbOg2zUcWPd51NSs/CMy3GpAnWemm0+XBkBA5
gCw0VFeeLAoBa8UEsnxuc6bjdijw674gr5VU5hn7hsGI9gb+t2B4f3IoDAqb
VMi/jko79/qHA9eAsk6a6VJvd2EkHKKu6CI7HWoudwrmgIi3B1lL1kdQxzng
+MQEedPVS8L1J6CRSUceaNShHJcREPLZHNmv45PEJDgCChhWyOIeeUTe+whY
9LRBdixMrkjkRYJRpTVyjkpjHzYbCe23cF6b/Lb79fkoqBExkAuEopZTc1Fw
l2WHXJqmZjrHcuGZ9gHkiwGl9T0LXKj+i60zzbjmEh8N7zT2+J7YcnVfjobW
ZCayWYNbtTQlBoyNsHOq7nFj5DHAWcH9ztyDupkZsXDCBedimsxSuB4LM1XY
ea1iG4dsHuzuwk5TqZ6z1TzIkmAz1XEvMnPjIGkZu+/PVpulFh8G9RyQ9R60
qcZu8IGtxHmg1XXl9jYfRvuw/wG65Zzx
                    "]], 
                    
                    LineBox[{{3.359425480065624, -1.1245249496541363`}, {
                    3.3595010693090046`, -1.1245250301879328`}}], 
                    
                    LineBox[{{5.4214002351933015`, -1.1245250301879328`}, {
                    5.421541878716172, -1.1245249496541363`}}], 
                    
                    LineBox[{{7.494932590368625, -1.1245249496541363`}, {
                    7.495252970477267, -1.1245250301879328`}}], 
                    
                    LineBox[{{9.648517778967417, -1.1245250301879328`}, {
                    9.649568063390024, -1.1245249496541363`}}], 
                    
                    LineBox[{{11.845207574923238`, -1.1245249496541363`}, {
                    11.849226531278225`, -1.1245250301879328`}}], 
                    
                    LineBox[{{14.561795667947974`, -1.1245250301879328`}, {
                    14.69043726762451, -1.1245249496541363`}}], 
                    
                    LineBox[{{17.47592339223619, -1.1245249496541363`}, {
                    17.571177746826077`, -1.1245250301879328`}}], 
                    
                    LineBox[{{19.493125797369316`, -1.1245250301879328`}, {
                    19.671022064856853`, -1.1245249496541363`}}], 
                    
                    LineBox[{{21.893382487254296`, -1.1245249496541363`}, {
                    22.292238902563394`, -1.1245250301879328`}}], 
                    LineBox[{{22.458447455255666`, -1.1245250301879328`}, {
                    23.767822132688387`, -1.1245249496541363`}}]}}}, {
                   DisplayFunction -> Identity, AspectRatio -> 1, 
                    Axes -> {False, False}, AxesLabel -> {None, None}, 
                    AxesOrigin -> {0, -1.12452504}, DisplayFunction :> 
                    Identity, Frame -> {{True, True}, {True, True}}, 
                    FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                    Directive[
                    Opacity[0.5], 
                    Thickness[Tiny], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    FrameTicks -> {{None, None}, {None, None}}, 
                    GridLines -> {None, None}, GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> 
                    Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}], 
                    Method -> {
                    "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
                    AbsolutePointSize[6], "ScalingFunctions" -> None}, 
                    PlotRange -> {{0., 
                    120.}, {-1.1245250301879328`, -1.1245249496541363`}}, 
                    PlotRangeClipping -> True, PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
                  GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "120.`"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                   BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}], True -> GridBox[{{
                  PaneBox[
                   ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquareMinusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                   Alignment -> {Center, Center}, ImageSize -> 
                   Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                  GraphicsBox[{{{}, {}, {
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1]], 
                    
                    LineBox[{{
                    2.0338983050847454`*^-6, -1.1245249796610997`}, {
                    0.000041297218252332115`, -1.1245249496541363`}}], 
                    LineBox[CompressedData["
1:eJwlzX0s1HEcB/BzYpU8ndHFPHTkVK6RnhT65JnzeD8czumBMvPcNWJo5OHY
Ulse8lQh6y4kc5S1aRRbR45ZslYYxSXqJN39cZ36fb9/fPbZa+/3Z5/9lzI4
l6kUCsXp/5C7+WzqnTWpK5jLHs3razZeKT2md/zmn4afZYOLpPudXw61EW4w
S/+xRHp0O/uwQOABVlTaV9KszWKByBugX5+2Qlp3WGDb4H4OaPPzyMLCCXEj
2xOejinkpOtrOdSHfl5QvPPNN9JEEzhLor1BupS0Sjr0CL1ClugDPvoa5I8W
+3rX431Buhr6nbSB8mavRbofTHm0I0+x6GVBKf5QZ6tA/qCoKSpJCIAzNsfW
SJe2FBDjmYHAUfOQh7uqlGapbOg2zUcWPd51NSs/CMy3GpAnWemm0+XBkBA5
gCw0VFeeLAoBa8UEsnxuc6bjdijw674gr5VU5hn7hsGI9gb+t2B4f3IoDAqb
VMi/jko79/qHA9eAsk6a6VJvd2EkHKKu6CI7HWoudwrmgIi3B1lL1kdQxzng
+MQEedPVS8L1J6CRSUceaNShHJcREPLZHNmv45PEJDgCChhWyOIeeUTe+whY
9LRBdixMrkjkRYJRpTVyjkpjHzYbCe23cF6b/Lb79fkoqBExkAuEopZTc1Fw
l2WHXJqmZjrHcuGZ9gHkiwGl9T0LXKj+i60zzbjmEh8N7zT2+J7YcnVfjobW
ZCayWYNbtTQlBoyNsHOq7nFj5DHAWcH9ztyDupkZsXDCBedimsxSuB4LM1XY
ea1iG4dsHuzuwk5TqZ6z1TzIkmAz1XEvMnPjIGkZu+/PVpulFh8G9RyQ9R60
qcZu8IGtxHmg1XXl9jYfRvuw/wG65Zzx
                    "]], 
                    
                    LineBox[{{3.359425480065624, -1.1245249496541363`}, {
                    3.3595010693090046`, -1.1245250301879328`}}], 
                    
                    LineBox[{{5.4214002351933015`, -1.1245250301879328`}, {
                    5.421541878716172, -1.1245249496541363`}}], 
                    
                    LineBox[{{7.494932590368625, -1.1245249496541363`}, {
                    7.495252970477267, -1.1245250301879328`}}], 
                    
                    LineBox[{{9.648517778967417, -1.1245250301879328`}, {
                    9.649568063390024, -1.1245249496541363`}}], 
                    
                    LineBox[{{11.845207574923238`, -1.1245249496541363`}, {
                    11.849226531278225`, -1.1245250301879328`}}], 
                    
                    LineBox[{{14.561795667947974`, -1.1245250301879328`}, {
                    14.69043726762451, -1.1245249496541363`}}], 
                    
                    LineBox[{{17.47592339223619, -1.1245249496541363`}, {
                    17.571177746826077`, -1.1245250301879328`}}], 
                    
                    LineBox[{{19.493125797369316`, -1.1245250301879328`}, {
                    19.671022064856853`, -1.1245249496541363`}}], 
                    
                    LineBox[{{21.893382487254296`, -1.1245249496541363`}, {
                    22.292238902563394`, -1.1245250301879328`}}], 
                    
                    LineBox[{{22.458447455255666`, -1.1245250301879328`}, {
                    23.767822132688387`, -1.1245249496541363`}}]}}}, {
                   DisplayFunction -> Identity, AspectRatio -> 1, 
                    Axes -> {False, False}, AxesLabel -> {None, None}, 
                    AxesOrigin -> {0, -1.12452504}, DisplayFunction :> 
                    Identity, Frame -> {{True, True}, {True, True}}, 
                    FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                    Directive[
                    Opacity[0.5], 
                    Thickness[Tiny], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    FrameTicks -> {{None, None}, {None, None}}, 
                    GridLines -> {None, None}, GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> 
                    Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}], 
                    Method -> {
                    "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
                    AbsolutePointSize[6], "ScalingFunctions" -> None}, 
                    PlotRange -> {{0., 
                    120.}, {-1.1245250301879328`, -1.1245249496541363`}}, 
                    PlotRangeClipping -> True, PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
                  GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "120.`"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Order: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Hermite\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Periodic: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["False", "SummaryItem"]}]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                   BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}]}, 
             Dynamic[Typeset`open$$], ImageSize -> Automatic], 
            BaselinePosition -> Baseline], DynamicModuleValues :> {}], 
          StyleBox["]", "NonInterpretableSummary"]}]},
       "CopyTag",
       DisplayFunction->(#& ),
       InterpretationFunction->("InterpolatingFunction[{{0., 120.}}, <>]"& )],
      False,
      Editable->False,
      SelectWithContents->True,
      Selectable->False]}], ",", 
    RowBox[{"X4", "\[Rule]", 
     TagBox[
      TemplateBox[{RowBox[{
          StyleBox[
           TagBox["InterpolatingFunction", "SummaryHead"], 
           "NonInterpretableSummary"], 
          StyleBox["[", "NonInterpretableSummary"], 
          DynamicModuleBox[{Typeset`open$$ = False}, 
           PanelBox[
            PaneSelectorBox[{False -> GridBox[{{
                  PaneBox[
                   ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquarePlusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                   Alignment -> {Center, Center}, ImageSize -> 
                   Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                  GraphicsBox[{{{}, {}, {
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1]], 
                    LineBox[CompressedData["
1:eJwB4QIe/SFib1JlAgAAAC0AAAACAAAAIBN3UateP0C5iuAjrmMwvi3zgnOo
REBAZICXfBNhF74GwnMjmj1BQK4jlcDplB++iH7OqZtLQkDilYrRd7wgvpmW
UgKgR0NAIhRVqivoFb5TnEAxtFhEQDflGQrvehC+Ty4Yic9kRUBirVxFdAUG
vtobGbPtXkZA7PNxUgZA9r0O94OzG25HQF74CCOy0g++0S0YhkxrSED4E9Zz
WSAMvtfwlYGEY0lAjw2rP9zM972FoX1TzHBKQEA8LFd7v+a9wq2O9xZsS0DE
PhlbJyLqvainCXJxfExACA2kt6pF8L3QLW4V04dNQGiKJq34UvO9iA/8ijeB
TkB+kdevJAnxveje89arj09Adu8BLefV073shIp6EUZQQKoFNxUn19m9heAP
ntDBUEDIkoDDDxaVPfIyyqwXSFFAItBXfjAmvb0nM5kkYMVRQLGJaksnG9K9
MCqdhzBNUkD+v/bwARzUvQHPtVMCzFJAnsPVQBBUy73zOUO0V0hTQGy+w3Hn
PsO9uZsFADXPU0AUVmN/09qHPUer3LQTTVRA3DRGblTcuz2psehUetVUQDa0
6p7OSrc9LH5piWRbVUAAq2SQs4hbvXf4/iZQ2FVAeox8fykjlb2Wacmvw19W
QOj10I6itae9fYiooTjeVkDzjqcYjVa7vYVt/CcxWldAOPFROkRRvb1hSYWZ
seBXQIhM5CTPKKe9BdMidDNeWED6HDnbkZacPX1T9Tk95lhANUYYoUvJoj0W
mjyUymtZQF5vbaU76ZA9d46YV1noWUCUWNsx2imJPax5KQZwb1pAOkaCONTF
gD2pEs8diO1aQNoBCBj/LJi9eqKpICh2W0DCYpYNn+mivW34+LdL/FtAAP/J
+2tuhL0n/Fy4cHlcQHwcqwConKc9tfb1ox0BXUDUeye3xaSwPQufo/jLf11A
SIeL/UFdlT1KHnj3//9dQKqPzmP187G96ARaNA==
                    "]], 
                    
                    LineBox[{{1.4027613140583801`, 2.312301372682372*^-9}, {
                    1.4027621737063276`, -3.8159489440125585`*^-9}}], 
                    
                    LineBox[{{
                    3.5816813401414995`, -3.8159489440125585`*^-9}, {
                    3.581683864905987, 2.312301372682372*^-9}}], 
                    
                    LineBox[{{5.708213295365023, 2.312301372682372*^-9}, {
                    5.708221610807242, -3.8159489440125585`*^-9}}], 
                    
                    LineBox[{{8.582362914692732, -3.8159489440125585`*^-9}, {
                    8.582706441859916, 2.312301372682372*^-9}}], 
                    
                    LineBox[{{11.215786144864087`, 2.312301372682372*^-9}, {
                    11.216037013513967`, -3.8159489440125585`*^-9}}], 
                    
                    LineBox[{{
                    13.586045233047827`, -3.8159489440125585`*^-9}, {
                    13.586490717623338`, 2.312301372682372*^-9}}], 
                    LineBox[{{15.726916854872007`, 2.312301372682372*^-9}, {
                    15.728026136281711`, -3.8159489440125585`*^-9}}], 
                    
                    LineBox[{{17.78848442742906, -3.8159489440125585`*^-9}, {
                    17.79143603533175, 2.312301372682372*^-9}}], 
                    
                    LineBox[{{19.92220902375454, 2.312301372682372*^-9}, {
                    19.933234288257395`, -3.8159489440125585`*^-9}}], 
                    
                    LineBox[{{
                    22.254903981358794`, -3.8159489440125585`*^-9}, {
                    22.304354184095363`, 2.312301372682372*^-9}}], 
                    
                    LineBox[{{25.248183037628866`, 2.312301372682372*^-9}, {
                    25.554378763001623`, -3.8159489440125585`*^-9}}], 
                    
                    LineBox[{{27.68407576862853, -3.8159489440125585`*^-9}, {
                    28.180345364763205`, 2.312301372682372*^-9}}], 
                    
                    LineBox[{{28.715756120280027`, 2.312301372682372*^-9}, {
                    30.034778181039755`, -3.8159489440125585`*^-9}}]}}}, {
                   DisplayFunction -> Identity, AspectRatio -> 1, 
                    Axes -> {False, False}, AxesLabel -> {None, None}, 
                    AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
                    Frame -> {{True, True}, {True, True}}, 
                    FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                    Directive[
                    Opacity[0.5], 
                    Thickness[Tiny], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    FrameTicks -> {{None, None}, {None, None}}, 
                    GridLines -> {None, None}, GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> 
                    Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}], 
                    Method -> {
                    "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
                    AbsolutePointSize[6], "ScalingFunctions" -> None}, 
                    PlotRange -> {{0., 120.}, {-3.8159489440125585`*^-9, 
                    2.312301372682372*^-9}}, PlotRangeClipping -> True, 
                    PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
                  GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "120.`"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                   BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}], True -> GridBox[{{
                  PaneBox[
                   ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquareMinusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                   Alignment -> {Center, Center}, ImageSize -> 
                   Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                  GraphicsBox[{{{}, {}, {
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1]], 
                    LineBox[CompressedData["
1:eJwB4QIe/SFib1JlAgAAAC0AAAACAAAAIBN3UateP0C5iuAjrmMwvi3zgnOo
REBAZICXfBNhF74GwnMjmj1BQK4jlcDplB++iH7OqZtLQkDilYrRd7wgvpmW
UgKgR0NAIhRVqivoFb5TnEAxtFhEQDflGQrvehC+Ty4Yic9kRUBirVxFdAUG
vtobGbPtXkZA7PNxUgZA9r0O94OzG25HQF74CCOy0g++0S0YhkxrSED4E9Zz
WSAMvtfwlYGEY0lAjw2rP9zM972FoX1TzHBKQEA8LFd7v+a9wq2O9xZsS0DE
PhlbJyLqvainCXJxfExACA2kt6pF8L3QLW4V04dNQGiKJq34UvO9iA/8ijeB
TkB+kdevJAnxveje89arj09Adu8BLefV073shIp6EUZQQKoFNxUn19m9heAP
ntDBUEDIkoDDDxaVPfIyyqwXSFFAItBXfjAmvb0nM5kkYMVRQLGJaksnG9K9
MCqdhzBNUkD+v/bwARzUvQHPtVMCzFJAnsPVQBBUy73zOUO0V0hTQGy+w3Hn
PsO9uZsFADXPU0AUVmN/09qHPUer3LQTTVRA3DRGblTcuz2psehUetVUQDa0
6p7OSrc9LH5piWRbVUAAq2SQs4hbvXf4/iZQ2FVAeox8fykjlb2Wacmvw19W
QOj10I6itae9fYiooTjeVkDzjqcYjVa7vYVt/CcxWldAOPFROkRRvb1hSYWZ
seBXQIhM5CTPKKe9BdMidDNeWED6HDnbkZacPX1T9Tk95lhANUYYoUvJoj0W
mjyUymtZQF5vbaU76ZA9d46YV1noWUCUWNsx2imJPax5KQZwb1pAOkaCONTF
gD2pEs8diO1aQNoBCBj/LJi9eqKpICh2W0DCYpYNn+mivW34+LdL/FtAAP/J
+2tuhL0n/Fy4cHlcQHwcqwConKc9tfb1ox0BXUDUeye3xaSwPQufo/jLf11A
SIeL/UFdlT1KHnj3//9dQKqPzmP187G96ARaNA==
                    "]], 
                    
                    LineBox[{{1.4027613140583801`, 2.312301372682372*^-9}, {
                    1.4027621737063276`, -3.8159489440125585`*^-9}}], 
                    
                    LineBox[{{
                    3.5816813401414995`, -3.8159489440125585`*^-9}, {
                    3.581683864905987, 2.312301372682372*^-9}}], 
                    
                    LineBox[{{5.708213295365023, 2.312301372682372*^-9}, {
                    5.708221610807242, -3.8159489440125585`*^-9}}], 
                    
                    LineBox[{{8.582362914692732, -3.8159489440125585`*^-9}, {
                    8.582706441859916, 2.312301372682372*^-9}}], 
                    
                    LineBox[{{11.215786144864087`, 2.312301372682372*^-9}, {
                    11.216037013513967`, -3.8159489440125585`*^-9}}], 
                    
                    LineBox[{{
                    13.586045233047827`, -3.8159489440125585`*^-9}, {
                    13.586490717623338`, 2.312301372682372*^-9}}], 
                    
                    LineBox[{{15.726916854872007`, 2.312301372682372*^-9}, {
                    15.728026136281711`, -3.8159489440125585`*^-9}}], 
                    
                    LineBox[{{17.78848442742906, -3.8159489440125585`*^-9}, {
                    17.79143603533175, 2.312301372682372*^-9}}], 
                    
                    LineBox[{{19.92220902375454, 2.312301372682372*^-9}, {
                    19.933234288257395`, -3.8159489440125585`*^-9}}], 
                    
                    LineBox[{{
                    22.254903981358794`, -3.8159489440125585`*^-9}, {
                    22.304354184095363`, 2.312301372682372*^-9}}], 
                    
                    LineBox[{{25.248183037628866`, 2.312301372682372*^-9}, {
                    25.554378763001623`, -3.8159489440125585`*^-9}}], 
                    
                    LineBox[{{27.68407576862853, -3.8159489440125585`*^-9}, {
                    28.180345364763205`, 2.312301372682372*^-9}}], 
                    
                    LineBox[{{28.715756120280027`, 2.312301372682372*^-9}, {
                    30.034778181039755`, -3.8159489440125585`*^-9}}]}}}, {
                   DisplayFunction -> Identity, AspectRatio -> 1, 
                    Axes -> {False, False}, AxesLabel -> {None, None}, 
                    AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
                    Frame -> {{True, True}, {True, True}}, 
                    FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                    Directive[
                    Opacity[0.5], 
                    Thickness[Tiny], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    FrameTicks -> {{None, None}, {None, None}}, 
                    GridLines -> {None, None}, GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> 
                    Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}], 
                    Method -> {
                    "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
                    AbsolutePointSize[6], "ScalingFunctions" -> None}, 
                    PlotRange -> {{0., 120.}, {-3.8159489440125585`*^-9, 
                    2.312301372682372*^-9}}, PlotRangeClipping -> True, 
                    PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
                  GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "120.`"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Order: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Hermite\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Periodic: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["False", "SummaryItem"]}]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                   BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}]}, 
             Dynamic[Typeset`open$$], ImageSize -> Automatic], 
            BaselinePosition -> Baseline], DynamicModuleValues :> {}], 
          StyleBox["]", "NonInterpretableSummary"]}]},
       "CopyTag",
       DisplayFunction->(#& ),
       InterpretationFunction->("InterpolatingFunction[{{0., 120.}}, <>]"& )],
      False,
      Editable->False,
      SelectWithContents->True,
      Selectable->False]}], ",", 
    RowBox[{"X5", "\[Rule]", 
     TagBox[
      TemplateBox[{RowBox[{
          StyleBox[
           TagBox["InterpolatingFunction", "SummaryHead"], 
           "NonInterpretableSummary"], 
          StyleBox["[", "NonInterpretableSummary"], 
          DynamicModuleBox[{Typeset`open$$ = False}, 
           PanelBox[
            PaneSelectorBox[{False -> GridBox[{{
                  PaneBox[
                   ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquarePlusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                   Alignment -> {Center, Center}, ImageSize -> 
                   Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                  GraphicsBox[{{{}, {}, {
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1]], 
                    
                    LineBox[{{2.0338983050847454`*^-6, 
                    2.033889811756723*^-9}, {
                    0.4614647142505981, -8.6413326644472*^-7}}], 
                    
                    LineBox[{{9.614646471043196, 1.4771800669755223`*^-6}, {
                    10.104477600695516`, 3.3192378264453556`*^-7}, {
                    11.509101437926383`, 1.4771800669755223`*^-6}}], 
                    LineBox[CompressedData["
1:eJwBcQOO/CFib1JlAgAAADYAAAACAAAAOmhFZ4DuKkCYCvOocMi4PvEtbAdK
ZixAllMWOvq/tD40FSsodkowQH1j6kBiM7M+j8ry8Mw9MkAvz0QbPRSyPjtb
jmZDWzRASKaR0M74rj4Go3yAv1Q2QCHCs9+Mja0+VgM+7ElEOEAJNj0ugUyr
Pvc+0wT0XTpA498mYEc8pz62MbvBo1M8QDqDVLnoq6U+xv92K3NzPkB735ML
2lijPi3zgnOoREBAF8IhQeRooT4GwnMjmj1BQLpUqcnYjJ8+iH7OqZtLQkAu
W/jfmF6cPpmWUgKgR0NArqwlwyWwmT5TnEAxtFhEQFN23aBjEpc+Ty4Yic9k
RUBA8ecjs8OUPtobGbPtXkZABFXU073Okj4O94OzG25HQL253GKe7pA+0S0Y
hkxrSEAhSf8jX6GOPtfwlYGEY0lAr5h+TcW7iz6FoX1TzHBKQHINQPLC+4g+
wq2O9xZsS0CXSs5dKJ+GPqinCXJxfExAbkelWidShD7QLW4V04dNQDpO1KM+
SYI+iA/8ijeBTkAM4/KKp5OAPuje89arj09AXwXKycTQfT7shIp6EUZQQNO5
Kbjs+no+heAPntDBUECwUui3BHx4PvIyyqwXSFFAik/HxT0Edj4nM5kkYMVR
QN2D6HCL8nM+MCqdhzBNUkBer3ahiutxPgHPtVMCzFJAWqYkVgE3cD7zOUO0
V0hTQMa5TKAXZ20+uZsFADXPU0DdAl13hXBqPker3LQTTVRAtfjxaDXxZz6p
sehUetVUQHw9RX+IgGU+LH5piWRbVUBSNJ9NbFljPnf4/iZQ2FVA+//MTl6I
YT6Wacmvw19WQJ+K0Obdgl8+fYiooTjeVkBImtUTA4VcPoVt/CcxWldA667l
fojbWT5hSYWZseBXQBxG3J7HQFc+BdMidDNeWEA5rE/NgA9VPn1T9Tk95lhA
tnExx57pUj4WmjyUymtZQFkslhlaBVE+d46YV1noWUALmybDhdpOPqx5KQZw
b1pALGE91rq6Sz6pEs8diO1aQP9vHW/QGkk+eqKpICh2W0DL80S9LIlGPm34
+LdL/FtAIkKo8mZERD4n/Fy4cHlcQIIXZuJyXEI+tfb1ox0BXUCa42kCR35A
Pgufo/jLf11A9uI7aB3WPT5KHnj3//9dQKzozvv69To+fOCOsQ==
                    "]], 
                    
                    LineBox[{{2.1720711368637504`, -8.6413326644472*^-7}, {
                    2.3522054512388992`, 1.4771800669755223`*^-6}}], 
                    
                    LineBox[{{5.508460620409517, 1.4771800669755223`*^-6}, {
                    5.657965740925556, -8.6413326644472*^-7}}], 
                    
                    LineBox[{{7.038238185379114, -8.6413326644472*^-7}, {
                    7.405635858793736, 1.4771800669755223`*^-6}}]}}}, {
                   DisplayFunction -> Identity, AspectRatio -> 1, 
                    Axes -> {False, False}, AxesLabel -> {None, None}, 
                    AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
                    Frame -> {{True, True}, {True, True}}, 
                    FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                    Directive[
                    Opacity[0.5], 
                    Thickness[Tiny], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    FrameTicks -> {{None, None}, {None, None}}, 
                    GridLines -> {None, None}, GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> 
                    Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}], 
                    Method -> {
                    "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
                    AbsolutePointSize[6], "ScalingFunctions" -> None}, 
                    PlotRange -> {{0., 120.}, {-8.6413326644472*^-7, 
                    1.4771800669755223`*^-6}}, PlotRangeClipping -> True, 
                    PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
                  GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "120.`"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                   BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}], True -> GridBox[{{
                  PaneBox[
                   ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquareMinusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                   Alignment -> {Center, Center}, ImageSize -> 
                   Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                  GraphicsBox[{{{}, {}, {
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1]], 
                    
                    LineBox[{{2.0338983050847454`*^-6, 
                    2.033889811756723*^-9}, {
                    0.4614647142505981, -8.6413326644472*^-7}}], 
                    
                    LineBox[{{9.614646471043196, 1.4771800669755223`*^-6}, {
                    10.104477600695516`, 3.3192378264453556`*^-7}, {
                    11.509101437926383`, 1.4771800669755223`*^-6}}], 
                    LineBox[CompressedData["
1:eJwBcQOO/CFib1JlAgAAADYAAAACAAAAOmhFZ4DuKkCYCvOocMi4PvEtbAdK
ZixAllMWOvq/tD40FSsodkowQH1j6kBiM7M+j8ry8Mw9MkAvz0QbPRSyPjtb
jmZDWzRASKaR0M74rj4Go3yAv1Q2QCHCs9+Mja0+VgM+7ElEOEAJNj0ugUyr
Pvc+0wT0XTpA498mYEc8pz62MbvBo1M8QDqDVLnoq6U+xv92K3NzPkB735ML
2lijPi3zgnOoREBAF8IhQeRooT4GwnMjmj1BQLpUqcnYjJ8+iH7OqZtLQkAu
W/jfmF6cPpmWUgKgR0NArqwlwyWwmT5TnEAxtFhEQFN23aBjEpc+Ty4Yic9k
RUBA8ecjs8OUPtobGbPtXkZABFXU073Okj4O94OzG25HQL253GKe7pA+0S0Y
hkxrSEAhSf8jX6GOPtfwlYGEY0lAr5h+TcW7iz6FoX1TzHBKQHINQPLC+4g+
wq2O9xZsS0CXSs5dKJ+GPqinCXJxfExAbkelWidShD7QLW4V04dNQDpO1KM+
SYI+iA/8ijeBTkAM4/KKp5OAPuje89arj09AXwXKycTQfT7shIp6EUZQQNO5
Kbjs+no+heAPntDBUECwUui3BHx4PvIyyqwXSFFAik/HxT0Edj4nM5kkYMVR
QN2D6HCL8nM+MCqdhzBNUkBer3ahiutxPgHPtVMCzFJAWqYkVgE3cD7zOUO0
V0hTQMa5TKAXZ20+uZsFADXPU0DdAl13hXBqPker3LQTTVRAtfjxaDXxZz6p
sehUetVUQHw9RX+IgGU+LH5piWRbVUBSNJ9NbFljPnf4/iZQ2FVA+//MTl6I
YT6Wacmvw19WQJ+K0Obdgl8+fYiooTjeVkBImtUTA4VcPoVt/CcxWldA667l
fojbWT5hSYWZseBXQBxG3J7HQFc+BdMidDNeWEA5rE/NgA9VPn1T9Tk95lhA
tnExx57pUj4WmjyUymtZQFkslhlaBVE+d46YV1noWUALmybDhdpOPqx5KQZw
b1pALGE91rq6Sz6pEs8diO1aQP9vHW/QGkk+eqKpICh2W0DL80S9LIlGPm34
+LdL/FtAIkKo8mZERD4n/Fy4cHlcQIIXZuJyXEI+tfb1ox0BXUCa42kCR35A
Pgufo/jLf11A9uI7aB3WPT5KHnj3//9dQKzozvv69To+fOCOsQ==
                    "]], 
                    
                    LineBox[{{2.1720711368637504`, -8.6413326644472*^-7}, {
                    2.3522054512388992`, 1.4771800669755223`*^-6}}], 
                    
                    LineBox[{{5.508460620409517, 1.4771800669755223`*^-6}, {
                    5.657965740925556, -8.6413326644472*^-7}}], 
                    
                    LineBox[{{7.038238185379114, -8.6413326644472*^-7}, {
                    7.405635858793736, 1.4771800669755223`*^-6}}]}}}, {
                   DisplayFunction -> Identity, AspectRatio -> 1, 
                    Axes -> {False, False}, AxesLabel -> {None, None}, 
                    AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
                    Frame -> {{True, True}, {True, True}}, 
                    FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                    Directive[
                    Opacity[0.5], 
                    Thickness[Tiny], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    FrameTicks -> {{None, None}, {None, None}}, 
                    GridLines -> {None, None}, GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> 
                    Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}], 
                    Method -> {
                    "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
                    AbsolutePointSize[6], "ScalingFunctions" -> None}, 
                    PlotRange -> {{0., 120.}, {-8.6413326644472*^-7, 
                    1.4771800669755223`*^-6}}, PlotRangeClipping -> True, 
                    PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
                  GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "120.`"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Order: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Hermite\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Periodic: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["False", "SummaryItem"]}]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                   BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}]}, 
             Dynamic[Typeset`open$$], ImageSize -> Automatic], 
            BaselinePosition -> Baseline], DynamicModuleValues :> {}], 
          StyleBox["]", "NonInterpretableSummary"]}]},
       "CopyTag",
       DisplayFunction->(#& ),
       InterpretationFunction->("InterpolatingFunction[{{0., 120.}}, <>]"& )],
      False,
      Editable->False,
      SelectWithContents->True,
      Selectable->False]}], ",", 
    RowBox[{"X6", "\[Rule]", 
     TagBox[
      TemplateBox[{RowBox[{
          StyleBox[
           TagBox["InterpolatingFunction", "SummaryHead"], 
           "NonInterpretableSummary"], 
          StyleBox["[", "NonInterpretableSummary"], 
          DynamicModuleBox[{Typeset`open$$ = False}, 
           PanelBox[
            PaneSelectorBox[{False -> GridBox[{{
                  PaneBox[
                   ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquarePlusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                   Alignment -> {Center, Center}, ImageSize -> 
                   Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                  GraphicsBox[{{{}, {}, {
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1]], 
                    LineBox[CompressedData["
1:eJwBAQP+/CFib1JlAgAAAC8AAAACAAAAdTmDsi14O0AnBYuCtttePrYxu8Gj
UzxANM4pDGWWKL7G/3Yrc3M+QHvaWb5C0WC+LfOCc6hEQEBwz8lzjHxXvgbC
cyOaPUFAbalVZa/nWb6Ifs6pm0tCQFYgdPWom1a+mZZSAqBHQ0A3X3QnHMpU
vlOcQDG0WERAOTrd/fx2Ur5PLhiJz2RFQM+tYMw2jVG+2hsZs+1eRkCQmmtO
kJVMvg73g7MbbkdA+DxnzPIMT77RLRiGTGtIQLULyX/TK0u+1/CVgYRjSUCa
E9rzmVlFvoWhfVPMcEpAgLusHfXgQ77CrY73FmxLQKnn2vBjYUK+qKcJcnF8
TEBnia0BUaNAvtAtbhXTh01APcJEY58ZPb6ID/yKN4FOQDKU0wZVpTq+6N7z
1quPT0BIzqNqB7I3vuyEinoRRlBAWUjTmUTGNb6F4A+e0MFQQJx0pnI9RjO+
8jLKrBdIUUCkG479XrIxviczmSRgxVFAphSP+V3uL74wKp2HME1SQP7r4hsU
3yy+Ac+1UwLMUkAFvcv1ayMqvvM5Q7RXSFNAG6CcHFevJ765mwUANc9TQFIP
dTFWUyW+R6vctBNNVEAQmsjmjUYjvqmx6FR61VRAUADPRzNMIb4sfmmJZFtV
QCYDuc5oTB++d/j+JlDYVUCSQTbHel8cvpZpya/DX1ZABwuJVBRuGb59iKih
ON5WQDtSv0S9/Ba+hW38JzFaV0DvSMhujtkUvmFJhZmx4FdAM7TD5X3AEr4F
0yJ0M15YQN2XEViS+BC+fVP1OT3mWEA/zF+gsHsOvhaaPJTKa1lAD7RU+gx2
C753jphXWehZQBWMU/YZ5wi+rHkpBnBvWkDtRmucyl8GvqkSzx2I7VpARNWd
50I+BL56oqkgKHZbQF8aUAIGLAK+bfj4t0v8W0AAv9lCDVsAvif8XLhweVxA
WhBeTt+q/b219vWjHQFdQK9QMT9zqfq9C5+j+Mt/XUAf5q1UPBj4vUoeePf/
/11AI28C04i39b2gEmDB
                    "]], 
                    
                    LineBox[{{1.4271434178413016`, 2.8738988219370452`*^-8}, {
                    1.4272545437784956`, -4.912471803813485*^-8}}], 
                    LineBox[{{3.760410553070415, -4.912471803813485*^-8}, {
                    3.760789587565921, 2.8738988219370452`*^-8}}], 
                    
                    LineBox[{{5.66801969818017, 2.8738988219370452`*^-8}, {
                    5.669927047632335, -4.912471803813485*^-8}}], 
                    
                    LineBox[{{7.474951615608927, -4.912471803813485*^-8}, {
                    7.4819344860704655`, 2.8738988219370452`*^-8}}], 
                    
                    LineBox[{{11.419590738681942`, 2.8738988219370452`*^-8}, {
                    11.454190668347321`, -4.912471803813485*^-8}}], 
                    
                    LineBox[{{13.298390906984185`, -4.912471803813485*^-8}, {
                    13.367433367180693`, 2.8738988219370452`*^-8}}], 
                    
                    LineBox[{{15.44637419900776, 2.8738988219370452`*^-8}, {
                    15.549777415180333`, -4.912471803813485*^-8}}], 
                    
                    LineBox[{{17.422184075123404`, -4.912471803813485*^-8}, {
                    17.58003575230072, 2.8738988219370452`*^-8}}], 
                    
                    LineBox[{{19.318073327882427`, 2.8738988219370452`*^-8}, {
                    19.575043983233815`, -4.912471803813485*^-8}}], 
                    
                    LineBox[{{21.238085001775385`, -4.912471803813485*^-8}, {
                    21.52798360272751, 2.8738988219370452`*^-8}}], 
                    
                    LineBox[{{23.108000199514404`, 2.8738988219370452`*^-8}, {
                    23.388473194070027`, -4.912471803813485*^-8}}], 
                    
                    LineBox[{{25.68009575336602, -4.912471803813485*^-8}, {
                    26.131437673840136`, 2.8738988219370452`*^-8}}]}}}, {
                   DisplayFunction -> Identity, AspectRatio -> 1, 
                    Axes -> {False, False}, AxesLabel -> {None, None}, 
                    AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
                    Frame -> {{True, True}, {True, True}}, 
                    FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                    Directive[
                    Opacity[0.5], 
                    Thickness[Tiny], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    FrameTicks -> {{None, None}, {None, None}}, 
                    GridLines -> {None, None}, GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> 
                    Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}], 
                    Method -> {
                    "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
                    AbsolutePointSize[6], "ScalingFunctions" -> None}, 
                    PlotRange -> {{0., 120.}, {-4.912471803813485*^-8, 
                    2.8738988219370452`*^-8}}, PlotRangeClipping -> True, 
                    PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
                  GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "120.`"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                   BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}], True -> GridBox[{{
                  PaneBox[
                   ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquareMinusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                   Alignment -> {Center, Center}, ImageSize -> 
                   Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                  GraphicsBox[{{{}, {}, {
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1]], 
                    LineBox[CompressedData["
1:eJwBAQP+/CFib1JlAgAAAC8AAAACAAAAdTmDsi14O0AnBYuCtttePrYxu8Gj
UzxANM4pDGWWKL7G/3Yrc3M+QHvaWb5C0WC+LfOCc6hEQEBwz8lzjHxXvgbC
cyOaPUFAbalVZa/nWb6Ifs6pm0tCQFYgdPWom1a+mZZSAqBHQ0A3X3QnHMpU
vlOcQDG0WERAOTrd/fx2Ur5PLhiJz2RFQM+tYMw2jVG+2hsZs+1eRkCQmmtO
kJVMvg73g7MbbkdA+DxnzPIMT77RLRiGTGtIQLULyX/TK0u+1/CVgYRjSUCa
E9rzmVlFvoWhfVPMcEpAgLusHfXgQ77CrY73FmxLQKnn2vBjYUK+qKcJcnF8
TEBnia0BUaNAvtAtbhXTh01APcJEY58ZPb6ID/yKN4FOQDKU0wZVpTq+6N7z
1quPT0BIzqNqB7I3vuyEinoRRlBAWUjTmUTGNb6F4A+e0MFQQJx0pnI9RjO+
8jLKrBdIUUCkG479XrIxviczmSRgxVFAphSP+V3uL74wKp2HME1SQP7r4hsU
3yy+Ac+1UwLMUkAFvcv1ayMqvvM5Q7RXSFNAG6CcHFevJ765mwUANc9TQFIP
dTFWUyW+R6vctBNNVEAQmsjmjUYjvqmx6FR61VRAUADPRzNMIb4sfmmJZFtV
QCYDuc5oTB++d/j+JlDYVUCSQTbHel8cvpZpya/DX1ZABwuJVBRuGb59iKih
ON5WQDtSv0S9/Ba+hW38JzFaV0DvSMhujtkUvmFJhZmx4FdAM7TD5X3AEr4F
0yJ0M15YQN2XEViS+BC+fVP1OT3mWEA/zF+gsHsOvhaaPJTKa1lAD7RU+gx2
C753jphXWehZQBWMU/YZ5wi+rHkpBnBvWkDtRmucyl8GvqkSzx2I7VpARNWd
50I+BL56oqkgKHZbQF8aUAIGLAK+bfj4t0v8W0AAv9lCDVsAvif8XLhweVxA
WhBeTt+q/b219vWjHQFdQK9QMT9zqfq9C5+j+Mt/XUAf5q1UPBj4vUoeePf/
/11AI28C04i39b2gEmDB
                    "]], 
                    
                    LineBox[{{1.4271434178413016`, 2.8738988219370452`*^-8}, {
                    1.4272545437784956`, -4.912471803813485*^-8}}], 
                    
                    LineBox[{{3.760410553070415, -4.912471803813485*^-8}, {
                    3.760789587565921, 2.8738988219370452`*^-8}}], 
                    
                    LineBox[{{5.66801969818017, 2.8738988219370452`*^-8}, {
                    5.669927047632335, -4.912471803813485*^-8}}], 
                    
                    LineBox[{{7.474951615608927, -4.912471803813485*^-8}, {
                    7.4819344860704655`, 2.8738988219370452`*^-8}}], 
                    
                    LineBox[{{11.419590738681942`, 2.8738988219370452`*^-8}, {
                    11.454190668347321`, -4.912471803813485*^-8}}], 
                    
                    LineBox[{{13.298390906984185`, -4.912471803813485*^-8}, {
                    13.367433367180693`, 2.8738988219370452`*^-8}}], 
                    
                    LineBox[{{15.44637419900776, 2.8738988219370452`*^-8}, {
                    15.549777415180333`, -4.912471803813485*^-8}}], 
                    
                    LineBox[{{17.422184075123404`, -4.912471803813485*^-8}, {
                    17.58003575230072, 2.8738988219370452`*^-8}}], 
                    
                    LineBox[{{19.318073327882427`, 2.8738988219370452`*^-8}, {
                    19.575043983233815`, -4.912471803813485*^-8}}], 
                    
                    LineBox[{{21.238085001775385`, -4.912471803813485*^-8}, {
                    21.52798360272751, 2.8738988219370452`*^-8}}], 
                    
                    LineBox[{{23.108000199514404`, 2.8738988219370452`*^-8}, {
                    23.388473194070027`, -4.912471803813485*^-8}}], 
                    
                    LineBox[{{25.68009575336602, -4.912471803813485*^-8}, {
                    26.131437673840136`, 2.8738988219370452`*^-8}}]}}}, {
                   DisplayFunction -> Identity, AspectRatio -> 1, 
                    Axes -> {False, False}, AxesLabel -> {None, None}, 
                    AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
                    Frame -> {{True, True}, {True, True}}, 
                    FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                    Directive[
                    Opacity[0.5], 
                    Thickness[Tiny], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    FrameTicks -> {{None, None}, {None, None}}, 
                    GridLines -> {None, None}, GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> 
                    Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}], 
                    Method -> {
                    "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
                    AbsolutePointSize[6], "ScalingFunctions" -> None}, 
                    PlotRange -> {{0., 120.}, {-4.912471803813485*^-8, 
                    2.8738988219370452`*^-8}}, PlotRangeClipping -> True, 
                    PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
                  GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "120.`"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Order: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Hermite\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Periodic: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["False", "SummaryItem"]}]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                   BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}]}, 
             Dynamic[Typeset`open$$], ImageSize -> Automatic], 
            BaselinePosition -> Baseline], DynamicModuleValues :> {}], 
          StyleBox["]", "NonInterpretableSummary"]}]},
       "CopyTag",
       DisplayFunction->(#& ),
       InterpretationFunction->("InterpolatingFunction[{{0., 120.}}, <>]"& )],
      False,
      Editable->False,
      SelectWithContents->True,
      Selectable->False]}]}], "}"}], "}"}]], "Output",
 CellChangeTimes->{3.715217574811864*^9, 3.7152852459297733`*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   GraphicsBox[{{}, {}, 
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], FaceForm[Opacity[0.3]], LineBox[CompressedData["
1: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
XDb6H9Ek4Qo=
       "]]}},
    Axes->{True, True},
    AxesLabel->{
      FormBox["\"x\"", TraditionalForm], 
      FormBox["\"x'\"", TraditionalForm]},
    AxesOrigin->{1., 0},
    DisplayFunction->Identity,
    FrameLabel->{{None, None}, {None, None}},
    FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
    GridLinesStyle->Directive[
      GrayLevel[0.5, 0.4]],
    Method->{"ScalingFunctions" -> None},
    PlotRange->{{1., 1.0008992729549944`}, {-0.000038115225572129616`, 
     0.000023769466136858478`}},
    PlotRangeClipping->True,
    PlotRangePadding->{{
       Scaled[0.05], 
       Scaled[0.05]}, {
       Scaled[0.05], 
       Scaled[0.05]}},
    Ticks->{Automatic, Automatic}], ",", 
   GraphicsBox[{{}, {}, 
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], FaceForm[Opacity[0.3]], LineBox[CompressedData["
1:eJwt2nc8Vt8fAHAkhKyMrEKDslco7rWiMjJDUkgSEWVv2ZKsCn2NpEVGiVI9
55aVmcwiMrIKWdmj3zm33z+83q97nzM+5/M553h5hO2vmFygoaKiSoc/0O+x
eLGp7ZuzRABnke6gfwQu+TnwUMr6LEFZ07gbXB6O907LSoquzRKXNAeUGieu
431lAkcbVmYJOj6OuFj+67iES29/4PIsYdb+652/Thi+zbDHCF+aJU7tsNc9
4xqKD04l97EvzhIje65tfhIOwY/mye0an58lrsgVSqXeD8Bz5335J+dmiemA
oDcrvX64QNr4Rypo9ss8q7t4fPGfOsYH9s/OEtTBX+y1jb3ximvch8/MzBL5
X/w3s+I9cdoFp5+507PEIznbEYuGq/gfSgL/6u9ZYnRiJvEGkwd+XPFZvh00
+/2lnpRcN3wwS/1i99Qssapz1FxCxQVXaQvbaQd9w92zpKn3In7GOSBweXKW
SHOtszh6ywGXWzQ4ng39xfrlZ30TO9ycWkPSHNrnrNr3DcMzOKVy5hMv9IzY
ac8yoVN4UVfEp8mJWcIrlFYsTsAIx2Nba5qhG3ieOwnFaePnG24dewf9NFS0
NfaqHE63zWPkFbQaNt2yacJERDgY7X8PbfmTU/O5vzLxVtc/sQOatvVEOGGt
QyzHZTz8A/2xPD/gKZ0RgblP/NgN+0981BHx4rEZkV36oBaNj6ZL6GsPqxWR
9vZF7W1oMHnfRQqzIbSK6az7of2Z62gX02wJ7QvflmXh/C8wFIloeNkTZS4O
nDeht9UXJFXLOxBs52mFZ6BrP5yzvtBxgXCM70k6DePpcb5Jld/iIrHOur2n
Ebrv5Uv+P2+dCLWjqq5acD3+Fn8vY9/iTKi4lBHvoVnEhfY8lnAhWn7s0dWC
66fdL/p7Xfky4aFr6N8ArbzM0+8k5kqwGUu1mcP17sjwO2++5kq4FJjXD0Pn
sonWKb9wI3bvEu/zhvnxPELC8p7BFYKhVfUmE8yn11yjKWyfrhCG1RZncqGT
tL/7CvK5E0v+XJ8P/5klamiKm86ruxPytBEeHdDaas4tSqfdibO6ss1uC7NE
fWoD+9pFd0JYVPzaNpiv/FJnXu5wdicoqi+XHkDH8XVdnLR1J4zFU+fUYH5f
oak/Oq/vTvjX8VB9gT7s94c/Q8qdYP6V+N4N1oPet9QwczrYnmLRV1pYL9Lt
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
TiHE
       "]]}},
    Axes->{True, True},
    AxesLabel->{
      FormBox["\"y\"", TraditionalForm], 
      FormBox["\"y'\"", TraditionalForm]},
    AxesOrigin->{-1.12452504, 0},
    DisplayFunction->Identity,
    FrameLabel->{{None, None}, {None, None}},
    FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
    GridLinesStyle->Directive[
      GrayLevel[0.5, 0.4]],
    Method->{"ScalingFunctions" -> None},
    PlotRange->{{-1.124525035651783, -1.124524940546868}, \
{-4.8473787449990135`*^-9, 2.9238468784132283`*^-9}},
    PlotRangeClipping->True,
    PlotRangePadding->{{
       Scaled[0.05], 
       Scaled[0.05]}, {
       Scaled[0.05], 
       Scaled[0.05]}},
    Ticks->{Automatic, Automatic}], ",", 
   GraphicsBox[{{}, {}, 
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], FaceForm[Opacity[0.3]], LineBox[CompressedData["
1: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
3uQhz9cLM/pwpIlelvhwhvd/NWbKbg==
       "]]}},
    Axes->{True, True},
    AxesLabel->{
      FormBox["\"\[Theta]\"", TraditionalForm], 
      FormBox["\"\[Theta]'\"", TraditionalForm]},
    AxesOrigin->{0, 0},
    DisplayFunction->Identity,
    FrameLabel->{{None, None}, {None, None}},
    FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
    GridLinesStyle->Directive[
      GrayLevel[0.5, 0.4]],
    Method->{"ScalingFunctions" -> None},
    PlotRange->{{-1.0508465473695024`*^-6, 
     1.7891695046016901`*^-6}, {-5.386293671103825*^-8, 
     3.152997606470317*^-8}},
    PlotRangeClipping->True,
    PlotRangePadding->{{
       Scaled[0.05], 
       Scaled[0.05]}, {
       Scaled[0.05], 
       Scaled[0.05]}},
    Ticks->{Automatic, Automatic}]}], "}"}]], "Output",
 CellChangeTimes->{3.715217574811864*^9, 3.7152852460817776`*^9}]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.715216176116166*^9, 3.715216176148164*^9}}]
},
WindowSize->{1350, 685},
WindowMargins->{{-8, Automatic}, {Automatic, 0}},
PrintingCopies->1,
PrintingPageRange->{32000, 32000},
PrintingOptions->{"Magnification"->1.,
"PaperOrientation"->"Portrait",
"PaperSize"->{612, 792}},
FrontEndVersion->"10.1 for Microsoft Windows (64-bit) (March 23, 2015)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[558, 20, 102, 1, 30, "Text"],
Cell[663, 23, 192, 3, 31, "Input"],
Cell[858, 28, 537, 16, 31, "Input"],
Cell[1398, 46, 103, 1, 30, "Text"],
Cell[CellGroupData[{
Cell[1526, 51, 1721, 44, 68, "Input"],
Cell[3250, 97, 33644, 864, 302, "Output"]
}, Open  ]],
Cell[36909, 964, 273, 9, 5, "Text"],
Cell[37185, 975, 1734, 50, 76, "Input"],
Cell[38922, 1027, 271, 9, 10, "Text"],
Cell[39196, 1038, 108, 1, 30, "Text"],
Cell[CellGroupData[{
Cell[39329, 1043, 440, 11, 125, "Input"],
Cell[39772, 1056, 3231, 98, 226, "Output"]
}, Open  ]],
Cell[43018, 1157, 185, 3, 41, "Text"],
Cell[CellGroupData[{
Cell[43228, 1164, 1464, 43, 133, "Input"],
Cell[44695, 1209, 4221, 115, 218, "Output"]
}, Open  ]],
Cell[48931, 1327, 243, 8, 39, "Input"],
Cell[49177, 1337, 1893, 58, 270, "Input"],
Cell[CellGroupData[{
Cell[51095, 1399, 4009, 106, 215, "Input"],
Cell[55107, 1507, 3552, 94, 112, "Output"]
}, Open  ]],
Cell[58674, 1604, 271, 9, 8, "Text"],
Cell[58948, 1615, 1182, 37, 57, "Input"],
Cell[60133, 1654, 264, 6, 33, "Input"],
Cell[60400, 1662, 271, 9, 8, "Text"],
Cell[60674, 1673, 273, 9, 5, "Text"],
Cell[60950, 1684, 271, 9, 8, "Text"],
Cell[61224, 1695, 273, 9, 5, "Text"],
Cell[61500, 1706, 118, 2, 31, "Input"],
Cell[CellGroupData[{
Cell[61643, 1712, 19805, 617, 817, "Input"],
Cell[81451, 2331, 721, 17, 33, "Output"],
Cell[82175, 2350, 548, 10, 31, "Output"],
Cell[82726, 2362, 723, 14, 33, "Output"],
Cell[83452, 2378, 1546, 43, 56, "Output"],
Cell[85001, 2423, 1546, 43, 56, "Output"],
Cell[86550, 2468, 3142, 94, 55, "Output"],
Cell[89695, 2564, 3143, 94, 55, "Output"],
Cell[92841, 2660, 461, 6, 31, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[93339, 2671, 1247, 30, 72, "Input"],
Cell[94589, 2703, 15006, 395, 200, "Output"]
}, Open  ]],
Cell[109610, 3101, 273, 9, 5, "Text"],
Cell[CellGroupData[{
Cell[109908, 3114, 1278, 35, 52, "Input"],
Cell[111189, 3151, 902, 25, 33, "Output"],
Cell[112094, 3178, 14031, 379, 200, "Output"]
}, Closed]],
Cell[126140, 3560, 273, 9, 5, "Text"],
Cell[126416, 3571, 271, 9, 8, "Text"],
Cell[CellGroupData[{
Cell[126712, 3584, 977, 25, 31, "Input"],
Cell[127692, 3611, 805, 23, 33, "Output"]
}, Closed]],
Cell[CellGroupData[{
Cell[128534, 3639, 650, 16, 25, "Input"],
Cell[129187, 3657, 17994, 479, 200, "Output"]
}, Closed]],
Cell[147196, 4139, 273, 9, 5, "Text"],
Cell[CellGroupData[{
Cell[147494, 4152, 4206, 121, 397, "Input"],
Cell[151703, 4275, 963, 25, 33, "Output"],
Cell[152669, 4302, 848, 23, 33, "Output"],
Cell[153520, 4327, 1250, 35, 54, "Output"],
Cell[154773, 4364, 720, 14, 33, "Output"]
}, Open  ]],
Cell[155508, 4381, 273, 9, 5, "Text"],
Cell[155784, 4392, 271, 9, 10, "Text"],
Cell[156058, 4403, 271, 9, 10, "Text"],
Cell[156332, 4414, 273, 9, 5, "Text"],
Cell[156608, 4425, 271, 9, 10, "Text"],
Cell[156882, 4436, 271, 9, 10, "Text"],
Cell[157156, 4447, 273, 9, 5, "Text"],
Cell[157432, 4458, 209, 3, 30, "Text"],
Cell[157644, 4463, 2072, 57, 126, "Input"],
Cell[159719, 4522, 92, 1, 31, "Input"],
Cell[159814, 4525, 271, 9, 8, "Text"],
Cell[160088, 4536, 271, 9, 10, "Text"],
Cell[CellGroupData[{
Cell[160384, 4549, 1055, 22, 72, "Input"],
Cell[161442, 4573, 14037, 368, 200, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[175516, 4946, 2180, 56, 112, "Input"],
Cell[177699, 5004, 2249, 58, 83, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[179985, 5067, 560, 15, 52, "Input"],
Cell[180548, 5084, 666, 19, 33, "Output"],
Cell[181217, 5105, 2992, 89, 204, "Output"]
}, Closed]],
Cell[CellGroupData[{
Cell[184246, 5199, 6002, 159, 285, "Input"],
Cell[190251, 5360, 943, 17, 33, "Output"],
Cell[191197, 5379, 1183, 28, 33, "Output"],
Cell[192383, 5409, 1106, 24, 31, "Output"],
Cell[193492, 5435, 614, 9, 31, "Output"],
Cell[194109, 5446, 70208, 1340, 148, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[264354, 6791, 588, 15, 31, "Input"],
Cell[264945, 6808, 31744, 534, 201, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[296726, 7347, 4251, 110, 132, "Input"],
Cell[300980, 7459, 114578, 1908, 233, "Output"],
Cell[415561, 9369, 3584, 72, 484, "Output"]
}, Open  ]],
Cell[419160, 9444, 271, 9, 10, "Text"],
Cell[419434, 9455, 217, 5, 31, "Input"],
Cell[419654, 9462, 385, 5, 52, "Input"],
Cell[CellGroupData[{
Cell[420064, 9471, 6114, 175, 366, "Input"],
Cell[426181, 9648, 12643, 357, 678, "Output"],
Cell[438827, 10007, 422, 9, 33, "Output"],
Cell[439252, 10018, 665, 20, 33, "Output"],
Cell[439920, 10040, 591, 16, 31, "Output"],
Cell[440514, 10058, 93, 1, 31, "Output"],
Cell[440610, 10061, 79676, 1517, 221, "Output"],
Cell[520289, 11580, 46321, 792, 57, "Output"]
}, Open  ]],
Cell[566625, 12375, 92, 1, 31, InheritFromParent]
}
]
*)

(* End of internal cache information *)
