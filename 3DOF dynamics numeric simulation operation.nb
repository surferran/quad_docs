(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 10.1' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    811278,      16441]
NotebookOptionsPosition[    805592,      16273]
NotebookOutlinePosition[    806086,      16293]
CellTagsIndexPosition[    806043,      16290]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell["numeric simulation", "Text",
 CellChangeTimes->{{3.714958233706908*^9, 3.7149582394636574`*^9}}],

Cell[BoxData[
 RowBox[{"Quit", "[", "]"}]], "Input",
 CellChangeTimes->{{3.712131429857179*^9, 3.712131432176716*^9}, {
   3.7121626821687746`*^9, 3.712162682492755*^9}, 3.712288672336918*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"dispSimp", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"a_", "[", "t", "]"}], "\[Rule]", "a"}], ",", 
     RowBox[{
      RowBox[{"Cos", "[", "a_", "]"}], "\[Rule]", 
      RowBox[{"c", "[", "a", "]"}]}], ",", 
     RowBox[{
      RowBox[{"Sin", "[", "a_", "]"}], "\[Rule]", 
      RowBox[{"s", "[", "a", "]"}]}], ",", 
     RowBox[{
      SubscriptBox["\[ImaginaryI]", 
       RowBox[{"i_", ",", "zz"}]], "->", 
      SubscriptBox["I", "i"]}]}], "}"}]}], ";"}]], "Input"],

Cell["original equations:", "Text",
 CellChangeTimes->{{3.7149591768587537`*^9, 3.714959184978958*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"(", 
    RowBox[{"quadEqNominal", "=", 
     RowBox[{
      RowBox[{"EulerEquations", "[", 
       RowBox[{"L", ",", 
        RowBox[{"{", 
         RowBox[{"(*", 
          RowBox[{
           RowBox[{
            SubscriptBox["x", "1"], "[", "t", "]"}], ",", 
           RowBox[{
            SubscriptBox["y", "1"], "[", "t", "]"}], ",", 
           RowBox[{
            SubscriptBox["\[Theta]", "1"], "[", "t", "]"}], ",", 
           RowBox[{
            SubscriptBox["x", "2"], "[", "t", "]"}], ",", 
           RowBox[{
            SubscriptBox["y", "2"], "[", "t", "]"}], ",", 
           RowBox[{
            SubscriptBox["\[Theta]", "2"], "[", "t", "]"}], ","}], "*)"}], 
         RowBox[{
          RowBox[{
           SubscriptBox["x", "p"], "[", "t", "]"}], ",", 
          RowBox[{
           SubscriptBox["y", "p"], "[", "t", "]"}], ",", 
          RowBox[{
           SubscriptBox["\[Theta]", "p"], "[", "t", "]"}]}], "}"}], ",", 
        "t"}], "]"}], 
      RowBox[{"(*", 
       RowBox[{"[", 
        RowBox[{"[", 
         RowBox[{"All", ",", "1"}], "]"}], "]"}], "*)"}], 
      RowBox[{"(*", 
       RowBox[{"\[Equal]", "Q"}], "*)"}], "//", "Simplify"}]}], ")"}], "//", 
   "MatrixForm"}], "//", "TraditionalForm"}]], "Input",
 CellChangeTimes->{{3.710471318787363*^9, 3.710471343715891*^9}, {
   3.712162409958474*^9, 3.712162464712139*^9}, {3.712247425617641*^9, 
   3.7122474265932856`*^9}, {3.712248396174243*^9, 3.7122484111631737`*^9}, 
   3.712248778153448*^9, {3.7122492978178225`*^9, 3.7122493089952297`*^9}, 
   3.712288997792865*^9, 3.7122892123182693`*^9, {3.7122900791119747`*^9, 
   3.7122900872063375`*^9}},
 Background->RGBColor[1, 1, 0]],

Cell[BoxData[
 FormBox[
  TagBox[
   RowBox[{"(", "\[NoBreak]", 
    TagBox[GridBox[{
       {
        RowBox[{
         RowBox[{
          FractionBox[
           RowBox[{
            SubscriptBox["k", "1"], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               SubscriptBox["h", "p"], " ", 
               RowBox[{"sin", "(", 
                RowBox[{
                 SubscriptBox["\[Theta]", "p"], "(", "t", ")"}], ")"}]}], "+", 
              RowBox[{
               SubscriptBox["l", "p"], " ", 
               RowBox[{"cos", "(", 
                RowBox[{
                 SubscriptBox["\[Theta]", "p"], "(", "t", ")"}], ")"}]}], "-", 
              RowBox[{"2", " ", 
               RowBox[{
                SubscriptBox["x", "p"], "(", "t", ")"}]}], "+", 
              RowBox[{"2", " ", 
               RowBox[{
                SubscriptBox["x", "1"], "(", "t", ")"}]}]}], ")"}], " ", 
            RowBox[{"(", 
             RowBox[{
              SqrtBox[
               RowBox[{
                RowBox[{
                 FractionBox["1", "4"], " ", 
                 SuperscriptBox[
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{
                    SubscriptBox["h", "p"], " ", 
                    RowBox[{"sin", "(", 
                    RowBox[{
                    SubscriptBox["\[Theta]", "p"], "(", "t", ")"}], ")"}]}], 
                    "+", 
                    RowBox[{
                    SubscriptBox["l", "p"], " ", 
                    RowBox[{"cos", "(", 
                    RowBox[{
                    SubscriptBox["\[Theta]", "p"], "(", "t", ")"}], ")"}]}], 
                    "-", 
                    RowBox[{"2", " ", 
                    RowBox[{
                    SubscriptBox["x", "p"], "(", "t", ")"}]}], "+", 
                    RowBox[{"2", " ", 
                    RowBox[{
                    SubscriptBox["x", "1"], "(", "t", ")"}]}]}], ")"}], 
                  "2"]}], "+", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{
                    FractionBox["1", "2"], " ", 
                    SubscriptBox["h", "p"], " ", 
                    RowBox[{"cos", "(", 
                    RowBox[{
                    SubscriptBox["\[Theta]", "p"], "(", "t", ")"}], ")"}]}], 
                   "-", 
                   RowBox[{
                    FractionBox["1", "2"], " ", 
                    SubscriptBox["l", "p"], " ", 
                    RowBox[{"sin", "(", 
                    RowBox[{
                    SubscriptBox["\[Theta]", "p"], "(", "t", ")"}], ")"}]}], 
                   "+", 
                   RowBox[{
                    SubscriptBox["y", "p"], "(", "t", ")"}], "-", 
                   RowBox[{
                    SubscriptBox["y", "1"], "(", "t", ")"}]}], ")"}], "2"]}]],
               "-", 
              SubscriptBox["L0", "1"]}], ")"}]}], 
           RowBox[{"2", " ", 
            SqrtBox[
             RowBox[{
              RowBox[{
               FractionBox["1", "4"], " ", 
               SuperscriptBox[
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   SubscriptBox["h", "p"], " ", 
                   RowBox[{"sin", "(", 
                    RowBox[{
                    SubscriptBox["\[Theta]", "p"], "(", "t", ")"}], ")"}]}], 
                  "+", 
                  RowBox[{
                   SubscriptBox["l", "p"], " ", 
                   RowBox[{"cos", "(", 
                    RowBox[{
                    SubscriptBox["\[Theta]", "p"], "(", "t", ")"}], ")"}]}], 
                  "-", 
                  RowBox[{"2", " ", 
                   RowBox[{
                    SubscriptBox["x", "p"], "(", "t", ")"}]}], "+", 
                  RowBox[{"2", " ", 
                   RowBox[{
                    SubscriptBox["x", "1"], "(", "t", ")"}]}]}], ")"}], 
                "2"]}], "+", 
              SuperscriptBox[
               RowBox[{"(", 
                RowBox[{
                 RowBox[{
                  FractionBox["1", "2"], " ", 
                  SubscriptBox["h", "p"], " ", 
                  RowBox[{"cos", "(", 
                   RowBox[{
                    SubscriptBox["\[Theta]", "p"], "(", "t", ")"}], ")"}]}], 
                 "-", 
                 RowBox[{
                  FractionBox["1", "2"], " ", 
                  SubscriptBox["l", "p"], " ", 
                  RowBox[{"sin", "(", 
                   RowBox[{
                    SubscriptBox["\[Theta]", "p"], "(", "t", ")"}], ")"}]}], 
                 "+", 
                 RowBox[{
                  SubscriptBox["y", "p"], "(", "t", ")"}], "-", 
                 RowBox[{
                  SubscriptBox["y", "1"], "(", "t", ")"}]}], ")"}], 
               "2"]}]]}]], "+", 
          FractionBox[
           RowBox[{
            SubscriptBox["k", "2"], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               FractionBox["1", "2"], " ", 
               SubscriptBox["h", "p"], " ", 
               RowBox[{"sin", "(", 
                RowBox[{
                 SubscriptBox["\[Theta]", "p"], "(", "t", ")"}], ")"}]}], "-", 
              RowBox[{
               FractionBox["1", "2"], " ", 
               SubscriptBox["l", "p"], " ", 
               RowBox[{"cos", "(", 
                RowBox[{
                 SubscriptBox["\[Theta]", "p"], "(", "t", ")"}], ")"}]}], "-", 
              RowBox[{
               SubscriptBox["x", "p"], "(", "t", ")"}], "+", 
              RowBox[{
               SubscriptBox["x", "2"], "(", "t", ")"}]}], ")"}], " ", 
            RowBox[{"(", 
             RowBox[{
              SqrtBox[
               RowBox[{
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{
                    FractionBox["1", "2"], " ", 
                    SubscriptBox["h", "p"], " ", 
                    RowBox[{"sin", "(", 
                    RowBox[{
                    SubscriptBox["\[Theta]", "p"], "(", "t", ")"}], ")"}]}], 
                   "-", 
                   RowBox[{
                    FractionBox["1", "2"], " ", 
                    SubscriptBox["l", "p"], " ", 
                    RowBox[{"cos", "(", 
                    RowBox[{
                    SubscriptBox["\[Theta]", "p"], "(", "t", ")"}], ")"}]}], 
                   "-", 
                   RowBox[{
                    SubscriptBox["x", "p"], "(", "t", ")"}], "+", 
                   RowBox[{
                    SubscriptBox["x", "2"], "(", "t", ")"}]}], ")"}], "2"], 
                "+", 
                RowBox[{
                 FractionBox["1", "4"], " ", 
                 SuperscriptBox[
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{
                    SubscriptBox["h", "p"], " ", 
                    RowBox[{"cos", "(", 
                    RowBox[{
                    SubscriptBox["\[Theta]", "p"], "(", "t", ")"}], ")"}]}], 
                    "+", 
                    RowBox[{
                    SubscriptBox["l", "p"], " ", 
                    RowBox[{"sin", "(", 
                    RowBox[{
                    SubscriptBox["\[Theta]", "p"], "(", "t", ")"}], ")"}]}], 
                    "+", 
                    RowBox[{"2", " ", 
                    RowBox[{
                    SubscriptBox["y", "p"], "(", "t", ")"}]}], "-", 
                    RowBox[{"2", " ", 
                    RowBox[{
                    SubscriptBox["y", "2"], "(", "t", ")"}]}]}], ")"}], 
                  "2"]}]}]], "-", 
              SubscriptBox["L0", "2"]}], ")"}]}], 
           SqrtBox[
            RowBox[{
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{
                RowBox[{
                 FractionBox["1", "2"], " ", 
                 SubscriptBox["h", "p"], " ", 
                 RowBox[{"sin", "(", 
                  RowBox[{
                   SubscriptBox["\[Theta]", "p"], "(", "t", ")"}], ")"}]}], 
                "-", 
                RowBox[{
                 FractionBox["1", "2"], " ", 
                 SubscriptBox["l", "p"], " ", 
                 RowBox[{"cos", "(", 
                  RowBox[{
                   SubscriptBox["\[Theta]", "p"], "(", "t", ")"}], ")"}]}], 
                "-", 
                RowBox[{
                 SubscriptBox["x", "p"], "(", "t", ")"}], "+", 
                RowBox[{
                 SubscriptBox["x", "2"], "(", "t", ")"}]}], ")"}], "2"], "+", 
             RowBox[{
              FractionBox["1", "4"], " ", 
              SuperscriptBox[
               RowBox[{"(", 
                RowBox[{
                 RowBox[{
                  SubscriptBox["h", "p"], " ", 
                  RowBox[{"cos", "(", 
                   RowBox[{
                    SubscriptBox["\[Theta]", "p"], "(", "t", ")"}], ")"}]}], 
                 "+", 
                 RowBox[{
                  SubscriptBox["l", "p"], " ", 
                  RowBox[{"sin", "(", 
                   RowBox[{
                    SubscriptBox["\[Theta]", "p"], "(", "t", ")"}], ")"}]}], 
                 "+", 
                 RowBox[{"2", " ", 
                  RowBox[{
                   SubscriptBox["y", "p"], "(", "t", ")"}]}], "-", 
                 RowBox[{"2", " ", 
                  RowBox[{
                   SubscriptBox["y", "2"], "(", "t", ")"}]}]}], ")"}], 
               "2"]}]}]]]}], "\[LongEqual]", 
         RowBox[{
          SubscriptBox["m", "p"], " ", 
          RowBox[{
           SuperscriptBox[
            SubscriptBox["x", "p"], "\[Prime]\[Prime]",
            MultilineFunction->None], "(", "t", ")"}]}]}]},
       {
        RowBox[{
         RowBox[{
          FractionBox[
           RowBox[{
            SubscriptBox["k", "1"], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", 
               RowBox[{
                FractionBox["1", "2"], " ", 
                SubscriptBox["h", "p"], " ", 
                RowBox[{"cos", "(", 
                 RowBox[{
                  SubscriptBox["\[Theta]", "p"], "(", "t", ")"}], ")"}]}]}], 
              "+", 
              RowBox[{
               FractionBox["1", "2"], " ", 
               SubscriptBox["l", "p"], " ", 
               RowBox[{"sin", "(", 
                RowBox[{
                 SubscriptBox["\[Theta]", "p"], "(", "t", ")"}], ")"}]}], "-", 
              RowBox[{
               SubscriptBox["y", "p"], "(", "t", ")"}], "+", 
              RowBox[{
               SubscriptBox["y", "1"], "(", "t", ")"}]}], ")"}], " ", 
            RowBox[{"(", 
             RowBox[{
              SqrtBox[
               RowBox[{
                RowBox[{
                 FractionBox["1", "4"], " ", 
                 SuperscriptBox[
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{
                    SubscriptBox["h", "p"], " ", 
                    RowBox[{"sin", "(", 
                    RowBox[{
                    SubscriptBox["\[Theta]", "p"], "(", "t", ")"}], ")"}]}], 
                    "+", 
                    RowBox[{
                    SubscriptBox["l", "p"], " ", 
                    RowBox[{"cos", "(", 
                    RowBox[{
                    SubscriptBox["\[Theta]", "p"], "(", "t", ")"}], ")"}]}], 
                    "-", 
                    RowBox[{"2", " ", 
                    RowBox[{
                    SubscriptBox["x", "p"], "(", "t", ")"}]}], "+", 
                    RowBox[{"2", " ", 
                    RowBox[{
                    SubscriptBox["x", "1"], "(", "t", ")"}]}]}], ")"}], 
                  "2"]}], "+", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{
                    FractionBox["1", "2"], " ", 
                    SubscriptBox["h", "p"], " ", 
                    RowBox[{"cos", "(", 
                    RowBox[{
                    SubscriptBox["\[Theta]", "p"], "(", "t", ")"}], ")"}]}], 
                   "-", 
                   RowBox[{
                    FractionBox["1", "2"], " ", 
                    SubscriptBox["l", "p"], " ", 
                    RowBox[{"sin", "(", 
                    RowBox[{
                    SubscriptBox["\[Theta]", "p"], "(", "t", ")"}], ")"}]}], 
                   "+", 
                   RowBox[{
                    SubscriptBox["y", "p"], "(", "t", ")"}], "-", 
                   RowBox[{
                    SubscriptBox["y", "1"], "(", "t", ")"}]}], ")"}], "2"]}]],
               "-", 
              SubscriptBox["L0", "1"]}], ")"}]}], 
           SqrtBox[
            RowBox[{
             RowBox[{
              FractionBox["1", "4"], " ", 
              SuperscriptBox[
               RowBox[{"(", 
                RowBox[{
                 RowBox[{
                  SubscriptBox["h", "p"], " ", 
                  RowBox[{"sin", "(", 
                   RowBox[{
                    SubscriptBox["\[Theta]", "p"], "(", "t", ")"}], ")"}]}], 
                 "+", 
                 RowBox[{
                  SubscriptBox["l", "p"], " ", 
                  RowBox[{"cos", "(", 
                   RowBox[{
                    SubscriptBox["\[Theta]", "p"], "(", "t", ")"}], ")"}]}], 
                 "-", 
                 RowBox[{"2", " ", 
                  RowBox[{
                   SubscriptBox["x", "p"], "(", "t", ")"}]}], "+", 
                 RowBox[{"2", " ", 
                  RowBox[{
                   SubscriptBox["x", "1"], "(", "t", ")"}]}]}], ")"}], "2"]}],
              "+", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{
                RowBox[{
                 FractionBox["1", "2"], " ", 
                 SubscriptBox["h", "p"], " ", 
                 RowBox[{"cos", "(", 
                  RowBox[{
                   SubscriptBox["\[Theta]", "p"], "(", "t", ")"}], ")"}]}], 
                "-", 
                RowBox[{
                 FractionBox["1", "2"], " ", 
                 SubscriptBox["l", "p"], " ", 
                 RowBox[{"sin", "(", 
                  RowBox[{
                   SubscriptBox["\[Theta]", "p"], "(", "t", ")"}], ")"}]}], 
                "+", 
                RowBox[{
                 SubscriptBox["y", "p"], "(", "t", ")"}], "-", 
                RowBox[{
                 SubscriptBox["y", "1"], "(", "t", ")"}]}], ")"}], "2"]}]]], 
          "+", 
          FractionBox[
           RowBox[{
            SubscriptBox["k", "2"], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", 
               RowBox[{
                FractionBox["1", "2"], " ", 
                SubscriptBox["h", "p"], " ", 
                RowBox[{"cos", "(", 
                 RowBox[{
                  SubscriptBox["\[Theta]", "p"], "(", "t", ")"}], ")"}]}]}], 
              "-", 
              RowBox[{
               FractionBox["1", "2"], " ", 
               SubscriptBox["l", "p"], " ", 
               RowBox[{"sin", "(", 
                RowBox[{
                 SubscriptBox["\[Theta]", "p"], "(", "t", ")"}], ")"}]}], "-", 
              RowBox[{
               SubscriptBox["y", "p"], "(", "t", ")"}], "+", 
              RowBox[{
               SubscriptBox["y", "2"], "(", "t", ")"}]}], ")"}], " ", 
            RowBox[{"(", 
             RowBox[{
              SqrtBox[
               RowBox[{
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{
                    FractionBox["1", "2"], " ", 
                    SubscriptBox["h", "p"], " ", 
                    RowBox[{"sin", "(", 
                    RowBox[{
                    SubscriptBox["\[Theta]", "p"], "(", "t", ")"}], ")"}]}], 
                   "-", 
                   RowBox[{
                    FractionBox["1", "2"], " ", 
                    SubscriptBox["l", "p"], " ", 
                    RowBox[{"cos", "(", 
                    RowBox[{
                    SubscriptBox["\[Theta]", "p"], "(", "t", ")"}], ")"}]}], 
                   "-", 
                   RowBox[{
                    SubscriptBox["x", "p"], "(", "t", ")"}], "+", 
                   RowBox[{
                    SubscriptBox["x", "2"], "(", "t", ")"}]}], ")"}], "2"], 
                "+", 
                RowBox[{
                 FractionBox["1", "4"], " ", 
                 SuperscriptBox[
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{
                    SubscriptBox["h", "p"], " ", 
                    RowBox[{"cos", "(", 
                    RowBox[{
                    SubscriptBox["\[Theta]", "p"], "(", "t", ")"}], ")"}]}], 
                    "+", 
                    RowBox[{
                    SubscriptBox["l", "p"], " ", 
                    RowBox[{"sin", "(", 
                    RowBox[{
                    SubscriptBox["\[Theta]", "p"], "(", "t", ")"}], ")"}]}], 
                    "+", 
                    RowBox[{"2", " ", 
                    RowBox[{
                    SubscriptBox["y", "p"], "(", "t", ")"}]}], "-", 
                    RowBox[{"2", " ", 
                    RowBox[{
                    SubscriptBox["y", "2"], "(", "t", ")"}]}]}], ")"}], 
                  "2"]}]}]], "-", 
              SubscriptBox["L0", "2"]}], ")"}]}], 
           SqrtBox[
            RowBox[{
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{
                RowBox[{
                 FractionBox["1", "2"], " ", 
                 SubscriptBox["h", "p"], " ", 
                 RowBox[{"sin", "(", 
                  RowBox[{
                   SubscriptBox["\[Theta]", "p"], "(", "t", ")"}], ")"}]}], 
                "-", 
                RowBox[{
                 FractionBox["1", "2"], " ", 
                 SubscriptBox["l", "p"], " ", 
                 RowBox[{"cos", "(", 
                  RowBox[{
                   SubscriptBox["\[Theta]", "p"], "(", "t", ")"}], ")"}]}], 
                "-", 
                RowBox[{
                 SubscriptBox["x", "p"], "(", "t", ")"}], "+", 
                RowBox[{
                 SubscriptBox["x", "2"], "(", "t", ")"}]}], ")"}], "2"], "+", 
             RowBox[{
              FractionBox["1", "4"], " ", 
              SuperscriptBox[
               RowBox[{"(", 
                RowBox[{
                 RowBox[{
                  SubscriptBox["h", "p"], " ", 
                  RowBox[{"cos", "(", 
                   RowBox[{
                    SubscriptBox["\[Theta]", "p"], "(", "t", ")"}], ")"}]}], 
                 "+", 
                 RowBox[{
                  SubscriptBox["l", "p"], " ", 
                  RowBox[{"sin", "(", 
                   RowBox[{
                    SubscriptBox["\[Theta]", "p"], "(", "t", ")"}], ")"}]}], 
                 "+", 
                 RowBox[{"2", " ", 
                  RowBox[{
                   SubscriptBox["y", "p"], "(", "t", ")"}]}], "-", 
                 RowBox[{"2", " ", 
                  RowBox[{
                   SubscriptBox["y", "2"], "(", "t", ")"}]}]}], ")"}], 
               "2"]}]}]]]}], "\[LongEqual]", 
         RowBox[{
          SubscriptBox["m", "p"], " ", 
          RowBox[{"(", 
           RowBox[{"g", "+", 
            RowBox[{
             SuperscriptBox[
              SubscriptBox["y", "p"], "\[Prime]\[Prime]",
              MultilineFunction->None], "(", "t", ")"}]}], ")"}]}]}]},
       {
        RowBox[{
         RowBox[{
          RowBox[{
           SubscriptBox["\[ImaginaryI]", 
            RowBox[{"p", ",", "zz"}]], " ", 
           RowBox[{
            SuperscriptBox[
             SubscriptBox["\[Theta]", "p"], "\[Prime]\[Prime]",
             MultilineFunction->None], "(", "t", ")"}]}], "+", 
          FractionBox[
           RowBox[{
            SubscriptBox["k", "1"], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               SubscriptBox["h", "p"], " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{
                  RowBox[{
                   SubscriptBox["x", "1"], "(", "t", ")"}], " ", 
                  RowBox[{"cos", "(", 
                   RowBox[{
                    SubscriptBox["\[Theta]", "p"], "(", "t", ")"}], ")"}]}], 
                 "-", 
                 RowBox[{
                  RowBox[{
                   SubscriptBox["x", "p"], "(", "t", ")"}], " ", 
                  RowBox[{"cos", "(", 
                   RowBox[{
                    SubscriptBox["\[Theta]", "p"], "(", "t", ")"}], ")"}]}], 
                 "+", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{
                    SubscriptBox["y", "1"], "(", "t", ")"}], "-", 
                    RowBox[{
                    SubscriptBox["y", "p"], "(", "t", ")"}]}], ")"}], " ", 
                  RowBox[{"sin", "(", 
                   RowBox[{
                    SubscriptBox["\[Theta]", "p"], "(", "t", ")"}], ")"}]}]}],
                 ")"}]}], "+", 
              RowBox[{
               SubscriptBox["l", "p"], " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{
                  RowBox[{
                   SubscriptBox["x", "1"], "(", "t", ")"}], " ", 
                  RowBox[{"(", 
                   RowBox[{"-", 
                    RowBox[{"sin", "(", 
                    RowBox[{
                    SubscriptBox["\[Theta]", "p"], "(", "t", ")"}], ")"}]}], 
                   ")"}]}], "+", 
                 RowBox[{
                  RowBox[{
                   SubscriptBox["x", "p"], "(", "t", ")"}], " ", 
                  RowBox[{"sin", "(", 
                   RowBox[{
                    SubscriptBox["\[Theta]", "p"], "(", "t", ")"}], ")"}]}], 
                 "+", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{
                    SubscriptBox["y", "1"], "(", "t", ")"}], "-", 
                    RowBox[{
                    SubscriptBox["y", "p"], "(", "t", ")"}]}], ")"}], " ", 
                  RowBox[{"cos", "(", 
                   RowBox[{
                    SubscriptBox["\[Theta]", "p"], "(", "t", ")"}], ")"}]}]}],
                 ")"}]}]}], ")"}], " ", 
            RowBox[{"(", 
             RowBox[{
              SqrtBox[
               RowBox[{
                RowBox[{
                 FractionBox["1", "4"], " ", 
                 SuperscriptBox[
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{
                    SubscriptBox["h", "p"], " ", 
                    RowBox[{"sin", "(", 
                    RowBox[{
                    SubscriptBox["\[Theta]", "p"], "(", "t", ")"}], ")"}]}], 
                    "+", 
                    RowBox[{
                    SubscriptBox["l", "p"], " ", 
                    RowBox[{"cos", "(", 
                    RowBox[{
                    SubscriptBox["\[Theta]", "p"], "(", "t", ")"}], ")"}]}], 
                    "-", 
                    RowBox[{"2", " ", 
                    RowBox[{
                    SubscriptBox["x", "p"], "(", "t", ")"}]}], "+", 
                    RowBox[{"2", " ", 
                    RowBox[{
                    SubscriptBox["x", "1"], "(", "t", ")"}]}]}], ")"}], 
                  "2"]}], "+", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{
                    FractionBox["1", "2"], " ", 
                    SubscriptBox["h", "p"], " ", 
                    RowBox[{"cos", "(", 
                    RowBox[{
                    SubscriptBox["\[Theta]", "p"], "(", "t", ")"}], ")"}]}], 
                   "-", 
                   RowBox[{
                    FractionBox["1", "2"], " ", 
                    SubscriptBox["l", "p"], " ", 
                    RowBox[{"sin", "(", 
                    RowBox[{
                    SubscriptBox["\[Theta]", "p"], "(", "t", ")"}], ")"}]}], 
                   "+", 
                   RowBox[{
                    SubscriptBox["y", "p"], "(", "t", ")"}], "-", 
                   RowBox[{
                    SubscriptBox["y", "1"], "(", "t", ")"}]}], ")"}], "2"]}]],
               "-", 
              SubscriptBox["L0", "1"]}], ")"}]}], 
           RowBox[{"2", " ", 
            SqrtBox[
             RowBox[{
              RowBox[{
               FractionBox["1", "4"], " ", 
               SuperscriptBox[
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   SubscriptBox["h", "p"], " ", 
                   RowBox[{"sin", "(", 
                    RowBox[{
                    SubscriptBox["\[Theta]", "p"], "(", "t", ")"}], ")"}]}], 
                  "+", 
                  RowBox[{
                   SubscriptBox["l", "p"], " ", 
                   RowBox[{"cos", "(", 
                    RowBox[{
                    SubscriptBox["\[Theta]", "p"], "(", "t", ")"}], ")"}]}], 
                  "-", 
                  RowBox[{"2", " ", 
                   RowBox[{
                    SubscriptBox["x", "p"], "(", "t", ")"}]}], "+", 
                  RowBox[{"2", " ", 
                   RowBox[{
                    SubscriptBox["x", "1"], "(", "t", ")"}]}]}], ")"}], 
                "2"]}], "+", 
              SuperscriptBox[
               RowBox[{"(", 
                RowBox[{
                 RowBox[{
                  FractionBox["1", "2"], " ", 
                  SubscriptBox["h", "p"], " ", 
                  RowBox[{"cos", "(", 
                   RowBox[{
                    SubscriptBox["\[Theta]", "p"], "(", "t", ")"}], ")"}]}], 
                 "-", 
                 RowBox[{
                  FractionBox["1", "2"], " ", 
                  SubscriptBox["l", "p"], " ", 
                  RowBox[{"sin", "(", 
                   RowBox[{
                    SubscriptBox["\[Theta]", "p"], "(", "t", ")"}], ")"}]}], 
                 "+", 
                 RowBox[{
                  SubscriptBox["y", "p"], "(", "t", ")"}], "-", 
                 RowBox[{
                  SubscriptBox["y", "1"], "(", "t", ")"}]}], ")"}], 
               "2"]}]]}]], "+", 
          FractionBox[
           RowBox[{
            SubscriptBox["k", "2"], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               SubscriptBox["h", "p"], " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{
                  RowBox[{
                   SubscriptBox["x", "2"], "(", "t", ")"}], " ", 
                  RowBox[{"cos", "(", 
                   RowBox[{
                    SubscriptBox["\[Theta]", "p"], "(", "t", ")"}], ")"}]}], 
                 "-", 
                 RowBox[{
                  RowBox[{
                   SubscriptBox["x", "p"], "(", "t", ")"}], " ", 
                  RowBox[{"cos", "(", 
                   RowBox[{
                    SubscriptBox["\[Theta]", "p"], "(", "t", ")"}], ")"}]}], 
                 "+", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{
                    SubscriptBox["y", "2"], "(", "t", ")"}], "-", 
                    RowBox[{
                    SubscriptBox["y", "p"], "(", "t", ")"}]}], ")"}], " ", 
                  RowBox[{"sin", "(", 
                   RowBox[{
                    SubscriptBox["\[Theta]", "p"], "(", "t", ")"}], ")"}]}]}],
                 ")"}]}], "+", 
              RowBox[{
               SubscriptBox["l", "p"], " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{
                  RowBox[{
                   SubscriptBox["x", "2"], "(", "t", ")"}], " ", 
                  RowBox[{"sin", "(", 
                   RowBox[{
                    SubscriptBox["\[Theta]", "p"], "(", "t", ")"}], ")"}]}], 
                 "-", 
                 RowBox[{
                  RowBox[{
                   SubscriptBox["x", "p"], "(", "t", ")"}], " ", 
                  RowBox[{"sin", "(", 
                   RowBox[{
                    SubscriptBox["\[Theta]", "p"], "(", "t", ")"}], ")"}]}], 
                 "+", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{
                    SubscriptBox["y", "p"], "(", "t", ")"}], "-", 
                    RowBox[{
                    SubscriptBox["y", "2"], "(", "t", ")"}]}], ")"}], " ", 
                  RowBox[{"cos", "(", 
                   RowBox[{
                    SubscriptBox["\[Theta]", "p"], "(", "t", ")"}], ")"}]}]}],
                 ")"}]}]}], ")"}], " ", 
            RowBox[{"(", 
             RowBox[{
              SqrtBox[
               RowBox[{
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{
                    FractionBox["1", "2"], " ", 
                    SubscriptBox["h", "p"], " ", 
                    RowBox[{"sin", "(", 
                    RowBox[{
                    SubscriptBox["\[Theta]", "p"], "(", "t", ")"}], ")"}]}], 
                   "-", 
                   RowBox[{
                    FractionBox["1", "2"], " ", 
                    SubscriptBox["l", "p"], " ", 
                    RowBox[{"cos", "(", 
                    RowBox[{
                    SubscriptBox["\[Theta]", "p"], "(", "t", ")"}], ")"}]}], 
                   "-", 
                   RowBox[{
                    SubscriptBox["x", "p"], "(", "t", ")"}], "+", 
                   RowBox[{
                    SubscriptBox["x", "2"], "(", "t", ")"}]}], ")"}], "2"], 
                "+", 
                RowBox[{
                 FractionBox["1", "4"], " ", 
                 SuperscriptBox[
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{
                    SubscriptBox["h", "p"], " ", 
                    RowBox[{"cos", "(", 
                    RowBox[{
                    SubscriptBox["\[Theta]", "p"], "(", "t", ")"}], ")"}]}], 
                    "+", 
                    RowBox[{
                    SubscriptBox["l", "p"], " ", 
                    RowBox[{"sin", "(", 
                    RowBox[{
                    SubscriptBox["\[Theta]", "p"], "(", "t", ")"}], ")"}]}], 
                    "+", 
                    RowBox[{"2", " ", 
                    RowBox[{
                    SubscriptBox["y", "p"], "(", "t", ")"}]}], "-", 
                    RowBox[{"2", " ", 
                    RowBox[{
                    SubscriptBox["y", "2"], "(", "t", ")"}]}]}], ")"}], 
                  "2"]}]}]], "-", 
              SubscriptBox["L0", "2"]}], ")"}]}], 
           RowBox[{"2", " ", 
            SqrtBox[
             RowBox[{
              SuperscriptBox[
               RowBox[{"(", 
                RowBox[{
                 RowBox[{
                  FractionBox["1", "2"], " ", 
                  SubscriptBox["h", "p"], " ", 
                  RowBox[{"sin", "(", 
                   RowBox[{
                    SubscriptBox["\[Theta]", "p"], "(", "t", ")"}], ")"}]}], 
                 "-", 
                 RowBox[{
                  FractionBox["1", "2"], " ", 
                  SubscriptBox["l", "p"], " ", 
                  RowBox[{"cos", "(", 
                   RowBox[{
                    SubscriptBox["\[Theta]", "p"], "(", "t", ")"}], ")"}]}], 
                 "-", 
                 RowBox[{
                  SubscriptBox["x", "p"], "(", "t", ")"}], "+", 
                 RowBox[{
                  SubscriptBox["x", "2"], "(", "t", ")"}]}], ")"}], "2"], "+", 
              RowBox[{
               FractionBox["1", "4"], " ", 
               SuperscriptBox[
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   SubscriptBox["h", "p"], " ", 
                   RowBox[{"cos", "(", 
                    RowBox[{
                    SubscriptBox["\[Theta]", "p"], "(", "t", ")"}], ")"}]}], 
                  "+", 
                  RowBox[{
                   SubscriptBox["l", "p"], " ", 
                   RowBox[{"sin", "(", 
                    RowBox[{
                    SubscriptBox["\[Theta]", "p"], "(", "t", ")"}], ")"}]}], 
                  "+", 
                  RowBox[{"2", " ", 
                   RowBox[{
                    SubscriptBox["y", "p"], "(", "t", ")"}]}], "-", 
                  RowBox[{"2", " ", 
                   RowBox[{
                    SubscriptBox["y", "2"], "(", "t", ")"}]}]}], ")"}], 
                "2"]}]}]]}]]}], "\[LongEqual]", "0"}]}
      },
      GridBoxAlignment->{
       "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
        "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.5599999999999999]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}],
     Column], "\[NoBreak]", ")"}],
   Function[BoxForm`e$, 
    MatrixForm[BoxForm`e$]]], TraditionalForm]], "Output",
 CellChangeTimes->{3.712290090695434*^9, 3.712451494236684*^9, 
  3.7126462873126726`*^9, 3.712792277000323*^9, 3.712831551283332*^9, 
  3.713461594445388*^9, 3.7139480263324814`*^9, 3.7141519266176453`*^9, 
  3.7141710996346645`*^9},
 FontSize->18,
 Background->RGBColor[1, 1, 0]]
}, Open  ]],

Cell[" ", "Text",
 Editable->False,
 Selectable->False,
 CellFrame->{{0, 0}, {0, 0.5}},
 ShowCellBracket->False,
 CellMargins->{{0, 0}, {1, 1}},
 CellElementSpacings->{"CellMinHeight"->1},
 CellFrameMargins->0,
 CellFrameColor->RGBColor[0, 0, 1],
 CellSize->{Inherited, 3}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"non", "-", 
     RowBox[{"conserving", " ", 
      RowBox[{"forces", ":", "\[IndentingNewLine]", "aerodynamic"}]}]}], " ", 
    "=", "  ", 
    RowBox[{"f", 
     RowBox[{"(", 
      RowBox[{
       OverscriptBox[
        SubscriptBox["x", "p"], "."], ",", 
       OverscriptBox[
        SubscriptBox["y", "p"], "."], ",", 
       SubscriptBox["\[Theta]", "p"], ",", " ", 
       SubscriptBox["w", "x"], ",", 
       SubscriptBox["w", "y"]}], ")"}]}]}], " ", ",", " ", 
   RowBox[{
    RowBox[{"w", " ", "for", " ", "wind", " ", 
     RowBox[{"components", "."}]}], " ", "=", " ", 
    RowBox[{"f", 
     RowBox[{"(", 
      RowBox[{
       SubscriptBox["relV", "x"], ",", 
       SubscriptBox["relV", "y"]}], ")"}]}]}], " ", ",", " ", 
   RowBox[{"relV", " ", "is", " ", "relative", " ", "to", " ", "air"}]}], 
  " "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"dumping", " ", 
   RowBox[{"(", "structural", ")"}]}], "=", " ", 
  RowBox[{
   RowBox[{"f", 
    RowBox[{"(", 
     OverscriptBox[
      SubscriptBox["l", "i"], "."], ")"}]}], "=", 
   RowBox[{"f", 
    RowBox[{"(", 
     RowBox[{
      OverscriptBox[
       SubscriptBox["x", "i"], "."], ",", 
      OverscriptBox[
       SubscriptBox["y", "i"], "."], ",", 
      OverscriptBox[
       SubscriptBox["x", "p"], "."], ",", 
      OverscriptBox[
       SubscriptBox["y", "p"], "."]}], ")"}]}]}]}]}], "Input",
 CellChangeTimes->{{3.7126500437307434`*^9, 3.7126501694208355`*^9}, 
   3.7126502290521765`*^9, {3.7126503014117236`*^9, 3.712650331072315*^9}, {
   3.712650702293164*^9, 3.7126507593603816`*^9}, {3.7126556510753436`*^9, 
   3.7126556677774086`*^9}, {3.714959537089729*^9, 3.7149595639332113`*^9}}],

Cell[" ", "Text",
 Editable->False,
 Selectable->False,
 CellFrame->{{0, 0}, {0, 3}},
 ShowCellBracket->False,
 CellMargins->{{0, 0}, {1, 1}},
 CellElementSpacings->{"CellMinHeight"->1},
 CellFrameMargins->0,
 CellFrameColor->RGBColor[0, 0, 1],
 CellSize->{Inherited, 5}],

Cell["non dim the full equations", "Text",
 CellChangeTimes->{{3.714171644963645*^9, 3.714171664303767*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(", 
   RowBox[{"smallEqs", "=", 
    RowBox[{
     RowBox[{"quadEqNominal", "/.", "terms2"}], "/.", "terms3"}]}], ")"}], "//",
   "MatrixForm"}]], "Input",
 CellChangeTimes->{{3.714171736156269*^9, 3.7141717665215025`*^9}, 
   3.7141718235455046`*^9, {3.714171861060299*^9, 3.7141718691564713`*^9}, {
   3.714172046680708*^9, 3.7141720590047817`*^9}},
 FontSize->36,
 Background->RGBColor[0.87, 0.94, 1]],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", 
   TagBox[GridBox[{
      {
       RowBox[{
        RowBox[{
         FractionBox[
          RowBox[{"r1x", " ", 
           SubscriptBox["k", "1"], " ", 
           RowBox[{"(", 
            RowBox[{"a", "-", 
             SubscriptBox["L0", "1"]}], ")"}]}], 
          SqrtBox[
           SuperscriptBox["a", "2"]]], "+", 
         FractionBox[
          RowBox[{"r2x", " ", 
           SubscriptBox["k", "2"], " ", 
           RowBox[{"(", 
            RowBox[{"b", "-", 
             SubscriptBox["L0", "2"]}], ")"}]}], 
          SqrtBox[
           SuperscriptBox["b", "2"]]]}], "\[Equal]", 
        RowBox[{
         SubscriptBox["m", "p"], " ", 
         RowBox[{
          SuperscriptBox[
           SubscriptBox["x", "p"], "\[Prime]\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}]}]},
      {
       RowBox[{
        RowBox[{
         FractionBox[
          RowBox[{"r1y", " ", 
           SubscriptBox["k", "1"], " ", 
           RowBox[{"(", 
            RowBox[{"a", "-", 
             SubscriptBox["L0", "1"]}], ")"}]}], 
          SqrtBox[
           SuperscriptBox["a", "2"]]], "+", 
         FractionBox[
          RowBox[{"r2y", " ", 
           SubscriptBox["k", "2"], " ", 
           RowBox[{"(", 
            RowBox[{"b", "-", 
             SubscriptBox["L0", "2"]}], ")"}]}], 
          SqrtBox[
           SuperscriptBox["b", "2"]]]}], "\[Equal]", 
        RowBox[{
         SubscriptBox["m", "p"], " ", 
         RowBox[{"(", 
          RowBox[{"g", "+", 
           RowBox[{
            SuperscriptBox[
             SubscriptBox["y", "p"], "\[Prime]\[Prime]",
             MultilineFunction->None], "[", "t", "]"}]}], ")"}]}]}]},
      {
       RowBox[{
        RowBox[{
         FractionBox[
          RowBox[{"c1", " ", 
           SubscriptBox["k", "1"], " ", 
           RowBox[{"(", 
            RowBox[{"a", "-", 
             SubscriptBox["L0", "1"]}], ")"}]}], 
          SqrtBox[
           SuperscriptBox["a", "2"]]], "+", 
         FractionBox[
          RowBox[{"c2", " ", 
           SubscriptBox["k", "2"], " ", 
           RowBox[{"(", 
            RowBox[{"b", "-", 
             SubscriptBox["L0", "2"]}], ")"}]}], 
          SqrtBox[
           SuperscriptBox["b", "2"]]], "+", 
         RowBox[{
          SubscriptBox["\[ImaginaryI]", 
           RowBox[{"p", ",", "zz"}]], " ", 
          RowBox[{
           SuperscriptBox[
            SubscriptBox["\[Theta]", "p"], "\[Prime]\[Prime]",
            MultilineFunction->None], "[", "t", "]"}]}]}], "\[Equal]", "0"}]}
     },
     GridBoxAlignment->{
      "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}},
        "RowsIndexed" -> {}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
         Offset[0.2], {
          Offset[0.4]}, 
         Offset[0.2]}, "RowsIndexed" -> {}}],
    Column], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.7141718700444946`*^9, 3.714172059624795*^9},
 FontSize->36,
 Background->RGBColor[0.87, 0.94, 1]]
}, Open  ]],

Cell["NonDimEq manually settings the terms:", "Text",
 CellChangeTimes->{{3.714172252146077*^9, 3.7141722552141523`*^9}, {
  3.714180452805065*^9, 3.714180462773306*^9}},
 FontSize->24],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   OverscriptBox[
    SubscriptBox["y", "p"], "~"], "[", "t", "]"}], "=", 
  RowBox[{
   RowBox[{
    RowBox[{
     SubscriptBox["y", "p"], "[", "t", "]"}], " ", "/", 
    SubscriptBox["L0", "1"]}], "  ", "or", " ", "any", " ", "other", " ", 
   "of", " ", "the", " ", "lengths", " ", "varialbes", " ", 
   RowBox[{"(", 
    RowBox[{
     SubscriptBox["x", "p"], ",", "r1x", ",", "r1y", ",", "r2x", ",", "r2y", 
     ",", 
     SubscriptBox["h", "p"], ",", 
     SubscriptBox["l", "p"]}], ")"}]}]}], "\[IndentingNewLine]", 
 RowBox[{"t", "=", 
  RowBox[{"\[Tau]", "/", 
   SubscriptBox["\[Omega]", "s"]}]}], "\[IndentingNewLine]", 
 RowBox[{
  SuperscriptBox[
   SubscriptBox["\[Omega]", "s"], "2"], "=", 
  RowBox[{
   FractionBox[
    SubscriptBox["k", "1"], 
    SubscriptBox["m", "p"]], "[", 
   RowBox[{
    FractionBox["g", "l"], "=", 
    FractionBox["1", 
     SuperscriptBox["s", "2"]]}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"A", " ", "is", " ", "non"}], "-", 
  RowBox[{"dimentional", "  ", "form", " ", 
   RowBox[{"of", " ", "'"}], 
   RowBox[{"a", "'"}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"B", " ", "is", " ", "non"}], "-", 
  RowBox[{"dimentional", "  ", "form", " ", 
   RowBox[{"of", " ", "'"}], 
   RowBox[{"b", "'"}]}]}]}], "Input",
 CellChangeTimes->{
  3.7143859742405353`*^9, {3.714387097214754*^9, 3.7143871116663647`*^9}, {
   3.7143878062327795`*^9, 3.714387811703418*^9}}],

Cell[BoxData[
 FormBox[
  TagBox[
   RowBox[{"(", "\[NoBreak]", 
    TagBox[GridBox[{
       {
        RowBox[{
         RowBox[{
          FractionBox[
           RowBox[{
            RowBox[{"(", 
             RowBox[{"1", "-", 
              FractionBox["1", "A"]}], ")"}], " ", 
            SubscriptBox["k", "1"], " ", 
            SubscriptBox["L0", "1"], " ", "r1x"}], 
           SubscriptBox["m", "p"]], "+", 
          FractionBox[
           RowBox[{
            SubscriptBox["k", "2"], " ", 
            SubscriptBox["L0", "1"], " ", "r2x", " ", 
            RowBox[{"(", 
             RowBox[{"1", "-", 
              FractionBox[
               SubscriptBox["L0", "2"], 
               RowBox[{"B", " ", 
                SubscriptBox["L0", "1"]}]]}], ")"}]}], 
           SubscriptBox["m", "p"]]}], "\[LongEqual]", 
         RowBox[{
          SubscriptBox["L0", "1"], " ", 
          SubsuperscriptBox["\[Omega]", "s", "2"], " ", 
          RowBox[{
           SuperscriptBox[
            SubscriptBox["x", "p"], "\[Prime]\[Prime]",
            MultilineFunction->None], "(", "t", ")"}]}]}]},
       {
        RowBox[{
         RowBox[{
          FractionBox[
           RowBox[{
            RowBox[{"(", 
             RowBox[{"1", "-", 
              FractionBox["1", "A"]}], ")"}], " ", 
            SubscriptBox["k", "1"], " ", 
            SubscriptBox["L0", "1"], " ", "r1y"}], 
           SubscriptBox["m", "p"]], "+", 
          FractionBox[
           RowBox[{
            SubscriptBox["k", "2"], " ", 
            SubscriptBox["L0", "1"], " ", "r2y", " ", 
            RowBox[{"(", 
             RowBox[{"1", "-", 
              FractionBox[
               SubscriptBox["L0", "2"], 
               RowBox[{"B", " ", 
                SubscriptBox["L0", "1"]}]]}], ")"}]}], 
           SubscriptBox["m", "p"]], "-", "g"}], "\[LongEqual]", 
         RowBox[{
          SubscriptBox["L0", "1"], " ", 
          SubsuperscriptBox["\[Omega]", "s", "2"], " ", 
          RowBox[{
           SuperscriptBox[
            SubscriptBox["y", "p"], "\[Prime]\[Prime]",
            MultilineFunction->None], "(", "t", ")"}]}]}]},
       {
        RowBox[{
         RowBox[{
          RowBox[{"-", 
           FractionBox[
            RowBox[{
             RowBox[{"(", 
              RowBox[{"1", "-", 
               FractionBox["1", "A"]}], ")"}], " ", 
             SubscriptBox["c", "1"], " ", 
             SubscriptBox["k", "1"], " ", 
             SubsuperscriptBox["L0", "1", "2"]}], 
            SubscriptBox["\[ImaginaryI]", 
             RowBox[{"p", ",", "zz"}]]]}], "-", 
          FractionBox[
           RowBox[{
            SubscriptBox["c", "2"], " ", 
            SubscriptBox["k", "2"], " ", 
            SubsuperscriptBox["L0", "1", "2"], " ", 
            RowBox[{"(", 
             RowBox[{"1", "-", 
              FractionBox[
               SubscriptBox["L0", "2"], 
               RowBox[{"B", " ", 
                SubscriptBox["L0", "1"]}]]}], ")"}]}], 
           SubscriptBox["\[ImaginaryI]", 
            RowBox[{"p", ",", "zz"}]]]}], "\[LongEqual]", 
         RowBox[{
          SubsuperscriptBox["\[Omega]", "s", "2"], " ", 
          RowBox[{
           SuperscriptBox[
            SubscriptBox["\[Theta]", "p"], "\[Prime]\[Prime]",
            MultilineFunction->None], "(", "t", ")"}]}]}]}
      },
      GridBoxAlignment->{
       "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
        "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.5599999999999999]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}],
     Column], "\[NoBreak]", ")"}],
   Function[BoxForm`e$, 
    MatrixForm[BoxForm`e$]]], TraditionalForm]], "Output",
 CellChangeTimes->{{3.7141809407776604`*^9, 3.71418096114718*^9}, 
   3.7141810047443304`*^9, {3.7141810445789814`*^9, 3.714181080771454*^9}, 
   3.7143860139705524`*^9, 3.714386467653723*^9, 3.7143874237010694`*^9, {
   3.714389212153591*^9, 3.7143892387212486`*^9}},
 FontSize->24,
 Background->RGBColor[0.94, 0.91, 0.88]]
}, Open  ]],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
   SubscriptBox["Delta", "Equilibrium"], "=", 
   FractionBox[
    RowBox[{
     SubscriptBox["m", "p"], "g"}], 
    SubscriptBox["k", "i"]]}], "*)"}]], "Input",
 CellChangeTimes->{3.71438606382195*^9}],

Cell[BoxData[
 RowBox[{"greekTerms", "=", 
  RowBox[{"{", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     FractionBox[
      SubscriptBox["k", "2"], 
      SubscriptBox["k", "1"]], "\[Rule]", "\[Kappa]"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     FractionBox[
      SubscriptBox["L0", "2"], 
      SubscriptBox["L0", "1"]], "\[Rule]", "\[ScriptCapitalL]"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     FractionBox[
      SubscriptBox["k", "1"], 
      SubscriptBox["m", "p"]], "->", 
     SuperscriptBox[
      SubscriptBox["\[Omega]", "s"], "2"]}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      FractionBox[
       RowBox[{
        SubscriptBox["m", "p"], 
        SuperscriptBox[
         SubscriptBox["L0", "1"], "2"]}], 
       SubscriptBox["I", "p"]], 
      RowBox[{"(", 
       RowBox[{"=", 
        FractionBox[
         RowBox[{
          SuperscriptBox[
           SubscriptBox["L0", "1"], "2"], 
          SubscriptBox["k", "1"]}], 
         RowBox[{
          SubscriptBox["I", "p"], 
          SuperscriptBox[
           SubscriptBox["\[Omega]", "s"], "2"]}]]}], ")"}]}], "\[Rule]", 
     "\[Alpha]"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      FractionBox["g", 
       RowBox[{
        SubscriptBox["L0", "1"], " ", 
        SubsuperscriptBox["\[Omega]", "s", "2"]}]], 
      RowBox[{"(", 
       RowBox[{"=", 
        FractionBox[
         RowBox[{"g", " ", 
          SubscriptBox["m", "p"]}], 
         RowBox[{
          SubscriptBox["L0", "1"], 
          SubscriptBox["k", "1"]}]]}], ")"}]}], "\[Rule]", "\[Gamma]"}]}], 
   "\[IndentingNewLine]", "}"}]}]], "Input",
 CellChangeTimes->{{3.7143879104856024`*^9, 3.7143879494561462`*^9}, 
   3.7143893333946447`*^9, {3.714389447058155*^9, 3.714389537391204*^9}, {
   3.7143896588765364`*^9, 3.7143896974471874`*^9}, {3.714389794051433*^9, 
   3.71438979622888*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"(", 
     RowBox[{"NonDimEq", "=", 
      RowBox[{"{", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{
           SubsuperscriptBox["\[Omega]", "s", "2"], " ", 
           SubscriptBox["L0", "1"], 
           RowBox[{"(", 
            RowBox[{"1", "-", 
             FractionBox["1", "A"]}], ")"}], "r1x"}], " ", "+", 
          RowBox[{"\[Kappa]", " ", 
           SubsuperscriptBox["\[Omega]", "s", "2"], "  ", 
           SubscriptBox["L0", "1"], 
           RowBox[{"(", 
            RowBox[{"1", "-", 
             RowBox[{
              FractionBox["1", "B"], "\[ScriptCapitalL]"}]}], ")"}], 
           "r2x"}]}], " ", "==", 
         RowBox[{
          SubscriptBox["L0", "1"], " ", 
          SubsuperscriptBox["\[Omega]", "s", "2"], 
          RowBox[{
           SuperscriptBox[
            SubscriptBox["x", "p"], "\[Prime]\[Prime]",
            MultilineFunction->None], "[", "t", "]"}]}]}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{
          RowBox[{
           SubsuperscriptBox["\[Omega]", "s", "2"], 
           SubscriptBox["L0", "1"], 
           RowBox[{"(", 
            RowBox[{"1", "-", 
             FractionBox["1", "A"]}], ")"}], "r1y"}], " ", "+", 
          RowBox[{"\[Kappa]", " ", 
           SubsuperscriptBox["\[Omega]", "s", "2"], "  ", 
           SubscriptBox["L0", "1"], 
           RowBox[{"(", 
            RowBox[{"1", "-", 
             RowBox[{
              FractionBox["1", "B"], "\[ScriptCapitalL]"}]}], ")"}], "r2y"}], 
          " ", "-", 
          RowBox[{
           FractionBox["g", 
            RowBox[{
             SubscriptBox["L0", "1"], " ", 
             SubsuperscriptBox["\[Omega]", "s", "2"]}]], 
           SubscriptBox["L0", "1"], " ", 
           SubsuperscriptBox["\[Omega]", "s", "2"]}]}], "==", 
         RowBox[{
          SubscriptBox["L0", "1"], " ", 
          SubsuperscriptBox["\[Omega]", "s", "2"], 
          RowBox[{
           SuperscriptBox[
            SubscriptBox["y", "p"], "\[Prime]\[Prime]",
            MultilineFunction->None], "[", "t", "]"}]}]}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{
          RowBox[{
           FractionBox[
            SubscriptBox["k", "1"], 
            RowBox[{"-", 
             SubscriptBox["\[ImaginaryI]", 
              RowBox[{"p", ",", "zz"}]]}]], " ", 
           FractionBox[
            SuperscriptBox[
             SubscriptBox["L0", "1"], "2"], 
            SubsuperscriptBox["\[Omega]", "s", "2"]], 
           SubsuperscriptBox["\[Omega]", "s", "2"], 
           RowBox[{"(", 
            RowBox[{"1", "-", 
             FractionBox["1", "A"]}], ")"}], 
           SubscriptBox["c", "1"]}], " ", "+", 
          RowBox[{"\[Kappa]", " ", 
           FractionBox[
            SubscriptBox["k", "1"], 
            RowBox[{"-", 
             SubscriptBox["\[ImaginaryI]", 
              RowBox[{"p", ",", "zz"}]]}]], " ", 
           FractionBox[
            SuperscriptBox[
             SubscriptBox["L0", "1"], "2"], 
            SubsuperscriptBox["\[Omega]", "s", "2"]], 
           SubsuperscriptBox["\[Omega]", "s", "2"], 
           RowBox[{"(", 
            RowBox[{"1", "-", 
             RowBox[{
              FractionBox["1", "B"], "\[ScriptCapitalL]"}]}], ")"}], 
           SubscriptBox["c", "2"]}]}], "==", 
         RowBox[{
          SubsuperscriptBox["\[Omega]", "s", "2"], " ", 
          RowBox[{
           SuperscriptBox[
            SubscriptBox["\[Theta]", "p"], "\[Prime]\[Prime]",
            MultilineFunction->None], "[", "t", "]"}]}]}]}], 
       "\[IndentingNewLine]", "}"}]}], ")"}], "//", "Flatten"}], "//", 
   "MatrixForm"}], "//", "TraditionalForm"}]], "Input",
 CellChangeTimes->{{3.7143876348261805`*^9, 3.714387792648102*^9}, {
  3.7143881320989227`*^9, 3.7143881529918175`*^9}, {3.7143883645383368`*^9, 
  3.714388374252798*^9}, {3.714389166022051*^9, 3.7143891926065807`*^9}}],

Cell[BoxData[
 FormBox[
  TagBox[
   RowBox[{"(", "\[NoBreak]", 
    TagBox[GridBox[{
       {
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{"1", "-", 
             FractionBox["1", "A"]}], ")"}], " ", 
           SubscriptBox["L0", "1"], " ", "r1x", " ", 
           SubsuperscriptBox["\[Omega]", "s", "2"]}], "+", 
          RowBox[{"\[Kappa]", " ", 
           SubscriptBox["L0", "1"], " ", "r2x", " ", 
           RowBox[{"(", 
            RowBox[{"1", "-", 
             FractionBox["\[ScriptCapitalL]", "B"]}], ")"}], " ", 
           SubsuperscriptBox["\[Omega]", "s", "2"]}]}], "\[LongEqual]", 
         RowBox[{
          SubscriptBox["L0", "1"], " ", 
          SubsuperscriptBox["\[Omega]", "s", "2"], " ", 
          RowBox[{
           SuperscriptBox[
            SubscriptBox["x", "p"], "\[Prime]\[Prime]",
            MultilineFunction->None], "(", "t", ")"}]}]}]},
       {
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{"1", "-", 
             FractionBox["1", "A"]}], ")"}], " ", 
           SubscriptBox["L0", "1"], " ", "r1y", " ", 
           SubsuperscriptBox["\[Omega]", "s", "2"]}], "+", 
          RowBox[{"\[Kappa]", " ", 
           SubscriptBox["L0", "1"], " ", "r2y", " ", 
           RowBox[{"(", 
            RowBox[{"1", "-", 
             FractionBox["\[ScriptCapitalL]", "B"]}], ")"}], " ", 
           SubsuperscriptBox["\[Omega]", "s", "2"]}], "-", "g"}], 
         "\[LongEqual]", 
         RowBox[{
          SubscriptBox["L0", "1"], " ", 
          SubsuperscriptBox["\[Omega]", "s", "2"], " ", 
          RowBox[{
           SuperscriptBox[
            SubscriptBox["y", "p"], "\[Prime]\[Prime]",
            MultilineFunction->None], "(", "t", ")"}]}]}]},
       {
        RowBox[{
         RowBox[{
          RowBox[{"-", 
           FractionBox[
            RowBox[{
             RowBox[{"(", 
              RowBox[{"1", "-", 
               FractionBox["1", "A"]}], ")"}], " ", 
             SubscriptBox["c", "1"], " ", 
             SubscriptBox["k", "1"], " ", 
             SubsuperscriptBox["L0", "1", "2"]}], 
            SubscriptBox["\[ImaginaryI]", 
             RowBox[{"p", ",", "zz"}]]]}], "-", 
          FractionBox[
           RowBox[{
            SubscriptBox["c", "2"], " ", "\[Kappa]", " ", 
            SubscriptBox["k", "1"], " ", 
            SubsuperscriptBox["L0", "1", "2"], " ", 
            RowBox[{"(", 
             RowBox[{"1", "-", 
              FractionBox["\[ScriptCapitalL]", "B"]}], ")"}]}], 
           SubscriptBox["\[ImaginaryI]", 
            RowBox[{"p", ",", "zz"}]]]}], "\[LongEqual]", 
         RowBox[{
          SubsuperscriptBox["\[Omega]", "s", "2"], " ", 
          RowBox[{
           SuperscriptBox[
            SubscriptBox["\[Theta]", "p"], "\[Prime]\[Prime]",
            MultilineFunction->None], "(", "t", ")"}]}]}]}
      },
      GridBoxAlignment->{
       "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
        "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.5599999999999999]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}],
     Column], "\[NoBreak]", ")"}],
   Function[BoxForm`e$, 
    MatrixForm[BoxForm`e$]]], TraditionalForm]], "Output",
 CellChangeTimes->{{3.7143891476968637`*^9, 3.7143891929508095`*^9}}]
}, Open  ]],

Cell[" ", "Text",
 Editable->False,
 Selectable->False,
 CellFrame->{{0, 0}, {0, 2}},
 ShowCellBracket->False,
 CellMargins->{{0, 0}, {1, 1}},
 CellElementSpacings->{"CellMinHeight"->1},
 CellFrameMargins->0,
 CellFrameColor->RGBColor[0, 0, 1],
 CellSize->{Inherited, 4}],

Cell[BoxData[
 RowBox[{
  OverscriptBox["\[ScriptCapitalX]", ".."], "=", 
  RowBox[{
   RowBox[{
    RowBox[{"(", GridBox[{
       {"1", "0", "0"},
       {"0", "1", "0"},
       {"0", "0", 
        RowBox[{"-", "\[Alpha]"}]}
      }], ")"}], 
    RowBox[{"(", 
     RowBox[{"1", "-", 
      FractionBox["1", "A"]}], ")"}], 
    SubscriptBox["\[ScriptCapitalV]", "1"]}], "+", 
   RowBox[{"\[Kappa]", 
    RowBox[{"(", GridBox[{
       {"1", "0", "0"},
       {"0", "1", "0"},
       {"0", "0", 
        RowBox[{"-", "\[Alpha]"}]}
      }], ")"}], 
    RowBox[{"(", 
     RowBox[{"1", "-", 
      RowBox[{
       FractionBox["1", "B"], "\[ScriptCapitalL]"}]}], ")"}], 
    SubscriptBox["\[ScriptCapitalV]", "2"]}], "-", 
   RowBox[{"(", GridBox[{
      {"0"},
      {"\[Gamma]"},
      {"0"}
     }], ")"}], "-", 
   RowBox[{"Cmat", ".", 
    OverscriptBox["\[ScriptCapitalX]", "."]}], "+", "Forces"}]}]], "Input",
 CellChangeTimes->{{3.714389892716267*^9, 3.7143898970131283`*^9}, {
  3.714389965562713*^9, 3.714390009608005*^9}, {3.7143900794907255`*^9, 
  3.7143901818982353`*^9}, {3.715216322087405*^9, 3.7152163595562115`*^9}, {
  3.7152163990184126`*^9, 3.715216404562532*^9}}],

Cell[BoxData[
 RowBox[{
  OverscriptBox["\[ScriptCapitalX]", ".."], "=", 
  RowBox[{"f", "[", 
   RowBox[{"\[ScriptCapitalX]", ",", 
    OverscriptBox["\[ScriptCapitalX]", "."]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.715216362092267*^9, 3.715216381693636*^9}}],

Cell[" ", "Text",
 Editable->False,
 Selectable->False,
 CellFrame->{{0, 0}, {0, 2}},
 ShowCellBracket->False,
 CellMargins->{{0, 0}, {1, 1}},
 CellElementSpacings->{"CellMinHeight"->1},
 CellFrameMargins->0,
 CellFrameColor->RGBColor[0, 0, 1],
 CellSize->{Inherited, 4}],

Cell[" ", "Text",
 Editable->False,
 Selectable->False,
 CellFrame->{{0, 0}, {0, 0.5}},
 ShowCellBracket->False,
 CellMargins->{{0, 0}, {1, 1}},
 CellElementSpacings->{"CellMinHeight"->1},
 CellFrameMargins->0,
 CellFrameColor->RGBColor[0, 0, 1],
 CellSize->{Inherited, 3}],

Cell[" ", "Text",
 Editable->False,
 Selectable->False,
 CellFrame->{{0, 0}, {0, 2}},
 ShowCellBracket->False,
 CellMargins->{{0, 0}, {1, 1}},
 CellElementSpacings->{"CellMinHeight"->1},
 CellFrameMargins->0,
 CellFrameColor->RGBColor[0, 0, 1],
 CellSize->{Inherited, 4}],

Cell[" ", "Text",
 Editable->False,
 Selectable->False,
 CellFrame->{{0, 0}, {0, 0.5}},
 ShowCellBracket->False,
 CellMargins->{{0, 0}, {1, 1}},
 CellElementSpacings->{"CellMinHeight"->1},
 CellFrameMargins->0,
 CellFrameColor->RGBColor[0, 0, 1],
 CellSize->{Inherited, 3}],

Cell[BoxData[
 RowBox[{"Quit", "[", "]"}]], "Input",
 CellChangeTimes->{{3.715194288843802*^9, 3.715194290570945*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"\[ScriptCapitalX]", "=", 
   RowBox[{"(", GridBox[{
      {
       RowBox[{
        SubscriptBox["x", "p"], "[", "t", "]"}]},
      {
       RowBox[{
        SubscriptBox["y", "p"], "[", "t", "]"}]},
      {
       RowBox[{
        SubscriptBox["\[Theta]", "p"], "[", "t", "]"}]}
     }], ")"}]}], 
  RowBox[{"(*", 
   RowBox[{"//", "Flatten"}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{"greekTermsSymetricCase", "=", 
  RowBox[{"{", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     FractionBox[
      SubscriptBox["k", "2"], 
      SubscriptBox["k", "1"]], "\[Rule]"}], "*)"}], 
   RowBox[{
    RowBox[{"\[Kappa]", "\[Rule]", "1"}], ",", "\[IndentingNewLine]", 
    RowBox[{"(*", 
     RowBox[{
      FractionBox[
       SubscriptBox["L0", "2"], 
       SubscriptBox["L0", "1"]], "\[Rule]"}], "*)"}], 
    RowBox[{"\[ScriptCapitalL]", "\[Rule]", "1"}]}], "\[IndentingNewLine]", 
   "}"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"greekTermsGeneral", "=", 
   RowBox[{"{", "\[IndentingNewLine]", 
    RowBox[{"(*", 
     RowBox[{
      FractionBox[
       SubscriptBox["k", "2"], 
       SubscriptBox["k", "1"]], "\[Rule]"}], "*)"}], 
    RowBox[{
     RowBox[{"\[Kappa]", "\[Rule]", "1"}], ",", "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{
       FractionBox[
        SubscriptBox["L0", "2"], 
        SubscriptBox["L0", "1"]], "\[Rule]"}], "*)"}], 
     RowBox[{"\[ScriptCapitalL]", "\[Rule]", "1"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{
       FractionBox[
        SubscriptBox["k", "1"], 
        SubscriptBox["m", "p"]], "->"}], "*)"}], 
     RowBox[{
      SuperscriptBox[
       SubscriptBox["\[Omega]", "s"], "2"], "\[Rule]", "1"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{
       RowBox[{
        FractionBox[
         RowBox[{
          SubscriptBox["m", "p"], 
          SuperscriptBox[
           SubscriptBox["L0", "1"], "2"]}], 
         SubscriptBox["I", "p"]], 
        RowBox[{"(", 
         RowBox[{"=", 
          FractionBox[
           RowBox[{
            SuperscriptBox[
             SubscriptBox["L0", "1"], "2"], 
            SubscriptBox["k", "1"]}], 
           RowBox[{
            SubscriptBox["I", "p"], 
            SuperscriptBox[
             SubscriptBox["\[Omega]", "s"], "2"]}]]}], ")"}]}], "\[Rule]"}], 
      "*)"}], 
     RowBox[{"\[Alpha]", "\[Rule]", "1"}], ",", "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{
       RowBox[{
        FractionBox["g", 
         RowBox[{
          SubscriptBox["L0", "1"], " ", 
          SubsuperscriptBox["\[Omega]", "s", "2"]}]], 
        RowBox[{"(", 
         RowBox[{"=", 
          FractionBox[
           RowBox[{"g", " ", 
            SubscriptBox["m", "p"]}], 
           RowBox[{
            SubscriptBox["L0", "1"], 
            SubscriptBox["k", "1"]}]]}], ")"}]}], "\[Rule]"}], " ", "*)"}], 
     RowBox[{"\[Gamma]", "\[Rule]", "1"}]}], " ", 
    RowBox[{"(*", " ", 
     RowBox[{
      RowBox[{
      "make", " ", "sure", " ", "it", " ", "is", " ", "not", " ", "over"}], 
      "-", 
      RowBox[{"determined", " ", "constant"}]}], " ", "*)"}], 
    "\[IndentingNewLine]", "\[IndentingNewLine]", "}"}]}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"already", " ", 
     RowBox[{"here", " ", ":", " ", 
      RowBox[{"replacing", " ", 
       StyleBox["all",
        FontWeight->"Plain"], " ", "former", " ", 
       SubscriptBox["h", "p"]}]}]}], ",", 
    RowBox[{
     SubscriptBox["l", "p"], " ", "with", " ", "new", " ", "2", 
     SubscriptBox["h", "p"]}], ",", 
    RowBox[{"2", 
     SubscriptBox["l", "p"]}]}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"A", 
   RowBox[{"(*", 
    RowBox[{"\[Rule]", 
     SqrtBox[
      RowBox[{
       SuperscriptBox["r1x", "2"], "+", 
       SuperscriptBox["r1y", "2"]}]]}], "*)"}], "=", 
   RowBox[{"\[Sqrt]", 
    RowBox[{"(", 
     RowBox[{
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"Sin", "[", 
           RowBox[{
            SubscriptBox["\[Theta]", "p"], "[", "t", "]"}], "]"}], " ", 
          SubscriptBox["h", "p"]}], "+", 
         RowBox[{
          RowBox[{"Cos", "[", 
           RowBox[{
            SubscriptBox["\[Theta]", "p"], "[", "t", "]"}], "]"}], " ", 
          SubscriptBox["l", "p"]}], "+", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            SubscriptBox["x", "1"], "[", "t", "]"}], "-", 
           RowBox[{
            SubscriptBox["x", "p"], "[", "t", "]"}]}], ")"}]}], ")"}], "2"], 
      "+", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"-", " ", 
           RowBox[{"Cos", "[", 
            RowBox[{
             SubscriptBox["\[Theta]", "p"], "[", "t", "]"}], "]"}]}], " ", 
          SubscriptBox["h", "p"]}], "+", " ", 
         RowBox[{
          RowBox[{"Sin", "[", 
           RowBox[{
            SubscriptBox["\[Theta]", "p"], "[", "t", "]"}], "]"}], " ", 
          SubscriptBox["l", "p"]}], "+", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            SubscriptBox["y", "1"], "[", "t", "]"}], "-", 
           RowBox[{
            SubscriptBox["y", "p"], "[", "t", "]"}]}], ")"}]}], ")"}], "2"]}],
      ")"}]}]}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"B", 
   RowBox[{"(*", 
    RowBox[{"\[Rule]", 
     SqrtBox[
      RowBox[{
       SuperscriptBox["r2x", "2"], "+", 
       SuperscriptBox["r2y", "2"]}]]}], "*)"}], "=", 
   RowBox[{"\[Sqrt]", 
    RowBox[{"(", 
     RowBox[{
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"Sin", "[", 
           RowBox[{
            SubscriptBox["\[Theta]", "p"], "[", "t", "]"}], "]"}], " ", 
          SubscriptBox["h", "p"]}], "-", 
         RowBox[{
          RowBox[{"Cos", "[", 
           RowBox[{
            SubscriptBox["\[Theta]", "p"], "[", "t", "]"}], "]"}], " ", 
          SubscriptBox["l", "p"]}], "+", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            SubscriptBox["x", "2"], "[", "t", "]"}], "-", 
           RowBox[{
            SubscriptBox["x", "p"], "[", "t", "]"}]}], ")"}]}], ")"}], "2"], 
      "+", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"-", " ", 
           RowBox[{"Cos", "[", 
            RowBox[{
             SubscriptBox["\[Theta]", "p"], "[", "t", "]"}], "]"}]}], " ", 
          SubscriptBox["h", "p"]}], "-", " ", 
         RowBox[{
          RowBox[{"Sin", "[", 
           RowBox[{
            SubscriptBox["\[Theta]", "p"], "[", "t", "]"}], "]"}], " ", 
          SubscriptBox["l", "p"]}], "+", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            SubscriptBox["y", "2"], "[", "t", "]"}], "-", 
           RowBox[{
            SubscriptBox["y", "p"], "[", "t", "]"}]}], ")"}]}], ")"}], "2"]}],
      ")"}]}]}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    SubscriptBox["c", "1"], 
    RowBox[{"(*", 
     RowBox[{"\[Rule]", 
      RowBox[{"dr1", "+", "dr2"}]}], "*)"}], "=", 
    RowBox[{
     RowBox[{
      RowBox[{
       SubscriptBox["l", "p"], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"-", 
           RowBox[{"Sin", "[", 
            RowBox[{
             SubscriptBox["\[Theta]", "p"], "[", "t", "]"}], "]"}]}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             SubscriptBox["x", "1"], "[", "t", "]"}], "-", " ", 
            RowBox[{
             SubscriptBox["x", "p"], "[", "t", "]"}]}], ")"}]}], "+", 
         RowBox[{
          RowBox[{"Cos", "[", 
           RowBox[{
            SubscriptBox["\[Theta]", "p"], "[", "t", "]"}], "]"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             SubscriptBox["y", "1"], "[", "t", "]"}], "-", 
            RowBox[{
             SubscriptBox["y", "p"], "[", "t", "]"}]}], ")"}]}]}], ")"}]}], 
      "+", 
      RowBox[{
       SubscriptBox["h", "p"], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"Cos", "[", 
           RowBox[{
            SubscriptBox["\[Theta]", "p"], "[", "t", "]"}], "]"}], 
          RowBox[{"(", " ", 
           RowBox[{
            RowBox[{
             SubscriptBox["x", "1"], "[", "t", "]"}], "-", " ", 
            RowBox[{
             SubscriptBox["x", "p"], "[", "t", "]"}]}], ")"}]}], "+", 
         RowBox[{
          RowBox[{"Sin", "[", 
           RowBox[{
            SubscriptBox["\[Theta]", "p"], "[", "t", "]"}], "]"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             SubscriptBox["y", "1"], "[", "t", "]"}], "-", 
            RowBox[{
             SubscriptBox["y", "p"], "[", "t", "]"}]}], ")"}]}]}], ")"}], 
       "\[IndentingNewLine]", 
       SubscriptBox["c", "2"]}]}], 
     RowBox[{"(*", 
      RowBox[{"\[Rule]", 
       RowBox[{"dr3", "+", "dr4"}]}], "*)"}], "=", 
     RowBox[{
      RowBox[{
       SubscriptBox["l", "p"], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"Sin", "[", 
           RowBox[{
            SubscriptBox["\[Theta]", "p"], "[", "t", "]"}], "]"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             SubscriptBox["x", "2"], "[", "t", "]"}], "-", " ", 
            RowBox[{
             SubscriptBox["x", "p"], "[", "t", "]"}]}], ")"}]}], "+", 
         RowBox[{
          RowBox[{"Cos", "[", 
           RowBox[{
            SubscriptBox["\[Theta]", "p"], "[", "t", "]"}], "]"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", 
             RowBox[{
              SubscriptBox["y", "2"], "[", "t", "]"}]}], "+", 
            RowBox[{
             SubscriptBox["y", "p"], "[", "t", "]"}]}], ")"}]}]}], ")"}]}], 
      "+", 
      RowBox[{
       SubscriptBox["h", "p"], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"Cos", "[", 
           RowBox[{
            SubscriptBox["\[Theta]", "p"], "[", "t", "]"}], "]"}], 
          RowBox[{"(", " ", 
           RowBox[{
            RowBox[{
             SubscriptBox["x", "2"], "[", "t", "]"}], "-", " ", 
            RowBox[{
             SubscriptBox["x", "p"], "[", "t", "]"}]}], ")"}]}], "+", 
         RowBox[{
          RowBox[{"Sin", "[", 
           RowBox[{
            SubscriptBox["\[Theta]", "p"], "[", "t", "]"}], "]"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             SubscriptBox["y", "2"], "[", "t", "]"}], "-", 
            RowBox[{
             SubscriptBox["y", "p"], "[", "t", "]"}]}], ")"}]}]}], 
        ")"}]}]}]}]}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  SubscriptBox["\[ScriptCapitalV]", "1"], 
  RowBox[{"(*", 
   RowBox[{"=", 
    RowBox[{"(", GridBox[{
       {"r1x"},
       {"r1y"},
       {
        SubscriptBox["c", "1"]}
      }], ")"}]}], "*)"}], "=", 
  RowBox[{"(", GridBox[{
     {
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"Sin", "[", 
          RowBox[{
           SubscriptBox["\[Theta]", "p"], "[", "t", "]"}], "]"}], " ", 
         SubscriptBox["h", "p"]}], "+", 
        RowBox[{
         RowBox[{"Cos", "[", 
          RowBox[{
           SubscriptBox["\[Theta]", "p"], "[", "t", "]"}], "]"}], " ", 
         SubscriptBox["l", "p"]}], "+", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           SubscriptBox["x", "1"], "[", "t", "]"}], "-", 
          RowBox[{
           SubscriptBox["x", "p"], "[", "t", "]"}]}], ")"}]}], ")"}]},
     {
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"-", " ", 
          RowBox[{"Cos", "[", 
           RowBox[{
            SubscriptBox["\[Theta]", "p"], "[", "t", "]"}], "]"}]}], " ", 
         SubscriptBox["h", "p"]}], "+", " ", 
        RowBox[{
         RowBox[{"Sin", "[", 
          RowBox[{
           SubscriptBox["\[Theta]", "p"], "[", "t", "]"}], "]"}], " ", 
         SubscriptBox["l", "p"]}], "+", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           SubscriptBox["y", "1"], "[", "t", "]"}], "-", 
          RowBox[{
           SubscriptBox["y", "p"], "[", "t", "]"}]}], ")"}]}], ")"}]},
     {
      RowBox[{
       RowBox[{
        SubscriptBox["l", "p"], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", 
            RowBox[{"Sin", "[", 
             RowBox[{
              SubscriptBox["\[Theta]", "p"], "[", "t", "]"}], "]"}]}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              SubscriptBox["x", "1"], "[", "t", "]"}], "-", " ", 
             RowBox[{
              SubscriptBox["x", "p"], "[", "t", "]"}]}], ")"}]}], "+", 
          RowBox[{
           RowBox[{"Cos", "[", 
            RowBox[{
             SubscriptBox["\[Theta]", "p"], "[", "t", "]"}], "]"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              SubscriptBox["y", "1"], "[", "t", "]"}], "-", 
             RowBox[{
              SubscriptBox["y", "p"], "[", "t", "]"}]}], ")"}]}]}], ")"}]}], 
       "+", 
       RowBox[{
        SubscriptBox["h", "p"], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"Cos", "[", 
            RowBox[{
             SubscriptBox["\[Theta]", "p"], "[", "t", "]"}], "]"}], 
           RowBox[{"(", " ", 
            RowBox[{
             RowBox[{
              SubscriptBox["x", "1"], "[", "t", "]"}], "-", " ", 
             RowBox[{
              SubscriptBox["x", "p"], "[", "t", "]"}]}], ")"}]}], "+", 
          RowBox[{
           RowBox[{"Sin", "[", 
            RowBox[{
             SubscriptBox["\[Theta]", "p"], "[", "t", "]"}], "]"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              SubscriptBox["y", "1"], "[", "t", "]"}], "-", 
             RowBox[{
              SubscriptBox["y", "p"], "[", "t", "]"}]}], ")"}]}]}], ")"}]}]}]}
    }], ")"}]}], "\[IndentingNewLine]", 
 RowBox[{
  SubscriptBox["\[ScriptCapitalV]", "2"], 
  RowBox[{"(*", 
   RowBox[{"=", 
    RowBox[{"(", GridBox[{
       {"r2x"},
       {"r2y"},
       {
        SubscriptBox["c", "2"]}
      }], ")"}]}], "*)"}], "=", 
  RowBox[{"(", GridBox[{
     {
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"Sin", "[", 
          RowBox[{
           SubscriptBox["\[Theta]", "p"], "[", "t", "]"}], "]"}], " ", 
         SubscriptBox["h", "p"]}], "-", 
        RowBox[{
         RowBox[{"Cos", "[", 
          RowBox[{
           SubscriptBox["\[Theta]", "p"], "[", "t", "]"}], "]"}], " ", 
         SubscriptBox["l", "p"]}], "+", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           SubscriptBox["x", "2"], "[", "t", "]"}], "-", 
          RowBox[{
           SubscriptBox["x", "p"], "[", "t", "]"}]}], ")"}]}], ")"}]},
     {
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"-", " ", 
          RowBox[{"Cos", "[", 
           RowBox[{
            SubscriptBox["\[Theta]", "p"], "[", "t", "]"}], "]"}]}], " ", 
         SubscriptBox["h", "p"]}], "-", " ", 
        RowBox[{
         RowBox[{"Sin", "[", 
          RowBox[{
           SubscriptBox["\[Theta]", "p"], "[", "t", "]"}], "]"}], " ", 
         SubscriptBox["l", "p"]}], "+", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           SubscriptBox["y", "2"], "[", "t", "]"}], "-", 
          RowBox[{
           SubscriptBox["y", "p"], "[", "t", "]"}]}], ")"}]}], ")"}]},
     {
      RowBox[{
       RowBox[{
        SubscriptBox["l", "p"], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"Sin", "[", 
            RowBox[{
             SubscriptBox["\[Theta]", "p"], "[", "t", "]"}], "]"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              SubscriptBox["x", "2"], "[", "t", "]"}], "-", " ", 
             RowBox[{
              SubscriptBox["x", "p"], "[", "t", "]"}]}], ")"}]}], "+", 
          RowBox[{
           RowBox[{"Cos", "[", 
            RowBox[{
             SubscriptBox["\[Theta]", "p"], "[", "t", "]"}], "]"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", 
              RowBox[{
               SubscriptBox["y", "2"], "[", "t", "]"}]}], "+", 
             RowBox[{
              SubscriptBox["y", "p"], "[", "t", "]"}]}], ")"}]}]}], ")"}]}], 
       "+", 
       RowBox[{
        SubscriptBox["h", "p"], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"Cos", "[", 
            RowBox[{
             SubscriptBox["\[Theta]", "p"], "[", "t", "]"}], "]"}], 
           RowBox[{"(", " ", 
            RowBox[{
             RowBox[{
              SubscriptBox["x", "2"], "[", "t", "]"}], "-", " ", 
             RowBox[{
              SubscriptBox["x", "p"], "[", "t", "]"}]}], ")"}]}], "+", 
          RowBox[{
           RowBox[{"Sin", "[", 
            RowBox[{
             SubscriptBox["\[Theta]", "p"], "[", "t", "]"}], "]"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              SubscriptBox["y", "2"], "[", "t", "]"}], "-", 
             RowBox[{
              SubscriptBox["y", "p"], "[", "t", "]"}]}], ")"}]}]}], ")"}]}]}]}
    }], ")"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Cmat", "=", 
   RowBox[{"(", GridBox[{
      {
       SubscriptBox["c", "1"], "0", "0"},
      {"0", 
       SubscriptBox["c", "2"], "0"},
      {"0", "0", 
       SubscriptBox["c", "3"]}
     }], ")"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"nameChange", "=", 
   RowBox[{"{", 
    RowBox[{
     SubscriptBox["l", "p"], "\[Rule]", 
     SubscriptBox["w", "p"]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", "\"\<equations with no general forces :\>\"", \
"\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"EOM", "=", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"D", "[", 
       RowBox[{"\[ScriptCapitalX]", ",", 
        RowBox[{"{", 
         RowBox[{"t", ",", "2"}], "}"}]}], "]"}], "\[Equal]", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"(", GridBox[{
             {"1", "0", "0"},
             {"0", "1", "0"},
             {"0", "0", 
              RowBox[{"-", "\[Alpha]"}]}
            }], ")"}], 
          RowBox[{"(", 
           RowBox[{"1", "-", 
            FractionBox["1", "A"]}], ")"}]}], ")"}], ".", 
        SubscriptBox["\[ScriptCapitalV]", "1"]}], "+", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"\[Kappa]", 
          RowBox[{"(", GridBox[{
             {"1", "0", "0"},
             {"0", "1", "0"},
             {"0", "0", 
              RowBox[{"-", "\[Alpha]"}]}
            }], ")"}], 
          RowBox[{"(", 
           RowBox[{"1", "-", 
            RowBox[{
             FractionBox["1", "B"], "\[ScriptCapitalL]"}]}], ")"}]}], ")"}], 
        ".", 
        SubscriptBox["\[ScriptCapitalV]", "2"]}], "-", 
       RowBox[{"(", GridBox[{
          {"0"},
          {"\[Gamma]"},
          {"0"}
         }], ")"}], "-", 
       RowBox[{"Cmat", ".", 
        RowBox[{"D", "[", 
         RowBox[{"\[ScriptCapitalX]", ",", 
          RowBox[{"{", 
           RowBox[{"t", ",", "1"}], "}"}]}], "]"}]}]}]}], "  ", "//.", 
     "nameChange"}], "//", "Flatten"}]}], ";"}]}], "Input",
 CellChangeTimes->CompressedData["
1:eJxTTMoPSmViYGAQB2IQHbFNVX/xmteOTBe9jUB0qdZp7oNAmoXNUxlEH59l
bA+ir9uGuoNorsCVoSB6xZllqSC6bZteNYj2OWzRAqJ3bKroAtEBjA49IPpk
1qwJILrmwd3JIFrm9bUVIHpT7qO9IPrylx2HQLT7u9ajIPpc4f7rYHuWrrgB
ojmvhz8A0U0Foj9BtMonO9ZDQLorzp4XRBfvyhEG0XmXI0VBtMn3WikQfcrz
GZgWMVDQBdFtfwz1QLSDn8rnU0Ba/VEOmH7z4O0vEH2pv/Q3iP62yW7+JSC9
eEolmD53kWc5iLYpywXTfExxq0H0n4X71oHo6CNcB7TXAdUpmx0F0ROOlhaZ
AWk/lRllINpyc3sHiN5ZdqMHRAMAH/bSsg==
  "]],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     SubscriptBox["x", "p"], "[", "t", "]"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     SubscriptBox["y", "p"], "[", "t", "]"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     SubscriptBox["\[Theta]", "p"], "[", "t", "]"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.7144536492724395`*^9, 3.7144536799711857`*^9}, 
   3.7144537206245394`*^9, 3.7144538764141417`*^9, 3.7144718365986366`*^9, 
   3.7144875486594105`*^9, 3.714487611932694*^9, {3.7144876616370716`*^9, 
   3.7144876705012827`*^9}, 3.714905025566207*^9, 3.71519425986091*^9, 
   3.71519429418734*^9, 3.7151944341850977`*^9, 3.7151964600491085`*^9, 
   3.7152164947926664`*^9, 3.7157706147996755`*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"\[Kappa]", "\[Rule]", "1"}], ",", 
   RowBox[{"\[ScriptCapitalL]", "\[Rule]", "1"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.7144536492724395`*^9, 3.7144536799711857`*^9}, 
   3.7144537206245394`*^9, 3.7144538764141417`*^9, 3.7144718365986366`*^9, 
   3.7144875486594105`*^9, 3.714487611932694*^9, {3.7144876616370716`*^9, 
   3.7144876705012827`*^9}, 3.714905025566207*^9, 3.71519425986091*^9, 
   3.71519429418734*^9, 3.7151944341850977`*^9, 3.7151964600491085`*^9, 
   3.7152164947926664`*^9, 3.7157706148036757`*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"\[Kappa]", "\[Rule]", "1"}], ",", 
   RowBox[{"\[ScriptCapitalL]", "\[Rule]", "1"}], ",", 
   RowBox[{
    SubsuperscriptBox["\[Omega]", "s", "2"], "\[Rule]", "1"}], ",", 
   RowBox[{"\[Alpha]", "\[Rule]", "1"}], ",", 
   RowBox[{"\[Gamma]", "\[Rule]", "1"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.7144536492724395`*^9, 3.7144536799711857`*^9}, 
   3.7144537206245394`*^9, 3.7144538764141417`*^9, 3.7144718365986366`*^9, 
   3.7144875486594105`*^9, 3.714487611932694*^9, {3.7144876616370716`*^9, 
   3.7144876705012827`*^9}, 3.714905025566207*^9, 3.71519425986091*^9, 
   3.71519429418734*^9, 3.7151944341850977`*^9, 3.7151964600491085`*^9, 
   3.7152164947926664`*^9, 3.7157706148036757`*^9}],

Cell[BoxData[
 SqrtBox[
  RowBox[{
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"Sin", "[", 
        RowBox[{
         SubscriptBox["\[Theta]", "p"], "[", "t", "]"}], "]"}], " ", 
       SubscriptBox["h", "p"]}], "+", 
      RowBox[{
       RowBox[{"Cos", "[", 
        RowBox[{
         SubscriptBox["\[Theta]", "p"], "[", "t", "]"}], "]"}], " ", 
       SubscriptBox["l", "p"]}], "+", 
      RowBox[{
       SubscriptBox["x", "1"], "[", "t", "]"}], "-", 
      RowBox[{
       SubscriptBox["x", "p"], "[", "t", "]"}]}], ")"}], "2"], "+", 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"-", 
        RowBox[{"Cos", "[", 
         RowBox[{
          SubscriptBox["\[Theta]", "p"], "[", "t", "]"}], "]"}]}], " ", 
       SubscriptBox["h", "p"]}], "+", 
      RowBox[{
       RowBox[{"Sin", "[", 
        RowBox[{
         SubscriptBox["\[Theta]", "p"], "[", "t", "]"}], "]"}], " ", 
       SubscriptBox["l", "p"]}], "+", 
      RowBox[{
       SubscriptBox["y", "1"], "[", "t", "]"}], "-", 
      RowBox[{
       SubscriptBox["y", "p"], "[", "t", "]"}]}], ")"}], "2"]}]]], "Output",
 CellChangeTimes->{{3.7144536492724395`*^9, 3.7144536799711857`*^9}, 
   3.7144537206245394`*^9, 3.7144538764141417`*^9, 3.7144718365986366`*^9, 
   3.7144875486594105`*^9, 3.714487611932694*^9, {3.7144876616370716`*^9, 
   3.7144876705012827`*^9}, 3.714905025566207*^9, 3.71519425986091*^9, 
   3.71519429418734*^9, 3.7151944341850977`*^9, 3.7151964600491085`*^9, 
   3.7152164947926664`*^9, 3.715770614807675*^9}],

Cell[BoxData[
 SqrtBox[
  RowBox[{
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"Sin", "[", 
        RowBox[{
         SubscriptBox["\[Theta]", "p"], "[", "t", "]"}], "]"}], " ", 
       SubscriptBox["h", "p"]}], "-", 
      RowBox[{
       RowBox[{"Cos", "[", 
        RowBox[{
         SubscriptBox["\[Theta]", "p"], "[", "t", "]"}], "]"}], " ", 
       SubscriptBox["l", "p"]}], "+", 
      RowBox[{
       SubscriptBox["x", "2"], "[", "t", "]"}], "-", 
      RowBox[{
       SubscriptBox["x", "p"], "[", "t", "]"}]}], ")"}], "2"], "+", 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"-", 
        RowBox[{"Cos", "[", 
         RowBox[{
          SubscriptBox["\[Theta]", "p"], "[", "t", "]"}], "]"}]}], " ", 
       SubscriptBox["h", "p"]}], "-", 
      RowBox[{
       RowBox[{"Sin", "[", 
        RowBox[{
         SubscriptBox["\[Theta]", "p"], "[", "t", "]"}], "]"}], " ", 
       SubscriptBox["l", "p"]}], "+", 
      RowBox[{
       SubscriptBox["y", "2"], "[", "t", "]"}], "-", 
      RowBox[{
       SubscriptBox["y", "p"], "[", "t", "]"}]}], ")"}], "2"]}]]], "Output",
 CellChangeTimes->{{3.7144536492724395`*^9, 3.7144536799711857`*^9}, 
   3.7144537206245394`*^9, 3.7144538764141417`*^9, 3.7144718365986366`*^9, 
   3.7144875486594105`*^9, 3.714487611932694*^9, {3.7144876616370716`*^9, 
   3.7144876705012827`*^9}, 3.714905025566207*^9, 3.71519425986091*^9, 
   3.71519429418734*^9, 3.7151944341850977`*^9, 3.7151964600491085`*^9, 
   3.7152164947926664`*^9, 3.715770614811677*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"Sin", "[", 
       RowBox[{
        SubscriptBox["\[Theta]", "p"], "[", "t", "]"}], "]"}], " ", 
      SubscriptBox["h", "p"]}], "+", 
     RowBox[{
      RowBox[{"Cos", "[", 
       RowBox[{
        SubscriptBox["\[Theta]", "p"], "[", "t", "]"}], "]"}], " ", 
      SubscriptBox["l", "p"]}], "+", 
     RowBox[{
      SubscriptBox["x", "1"], "[", "t", "]"}], "-", 
     RowBox[{
      SubscriptBox["x", "p"], "[", "t", "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"-", 
       RowBox[{"Cos", "[", 
        RowBox[{
         SubscriptBox["\[Theta]", "p"], "[", "t", "]"}], "]"}]}], " ", 
      SubscriptBox["h", "p"]}], "+", 
     RowBox[{
      RowBox[{"Sin", "[", 
       RowBox[{
        SubscriptBox["\[Theta]", "p"], "[", "t", "]"}], "]"}], " ", 
      SubscriptBox["l", "p"]}], "+", 
     RowBox[{
      SubscriptBox["y", "1"], "[", "t", "]"}], "-", 
     RowBox[{
      SubscriptBox["y", "p"], "[", "t", "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      SubscriptBox["l", "p"], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"-", 
          RowBox[{"Sin", "[", 
           RowBox[{
            SubscriptBox["\[Theta]", "p"], "[", "t", "]"}], "]"}]}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            SubscriptBox["x", "1"], "[", "t", "]"}], "-", 
           RowBox[{
            SubscriptBox["x", "p"], "[", "t", "]"}]}], ")"}]}], "+", 
        RowBox[{
         RowBox[{"Cos", "[", 
          RowBox[{
           SubscriptBox["\[Theta]", "p"], "[", "t", "]"}], "]"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            SubscriptBox["y", "1"], "[", "t", "]"}], "-", 
           RowBox[{
            SubscriptBox["y", "p"], "[", "t", "]"}]}], ")"}]}]}], ")"}]}], 
     "+", 
     RowBox[{
      SubscriptBox["h", "p"], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"Cos", "[", 
          RowBox[{
           SubscriptBox["\[Theta]", "p"], "[", "t", "]"}], "]"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            SubscriptBox["x", "1"], "[", "t", "]"}], "-", 
           RowBox[{
            SubscriptBox["x", "p"], "[", "t", "]"}]}], ")"}]}], "+", 
        RowBox[{
         RowBox[{"Sin", "[", 
          RowBox[{
           SubscriptBox["\[Theta]", "p"], "[", "t", "]"}], "]"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            SubscriptBox["y", "1"], "[", "t", "]"}], "-", 
           RowBox[{
            SubscriptBox["y", "p"], "[", "t", "]"}]}], ")"}]}]}], ")"}]}]}], 
    "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.7144536492724395`*^9, 3.7144536799711857`*^9}, 
   3.7144537206245394`*^9, 3.7144538764141417`*^9, 3.7144718365986366`*^9, 
   3.7144875486594105`*^9, 3.714487611932694*^9, {3.7144876616370716`*^9, 
   3.7144876705012827`*^9}, 3.714905025566207*^9, 3.71519425986091*^9, 
   3.71519429418734*^9, 3.7151944341850977`*^9, 3.7151964600491085`*^9, 
   3.7152164947926664`*^9, 3.715770614819679*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"Sin", "[", 
       RowBox[{
        SubscriptBox["\[Theta]", "p"], "[", "t", "]"}], "]"}], " ", 
      SubscriptBox["h", "p"]}], "-", 
     RowBox[{
      RowBox[{"Cos", "[", 
       RowBox[{
        SubscriptBox["\[Theta]", "p"], "[", "t", "]"}], "]"}], " ", 
      SubscriptBox["l", "p"]}], "+", 
     RowBox[{
      SubscriptBox["x", "2"], "[", "t", "]"}], "-", 
     RowBox[{
      SubscriptBox["x", "p"], "[", "t", "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"-", 
       RowBox[{"Cos", "[", 
        RowBox[{
         SubscriptBox["\[Theta]", "p"], "[", "t", "]"}], "]"}]}], " ", 
      SubscriptBox["h", "p"]}], "-", 
     RowBox[{
      RowBox[{"Sin", "[", 
       RowBox[{
        SubscriptBox["\[Theta]", "p"], "[", "t", "]"}], "]"}], " ", 
      SubscriptBox["l", "p"]}], "+", 
     RowBox[{
      SubscriptBox["y", "2"], "[", "t", "]"}], "-", 
     RowBox[{
      SubscriptBox["y", "p"], "[", "t", "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      SubscriptBox["h", "p"], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"Cos", "[", 
          RowBox[{
           SubscriptBox["\[Theta]", "p"], "[", "t", "]"}], "]"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            SubscriptBox["x", "2"], "[", "t", "]"}], "-", 
           RowBox[{
            SubscriptBox["x", "p"], "[", "t", "]"}]}], ")"}]}], "+", 
        RowBox[{
         RowBox[{"Sin", "[", 
          RowBox[{
           SubscriptBox["\[Theta]", "p"], "[", "t", "]"}], "]"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            SubscriptBox["y", "2"], "[", "t", "]"}], "-", 
           RowBox[{
            SubscriptBox["y", "p"], "[", "t", "]"}]}], ")"}]}]}], ")"}]}], 
     "+", 
     RowBox[{
      SubscriptBox["l", "p"], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"Sin", "[", 
          RowBox[{
           SubscriptBox["\[Theta]", "p"], "[", "t", "]"}], "]"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            SubscriptBox["x", "2"], "[", "t", "]"}], "-", 
           RowBox[{
            SubscriptBox["x", "p"], "[", "t", "]"}]}], ")"}]}], "+", 
        RowBox[{
         RowBox[{"Cos", "[", 
          RowBox[{
           SubscriptBox["\[Theta]", "p"], "[", "t", "]"}], "]"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", 
            RowBox[{
             SubscriptBox["y", "2"], "[", "t", "]"}]}], "+", 
           RowBox[{
            SubscriptBox["y", "p"], "[", "t", "]"}]}], ")"}]}]}], ")"}]}]}], 
    "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.7144536492724395`*^9, 3.7144536799711857`*^9}, 
   3.7144537206245394`*^9, 3.7144538764141417`*^9, 3.7144718365986366`*^9, 
   3.7144875486594105`*^9, 3.714487611932694*^9, {3.7144876616370716`*^9, 
   3.7144876705012827`*^9}, 3.714905025566207*^9, 3.71519425986091*^9, 
   3.71519429418734*^9, 3.7151944341850977`*^9, 3.7151964600491085`*^9, 
   3.7152164947926664`*^9, 3.715770614823676*^9}],

Cell[BoxData["\<\"equations with no general forces :\"\>"], "Output",
 CellChangeTimes->{{3.7144536492724395`*^9, 3.7144536799711857`*^9}, 
   3.7144537206245394`*^9, 3.7144538764141417`*^9, 3.7144718365986366`*^9, 
   3.7144875486594105`*^9, 3.714487611932694*^9, {3.7144876616370716`*^9, 
   3.7144876705012827`*^9}, 3.714905025566207*^9, 3.71519425986091*^9, 
   3.71519429418734*^9, 3.7151944341850977`*^9, 3.7151964600491085`*^9, 
   3.7152164947926664`*^9, 3.715770614823676*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData["a"], "Input",
 CellChangeTimes->{3.715362179991132*^9}],

Cell[BoxData["a"], "Output",
 CellChangeTimes->{3.7153621801772532`*^9, 3.7157706188997636`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"Clear", "[", "a", "]"}]], "Input",
 CellChangeTimes->{{3.7153622581590433`*^9, 3.715362260131352*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"dispNoTime", "=", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"a_", "[", "t", "]"}], "\[Rule]", "a"}], "}"}]}], ";"}], 
  RowBox[{"(*", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"EOM", "/.", "dispNoTime"}], "/.", "greekTermsSymetricCase"}], "//",
      "Flatten"}], 
    RowBox[{"(*", 
     RowBox[{"//", "MatrixForm"}], "*)"}], 
    RowBox[{"(*", 
     RowBox[{"//", "TraditionalForm"}], "*)"}], ";", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"EOM", "/.", "dispNoTime"}], "/.", "greekTermsSymetricCase"}], 
      "//", "Flatten"}], 
     RowBox[{"(*", 
      RowBox[{"//", "MatrixForm"}], "*)"}], "//", "TraditionalForm"}]}], 
   "*)"}]}]], "Input",
 CellChangeTimes->{{3.714453761395191*^9, 3.714453846304103*^9}, {
   3.714453912086727*^9, 3.7144539729422607`*^9}, {3.714454024995744*^9, 
   3.7144540588455534`*^9}, {3.714487575151579*^9, 3.71448758735921*^9}, {
   3.7144876801904917`*^9, 3.714487682898553*^9}, {3.7149050523712597`*^9, 
   3.714905067243412*^9}, {3.7149051048245344`*^9, 3.714905258218185*^9}, 
   3.7151943627017345`*^9, {3.7151944189339933`*^9, 3.715194432265826*^9}, 
   3.71521650562212*^9, 3.715217024512539*^9}],

Cell[" ", "Text",
 Editable->False,
 Selectable->False,
 CellFrame->{{0, 0}, {0, 0.5}},
 ShowCellBracket->False,
 CellMargins->{{0, 0}, {1, 1}},
 CellElementSpacings->{"CellMinHeight"->1},
 CellFrameMargins->0,
 CellFrameColor->RGBColor[0, 0, 1],
 CellSize->{Inherited, 3}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"numerics", "=", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       SubscriptBox["h", "p"], "\[Rule]", "0.1"}], ",", 
      RowBox[{
       SubscriptBox["w", "p"], "\[Rule]", "1"}], ",", 
      RowBox[{
       RowBox[{
        SubscriptBox["x", "1"], "[", "t", "]"}], "\[Rule]", "0"}], ",", 
      RowBox[{
       RowBox[{
        SubscriptBox["y", "1"], "[", "t", "]"}], "\[Rule]", "0"}], ",", 
      RowBox[{
       RowBox[{
        SubscriptBox["x", "2"], "[", "t", "]"}], "\[Rule]", 
       RowBox[{"2", 
        SubscriptBox["w", "p"]}]}], ",", 
      RowBox[{
       RowBox[{
        SubscriptBox["y", "2"], "[", "t", "]"}], "\[Rule]", "0"}], ",", 
      RowBox[{"\[Alpha]", "\[Rule]", "0.04"}], ",", 
      RowBox[{"\[Gamma]", "\[Rule]", "2"}]}], "}"}]}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"EOM", "//.", "greekTermsSymetricCase"}], "//.", "numerics"}], "//",
      "Flatten"}], "//", "TraditionalForm"}], "*)"}]}]], "Input",
 CellChangeTimes->{{3.714905364664805*^9, 3.7149054956350822`*^9}, {
  3.714905529255147*^9, 3.7149055385953455`*^9}, {3.7151943222139096`*^9, 
  3.7151943267088933`*^9}, {3.7152167791334095`*^9, 3.715216783337503*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    SubscriptBox["h", "p"], "\[Rule]", "0.1`"}], ",", 
   RowBox[{
    SubscriptBox["w", "p"], "\[Rule]", "1"}], ",", 
   RowBox[{
    RowBox[{
     SubscriptBox["x", "1"], "[", "t", "]"}], "\[Rule]", "0"}], ",", 
   RowBox[{
    RowBox[{
     SubscriptBox["y", "1"], "[", "t", "]"}], "\[Rule]", "0"}], ",", 
   RowBox[{
    RowBox[{
     SubscriptBox["x", "2"], "[", "t", "]"}], "\[Rule]", 
    RowBox[{"2", " ", 
     SubscriptBox["w", "p"]}]}], ",", 
   RowBox[{
    RowBox[{
     SubscriptBox["y", "2"], "[", "t", "]"}], "\[Rule]", "0"}], ",", 
   RowBox[{"\[Alpha]", "\[Rule]", "0.04`"}], ",", 
   RowBox[{"\[Gamma]", "\[Rule]", "2"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.714905378777268*^9, 3.7149054040869217`*^9}, 
   3.714905437488462*^9, {3.714905471967207*^9, 3.714905497271117*^9}, 
   3.714905539307361*^9, 3.7151964776217465`*^9}],

Cell[BoxData[
 FormBox[
  RowBox[{
   RowBox[{"(", "\[NoBreak]", GridBox[{
      {
       RowBox[{
        SuperscriptBox[
         SubscriptBox["x", "p"], "\[Prime]\[Prime]",
         MultilineFunction->None], "(", "t", ")"}]},
      {
       RowBox[{
        SuperscriptBox[
         SubscriptBox["y", "p"], "\[Prime]\[Prime]",
         MultilineFunction->None], "(", "t", ")"}]},
      {
       RowBox[{
        SuperscriptBox[
         SubscriptBox["\[Theta]", "p"], "\[Prime]\[Prime]",
         MultilineFunction->None], "(", "t", ")"}]}
     },
     GridBoxAlignment->{
      "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}},
        "RowsIndexed" -> {}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.7]}, 
         Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
         Offset[0.2], {
          Offset[0.4]}, 
         Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}], 
   "\[LongEqual]", 
   RowBox[{"(", "\[NoBreak]", GridBox[{
      {
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", 
            RowBox[{"cos", "(", 
             RowBox[{
              SubscriptBox["\[Theta]", "p"], "(", "t", ")"}], ")"}]}], "+", 
           RowBox[{"0.1`", " ", 
            RowBox[{"sin", "(", 
             RowBox[{
              SubscriptBox["\[Theta]", "p"], "(", "t", ")"}], ")"}]}], "-", 
           RowBox[{
            SubscriptBox["x", "p"], "(", "t", ")"}], "+", "2"}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{"1", "-", 
           FractionBox["1", 
            SqrtBox[
             RowBox[{
              SuperscriptBox[
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", 
                  RowBox[{"cos", "(", 
                   RowBox[{
                    SubscriptBox["\[Theta]", "p"], "(", "t", ")"}], ")"}]}], 
                 "+", 
                 RowBox[{"0.1`", " ", 
                  RowBox[{"sin", "(", 
                   RowBox[{
                    SubscriptBox["\[Theta]", "p"], "(", "t", ")"}], ")"}]}], 
                 "-", 
                 RowBox[{
                  SubscriptBox["x", "p"], "(", "t", ")"}], "+", "2"}], ")"}], 
               "2"], "+", 
              SuperscriptBox[
               RowBox[{"(", 
                RowBox[{
                 RowBox[{
                  RowBox[{"-", "0.1`"}], " ", 
                  RowBox[{"cos", "(", 
                   RowBox[{
                    SubscriptBox["\[Theta]", "p"], "(", "t", ")"}], ")"}]}], 
                 "-", 
                 RowBox[{"sin", "(", 
                  RowBox[{
                   SubscriptBox["\[Theta]", "p"], "(", "t", ")"}], ")"}], "-", 
                 RowBox[{
                  SubscriptBox["y", "p"], "(", "t", ")"}]}], ")"}], 
               "2"]}]]]}], ")"}]}], "+", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"cos", "(", 
            RowBox[{
             SubscriptBox["\[Theta]", "p"], "(", "t", ")"}], ")"}], "+", 
           RowBox[{"0.1`", " ", 
            RowBox[{"sin", "(", 
             RowBox[{
              SubscriptBox["\[Theta]", "p"], "(", "t", ")"}], ")"}]}], "-", 
           RowBox[{
            SubscriptBox["x", "p"], "(", "t", ")"}]}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{"1", "-", 
           FractionBox["1", 
            SqrtBox[
             RowBox[{
              SuperscriptBox[
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"cos", "(", 
                  RowBox[{
                   SubscriptBox["\[Theta]", "p"], "(", "t", ")"}], ")"}], "+", 
                 RowBox[{"0.1`", " ", 
                  RowBox[{"sin", "(", 
                   RowBox[{
                    SubscriptBox["\[Theta]", "p"], "(", "t", ")"}], ")"}]}], 
                 "-", 
                 RowBox[{
                  SubscriptBox["x", "p"], "(", "t", ")"}]}], ")"}], "2"], "+", 
              SuperscriptBox[
               RowBox[{"(", 
                RowBox[{
                 RowBox[{
                  RowBox[{"-", "0.1`"}], " ", 
                  RowBox[{"cos", "(", 
                   RowBox[{
                    SubscriptBox["\[Theta]", "p"], "(", "t", ")"}], ")"}]}], 
                 "+", 
                 RowBox[{"sin", "(", 
                  RowBox[{
                   SubscriptBox["\[Theta]", "p"], "(", "t", ")"}], ")"}], "-", 
                 RowBox[{
                  SubscriptBox["y", "p"], "(", "t", ")"}]}], ")"}], 
               "2"]}]]]}], ")"}]}]}]},
      {
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{"1", "-", 
           FractionBox["1", 
            SqrtBox[
             RowBox[{
              SuperscriptBox[
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", 
                  RowBox[{"cos", "(", 
                   RowBox[{
                    SubscriptBox["\[Theta]", "p"], "(", "t", ")"}], ")"}]}], 
                 "+", 
                 RowBox[{"0.1`", " ", 
                  RowBox[{"sin", "(", 
                   RowBox[{
                    SubscriptBox["\[Theta]", "p"], "(", "t", ")"}], ")"}]}], 
                 "-", 
                 RowBox[{
                  SubscriptBox["x", "p"], "(", "t", ")"}], "+", "2"}], ")"}], 
               "2"], "+", 
              SuperscriptBox[
               RowBox[{"(", 
                RowBox[{
                 RowBox[{
                  RowBox[{"-", "0.1`"}], " ", 
                  RowBox[{"cos", "(", 
                   RowBox[{
                    SubscriptBox["\[Theta]", "p"], "(", "t", ")"}], ")"}]}], 
                 "-", 
                 RowBox[{"sin", "(", 
                  RowBox[{
                   SubscriptBox["\[Theta]", "p"], "(", "t", ")"}], ")"}], "-", 
                 RowBox[{
                  SubscriptBox["y", "p"], "(", "t", ")"}]}], ")"}], 
               "2"]}]]]}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"-", "0.1`"}], " ", 
            RowBox[{"cos", "(", 
             RowBox[{
              SubscriptBox["\[Theta]", "p"], "(", "t", ")"}], ")"}]}], "-", 
           RowBox[{"sin", "(", 
            RowBox[{
             SubscriptBox["\[Theta]", "p"], "(", "t", ")"}], ")"}], "-", 
           RowBox[{
            SubscriptBox["y", "p"], "(", "t", ")"}]}], ")"}]}], "+", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"1", "-", 
           FractionBox["1", 
            SqrtBox[
             RowBox[{
              SuperscriptBox[
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"cos", "(", 
                  RowBox[{
                   SubscriptBox["\[Theta]", "p"], "(", "t", ")"}], ")"}], "+", 
                 RowBox[{"0.1`", " ", 
                  RowBox[{"sin", "(", 
                   RowBox[{
                    SubscriptBox["\[Theta]", "p"], "(", "t", ")"}], ")"}]}], 
                 "-", 
                 RowBox[{
                  SubscriptBox["x", "p"], "(", "t", ")"}]}], ")"}], "2"], "+", 
              SuperscriptBox[
               RowBox[{"(", 
                RowBox[{
                 RowBox[{
                  RowBox[{"-", "0.1`"}], " ", 
                  RowBox[{"cos", "(", 
                   RowBox[{
                    SubscriptBox["\[Theta]", "p"], "(", "t", ")"}], ")"}]}], 
                 "+", 
                 RowBox[{"sin", "(", 
                  RowBox[{
                   SubscriptBox["\[Theta]", "p"], "(", "t", ")"}], ")"}], "-", 
                 RowBox[{
                  SubscriptBox["y", "p"], "(", "t", ")"}]}], ")"}], 
               "2"]}]]]}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"-", "0.1`"}], " ", 
            RowBox[{"cos", "(", 
             RowBox[{
              SubscriptBox["\[Theta]", "p"], "(", "t", ")"}], ")"}]}], "+", 
           RowBox[{"sin", "(", 
            RowBox[{
             SubscriptBox["\[Theta]", "p"], "(", "t", ")"}], ")"}], "-", 
           RowBox[{
            SubscriptBox["y", "p"], "(", "t", ")"}]}], ")"}]}], "-", "2"}]},
      {
       RowBox[{
        RowBox[{
         RowBox[{"-", "0.04`"}], " ", 
         RowBox[{"(", 
          RowBox[{"1", "-", 
           FractionBox["1", 
            SqrtBox[
             RowBox[{
              SuperscriptBox[
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", 
                  RowBox[{"cos", "(", 
                   RowBox[{
                    SubscriptBox["\[Theta]", "p"], "(", "t", ")"}], ")"}]}], 
                 "+", 
                 RowBox[{"0.1`", " ", 
                  RowBox[{"sin", "(", 
                   RowBox[{
                    SubscriptBox["\[Theta]", "p"], "(", "t", ")"}], ")"}]}], 
                 "-", 
                 RowBox[{
                  SubscriptBox["x", "p"], "(", "t", ")"}], "+", "2"}], ")"}], 
               "2"], "+", 
              SuperscriptBox[
               RowBox[{"(", 
                RowBox[{
                 RowBox[{
                  RowBox[{"-", "0.1`"}], " ", 
                  RowBox[{"cos", "(", 
                   RowBox[{
                    SubscriptBox["\[Theta]", "p"], "(", "t", ")"}], ")"}]}], 
                 "-", 
                 RowBox[{"sin", "(", 
                  RowBox[{
                   SubscriptBox["\[Theta]", "p"], "(", "t", ")"}], ")"}], "-", 
                 RowBox[{
                  SubscriptBox["y", "p"], "(", "t", ")"}]}], ")"}], 
               "2"]}]]]}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"sin", "(", 
             RowBox[{
              SubscriptBox["\[Theta]", "p"], "(", "t", ")"}], ")"}], " ", 
            RowBox[{"(", 
             RowBox[{"2", "-", 
              RowBox[{
               SubscriptBox["x", "p"], "(", "t", ")"}]}], ")"}]}], "+", 
           RowBox[{
            RowBox[{"cos", "(", 
             RowBox[{
              SubscriptBox["\[Theta]", "p"], "(", "t", ")"}], ")"}], " ", 
            RowBox[{
             SubscriptBox["y", "p"], "(", "t", ")"}]}], "+", 
           RowBox[{"0.1`", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"cos", "(", 
                RowBox[{
                 SubscriptBox["\[Theta]", "p"], "(", "t", ")"}], ")"}], " ", 
               RowBox[{"(", 
                RowBox[{"2", "-", 
                 RowBox[{
                  SubscriptBox["x", "p"], "(", "t", ")"}]}], ")"}]}], "-", 
              RowBox[{
               RowBox[{"sin", "(", 
                RowBox[{
                 SubscriptBox["\[Theta]", "p"], "(", "t", ")"}], ")"}], " ", 
               RowBox[{
                SubscriptBox["y", "p"], "(", "t", ")"}]}]}], ")"}]}]}], 
          ")"}]}], "-", 
        RowBox[{"0.04`", " ", 
         RowBox[{"(", 
          RowBox[{"1", "-", 
           FractionBox["1", 
            SqrtBox[
             RowBox[{
              SuperscriptBox[
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"cos", "(", 
                  RowBox[{
                   SubscriptBox["\[Theta]", "p"], "(", "t", ")"}], ")"}], "+", 
                 RowBox[{"0.1`", " ", 
                  RowBox[{"sin", "(", 
                   RowBox[{
                    SubscriptBox["\[Theta]", "p"], "(", "t", ")"}], ")"}]}], 
                 "-", 
                 RowBox[{
                  SubscriptBox["x", "p"], "(", "t", ")"}]}], ")"}], "2"], "+", 
              SuperscriptBox[
               RowBox[{"(", 
                RowBox[{
                 RowBox[{
                  RowBox[{"-", "0.1`"}], " ", 
                  RowBox[{"cos", "(", 
                   RowBox[{
                    SubscriptBox["\[Theta]", "p"], "(", "t", ")"}], ")"}]}], 
                 "+", 
                 RowBox[{"sin", "(", 
                  RowBox[{
                   SubscriptBox["\[Theta]", "p"], "(", "t", ")"}], ")"}], "-", 
                 RowBox[{
                  SubscriptBox["y", "p"], "(", "t", ")"}]}], ")"}], 
               "2"]}]]]}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"sin", "(", 
             RowBox[{
              SubscriptBox["\[Theta]", "p"], "(", "t", ")"}], ")"}], " ", 
            RowBox[{
             SubscriptBox["x", "p"], "(", "t", ")"}]}], "-", 
           RowBox[{
            RowBox[{"cos", "(", 
             RowBox[{
              SubscriptBox["\[Theta]", "p"], "(", "t", ")"}], ")"}], " ", 
            RowBox[{
             SubscriptBox["y", "p"], "(", "t", ")"}]}], "+", 
           RowBox[{"0.1`", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"-", 
                RowBox[{"cos", "(", 
                 RowBox[{
                  SubscriptBox["\[Theta]", "p"], "(", "t", ")"}], ")"}]}], 
               " ", 
               RowBox[{
                SubscriptBox["x", "p"], "(", "t", ")"}]}], "-", 
              RowBox[{
               RowBox[{"sin", "(", 
                RowBox[{
                 SubscriptBox["\[Theta]", "p"], "(", "t", ")"}], ")"}], " ", 
               RowBox[{
                SubscriptBox["y", "p"], "(", "t", ")"}]}]}], ")"}]}]}], 
          ")"}]}]}]}
     },
     GridBoxAlignment->{
      "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}},
        "RowsIndexed" -> {}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.7]}, 
         Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
         Offset[0.2], {
          Offset[0.4]}, 
         Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}]}], 
  TraditionalForm]], "Output",
 CellChangeTimes->{{3.714905378777268*^9, 3.7149054040869217`*^9}, 
   3.714905437488462*^9, {3.714905471967207*^9, 3.714905497271117*^9}, 
   3.714905539307361*^9, 3.71519647764176*^9}]
}, Closed]],

Cell[" ", "Text",
 Editable->False,
 Selectable->False,
 CellFrame->{{0, 0}, {0, 0.5}},
 ShowCellBracket->False,
 CellMargins->{{0, 0}, {1, 1}},
 CellElementSpacings->{"CellMinHeight"->1},
 CellFrameMargins->0,
 CellFrameColor->RGBColor[0, 0, 1],
 CellSize->{Inherited, 3}],

Cell[" ", "Text",
 Editable->False,
 Selectable->False,
 CellFrame->{{0, 0}, {0, 2}},
 ShowCellBracket->False,
 CellMargins->{{0, 0}, {1, 1}},
 CellElementSpacings->{"CellMinHeight"->1},
 CellFrameMargins->0,
 CellFrameColor->RGBColor[0, 0, 1],
 CellSize->{Inherited, 4}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{"EquibInputConditions", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{
       SubscriptBox["x", "1"], "[", "t", "]"}], "\[Rule]", "0"}], ",", 
     RowBox[{
      RowBox[{
       SubscriptBox["y", "1"], "[", "t", "]"}], "\[Rule]", "0"}], ",", 
     RowBox[{
      RowBox[{
       SubscriptBox["x", "2"], "[", "t", "]"}], "\[Rule]", 
      RowBox[{"2", " ", 
       SubscriptBox["w", "p"]}]}], ",", 
     RowBox[{
      RowBox[{
       SubscriptBox["y", "2"], "[", "t", "]"}], "\[Rule]", 
      RowBox[{
       SubscriptBox["y", "1"], "[", "t", "]"}]}]}], "}"}]}], "*)"}]], "Input",
 CellChangeTimes->{{3.7144542274371877`*^9, 3.714454233992959*^9}, {
   3.7144885653756685`*^9, 3.714488615202901*^9}, {3.714488655868425*^9, 
   3.714488666945746*^9}, {3.714500851158784*^9, 3.7145009061293116`*^9}, 
   3.714557558677371*^9, {3.714558012696953*^9, 3.714558042316923*^9}, 
   3.714558089518324*^9, 3.715216695913105*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{
     SubscriptBox["x", "1"], "[", "t", "]"}], "\[Rule]", "0"}], ",", 
   RowBox[{
    RowBox[{
     SubscriptBox["y", "1"], "[", "t", "]"}], "\[Rule]", "0"}], ",", 
   RowBox[{
    RowBox[{
     SubscriptBox["x", "2"], "[", "t", "]"}], "\[Rule]", 
    RowBox[{"2", " ", 
     SubscriptBox["w", "p"]}]}], ",", 
   RowBox[{
    RowBox[{
     SubscriptBox["y", "2"], "[", "t", "]"}], "\[Rule]", 
    RowBox[{
     SubscriptBox["y", "1"], "[", "t", "]"}]}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.7144886177549553`*^9, 3.714488669069767*^9, 3.714500935062709*^9, 
   3.7145575604065228`*^9, 3.714557959931487*^9, {3.7145580231198874`*^9, 
   3.7145580430514174`*^9}, 3.714558106822803*^9, 3.7151944958580227`*^9, 
   3.715196486614707*^9}]
}, Closed]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
   RowBox[{
    RowBox[{"(", 
     RowBox[{"SymetricEquib", "=", 
      RowBox[{
       RowBox[{
        RowBox[{"EOM", "/.", "nameChange"}], "/.", "greekTermsSymetricCase"}], 
       RowBox[{"(*", 
        RowBox[{"/.", "equibTerms"}], "*)"}], "//.", 
       "EquibInputConditions"}]}], ")"}], "//", "MatrixForm"}], "//", 
   "TraditionalForm"}], "*)"}]], "Input",
 CellChangeTimes->{{3.714454096231372*^9, 3.7144541165889826`*^9}, {
   3.7144886393920555`*^9, 3.7144887039593287`*^9}, {3.714500969997345*^9, 
   3.714500977397519*^9}, 3.7145010310150747`*^9, 3.715216616483011*^9, 
   3.715216668914395*^9}],

Cell[BoxData[
 FormBox[
  TagBox[
   RowBox[{
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {
        RowBox[{
         SuperscriptBox[
          SubscriptBox["x", "p"], "\[Prime]\[Prime]",
          MultilineFunction->None], "(", "t", ")"}]},
       {
        RowBox[{
         SuperscriptBox[
          SubscriptBox["y", "p"], "\[Prime]\[Prime]",
          MultilineFunction->None], "(", "t", ")"}]},
       {
        RowBox[{
         SuperscriptBox[
          SubscriptBox["\[Theta]", "p"], "\[Prime]\[Prime]",
          MultilineFunction->None], "(", "t", ")"}]}
      },
      GridBoxAlignment->{
       "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
        "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}], 
    "\[LongEqual]", 
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"sin", "(", 
              RowBox[{
               SubscriptBox["\[Theta]", "p"], "(", "t", ")"}], ")"}], " ", 
             SubscriptBox["h", "p"]}], "-", 
            RowBox[{
             RowBox[{"cos", "(", 
              RowBox[{
               SubscriptBox["\[Theta]", "p"], "(", "t", ")"}], ")"}], " ", 
             SubscriptBox["w", "p"]}], "+", 
            RowBox[{"2", " ", 
             SubscriptBox["w", "p"]}], "-", 
            RowBox[{
             SubscriptBox["x", "p"], "(", "t", ")"}]}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{"1", "-", 
            FractionBox["1", 
             SqrtBox[
              RowBox[{
               SuperscriptBox[
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"sin", "(", 
                    RowBox[{
                    SubscriptBox["\[Theta]", "p"], "(", "t", ")"}], ")"}], 
                   " ", 
                   SubscriptBox["h", "p"]}], "-", 
                  RowBox[{
                   RowBox[{"cos", "(", 
                    RowBox[{
                    SubscriptBox["\[Theta]", "p"], "(", "t", ")"}], ")"}], 
                   " ", 
                   SubscriptBox["w", "p"]}], "+", 
                  RowBox[{"2", " ", 
                   SubscriptBox["w", "p"]}], "-", 
                  RowBox[{
                   SubscriptBox["x", "p"], "(", "t", ")"}]}], ")"}], "2"], 
               "+", 
               SuperscriptBox[
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"-", 
                    RowBox[{"cos", "(", 
                    RowBox[{
                    SubscriptBox["\[Theta]", "p"], "(", "t", ")"}], ")"}]}], 
                   " ", 
                   SubscriptBox["h", "p"]}], "-", 
                  RowBox[{
                   RowBox[{"sin", "(", 
                    RowBox[{
                    SubscriptBox["\[Theta]", "p"], "(", "t", ")"}], ")"}], 
                   " ", 
                   SubscriptBox["w", "p"]}], "-", 
                  RowBox[{
                   SubscriptBox["y", "p"], "(", "t", ")"}]}], ")"}], 
                "2"]}]]]}], ")"}]}], "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"sin", "(", 
              RowBox[{
               SubscriptBox["\[Theta]", "p"], "(", "t", ")"}], ")"}], " ", 
             SubscriptBox["h", "p"]}], "+", 
            RowBox[{
             RowBox[{"cos", "(", 
              RowBox[{
               SubscriptBox["\[Theta]", "p"], "(", "t", ")"}], ")"}], " ", 
             SubscriptBox["w", "p"]}], "-", 
            RowBox[{
             SubscriptBox["x", "p"], "(", "t", ")"}]}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{"1", "-", 
            FractionBox["1", 
             SqrtBox[
              RowBox[{
               SuperscriptBox[
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"sin", "(", 
                    RowBox[{
                    SubscriptBox["\[Theta]", "p"], "(", "t", ")"}], ")"}], 
                   " ", 
                   SubscriptBox["h", "p"]}], "+", 
                  RowBox[{
                   RowBox[{"cos", "(", 
                    RowBox[{
                    SubscriptBox["\[Theta]", "p"], "(", "t", ")"}], ")"}], 
                   " ", 
                   SubscriptBox["w", "p"]}], "-", 
                  RowBox[{
                   SubscriptBox["x", "p"], "(", "t", ")"}]}], ")"}], "2"], 
               "+", 
               SuperscriptBox[
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"-", 
                    RowBox[{"cos", "(", 
                    RowBox[{
                    SubscriptBox["\[Theta]", "p"], "(", "t", ")"}], ")"}]}], 
                   " ", 
                   SubscriptBox["h", "p"]}], "+", 
                  RowBox[{
                   RowBox[{"sin", "(", 
                    RowBox[{
                    SubscriptBox["\[Theta]", "p"], "(", "t", ")"}], ")"}], 
                   " ", 
                   SubscriptBox["w", "p"]}], "-", 
                  RowBox[{
                   SubscriptBox["y", "p"], "(", "t", ")"}]}], ")"}], 
                "2"]}]]]}], ")"}]}], "-", 
         RowBox[{
          SubscriptBox["c", "1"], " ", 
          RowBox[{
           SuperscriptBox[
            SubscriptBox["x", "p"], "\[Prime]",
            MultilineFunction->None], "(", "t", ")"}]}]}]},
       {
        RowBox[{
         RowBox[{"-", "\[Gamma]"}], "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"1", "-", 
            FractionBox["1", 
             SqrtBox[
              RowBox[{
               SuperscriptBox[
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"sin", "(", 
                    RowBox[{
                    SubscriptBox["\[Theta]", "p"], "(", "t", ")"}], ")"}], 
                   " ", 
                   SubscriptBox["h", "p"]}], "-", 
                  RowBox[{
                   RowBox[{"cos", "(", 
                    RowBox[{
                    SubscriptBox["\[Theta]", "p"], "(", "t", ")"}], ")"}], 
                   " ", 
                   SubscriptBox["w", "p"]}], "+", 
                  RowBox[{"2", " ", 
                   SubscriptBox["w", "p"]}], "-", 
                  RowBox[{
                   SubscriptBox["x", "p"], "(", "t", ")"}]}], ")"}], "2"], 
               "+", 
               SuperscriptBox[
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"-", 
                    RowBox[{"cos", "(", 
                    RowBox[{
                    SubscriptBox["\[Theta]", "p"], "(", "t", ")"}], ")"}]}], 
                   " ", 
                   SubscriptBox["h", "p"]}], "-", 
                  RowBox[{
                   RowBox[{"sin", "(", 
                    RowBox[{
                    SubscriptBox["\[Theta]", "p"], "(", "t", ")"}], ")"}], 
                   " ", 
                   SubscriptBox["w", "p"]}], "-", 
                  RowBox[{
                   SubscriptBox["y", "p"], "(", "t", ")"}]}], ")"}], 
                "2"]}]]]}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"-", 
              RowBox[{"cos", "(", 
               RowBox[{
                SubscriptBox["\[Theta]", "p"], "(", "t", ")"}], ")"}]}], " ", 
             SubscriptBox["h", "p"]}], "-", 
            RowBox[{
             RowBox[{"sin", "(", 
              RowBox[{
               SubscriptBox["\[Theta]", "p"], "(", "t", ")"}], ")"}], " ", 
             SubscriptBox["w", "p"]}], "-", 
            RowBox[{
             SubscriptBox["y", "p"], "(", "t", ")"}]}], ")"}]}], "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"1", "-", 
            FractionBox["1", 
             SqrtBox[
              RowBox[{
               SuperscriptBox[
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"sin", "(", 
                    RowBox[{
                    SubscriptBox["\[Theta]", "p"], "(", "t", ")"}], ")"}], 
                   " ", 
                   SubscriptBox["h", "p"]}], "+", 
                  RowBox[{
                   RowBox[{"cos", "(", 
                    RowBox[{
                    SubscriptBox["\[Theta]", "p"], "(", "t", ")"}], ")"}], 
                   " ", 
                   SubscriptBox["w", "p"]}], "-", 
                  RowBox[{
                   SubscriptBox["x", "p"], "(", "t", ")"}]}], ")"}], "2"], 
               "+", 
               SuperscriptBox[
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"-", 
                    RowBox[{"cos", "(", 
                    RowBox[{
                    SubscriptBox["\[Theta]", "p"], "(", "t", ")"}], ")"}]}], 
                   " ", 
                   SubscriptBox["h", "p"]}], "+", 
                  RowBox[{
                   RowBox[{"sin", "(", 
                    RowBox[{
                    SubscriptBox["\[Theta]", "p"], "(", "t", ")"}], ")"}], 
                   " ", 
                   SubscriptBox["w", "p"]}], "-", 
                  RowBox[{
                   SubscriptBox["y", "p"], "(", "t", ")"}]}], ")"}], 
                "2"]}]]]}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"-", 
              RowBox[{"cos", "(", 
               RowBox[{
                SubscriptBox["\[Theta]", "p"], "(", "t", ")"}], ")"}]}], " ", 
             SubscriptBox["h", "p"]}], "+", 
            RowBox[{
             RowBox[{"sin", "(", 
              RowBox[{
               SubscriptBox["\[Theta]", "p"], "(", "t", ")"}], ")"}], " ", 
             SubscriptBox["w", "p"]}], "-", 
            RowBox[{
             SubscriptBox["y", "p"], "(", "t", ")"}]}], ")"}]}], "-", 
         RowBox[{
          SubscriptBox["c", "2"], " ", 
          RowBox[{
           SuperscriptBox[
            SubscriptBox["y", "p"], "\[Prime]",
            MultilineFunction->None], "(", "t", ")"}]}]}]},
       {
        RowBox[{
         RowBox[{
          RowBox[{"-", "\[Alpha]"}], " ", 
          RowBox[{"(", 
           RowBox[{"1", "-", 
            FractionBox["1", 
             SqrtBox[
              RowBox[{
               SuperscriptBox[
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"sin", "(", 
                    RowBox[{
                    SubscriptBox["\[Theta]", "p"], "(", "t", ")"}], ")"}], 
                   " ", 
                   SubscriptBox["h", "p"]}], "-", 
                  RowBox[{
                   RowBox[{"cos", "(", 
                    RowBox[{
                    SubscriptBox["\[Theta]", "p"], "(", "t", ")"}], ")"}], 
                   " ", 
                   SubscriptBox["w", "p"]}], "+", 
                  RowBox[{"2", " ", 
                   SubscriptBox["w", "p"]}], "-", 
                  RowBox[{
                   SubscriptBox["x", "p"], "(", "t", ")"}]}], ")"}], "2"], 
               "+", 
               SuperscriptBox[
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"-", 
                    RowBox[{"cos", "(", 
                    RowBox[{
                    SubscriptBox["\[Theta]", "p"], "(", "t", ")"}], ")"}]}], 
                   " ", 
                   SubscriptBox["h", "p"]}], "-", 
                  RowBox[{
                   RowBox[{"sin", "(", 
                    RowBox[{
                    SubscriptBox["\[Theta]", "p"], "(", "t", ")"}], ")"}], 
                   " ", 
                   SubscriptBox["w", "p"]}], "-", 
                  RowBox[{
                   SubscriptBox["y", "p"], "(", "t", ")"}]}], ")"}], 
                "2"]}]]]}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             SubscriptBox["w", "p"], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"sin", "(", 
                 RowBox[{
                  SubscriptBox["\[Theta]", "p"], "(", "t", ")"}], ")"}], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"2", " ", 
                   SubscriptBox["w", "p"]}], "-", 
                  RowBox[{
                   SubscriptBox["x", "p"], "(", "t", ")"}]}], ")"}]}], "+", 
               RowBox[{
                RowBox[{"cos", "(", 
                 RowBox[{
                  SubscriptBox["\[Theta]", "p"], "(", "t", ")"}], ")"}], " ", 
                RowBox[{
                 SubscriptBox["y", "p"], "(", "t", ")"}]}]}], ")"}]}], "+", 
            RowBox[{
             SubscriptBox["h", "p"], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"cos", "(", 
                 RowBox[{
                  SubscriptBox["\[Theta]", "p"], "(", "t", ")"}], ")"}], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"2", " ", 
                   SubscriptBox["w", "p"]}], "-", 
                  RowBox[{
                   SubscriptBox["x", "p"], "(", "t", ")"}]}], ")"}]}], "-", 
               RowBox[{
                RowBox[{"sin", "(", 
                 RowBox[{
                  SubscriptBox["\[Theta]", "p"], "(", "t", ")"}], ")"}], " ", 
                RowBox[{
                 SubscriptBox["y", "p"], "(", "t", ")"}]}]}], ")"}]}]}], 
           ")"}]}], "-", 
         RowBox[{"\[Alpha]", " ", 
          RowBox[{"(", 
           RowBox[{"1", "-", 
            FractionBox["1", 
             SqrtBox[
              RowBox[{
               SuperscriptBox[
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"sin", "(", 
                    RowBox[{
                    SubscriptBox["\[Theta]", "p"], "(", "t", ")"}], ")"}], 
                   " ", 
                   SubscriptBox["h", "p"]}], "+", 
                  RowBox[{
                   RowBox[{"cos", "(", 
                    RowBox[{
                    SubscriptBox["\[Theta]", "p"], "(", "t", ")"}], ")"}], 
                   " ", 
                   SubscriptBox["w", "p"]}], "-", 
                  RowBox[{
                   SubscriptBox["x", "p"], "(", "t", ")"}]}], ")"}], "2"], 
               "+", 
               SuperscriptBox[
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"-", 
                    RowBox[{"cos", "(", 
                    RowBox[{
                    SubscriptBox["\[Theta]", "p"], "(", "t", ")"}], ")"}]}], 
                   " ", 
                   SubscriptBox["h", "p"]}], "+", 
                  RowBox[{
                   RowBox[{"sin", "(", 
                    RowBox[{
                    SubscriptBox["\[Theta]", "p"], "(", "t", ")"}], ")"}], 
                   " ", 
                   SubscriptBox["w", "p"]}], "-", 
                  RowBox[{
                   SubscriptBox["y", "p"], "(", "t", ")"}]}], ")"}], 
                "2"]}]]]}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             SubscriptBox["w", "p"], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"sin", "(", 
                 RowBox[{
                  SubscriptBox["\[Theta]", "p"], "(", "t", ")"}], ")"}], " ", 
                RowBox[{
                 SubscriptBox["x", "p"], "(", "t", ")"}]}], "-", 
               RowBox[{
                RowBox[{"cos", "(", 
                 RowBox[{
                  SubscriptBox["\[Theta]", "p"], "(", "t", ")"}], ")"}], " ", 
                RowBox[{
                 SubscriptBox["y", "p"], "(", "t", ")"}]}]}], ")"}]}], "+", 
            RowBox[{
             SubscriptBox["h", "p"], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"-", 
                 RowBox[{"cos", "(", 
                  RowBox[{
                   SubscriptBox["\[Theta]", "p"], "(", "t", ")"}], ")"}]}], 
                " ", 
                RowBox[{
                 SubscriptBox["x", "p"], "(", "t", ")"}]}], "-", 
               RowBox[{
                RowBox[{"sin", "(", 
                 RowBox[{
                  SubscriptBox["\[Theta]", "p"], "(", "t", ")"}], ")"}], " ", 
                RowBox[{
                 SubscriptBox["y", "p"], "(", "t", ")"}]}]}], ")"}]}]}], 
           ")"}]}], "-", 
         RowBox[{
          SubscriptBox["c", "3"], " ", 
          RowBox[{
           SuperscriptBox[
            SubscriptBox["\[Theta]", "p"], "\[Prime]",
            MultilineFunction->None], "(", "t", ")"}]}]}]}
      },
      GridBoxAlignment->{
       "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
        "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}]}],
   Function[BoxForm`e$, 
    MatrixForm[BoxForm`e$]]], TraditionalForm]], "Output",
 CellChangeTimes->{{3.714488674553899*^9, 3.714488704303336*^9}, 
   3.7145009790215592`*^9, 3.714501031815095*^9, 3.7145575784505215`*^9, 
   3.7145579633197412`*^9, {3.7145580246168795`*^9, 3.7145580445133843`*^9}, 
   3.7145581081613765`*^9, 3.7151964949432287`*^9, 3.7152166207157803`*^9}]
}, Closed]],

Cell[" ", "Text",
 Editable->False,
 Selectable->False,
 CellFrame->{{0, 0}, {0, 0.5}},
 ShowCellBracket->False,
 CellMargins->{{0, 0}, {1, 1}},
 CellElementSpacings->{"CellMinHeight"->1},
 CellFrameMargins->0,
 CellFrameColor->RGBColor[0, 0, 1],
 CellSize->{Inherited, 3}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"NumericParametersTest", "=", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{
     SubscriptBox["k", "1"], "\[Rule]", "200"}], ",", " ", 
    RowBox[{
     SubscriptBox["k", "2"], "\[Rule]", 
     RowBox[{
      SubscriptBox["k", "1"], "+", "0"}]}], ",", 
    RowBox[{
     SubscriptBox["L0", "1"], "\[Rule]", "2"}], ",", 
    RowBox[{
     SubscriptBox["L0", "2"], "\[Rule]", 
     RowBox[{
      SubscriptBox["L0", "1"], "+", "0"}]}], ",", 
    RowBox[{
     SubscriptBox["m", "p"], "\[Rule]", "2"}], ",", 
    RowBox[{
     SubscriptBox["h", "p"], "\[Rule]", "0.1"}], ",", 
    RowBox[{
     SubscriptBox["w", "p"], "\[Rule]", "1"}], ",", 
    RowBox[{"g", "\[Rule]", "9.81"}]}], "}"}]}], "\[IndentingNewLine]", 
 RowBox[{"NumericEquibInputs", "=", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{
     RowBox[{
      SubscriptBox["x", "1"], "[", "t", "]"}], "\[Rule]", "0"}], ",", 
    RowBox[{
     RowBox[{
      SubscriptBox["y", "1"], "[", "t", "]"}], "\[Rule]", "0"}], ",", 
    RowBox[{
     RowBox[{
      SubscriptBox["x", "2"], "[", "t", "]"}], "\[Rule]", 
     RowBox[{"2", 
      SubscriptBox["w", "p"]}]}], ",", 
    RowBox[{
     RowBox[{
      SubscriptBox["y", "2"], "[", "t", "]"}], "\[Rule]", "0"}]}], 
   RowBox[{"(*", 
    RowBox[{",", 
     RowBox[{"\[Alpha]", "\[Rule]", "0.04"}], ",", 
     RowBox[{"\[Gamma]", "\[Rule]", "2"}]}], "*)"}], 
   "}"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"NumericStructuralDamping", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      SubscriptBox["c", "1"], "\[Rule]", "1"}], ",", 
     RowBox[{
      SubscriptBox["c", "2"], "\[Rule]", "1"}], ",", 
     RowBox[{
      SubscriptBox["c", "3"], "\[Rule]", "1"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"NumericNonStructuralDamping", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      SubscriptBox["c", "1"], "\[Rule]", "0"}], ",", 
     RowBox[{
      SubscriptBox["c", "2"], "\[Rule]", "0"}], ",", 
     RowBox[{
      SubscriptBox["c", "3"], "\[Rule]", "0"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"greekTermsGeneralForTest", "=", 
   RowBox[{"{", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"\[Kappa]", "\[Rule]", 
      FractionBox[
       SubscriptBox["k", "2"], 
       SubscriptBox["k", "1"]]}], ",", "\[IndentingNewLine]", 
     RowBox[{"\[ScriptCapitalL]", "\[Rule]", 
      FractionBox[
       SubscriptBox["L0", "2"], 
       SubscriptBox["L0", "1"]]}], ",", "\[IndentingNewLine]", 
     RowBox[{
      SuperscriptBox[
       SubscriptBox["\[Omega]", "s"], "2"], "\[Rule]", 
      FractionBox[
       SubscriptBox["k", "1"], 
       SubscriptBox["m", "p"]]}], ",", "\[IndentingNewLine]", 
     RowBox[{"\[Alpha]", "\[Rule]", 
      FractionBox[
       RowBox[{"3", 
        SuperscriptBox[
         SubscriptBox["L0", "1"], "2"]}], 
       RowBox[{"(", 
        RowBox[{
         SuperscriptBox[
          SubscriptBox["w", "p"], "2"], "+", 
         SuperscriptBox[
          SubscriptBox["h", "p"], "2"]}], ")"}]]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"\[Gamma]", "->", 
      RowBox[{"(", 
       FractionBox[
        RowBox[{"g", " ", 
         SubscriptBox["m", "p"]}], 
        RowBox[{
         SubscriptBox["L0", "1"], 
         SubscriptBox["k", "1"]}]], ")"}]}]}], "\[IndentingNewLine]", "}"}]}],
   "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    FractionBox["g", 
     SubscriptBox["L0", "1"]], "/.", "NumericParametersTest"}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{"NumericTestParams", "=", 
  RowBox[{
  "greekTermsGeneralForTest", "//.", "NumericParametersTest"}]}]}], "Input",
 CellChangeTimes->{{3.714537390515764*^9, 3.714537495401929*^9}, {
   3.7145394243169956`*^9, 3.7145395200033665`*^9}, {3.714539561885668*^9, 
   3.714539561925669*^9}, {3.714539600756035*^9, 3.7145396078122044`*^9}, 
   3.714539643430365*^9, {3.7145403822630777`*^9, 3.7145404732888412`*^9}, {
   3.7145406031390085`*^9, 3.714540692345502*^9}, 3.7145407345401635`*^9, {
   3.7145408445533953`*^9, 3.7145408712491493`*^9}, {3.714540943577881*^9, 
   3.7145409544539022`*^9}, {3.715216761944151*^9, 3.7152168019028397`*^9}, {
   3.7152168578775063`*^9, 3.715216970161231*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    SubscriptBox["k", "1"], "\[Rule]", "200"}], ",", 
   RowBox[{
    SubscriptBox["k", "2"], "\[Rule]", 
    SubscriptBox["k", "1"]}], ",", 
   RowBox[{
    SubscriptBox["L0", "1"], "\[Rule]", "2"}], ",", 
   RowBox[{
    SubscriptBox["L0", "2"], "\[Rule]", 
    SubscriptBox["L0", "1"]}], ",", 
   RowBox[{
    SubscriptBox["m", "p"], "\[Rule]", "2"}], ",", 
   RowBox[{
    SubscriptBox["h", "p"], "\[Rule]", "0.1`"}], ",", 
   RowBox[{
    SubscriptBox["w", "p"], "\[Rule]", "1"}], ",", 
   RowBox[{"g", "\[Rule]", "9.81`"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.714540661810577*^9, 3.7145406955766535`*^9, 3.7145407351845913`*^9, {
   3.714540862633419*^9, 3.7145408719466143`*^9}, 3.7145409562140727`*^9, 
   3.714557562366824*^9, 3.7145581689004793`*^9, 3.715194461223075*^9, 
   3.7151964987027164`*^9, 3.71521682700043*^9, 3.715216866513716*^9, 
   3.715216897279133*^9, 3.7152169748573303`*^9, 3.7157706270039406`*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{
     SubscriptBox["x", "1"], "[", "t", "]"}], "\[Rule]", "0"}], ",", 
   RowBox[{
    RowBox[{
     SubscriptBox["y", "1"], "[", "t", "]"}], "\[Rule]", "0"}], ",", 
   RowBox[{
    RowBox[{
     SubscriptBox["x", "2"], "[", "t", "]"}], "\[Rule]", 
    RowBox[{"2", " ", 
     SubscriptBox["w", "p"]}]}], ",", 
   RowBox[{
    RowBox[{
     SubscriptBox["y", "2"], "[", "t", "]"}], "\[Rule]", "0"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{
  3.714540661810577*^9, 3.7145406955766535`*^9, 3.7145407351845913`*^9, {
   3.714540862633419*^9, 3.7145408719466143`*^9}, 3.7145409562140727`*^9, 
   3.714557562366824*^9, 3.7145581689004793`*^9, 3.715194461223075*^9, 
   3.7151964987027164`*^9, 3.71521682700043*^9, 3.715216866513716*^9, 
   3.715216897279133*^9, 3.7152169748573303`*^9, 3.7157706270039406`*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"\[Kappa]", "\[Rule]", 
    FractionBox[
     SubscriptBox["k", "2"], 
     SubscriptBox["k", "1"]]}], ",", 
   RowBox[{"\[ScriptCapitalL]", "\[Rule]", 
    FractionBox[
     SubscriptBox["L0", "2"], 
     SubscriptBox["L0", "1"]]}], ",", 
   RowBox[{
    SubsuperscriptBox["\[Omega]", "s", "2"], "\[Rule]", 
    FractionBox[
     SubscriptBox["k", "1"], 
     SubscriptBox["m", "p"]]}], ",", 
   RowBox[{"\[Alpha]", "\[Rule]", 
    FractionBox[
     RowBox[{"3", " ", 
      SubsuperscriptBox["L0", "1", "2"]}], 
     RowBox[{
      SubsuperscriptBox["h", "p", "2"], "+", 
      SubsuperscriptBox["w", "p", "2"]}]]}], ",", 
   RowBox[{"\[Gamma]", "\[Rule]", 
    FractionBox[
     RowBox[{"g", " ", 
      SubscriptBox["m", "p"]}], 
     RowBox[{
      SubscriptBox["k", "1"], " ", 
      SubscriptBox["L0", "1"]}]]}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.714540661810577*^9, 3.7145406955766535`*^9, 3.7145407351845913`*^9, {
   3.714540862633419*^9, 3.7145408719466143`*^9}, 3.7145409562140727`*^9, 
   3.714557562366824*^9, 3.7145581689004793`*^9, 3.715194461223075*^9, 
   3.7151964987027164`*^9, 3.71521682700043*^9, 3.715216866513716*^9, 
   3.715216897279133*^9, 3.7152169748573303`*^9, 3.71577062700794*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"\[Kappa]", "\[Rule]", "1"}], ",", 
   RowBox[{"\[ScriptCapitalL]", "\[Rule]", "1"}], ",", 
   RowBox[{
    SubsuperscriptBox["\[Omega]", "s", "2"], "\[Rule]", "100"}], ",", 
   RowBox[{"\[Alpha]", "\[Rule]", "11.881188118811881`"}], ",", 
   RowBox[{"\[Gamma]", "\[Rule]", "0.04905`"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.714540661810577*^9, 3.7145406955766535`*^9, 3.7145407351845913`*^9, {
   3.714540862633419*^9, 3.7145408719466143`*^9}, 3.7145409562140727`*^9, 
   3.714557562366824*^9, 3.7145581689004793`*^9, 3.715194461223075*^9, 
   3.7151964987027164`*^9, 3.71521682700043*^9, 3.715216866513716*^9, 
   3.715216897279133*^9, 3.7152169748573303`*^9, 3.7157706270119395`*^9}]
}, Open  ]],

Cell[" ", "Text",
 Editable->False,
 Selectable->False,
 CellFrame->{{0, 0}, {0, 0.5}},
 ShowCellBracket->False,
 CellMargins->{{0, 0}, {1, 1}},
 CellElementSpacings->{"CellMinHeight"->1},
 CellFrameMargins->0,
 CellFrameColor->RGBColor[0, 0, 1],
 CellSize->{Inherited, 3}],

Cell[" ", "Text",
 Editable->False,
 Selectable->False,
 CellFrame->{{0, 0}, {0, 3}},
 ShowCellBracket->False,
 CellMargins->{{0, 0}, {1, 1}},
 CellElementSpacings->{"CellMinHeight"->1},
 CellFrameMargins->0,
 CellFrameColor->RGBColor[0, 0, 1],
 CellSize->{Inherited, 5}],

Cell[" ", "Text",
 Editable->False,
 Selectable->False,
 CellFrame->{{0, 0}, {0, 3}},
 ShowCellBracket->False,
 CellMargins->{{0, 0}, {1, 1}},
 CellElementSpacings->{"CellMinHeight"->1},
 CellFrameMargins->0,
 CellFrameColor->RGBColor[0, 0, 1],
 CellSize->{Inherited, 5}],

Cell[" ", "Text",
 Editable->False,
 Selectable->False,
 CellFrame->{{0, 0}, {0, 0.5}},
 ShowCellBracket->False,
 CellMargins->{{0, 0}, {1, 1}},
 CellElementSpacings->{"CellMinHeight"->1},
 CellFrameMargins->0,
 CellFrameColor->RGBColor[0, 0, 1],
 CellSize->{Inherited, 3}],

Cell[" ", "Text",
 Editable->False,
 Selectable->False,
 CellFrame->{{0, 0}, {0, 3}},
 ShowCellBracket->False,
 CellMargins->{{0, 0}, {1, 1}},
 CellElementSpacings->{"CellMinHeight"->1},
 CellFrameMargins->0,
 CellFrameColor->RGBColor[0, 0, 1],
 CellSize->{Inherited, 5}],

Cell[" ", "Text",
 Editable->False,
 Selectable->False,
 CellFrame->{{0, 0}, {0, 3}},
 ShowCellBracket->False,
 CellMargins->{{0, 0}, {1, 1}},
 CellElementSpacings->{"CellMinHeight"->1},
 CellFrameMargins->0,
 CellFrameColor->RGBColor[0, 0, 1],
 CellSize->{Inherited, 5}],

Cell[" ", "Text",
 Editable->False,
 Selectable->False,
 CellFrame->{{0, 0}, {0, 0.5}},
 ShowCellBracket->False,
 CellMargins->{{0, 0}, {1, 1}},
 CellElementSpacings->{"CellMinHeight"->1},
 CellFrameMargins->0,
 CellFrameColor->RGBColor[0, 0, 1],
 CellSize->{Inherited, 3}],

Cell["\[OpenCurlyDoubleQuote](*simple case \
testings:*)\[CloseCurlyDoubleQuote]", "Text",
 CellChangeTimes->{{3.7143753343649387`*^9, 3.7143753420451508`*^9}, {
  3.715217054360982*^9, 3.715217059889098*^9}}],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
   RowBox[{"trajectory", ":", "\[IndentingNewLine]", "\[Tau]"}], "=", 
   RowBox[{
    RowBox[{"0", ":", " ", 
     OverscriptBox["y", ".."]}], "=", 
    RowBox[{
     RowBox[{"1", 
      RowBox[{"m", "/", 
       SuperscriptBox["s", "2"]}], "  ", "until", " ", 
      SubscriptBox["y", "1"]}], "=", 
     RowBox[{
      SubscriptBox["y", "2"], "=", 
      RowBox[{
       RowBox[{"10", 
        SubscriptBox["L0", "1"], "\[IndentingNewLine]", "    ", 
        OverscriptBox["y", ".."]}], "=", 
       RowBox[{
        RowBox[{
         RowBox[{"-", "1"}], 
         RowBox[{"m", "/", 
          SuperscriptBox["s", "2"]}], " ", "until", " ", 
         OverscriptBox[
          SubscriptBox["y", "1"], "."]}], "=", 
        RowBox[{
         OverscriptBox[
          SubscriptBox["y", "2"], "."], "=", 
         RowBox[{
          RowBox[{"0", "\[IndentingNewLine]", 
           OverscriptBox[
            SubscriptBox["x", "1"], ".."]}], "=", 
          RowBox[{
           OverscriptBox[
            SubscriptBox["x", "2"], ".."], "=", 
           RowBox[{
            RowBox[{"1", 
             RowBox[{"m", "/", 
              SuperscriptBox["s", "2"]}], "  ", "until", " ", 
             OverscriptBox[
              SubscriptBox["x", "1"], "."]}], "=", 
            RowBox[{
             OverscriptBox[
              SubscriptBox["x", "2"], "."], "=", 
             RowBox[{
              RowBox[{"2", 
               RowBox[{"m", "/", "s"}], "\[IndentingNewLine]", "disterbunce", 
               " ", "can", " ", "be", " ", "input", " ", "by", " ", 
               SubscriptBox["x", "1"]}], "+=", 
              RowBox[{"5", 
               SubscriptBox["L0", "1"], " ", "over", " ", 
               FractionBox["1", 
                RowBox[{"100", " ", 
                 SqrtBox[
                  SubscriptBox["\[Omega]", "s"]]}]]}]}]}]}]}]}]}]}]}]}]}]}]}],
   "*)"}]], "Input",
 CellChangeTimes->{{3.7128649918168645`*^9, 3.712864999951256*^9}, {
   3.7128650538669786`*^9, 3.7128653567852306`*^9}, 3.714375349988761*^9}],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.712831792809779*^9, 3.712831794993853*^9}}],

Cell[" ", "Text",
 Editable->False,
 Selectable->False,
 CellFrame->{{0, 0}, {0, 2}},
 ShowCellBracket->False,
 CellMargins->{{0, 0}, {1, 1}},
 CellElementSpacings->{"CellMinHeight"->1},
 CellFrameMargins->0,
 CellFrameColor->RGBColor[0, 0, 1],
 CellSize->{Inherited, 4}],

Cell[" ", "Text",
 Editable->False,
 Selectable->False,
 CellFrame->{{0, 0}, {0, 3}},
 ShowCellBracket->False,
 CellMargins->{{0, 0}, {1, 1}},
 CellElementSpacings->{"CellMinHeight"->1},
 CellFrameMargins->0,
 CellFrameColor->RGBColor[0, 0, 1],
 CellSize->{Inherited, 5}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
   "greekTermsSymetricCase", " ", "must", " ", "be", " ", "used", " ", 
    "again", " ", "because", " ", "this", " ", "is", " ", "where", " ", "the",
     " ", "equilibrium", " ", "point", " ", "is", " ", "refering", " ", 
    RowBox[{"to", " ", ".", "\[IndentingNewLine]", "EquibInputConditions"}], 
    " ", "might", " ", "be", " ", "turned", " ", "of", " ", "later", " ", 
    "for", " ", "better", " ", "investigation"}], " ", "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{"SymetricEOMtoInvestigate", "=", 
       RowBox[{
        RowBox[{"EOM", "/.", "greekTermsSymetricCase"}], "//.", 
        "NumericEquibInputs"}]}], ")"}], "/.", "dispNoTime"}], "//", 
    "MatrixForm"}], "//", "TraditionalForm"}]}]], "Input",
 CellChangeTimes->{{3.7145730224935207`*^9, 3.7145730317420354`*^9}, {
   3.714573143376878*^9, 3.714573149965064*^9}, {3.7145731973242517`*^9, 
   3.714573299203663*^9}, {3.715194470232045*^9, 3.715194486098557*^9}, 
   3.715770719992876*^9}],

Cell[BoxData[
 FormBox[
  TagBox[
   RowBox[{
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {
        SuperscriptBox[
         SubscriptBox["x", "p"], "\[Prime]\[Prime]",
         MultilineFunction->None]},
       {
        SuperscriptBox[
         SubscriptBox["y", "p"], "\[Prime]\[Prime]",
         MultilineFunction->None]},
       {
        SuperscriptBox[
         SubscriptBox["\[Theta]", "p"], "\[Prime]\[Prime]",
         MultilineFunction->None]}
      },
      GridBoxAlignment->{
       "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
        "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}], 
    "\[LongEqual]", 
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"sin", "(", 
              SubscriptBox["\[Theta]", "p"], ")"}], " ", 
             SubscriptBox["h", "p"]}], "-", 
            RowBox[{
             RowBox[{"cos", "(", 
              SubscriptBox["\[Theta]", "p"], ")"}], " ", 
             SubscriptBox["w", "p"]}], "+", 
            RowBox[{"2", " ", 
             SubscriptBox["w", "p"]}], "-", 
            SubscriptBox["x", "p"]}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{"1", "-", 
            FractionBox["1", 
             SqrtBox[
              RowBox[{
               SuperscriptBox[
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"sin", "(", 
                    SubscriptBox["\[Theta]", "p"], ")"}], " ", 
                   SubscriptBox["h", "p"]}], "-", 
                  RowBox[{
                   RowBox[{"cos", "(", 
                    SubscriptBox["\[Theta]", "p"], ")"}], " ", 
                   SubscriptBox["w", "p"]}], "+", 
                  RowBox[{"2", " ", 
                   SubscriptBox["w", "p"]}], "-", 
                  SubscriptBox["x", "p"]}], ")"}], "2"], "+", 
               SuperscriptBox[
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"-", 
                    RowBox[{"cos", "(", 
                    SubscriptBox["\[Theta]", "p"], ")"}]}], " ", 
                   SubscriptBox["h", "p"]}], "-", 
                  RowBox[{
                   RowBox[{"sin", "(", 
                    SubscriptBox["\[Theta]", "p"], ")"}], " ", 
                   SubscriptBox["w", "p"]}], "-", 
                  SubscriptBox["y", "p"]}], ")"}], "2"]}]]]}], ")"}]}], "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"sin", "(", 
              SubscriptBox["\[Theta]", "p"], ")"}], " ", 
             SubscriptBox["h", "p"]}], "+", 
            RowBox[{
             RowBox[{"cos", "(", 
              SubscriptBox["\[Theta]", "p"], ")"}], " ", 
             SubscriptBox["w", "p"]}], "-", 
            SubscriptBox["x", "p"]}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{"1", "-", 
            FractionBox["1", 
             SqrtBox[
              RowBox[{
               SuperscriptBox[
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"sin", "(", 
                    SubscriptBox["\[Theta]", "p"], ")"}], " ", 
                   SubscriptBox["h", "p"]}], "+", 
                  RowBox[{
                   RowBox[{"cos", "(", 
                    SubscriptBox["\[Theta]", "p"], ")"}], " ", 
                   SubscriptBox["w", "p"]}], "-", 
                  SubscriptBox["x", "p"]}], ")"}], "2"], "+", 
               SuperscriptBox[
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"-", 
                    RowBox[{"cos", "(", 
                    SubscriptBox["\[Theta]", "p"], ")"}]}], " ", 
                   SubscriptBox["h", "p"]}], "+", 
                  RowBox[{
                   RowBox[{"sin", "(", 
                    SubscriptBox["\[Theta]", "p"], ")"}], " ", 
                   SubscriptBox["w", "p"]}], "-", 
                  SubscriptBox["y", "p"]}], ")"}], "2"]}]]]}], ")"}]}], "-", 
         RowBox[{
          SubscriptBox["c", "1"], " ", 
          SuperscriptBox[
           SubscriptBox["x", "p"], "\[Prime]",
           MultilineFunction->None]}]}]},
       {
        RowBox[{
         RowBox[{"-", "\[Gamma]"}], "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"1", "-", 
            FractionBox["1", 
             SqrtBox[
              RowBox[{
               SuperscriptBox[
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"sin", "(", 
                    SubscriptBox["\[Theta]", "p"], ")"}], " ", 
                   SubscriptBox["h", "p"]}], "-", 
                  RowBox[{
                   RowBox[{"cos", "(", 
                    SubscriptBox["\[Theta]", "p"], ")"}], " ", 
                   SubscriptBox["w", "p"]}], "+", 
                  RowBox[{"2", " ", 
                   SubscriptBox["w", "p"]}], "-", 
                  SubscriptBox["x", "p"]}], ")"}], "2"], "+", 
               SuperscriptBox[
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"-", 
                    RowBox[{"cos", "(", 
                    SubscriptBox["\[Theta]", "p"], ")"}]}], " ", 
                   SubscriptBox["h", "p"]}], "-", 
                  RowBox[{
                   RowBox[{"sin", "(", 
                    SubscriptBox["\[Theta]", "p"], ")"}], " ", 
                   SubscriptBox["w", "p"]}], "-", 
                  SubscriptBox["y", "p"]}], ")"}], "2"]}]]]}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"-", 
              RowBox[{"cos", "(", 
               SubscriptBox["\[Theta]", "p"], ")"}]}], " ", 
             SubscriptBox["h", "p"]}], "-", 
            RowBox[{
             RowBox[{"sin", "(", 
              SubscriptBox["\[Theta]", "p"], ")"}], " ", 
             SubscriptBox["w", "p"]}], "-", 
            SubscriptBox["y", "p"]}], ")"}]}], "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"1", "-", 
            FractionBox["1", 
             SqrtBox[
              RowBox[{
               SuperscriptBox[
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"sin", "(", 
                    SubscriptBox["\[Theta]", "p"], ")"}], " ", 
                   SubscriptBox["h", "p"]}], "+", 
                  RowBox[{
                   RowBox[{"cos", "(", 
                    SubscriptBox["\[Theta]", "p"], ")"}], " ", 
                   SubscriptBox["w", "p"]}], "-", 
                  SubscriptBox["x", "p"]}], ")"}], "2"], "+", 
               SuperscriptBox[
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"-", 
                    RowBox[{"cos", "(", 
                    SubscriptBox["\[Theta]", "p"], ")"}]}], " ", 
                   SubscriptBox["h", "p"]}], "+", 
                  RowBox[{
                   RowBox[{"sin", "(", 
                    SubscriptBox["\[Theta]", "p"], ")"}], " ", 
                   SubscriptBox["w", "p"]}], "-", 
                  SubscriptBox["y", "p"]}], ")"}], "2"]}]]]}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"-", 
              RowBox[{"cos", "(", 
               SubscriptBox["\[Theta]", "p"], ")"}]}], " ", 
             SubscriptBox["h", "p"]}], "+", 
            RowBox[{
             RowBox[{"sin", "(", 
              SubscriptBox["\[Theta]", "p"], ")"}], " ", 
             SubscriptBox["w", "p"]}], "-", 
            SubscriptBox["y", "p"]}], ")"}]}], "-", 
         RowBox[{
          SubscriptBox["c", "2"], " ", 
          SuperscriptBox[
           SubscriptBox["y", "p"], "\[Prime]",
           MultilineFunction->None]}]}]},
       {
        RowBox[{
         RowBox[{
          RowBox[{"-", "\[Alpha]"}], " ", 
          RowBox[{"(", 
           RowBox[{"1", "-", 
            FractionBox["1", 
             SqrtBox[
              RowBox[{
               SuperscriptBox[
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"sin", "(", 
                    SubscriptBox["\[Theta]", "p"], ")"}], " ", 
                   SubscriptBox["h", "p"]}], "-", 
                  RowBox[{
                   RowBox[{"cos", "(", 
                    SubscriptBox["\[Theta]", "p"], ")"}], " ", 
                   SubscriptBox["w", "p"]}], "+", 
                  RowBox[{"2", " ", 
                   SubscriptBox["w", "p"]}], "-", 
                  SubscriptBox["x", "p"]}], ")"}], "2"], "+", 
               SuperscriptBox[
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"-", 
                    RowBox[{"cos", "(", 
                    SubscriptBox["\[Theta]", "p"], ")"}]}], " ", 
                   SubscriptBox["h", "p"]}], "-", 
                  RowBox[{
                   RowBox[{"sin", "(", 
                    SubscriptBox["\[Theta]", "p"], ")"}], " ", 
                   SubscriptBox["w", "p"]}], "-", 
                  SubscriptBox["y", "p"]}], ")"}], "2"]}]]]}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             SubscriptBox["w", "p"], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"sin", "(", 
                 SubscriptBox["\[Theta]", "p"], ")"}], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"2", " ", 
                   SubscriptBox["w", "p"]}], "-", 
                  SubscriptBox["x", "p"]}], ")"}]}], "+", 
               RowBox[{
                RowBox[{"cos", "(", 
                 SubscriptBox["\[Theta]", "p"], ")"}], " ", 
                SubscriptBox["y", "p"]}]}], ")"}]}], "+", 
            RowBox[{
             SubscriptBox["h", "p"], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"cos", "(", 
                 SubscriptBox["\[Theta]", "p"], ")"}], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"2", " ", 
                   SubscriptBox["w", "p"]}], "-", 
                  SubscriptBox["x", "p"]}], ")"}]}], "-", 
               RowBox[{
                RowBox[{"sin", "(", 
                 SubscriptBox["\[Theta]", "p"], ")"}], " ", 
                SubscriptBox["y", "p"]}]}], ")"}]}]}], ")"}]}], "-", 
         RowBox[{"\[Alpha]", " ", 
          RowBox[{"(", 
           RowBox[{"1", "-", 
            FractionBox["1", 
             SqrtBox[
              RowBox[{
               SuperscriptBox[
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"sin", "(", 
                    SubscriptBox["\[Theta]", "p"], ")"}], " ", 
                   SubscriptBox["h", "p"]}], "+", 
                  RowBox[{
                   RowBox[{"cos", "(", 
                    SubscriptBox["\[Theta]", "p"], ")"}], " ", 
                   SubscriptBox["w", "p"]}], "-", 
                  SubscriptBox["x", "p"]}], ")"}], "2"], "+", 
               SuperscriptBox[
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"-", 
                    RowBox[{"cos", "(", 
                    SubscriptBox["\[Theta]", "p"], ")"}]}], " ", 
                   SubscriptBox["h", "p"]}], "+", 
                  RowBox[{
                   RowBox[{"sin", "(", 
                    SubscriptBox["\[Theta]", "p"], ")"}], " ", 
                   SubscriptBox["w", "p"]}], "-", 
                  SubscriptBox["y", "p"]}], ")"}], "2"]}]]]}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             SubscriptBox["w", "p"], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"sin", "(", 
                 SubscriptBox["\[Theta]", "p"], ")"}], " ", 
                SubscriptBox["x", "p"]}], "-", 
               RowBox[{
                RowBox[{"cos", "(", 
                 SubscriptBox["\[Theta]", "p"], ")"}], " ", 
                SubscriptBox["y", "p"]}]}], ")"}]}], "+", 
            RowBox[{
             SubscriptBox["h", "p"], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"-", 
                 RowBox[{"cos", "(", 
                  SubscriptBox["\[Theta]", "p"], ")"}]}], " ", 
                SubscriptBox["x", "p"]}], "-", 
               RowBox[{
                RowBox[{"sin", "(", 
                 SubscriptBox["\[Theta]", "p"], ")"}], " ", 
                SubscriptBox["y", "p"]}]}], ")"}]}]}], ")"}]}], "-", 
         RowBox[{
          SubscriptBox["c", "3"], " ", 
          SuperscriptBox[
           SubscriptBox["\[Theta]", "p"], "\[Prime]",
           MultilineFunction->None]}]}]}
      },
      GridBoxAlignment->{
       "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
        "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}]}],
   Function[BoxForm`e$, 
    MatrixForm[BoxForm`e$]]], TraditionalForm]], "Output",
 CellChangeTimes->{3.714573363860479*^9, 3.7151945092709103`*^9, 
  3.715196512828076*^9, 3.7152171521546526`*^9, 3.715770633207152*^9, 
  3.715770721484918*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"testValid", "=", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{
        SubscriptBox["x", "p"], "[", "t", "]"}], "\[Rule]", "1"}], ",", 
      RowBox[{
       RowBox[{
        SubscriptBox["y", "p"], "[", "t", "]"}], "\[Rule]", "1"}], ",", 
      RowBox[{
       RowBox[{
        SubscriptBox["\[Theta]", "p"], "[", "t", "]"}], "\[Rule]", "1"}]}], 
     "}"}]}], ";"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"testValid", "=", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{
         SubscriptBox["x", "p"], "[", "t", "]"}], "\[Rule]", "1"}], ",", 
       RowBox[{"(*", 
        RowBox[{
         RowBox[{
          RowBox[{
           SubscriptBox["y", "p"], "[", "t", "]"}], "\[Rule]", "1"}], ","}], 
        "*)"}], 
       RowBox[{
        RowBox[{
         SubscriptBox["\[Theta]", "p"], "[", "t", "]"}], "\[Rule]", "1"}]}], 
      "}"}]}], ";"}], 
   "*)"}]}], "\[IndentingNewLine]", "\"\<equation with 'testValid' applied in \
print only:\>\"", "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"(", 
     RowBox[{"EOMtoSolve", "=", 
      RowBox[{
       RowBox[{
        RowBox[{"SymetricEOMtoInvestigate", "/.", "NumericTestParams"}], "/.",
         "NumericParametersTest"}], "/.", "NumericNonStructuralDamping"}]}], 
     ")"}], "/.", "testValid"}], "//", "MatrixForm"}], "//", 
  "TraditionalForm"}], "\[IndentingNewLine]", 
 RowBox[{"EOMtoSolve", ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"numericEqs", "=", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"X1", "'"}], "[", "t", "]"}], "\[Equal]", 
            RowBox[{"X2", "[", "t", "]"}]}], ",", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{
             RowBox[{"X2", "'"}], "[", "t", "]"}], "\[Equal]", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"EOMtoSolve", "[", 
               RowBox[{"[", 
                RowBox[{"2", ",", "1"}], "]"}], "]"}], "[", 
              RowBox[{"[", "1", "]"}], "]"}], ")"}]}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{
             RowBox[{"X3", "'"}], "[", "t", "]"}], "\[Equal]", 
            RowBox[{"X4", "[", "t", "]"}]}], ",", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{
             RowBox[{"X4", "'"}], "[", "t", "]"}], "\[Equal]", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"EOMtoSolve", "[", 
               RowBox[{"[", 
                RowBox[{"2", ",", "2"}], "]"}], "]"}], "[", 
              RowBox[{"[", "1", "]"}], "]"}], ")"}]}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{
             RowBox[{"X5", "'"}], "[", "t", "]"}], "\[Equal]", 
            RowBox[{"X6", "[", "t", "]"}]}], ",", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{
             RowBox[{"X6", "'"}], "[", "t", "]"}], "\[Equal]", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"EOMtoSolve", "[", 
               RowBox[{"[", 
                RowBox[{"2", ",", "3"}], "]"}], "]"}], "[", 
              RowBox[{"[", "1", "]"}], "]"}], ")"}]}]}], "}"}], "/.", 
         RowBox[{
          RowBox[{
           SubscriptBox["x", "p"], "[", "t", "]"}], "\[Rule]", 
          RowBox[{"X1", "[", "t", "]"}]}]}], "/.", 
        RowBox[{
         RowBox[{
          SubscriptBox["y", "p"], "[", "t", "]"}], "\[Rule]", 
         RowBox[{"X3", "[", "t", "]"}]}]}], "/.", 
       RowBox[{
        RowBox[{
         SubscriptBox["\[Theta]", "p"], "[", "t", "]"}], "\[Rule]", 
        RowBox[{"X5", "[", "t", "]"}]}]}], "/.", 
      RowBox[{
       RowBox[{"D", "[", 
        RowBox[{
         RowBox[{
          SubscriptBox["x", "p"], "[", "t", "]"}], ",", "t"}], "]"}], 
       "\[Rule]", 
       RowBox[{"X2", "[", "t", "]"}]}]}], "/.", 
     RowBox[{
      RowBox[{"D", "[", 
       RowBox[{
        RowBox[{
         SubscriptBox["y", "p"], "[", "t", "]"}], ",", "t"}], "]"}], 
      "\[Rule]", 
      RowBox[{"X4", "[", "t", "]"}]}]}], "/.", 
    RowBox[{
     RowBox[{"D", "[", 
      RowBox[{
       RowBox[{
        SubscriptBox["\[Theta]", "p"], "[", "t", "]"}], ",", "t"}], "]"}], 
     "\[Rule]", 
     RowBox[{"X6", "[", "t", "]"}]}]}]}], 
  ";"}], "\[IndentingNewLine]", "NumericTestParams", "\[IndentingNewLine]", 
 RowBox[{"NumericParametersTest", "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{"startValues", "=", 
    RowBox[{
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{"X1", "[", "0", "]"}], "\[Equal]", 
         SubscriptBox["w", "p"]}], ",", 
        RowBox[{
         RowBox[{"X2", "[", "0", "]"}], "==", "0.1"}], ",", 
        RowBox[{
         RowBox[{"X3", "[", "0", "]"}], "\[Equal]", 
         RowBox[{
          RowBox[{"-", "1"}], "-", 
          SubscriptBox["h", "p"], "-", 
          FractionBox["\[Gamma]", "2"]}]}], ",", 
        RowBox[{
         RowBox[{"X4", "[", "0", "]"}], "\[Equal]", "1"}], ",", 
        RowBox[{
         RowBox[{"X5", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
        RowBox[{
         RowBox[{"X6", "[", "0", "]"}], "==", "0.1"}]}], "}"}], "/.", 
      "NumericTestParams"}], "/.", "NumericParametersTest"}]}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{"startValues", "=", 
    RowBox[{
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{"X1", "[", "0", "]"}], "\[Equal]", 
         SubscriptBox["w", "p"]}], ",", 
        RowBox[{
         RowBox[{"X2", "[", "0", "]"}], "==", "0.001"}], ",", 
        RowBox[{
         RowBox[{"X3", "[", "0", "]"}], "\[Equal]", 
         RowBox[{
          RowBox[{"-", "1"}], "-", 
          SubscriptBox["h", "p"], "-", 
          FractionBox["\[Gamma]", "2"]}]}], ",", 
        RowBox[{
         RowBox[{"X4", "[", "0", "]"}], "\[Equal]", "0.001"}], ",", 
        RowBox[{
         RowBox[{"X5", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
        RowBox[{
         RowBox[{"X6", "[", "0", "]"}], "==", "1"}]}], "}"}], "/.", 
      "NumericTestParams"}], "/.", "NumericParametersTest"}]}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{"startValues", "=", 
    RowBox[{
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{"X1", "[", "0", "]"}], "\[Equal]", 
         SubscriptBox["w", "p"]}], ",", 
        RowBox[{
         RowBox[{"X2", "[", "0", "]"}], "==", "0.001"}], ",", 
        RowBox[{
         RowBox[{"X3", "[", "0", "]"}], "\[Equal]", 
         RowBox[{
          RowBox[{"-", "1"}], "-", 
          SubscriptBox["h", "p"], "-", 
          FractionBox["\[Gamma]", "2"]}]}], ",", 
        RowBox[{
         RowBox[{"X4", "[", "0", "]"}], "\[Equal]", "1"}], ",", 
        RowBox[{
         RowBox[{"X5", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
        RowBox[{
         RowBox[{"X6", "[", "0", "]"}], "\[Equal]", "0"}]}], "}"}], "/.", 
      "NumericTestParams"}], "/.", "NumericParametersTest"}]}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{"startValues", "=", 
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{"X1", "[", "0", "]"}], "\[Equal]", 
       SubscriptBox["w", "p"]}], ",", 
      RowBox[{
       RowBox[{"X2", "[", "0", "]"}], "==", "0.001"}], ",", 
      RowBox[{
       RowBox[{"X3", "[", "0", "]"}], "\[Equal]", 
       RowBox[{
        RowBox[{"-", "1"}], "-", 
        SubscriptBox["h", "p"], "-", 
        FractionBox["\[Gamma]", "2"]}]}], ",", 
      RowBox[{
       RowBox[{"X4", "[", "0", "]"}], "\[Equal]", "1"}], ",", 
      RowBox[{
       RowBox[{"X5", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
      RowBox[{
       RowBox[{"X6", "[", "0", "]"}], "\[Equal]", "0"}]}], "}"}], "/.", 
    "NumericTestParams"}], "/.", 
   "NumericParametersTest"}]}], "\[IndentingNewLine]", 
 RowBox[{"T", "=", "100"}], "\[IndentingNewLine]", 
 RowBox[{"sol1", " ", "=", " ", 
  RowBox[{"NDSolve", "[", " ", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"numericEqs", ",", " ", "startValues"}], "}"}], ",", " ", 
    RowBox[{"{", 
     RowBox[{
     "X1", ",", " ", "X2", ",", "X3", ",", "X4", ",", "X5", ",", "X6"}], 
     "}"}], ",", " ", 
    RowBox[{"{", 
     RowBox[{"t", ",", " ", "0", ",", " ", "T"}], "}"}]}], " ", 
   "]"}]}]}], "Input",
 CellChangeTimes->{{3.7151956429896145`*^9, 3.7151956983144226`*^9}, {
   3.7151957689011908`*^9, 3.7151957760569324`*^9}, {3.7151959456336617`*^9, 
   3.7151960989317284`*^9}, {3.71519616949548*^9, 3.7151963007035255`*^9}, {
   3.7151963495008574`*^9, 3.7151964040720153`*^9}, {3.715196435651942*^9, 
   3.715196440840378*^9}, {3.715196574947234*^9, 3.7151966136010323`*^9}, {
   3.715196645367077*^9, 3.715196650809683*^9}, 3.7151966914185905`*^9, {
   3.7151967937358932`*^9, 3.715196829596653*^9}, {3.7151968827448683`*^9, 
   3.7151968891461077`*^9}, {3.7151969513829613`*^9, 
   3.7151969801129956`*^9}, {3.715217254127406*^9, 3.7152172944934936`*^9}, {
   3.715266316842909*^9, 3.7152663366119967`*^9}, {3.7152667072460475`*^9, 
   3.715266732477891*^9}, {3.715285084845935*^9, 3.7152850853819466`*^9}, {
   3.7152855316299763`*^9, 3.715285566071371*^9}, {3.7152856146022973`*^9, 
   3.715285635714738*^9}, 3.715285705506949*^9, 3.71528573615267*^9, {
   3.7152857896458654`*^9, 3.7152857902058773`*^9}, {3.7152858370468044`*^9, 
   3.71528583995873*^9}}],

Cell[BoxData["\<\"equation with 'testValid' applied in print only:\"\>"], \
"Output",
 CellChangeTimes->{
  3.715196005734481*^9, 3.715196411904206*^9, 3.715196442289338*^9, 
   3.715196522087208*^9, 3.7151966197440996`*^9, 3.715196651203944*^9, 
   3.7151966919339347`*^9, {3.7151968187124395`*^9, 3.7151968300629606`*^9}, 
   3.7151968898305635`*^9, {3.715196957810219*^9, 3.715196980914527*^9}, {
   3.715217196347955*^9, 3.7152172236012115`*^9}, 3.7152172954306355`*^9, 
   3.715217333696044*^9, 3.715217436564949*^9, 3.7152512003642817`*^9, 
   3.7152663377559943`*^9, 3.7152665926678734`*^9, 3.715266733233904*^9, 
   3.715285086405965*^9, 3.7152852744833903`*^9, 3.7152855964099026`*^9, 
   3.7152856364507523`*^9, 3.715285706294945*^9, 3.715285738425437*^9, 
   3.7152857911378946`*^9, 3.7157706411993246`*^9, 3.71577072796105*^9}],

Cell[BoxData[
 FormBox[
  TagBox[
   RowBox[{
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {
        RowBox[{
         SuperscriptBox[
          SubscriptBox["x", "p"], "\[Prime]\[Prime]",
          MultilineFunction->None], "(", "t", ")"}]},
       {
        RowBox[{
         SuperscriptBox[
          SubscriptBox["y", "p"], "\[Prime]\[Prime]",
          MultilineFunction->None], "(", "t", ")"}]},
       {
        RowBox[{
         SuperscriptBox[
          SubscriptBox["\[Theta]", "p"], "\[Prime]\[Prime]",
          MultilineFunction->None], "(", "t", ")"}]}
      },
      GridBoxAlignment->{
       "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
        "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}], 
    "\[LongEqual]", 
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"0.7627808803430645`"},
       {
        RowBox[{"-", "0.7033224290181195`"}]},
       {
        RowBox[{"-", "5.3644913963316725`"}]}
      },
      GridBoxAlignment->{
       "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
        "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}]}],
   Function[BoxForm`e$, 
    MatrixForm[BoxForm`e$]]], TraditionalForm]], "Output",
 CellChangeTimes->{
  3.715196005734481*^9, 3.715196411904206*^9, 3.715196442289338*^9, 
   3.715196522087208*^9, 3.7151966197440996`*^9, 3.715196651203944*^9, 
   3.7151966919339347`*^9, {3.7151968187124395`*^9, 3.7151968300629606`*^9}, 
   3.7151968898305635`*^9, {3.715196957810219*^9, 3.715196980914527*^9}, {
   3.715217196347955*^9, 3.7152172236012115`*^9}, 3.7152172954306355`*^9, 
   3.715217333696044*^9, 3.715217436564949*^9, 3.7152512003642817`*^9, 
   3.7152663377559943`*^9, 3.7152665926678734`*^9, 3.715266733233904*^9, 
   3.715285086405965*^9, 3.7152852744833903`*^9, 3.7152855964099026`*^9, 
   3.7152856364507523`*^9, 3.715285706294945*^9, 3.715285738425437*^9, 
   3.7152857911378946`*^9, 3.7157706411993246`*^9, 3.7157707279690495`*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"\[Kappa]", "\[Rule]", "1"}], ",", 
   RowBox[{"\[ScriptCapitalL]", "\[Rule]", "1"}], ",", 
   RowBox[{
    SubsuperscriptBox["\[Omega]", "s", "2"], "\[Rule]", "100"}], ",", 
   RowBox[{"\[Alpha]", "\[Rule]", "11.881188118811881`"}], ",", 
   RowBox[{"\[Gamma]", "\[Rule]", "0.04905`"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.715196005734481*^9, 3.715196411904206*^9, 3.715196442289338*^9, 
   3.715196522087208*^9, 3.7151966197440996`*^9, 3.715196651203944*^9, 
   3.7151966919339347`*^9, {3.7151968187124395`*^9, 3.7151968300629606`*^9}, 
   3.7151968898305635`*^9, {3.715196957810219*^9, 3.715196980914527*^9}, {
   3.715217196347955*^9, 3.7152172236012115`*^9}, 3.7152172954306355`*^9, 
   3.715217333696044*^9, 3.715217436564949*^9, 3.7152512003642817`*^9, 
   3.7152663377559943`*^9, 3.7152665926678734`*^9, 3.715266733233904*^9, 
   3.715285086405965*^9, 3.7152852744833903`*^9, 3.7152855964099026`*^9, 
   3.7152856364507523`*^9, 3.715285706294945*^9, 3.715285738425437*^9, 
   3.7152857911378946`*^9, 3.7157706411993246`*^9, 3.7157707279730473`*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    SubscriptBox["k", "1"], "\[Rule]", "200"}], ",", 
   RowBox[{
    SubscriptBox["k", "2"], "\[Rule]", 
    SubscriptBox["k", "1"]}], ",", 
   RowBox[{
    SubscriptBox["L0", "1"], "\[Rule]", "2"}], ",", 
   RowBox[{
    SubscriptBox["L0", "2"], "\[Rule]", 
    SubscriptBox["L0", "1"]}], ",", 
   RowBox[{
    SubscriptBox["m", "p"], "\[Rule]", "2"}], ",", 
   RowBox[{
    SubscriptBox["h", "p"], "\[Rule]", "0.1`"}], ",", 
   RowBox[{
    SubscriptBox["w", "p"], "\[Rule]", "1"}], ",", 
   RowBox[{"g", "\[Rule]", "9.81`"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.715196005734481*^9, 3.715196411904206*^9, 3.715196442289338*^9, 
   3.715196522087208*^9, 3.7151966197440996`*^9, 3.715196651203944*^9, 
   3.7151966919339347`*^9, {3.7151968187124395`*^9, 3.7151968300629606`*^9}, 
   3.7151968898305635`*^9, {3.715196957810219*^9, 3.715196980914527*^9}, {
   3.715217196347955*^9, 3.7152172236012115`*^9}, 3.7152172954306355`*^9, 
   3.715217333696044*^9, 3.715217436564949*^9, 3.7152512003642817`*^9, 
   3.7152663377559943`*^9, 3.7152665926678734`*^9, 3.715266733233904*^9, 
   3.715285086405965*^9, 3.7152852744833903`*^9, 3.7152855964099026`*^9, 
   3.7152856364507523`*^9, 3.715285706294945*^9, 3.715285738425437*^9, 
   3.7152857911378946`*^9, 3.7157706411993246`*^9, 3.71577072797705*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{"X1", "[", "0", "]"}], "\[Equal]", "1"}], ",", 
   RowBox[{
    RowBox[{"X2", "[", "0", "]"}], "\[Equal]", "0.001`"}], ",", 
   RowBox[{
    RowBox[{"X3", "[", "0", "]"}], "\[Equal]", 
    RowBox[{"-", "1.124525`"}]}], ",", 
   RowBox[{
    RowBox[{"X4", "[", "0", "]"}], "\[Equal]", "1"}], ",", 
   RowBox[{
    RowBox[{"X5", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
   RowBox[{
    RowBox[{"X6", "[", "0", "]"}], "\[Equal]", "0"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.715196005734481*^9, 3.715196411904206*^9, 3.715196442289338*^9, 
   3.715196522087208*^9, 3.7151966197440996`*^9, 3.715196651203944*^9, 
   3.7151966919339347`*^9, {3.7151968187124395`*^9, 3.7151968300629606`*^9}, 
   3.7151968898305635`*^9, {3.715196957810219*^9, 3.715196980914527*^9}, {
   3.715217196347955*^9, 3.7152172236012115`*^9}, 3.7152172954306355`*^9, 
   3.715217333696044*^9, 3.715217436564949*^9, 3.7152512003642817`*^9, 
   3.7152663377559943`*^9, 3.7152665926678734`*^9, 3.715266733233904*^9, 
   3.715285086405965*^9, 3.7152852744833903`*^9, 3.7152855964099026`*^9, 
   3.7152856364507523`*^9, 3.715285706294945*^9, 3.715285738425437*^9, 
   3.7152857911378946`*^9, 3.7157706411993246`*^9, 3.715770727981048*^9}],

Cell[BoxData["100"], "Output",
 CellChangeTimes->{
  3.715196005734481*^9, 3.715196411904206*^9, 3.715196442289338*^9, 
   3.715196522087208*^9, 3.7151966197440996`*^9, 3.715196651203944*^9, 
   3.7151966919339347`*^9, {3.7151968187124395`*^9, 3.7151968300629606`*^9}, 
   3.7151968898305635`*^9, {3.715196957810219*^9, 3.715196980914527*^9}, {
   3.715217196347955*^9, 3.7152172236012115`*^9}, 3.7152172954306355`*^9, 
   3.715217333696044*^9, 3.715217436564949*^9, 3.7152512003642817`*^9, 
   3.7152663377559943`*^9, 3.7152665926678734`*^9, 3.715266733233904*^9, 
   3.715285086405965*^9, 3.7152852744833903`*^9, 3.7152855964099026`*^9, 
   3.7152856364507523`*^9, 3.715285706294945*^9, 3.715285738425437*^9, 
   3.7152857911378946`*^9, 3.7157706411993246`*^9, 3.715770727989048*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"X1", "\[Rule]", 
     TagBox[
      TemplateBox[{RowBox[{
          StyleBox[
           TagBox["InterpolatingFunction", "SummaryHead"], 
           "NonInterpretableSummary"], 
          StyleBox["[", "NonInterpretableSummary"], 
          DynamicModuleBox[{Typeset`open$$ = False}, 
           PanelBox[
            PaneSelectorBox[{False -> GridBox[{{
                  PaneBox[
                   ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquarePlusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                   Alignment -> {Center, Center}, ImageSize -> 
                   Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                  GraphicsBox[{{{}, {}, {
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1]], 
                    LineBox[CompressedData["
1:eJwVkntUE3QUxycwAUfIUx7JIyFg0sB0iDzcvcA2HhsDxgZD4JhTgRAapVKc
BaFHwZMJS5TT2KCDkB2gIPNkKMjrUB0eAgfLB0kWMSEe/n75gIl1aP1xz/d8
//l+z/3c+5pSJT1sxmAwIk3zv+pPX7PUqbp5/JJjJkeBZmdlc53XoG9J0LbN
gcJYxPXmjUEsHC2Iz8mLo3DozZHM0R1OeHbtpnHSnoKgXzKianHHSZdz6nc2
UHCv9crj3fVGr3/HLRrWCLhLR1PGPHyxc6IuQEQJNKqDN9a0+mNOJ2+C9wGB
fT71y4N+gXgxupIvGSCgT4FIRm4QQoHdR6x1AldXRrZ3ruzAgWOvVDMsKTyo
dFh8ptuJDtGDDC2TgpfiN/78Hi7eG1q0ubCLwuv7mRYrxhDk9r3rrTV5VcuP
xVa6UIxVJYkqzSiUbv9TEvJWGApe/sNomyfQvHCqz9UjAve4y8LtnhDY/LjP
wOiORNbAL43V1wnwAhRF5mU8LFJoacgJAvcm+elMe0RzOG8vekrg6Rssdu0z
RJFu1SnYlkKd34VYs5+jsPXrqN2BLAqzUQu9Rc3R2JNX/6r1FgrVxuX8gooY
LPMeE3byTftM9KjyM/gYelDJWbShcC1O2h8TIEB5DnETzxF4klkjaLUSYl9m
aGXXfQITmkYfxykhlizfVv69QMDuQDbX+mYspgVYZQyriSnv10+ndHG4brZJ
6DpOIEHpH99+JB7nTmgfoLXpPtXeuzYnJuBD/4MZbe4UPpl+VPyelwibZvqt
VVYUzo6oLK8si7CRFcIy7qSwJLs8/OEtMdZENMs8AymQ9Za5hIZEZOtdrH1f
EpAJM0Mvl0tw//sSfVgfgcz2+7+by5KwTi+ddHpEwLjv3JEG+2R04XysDO0l
cPQri/INJ5OxwzdMmlpFoLdK2W9YSEamx1b54iqBLp6LXpOVgoXnk+pXvSiU
8Tge7NEUvKLQKCOcKTiMs0eiuVJ8u8lw9KEjhXROqYPPF1I8CfLgxxEUCrd+
X3HKNhWPq9mD+ZsoxGdKG28fT8UbWkGRo4nHnVy+/C9DKv50CUSFXQS4TI/d
5RIZFnIMXPEigZgi8TfTvTJUcg6U2moIuAZOTwQEy3HeoKoYukOgp1jm+bxW
jk1Vec/b7Sg4a7Yxz1imYVZ3+PwtE5+94Xdd9UVpODuVd3ivqX/LtzM/FM+k
4bBZGBQHUfiuJMkNpOkoZDd7qz0p+E1e0p65kY6CLzvEQ0sEYo3iq58FKjBR
+cLToCMQ1jH9gn1Rgc7qNJvP/zD9o9uscX1dgbk2hzQSE+//AN78tR4=
                    "]]}}}, {
                   DisplayFunction -> Identity, AspectRatio -> 1, 
                    Axes -> {False, False}, AxesLabel -> {None, None}, 
                    AxesOrigin -> {0, 0.98}, DisplayFunction :> Identity, 
                    Frame -> {{True, True}, {True, True}}, 
                    FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                    Directive[
                    Opacity[0.5], 
                    Thickness[Tiny], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    FrameTicks -> {{None, None}, {None, None}}, 
                    GridLines -> {None, None}, GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> 
                    Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}], 
                    Method -> {
                    "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
                    AbsolutePointSize[6], "ScalingFunctions" -> None}, 
                    PlotRange -> {{0., 100.}, {0.9834283892903499, 
                    1.017677688176991}}, PlotRangeClipping -> True, 
                    PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
                  GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "100.`"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                   BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}], True -> GridBox[{{
                  PaneBox[
                   ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquareMinusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                   Alignment -> {Center, Center}, ImageSize -> 
                   Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                  GraphicsBox[{{{}, {}, {
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1]], 
                    LineBox[CompressedData["
1:eJwVkntUE3QUxycwAUfIUx7JIyFg0sB0iDzcvcA2HhsDxgZD4JhTgRAapVKc
BaFHwZMJS5TT2KCDkB2gIPNkKMjrUB0eAgfLB0kWMSEe/n75gIl1aP1xz/d8
//l+z/3c+5pSJT1sxmAwIk3zv+pPX7PUqbp5/JJjJkeBZmdlc53XoG9J0LbN
gcJYxPXmjUEsHC2Iz8mLo3DozZHM0R1OeHbtpnHSnoKgXzKianHHSZdz6nc2
UHCv9crj3fVGr3/HLRrWCLhLR1PGPHyxc6IuQEQJNKqDN9a0+mNOJ2+C9wGB
fT71y4N+gXgxupIvGSCgT4FIRm4QQoHdR6x1AldXRrZ3ruzAgWOvVDMsKTyo
dFh8ptuJDtGDDC2TgpfiN/78Hi7eG1q0ubCLwuv7mRYrxhDk9r3rrTV5VcuP
xVa6UIxVJYkqzSiUbv9TEvJWGApe/sNomyfQvHCqz9UjAve4y8LtnhDY/LjP
wOiORNbAL43V1wnwAhRF5mU8LFJoacgJAvcm+elMe0RzOG8vekrg6Rssdu0z
RJFu1SnYlkKd34VYs5+jsPXrqN2BLAqzUQu9Rc3R2JNX/6r1FgrVxuX8gooY
LPMeE3byTftM9KjyM/gYelDJWbShcC1O2h8TIEB5DnETzxF4klkjaLUSYl9m
aGXXfQITmkYfxykhlizfVv69QMDuQDbX+mYspgVYZQyriSnv10+ndHG4brZJ
6DpOIEHpH99+JB7nTmgfoLXpPtXeuzYnJuBD/4MZbe4UPpl+VPyelwibZvqt
VVYUzo6oLK8si7CRFcIy7qSwJLs8/OEtMdZENMs8AymQ9Za5hIZEZOtdrH1f
EpAJM0Mvl0tw//sSfVgfgcz2+7+by5KwTi+ddHpEwLjv3JEG+2R04XysDO0l
cPQri/INJ5OxwzdMmlpFoLdK2W9YSEamx1b54iqBLp6LXpOVgoXnk+pXvSiU
8Tge7NEUvKLQKCOcKTiMs0eiuVJ8u8lw9KEjhXROqYPPF1I8CfLgxxEUCrd+
X3HKNhWPq9mD+ZsoxGdKG28fT8UbWkGRo4nHnVy+/C9DKv50CUSFXQS4TI/d
5RIZFnIMXPEigZgi8TfTvTJUcg6U2moIuAZOTwQEy3HeoKoYukOgp1jm+bxW
jk1Vec/b7Sg4a7Yxz1imYVZ3+PwtE5+94Xdd9UVpODuVd3ivqX/LtzM/FM+k
4bBZGBQHUfiuJMkNpOkoZDd7qz0p+E1e0p65kY6CLzvEQ0sEYo3iq58FKjBR
+cLToCMQ1jH9gn1Rgc7qNJvP/zD9o9uscX1dgbk2hzQSE+//AN78tR4=
                    "]]}}}, {
                   DisplayFunction -> Identity, AspectRatio -> 1, 
                    Axes -> {False, False}, AxesLabel -> {None, None}, 
                    AxesOrigin -> {0, 0.98}, DisplayFunction :> Identity, 
                    Frame -> {{True, True}, {True, True}}, 
                    FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                    Directive[
                    Opacity[0.5], 
                    Thickness[Tiny], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    FrameTicks -> {{None, None}, {None, None}}, 
                    GridLines -> {None, None}, GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> 
                    Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}], 
                    Method -> {
                    "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
                    AbsolutePointSize[6], "ScalingFunctions" -> None}, 
                    PlotRange -> {{0., 100.}, {0.9834283892903499, 
                    1.017677688176991}}, PlotRangeClipping -> True, 
                    PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
                  GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "100.`"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Order: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Hermite\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Periodic: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["False", "SummaryItem"]}]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                   BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}]}, 
             Dynamic[Typeset`open$$], ImageSize -> Automatic], 
            BaselinePosition -> Baseline], DynamicModuleValues :> {}], 
          StyleBox["]", "NonInterpretableSummary"]}]},
       "CopyTag",
       DisplayFunction->(#& ),
       InterpretationFunction->("InterpolatingFunction[{{0., 100.}}, <>]"& )],
      False,
      Editable->False,
      SelectWithContents->True,
      Selectable->False]}], ",", 
    RowBox[{"X2", "\[Rule]", 
     TagBox[
      TemplateBox[{RowBox[{
          StyleBox[
           TagBox["InterpolatingFunction", "SummaryHead"], 
           "NonInterpretableSummary"], 
          StyleBox["[", "NonInterpretableSummary"], 
          DynamicModuleBox[{Typeset`open$$ = False}, 
           PanelBox[
            PaneSelectorBox[{False -> GridBox[{{
                  PaneBox[
                   ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquarePlusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                   Alignment -> {Center, Center}, ImageSize -> 
                   Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                  GraphicsBox[{{{}, {}, {
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1]], 
                    LineBox[CompressedData["
1:eJwB0QMu/CFib1JlAgAAADwAAAACAAAAnIW2B5tvvD4XpfHSTWJQP/BdXF00
Ffo/qqZ7b18bgD/OO7mkBi4LQPvYjuKXqU+/ZDHLW8wwFEAMzBtGVqx/v0XB
TstvqRpAa2xEWnfHRL8alh9oPtcgQLnE0OOiPzW/GlLMUc4dJEA+hAQi2cpr
v6F7LwaTqidAl8dh8i4gdr9aI53txCYrQHx4W1gi64Q/nFE/PABnLkBOgQsS
i5tWP7P2yyq49jBAvmxHxp0qJT/chxLr9JsyQGyMbI/Jnk4/H1jeROg4NEDp
CLeB6lyEPyVfBQT2+DVASMW5hw14hL9vqcZ2CJs3QNwU9sxtD2O/fSrjTjVg
OUDEHzaCEC5Qv6TqhMAYHTtAQwrF04dZTj8P7sDlALw8QGub5FDI+YS/PihY
cAN+PkDekNEf8v57P9jSRFcFEUBAIc7XUijGcD/zLAsplvRAQJKIpiiO9WE/
miaURwLUQUB9VlyyAFhhv+RB6r9wpEJAxOjNiGz/gD+P+O1qbIZDQJ+8b5ER
lWW/3NC+b2pZREBGDaUYNYh7v7ZIUsFDKEVAjWGHZ+Hxbb/yW5NFqghGQIzg
RhD0umM/0JChIxPaRkAwmTBHUtVsvxBhXTQJvUdAr5AzAJIobr/c0NuR2ptI
QP/w5F4BEYM/SmInSa5rSUBcLPH2w6BxPxqPIDMPTUpAPQ7QiRL2Wr+M3eZ2
ch9LQNhFcFGoaBG/i8tvB7HtS0C6uqDNnVKBP+xUpsp8zUxAeWbziemzg7/v
/6nnSp5NQGtxXdgwbG+/VEZbN6aATkBNS9k/NHRRv1uu2eADVE9ARCQ1OIhj
bD/4Wo1rnhFQQMh/ue6EnIK/c6wEgAGCUEDH/saX27Z5P7+OYsHl6lBAkkqh
PR8/cj+7PheckFxRQPJbzzx56HA/fj4tHSnMUUAZ3CzqmOF0vxLPKctCNFJA
iZJxuTyKfD9XLX0SI6VSQP7kR/oe/WK/bRy3hoQOU0D6IigGtct5v0lbUqHT
dVNA77VA3ns4er/WZ0RV6eVTQITWiV9MvXM/NAUdNoBOVEAIA87pt+9hv0Nw
TLDdv1RAxjaXZzkaar8YK93QKC9VQOWBsorqsIA/vnZUHvWWVUCor3cV8Ip7
PxWQIgWIB1ZA4/NmxZLNZ789OtcYnHBWQCWIb0QuVFy/FrLixXbiVkD8URPb
XaB4P7V5Txk/UldAlvcihnAKgb8m0qKZiLpXQM/hmuLVH3i/R/hMs5grWEAM
PtHj/wQXPzmv3fkplVhAHzBjlWUIdD8+GeT4//9YQGnnE0tbR32/dS/ALQ==

                    "]]}}}, {
                   DisplayFunction -> Identity, AspectRatio -> 1, 
                    Axes -> {False, False}, AxesLabel -> {None, None}, 
                    AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
                    Frame -> {{True, True}, {True, True}}, 
                    FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                    Directive[
                    Opacity[0.5], 
                    Thickness[Tiny], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    FrameTicks -> {{None, None}, {None, None}}, 
                    GridLines -> {None, None}, GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> 
                    Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}], 
                    Method -> {
                    "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
                    AbsolutePointSize[6], "ScalingFunctions" -> None}, 
                    PlotRange -> {{0., 100.}, {-0.010242047279985752`, 
                    0.010214107819987321`}}, PlotRangeClipping -> True, 
                    PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
                  GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "100.`"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                   BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}], True -> GridBox[{{
                  PaneBox[
                   ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquareMinusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                   Alignment -> {Center, Center}, ImageSize -> 
                   Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                  GraphicsBox[{{{}, {}, {
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1]], 
                    LineBox[CompressedData["
1:eJwB0QMu/CFib1JlAgAAADwAAAACAAAAnIW2B5tvvD4XpfHSTWJQP/BdXF00
Ffo/qqZ7b18bgD/OO7mkBi4LQPvYjuKXqU+/ZDHLW8wwFEAMzBtGVqx/v0XB
TstvqRpAa2xEWnfHRL8alh9oPtcgQLnE0OOiPzW/GlLMUc4dJEA+hAQi2cpr
v6F7LwaTqidAl8dh8i4gdr9aI53txCYrQHx4W1gi64Q/nFE/PABnLkBOgQsS
i5tWP7P2yyq49jBAvmxHxp0qJT/chxLr9JsyQGyMbI/Jnk4/H1jeROg4NEDp
CLeB6lyEPyVfBQT2+DVASMW5hw14hL9vqcZ2CJs3QNwU9sxtD2O/fSrjTjVg
OUDEHzaCEC5Qv6TqhMAYHTtAQwrF04dZTj8P7sDlALw8QGub5FDI+YS/PihY
cAN+PkDekNEf8v57P9jSRFcFEUBAIc7XUijGcD/zLAsplvRAQJKIpiiO9WE/
miaURwLUQUB9VlyyAFhhv+RB6r9wpEJAxOjNiGz/gD+P+O1qbIZDQJ+8b5ER
lWW/3NC+b2pZREBGDaUYNYh7v7ZIUsFDKEVAjWGHZ+Hxbb/yW5NFqghGQIzg
RhD0umM/0JChIxPaRkAwmTBHUtVsvxBhXTQJvUdAr5AzAJIobr/c0NuR2ptI
QP/w5F4BEYM/SmInSa5rSUBcLPH2w6BxPxqPIDMPTUpAPQ7QiRL2Wr+M3eZ2
ch9LQNhFcFGoaBG/i8tvB7HtS0C6uqDNnVKBP+xUpsp8zUxAeWbziemzg7/v
/6nnSp5NQGtxXdgwbG+/VEZbN6aATkBNS9k/NHRRv1uu2eADVE9ARCQ1OIhj
bD/4Wo1rnhFQQMh/ue6EnIK/c6wEgAGCUEDH/saX27Z5P7+OYsHl6lBAkkqh
PR8/cj+7PheckFxRQPJbzzx56HA/fj4tHSnMUUAZ3CzqmOF0vxLPKctCNFJA
iZJxuTyKfD9XLX0SI6VSQP7kR/oe/WK/bRy3hoQOU0D6IigGtct5v0lbUqHT
dVNA77VA3ns4er/WZ0RV6eVTQITWiV9MvXM/NAUdNoBOVEAIA87pt+9hv0Nw
TLDdv1RAxjaXZzkaar8YK93QKC9VQOWBsorqsIA/vnZUHvWWVUCor3cV8Ip7
PxWQIgWIB1ZA4/NmxZLNZ789OtcYnHBWQCWIb0QuVFy/FrLixXbiVkD8URPb
XaB4P7V5Txk/UldAlvcihnAKgb8m0qKZiLpXQM/hmuLVH3i/R/hMs5grWEAM
PtHj/wQXPzmv3fkplVhAHzBjlWUIdD8+GeT4//9YQGnnE0tbR32/dS/ALQ==

                    "]]}}}, {
                   DisplayFunction -> Identity, AspectRatio -> 1, 
                    Axes -> {False, False}, AxesLabel -> {None, None}, 
                    AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
                    Frame -> {{True, True}, {True, True}}, 
                    FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                    Directive[
                    Opacity[0.5], 
                    Thickness[Tiny], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    FrameTicks -> {{None, None}, {None, None}}, 
                    GridLines -> {None, None}, GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> 
                    Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}], 
                    Method -> {
                    "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
                    AbsolutePointSize[6], "ScalingFunctions" -> None}, 
                    PlotRange -> {{0., 100.}, {-0.010242047279985752`, 
                    0.010214107819987321`}}, PlotRangeClipping -> True, 
                    PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
                  GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "100.`"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Order: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Hermite\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Periodic: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["False", "SummaryItem"]}]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                   BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}]}, 
             Dynamic[Typeset`open$$], ImageSize -> Automatic], 
            BaselinePosition -> Baseline], DynamicModuleValues :> {}], 
          StyleBox["]", "NonInterpretableSummary"]}]},
       "CopyTag",
       DisplayFunction->(#& ),
       InterpretationFunction->("InterpolatingFunction[{{0., 100.}}, <>]"& )],
      False,
      Editable->False,
      SelectWithContents->True,
      Selectable->False]}], ",", 
    RowBox[{"X3", "\[Rule]", 
     TagBox[
      TemplateBox[{RowBox[{
          StyleBox[
           TagBox["InterpolatingFunction", "SummaryHead"], 
           "NonInterpretableSummary"], 
          StyleBox["[", "NonInterpretableSummary"], 
          DynamicModuleBox[{Typeset`open$$ = False}, 
           PanelBox[
            PaneSelectorBox[{False -> GridBox[{{
                  PaneBox[
                   ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquarePlusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                   Alignment -> {Center, Center}, ImageSize -> 
                   Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                  GraphicsBox[{{{}, {}, {
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1]], 
                    LineBox[CompressedData["
1:eJwB0QMu/CFib1JlAgAAADwAAAACAAAAnIW2B5tvvD513C4mDP7xv/BdXF00
Ffo/Z9UbfGwx47/OO7mkBi4LQPC//LahQf2/ZDHLW8wwFEDA5ona4ufiv0XB
TstvqRpAsxbdNtgC8r8alh9oPtcgQIy1rnp06fi/GlLMUc4dJEBWL4txGuPa
v6F7LwaTqidAsPotlMSr+79aI53txCYrQNKjlTlqPOy/nFE/PABnLkA1gBBy
yETpv7P2yyq49jBAvCum/IFI/L/chxLr9JsyQE6sBuqpC96/H1jeROg4NEDQ
DS/J95j1vyVfBQT2+DVAOe49CS/J9b9vqcZ2CJs3QOVzLWzxOt6/fSrjTjVg
OUCmU5tOY/r8v6TqhMAYHTtAhHKeiDVf5r8P7sDlALw8QIOjAZkvZu+/PihY
cAN+PkANDNdo+I/6v9jSRFcFEUBA/VM1MBr92r/zLAsplvRAQH4EW7gAXvq/
miaURwLUQUCUdr6jqi/wv+RB6r9wpEJAggw/hs3I5b+P+O1qbIZDQJGdzU+w
9fy/3NC+b2pZREDkAzbq9djgv7ZIUsFDKEVAD5GN8e+z87/yW5NFqghGQBYA
Jgc/hfe/0JChIxPaRkCJ9VYLM+7bvxBhXTQJvUdACzDnxItn/L/c0NuR2ptI
QH6GHDnxWOm/SmInSa5rSUDkKHvLNRnsvxqPIDMPTUpAmnHM5MyO+7+M3eZ2
ch9LQIU+wpwMKty/i8tvB7HtS0DSInDtS/T2v+xUpsp8zUxAhSFKHGhn9L/v
/6nnSp5NQKCxRtMbXeC/VEZbN6aATkCXbvC1sDn9v1uu2eADVE9AyI4eS8Bg
5r/4Wo1rnhFQQAAJitPGVe+/c6wEgAGCUEBSuzlIT5r6v7+OYsHl6lBAtEsh
xbkH27+7PheckFxRQMqQmaNGSfq/fj4tHSnMUUChA2XCHFXwvxLPKctCNFJA
M+7LJ6yC5b9XLX0SI6VSQFQP0zI6Av2/bRy3hoQOU0Az4XYOORrhv0lbUqHT
dVNAIwr8xw1x87/WZ0RV6eVTQPZcn/0Gxve/NAUdNoBOVEBww8pi96bbv0Nw
TLDdv1RAY4EqeU1D/L8YK93QKC9VQJdITNjcBeq/vnZUHvWWVUB3wvoyt1br
vxWQIgWIB1ZAHuyqQZXI+789OtcYnHBWQIE+3tc2q9y/FrLixXbiVkDCMhG3
29b4v7V5Txk/UldA8MXcXws88r8m0qKZiLpXQJ3VPw2q2+K/R/hMs5grWEBv
RGFBR0f9vzmv3fkplVhA9i0WwsBF478+GeT4//9YQGdnRtUGj/K/lgniSg==

                    "]]}}}, {
                   DisplayFunction -> Identity, AspectRatio -> 1, 
                    Axes -> {False, False}, AxesLabel -> {None, None}, 
                    AxesOrigin -> {0, -2.}, DisplayFunction :> Identity, 
                    Frame -> {{True, True}, {True, True}}, 
                    FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                    Directive[
                    Opacity[0.5], 
                    Thickness[Tiny], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    FrameTicks -> {{None, None}, {None, None}}, 
                    GridLines -> {None, None}, GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> 
                    Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}], 
                    Method -> {
                    "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
                    AbsolutePointSize[6], "ScalingFunctions" -> None}, 
                    PlotRange -> {{0., 
                    100.}, {-1.82990193881076, -0.4201112850976093}}, 
                    PlotRangeClipping -> True, PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
                  GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "100.`"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                   BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}], True -> GridBox[{{
                  PaneBox[
                   ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquareMinusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                   Alignment -> {Center, Center}, ImageSize -> 
                   Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                  GraphicsBox[{{{}, {}, {
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1]], 
                    LineBox[CompressedData["
1:eJwB0QMu/CFib1JlAgAAADwAAAACAAAAnIW2B5tvvD513C4mDP7xv/BdXF00
Ffo/Z9UbfGwx47/OO7mkBi4LQPC//LahQf2/ZDHLW8wwFEDA5ona4ufiv0XB
TstvqRpAsxbdNtgC8r8alh9oPtcgQIy1rnp06fi/GlLMUc4dJEBWL4txGuPa
v6F7LwaTqidAsPotlMSr+79aI53txCYrQNKjlTlqPOy/nFE/PABnLkA1gBBy
yETpv7P2yyq49jBAvCum/IFI/L/chxLr9JsyQE6sBuqpC96/H1jeROg4NEDQ
DS/J95j1vyVfBQT2+DVAOe49CS/J9b9vqcZ2CJs3QOVzLWzxOt6/fSrjTjVg
OUCmU5tOY/r8v6TqhMAYHTtAhHKeiDVf5r8P7sDlALw8QIOjAZkvZu+/PihY
cAN+PkANDNdo+I/6v9jSRFcFEUBA/VM1MBr92r/zLAsplvRAQH4EW7gAXvq/
miaURwLUQUCUdr6jqi/wv+RB6r9wpEJAggw/hs3I5b+P+O1qbIZDQJGdzU+w
9fy/3NC+b2pZREDkAzbq9djgv7ZIUsFDKEVAD5GN8e+z87/yW5NFqghGQBYA
Jgc/hfe/0JChIxPaRkCJ9VYLM+7bvxBhXTQJvUdACzDnxItn/L/c0NuR2ptI
QH6GHDnxWOm/SmInSa5rSUDkKHvLNRnsvxqPIDMPTUpAmnHM5MyO+7+M3eZ2
ch9LQIU+wpwMKty/i8tvB7HtS0DSInDtS/T2v+xUpsp8zUxAhSFKHGhn9L/v
/6nnSp5NQKCxRtMbXeC/VEZbN6aATkCXbvC1sDn9v1uu2eADVE9AyI4eS8Bg
5r/4Wo1rnhFQQAAJitPGVe+/c6wEgAGCUEBSuzlIT5r6v7+OYsHl6lBAtEsh
xbkH27+7PheckFxRQMqQmaNGSfq/fj4tHSnMUUChA2XCHFXwvxLPKctCNFJA
M+7LJ6yC5b9XLX0SI6VSQFQP0zI6Av2/bRy3hoQOU0Az4XYOORrhv0lbUqHT
dVNAIwr8xw1x87/WZ0RV6eVTQPZcn/0Gxve/NAUdNoBOVEBww8pi96bbv0Nw
TLDdv1RAY4EqeU1D/L8YK93QKC9VQJdITNjcBeq/vnZUHvWWVUB3wvoyt1br
vxWQIgWIB1ZAHuyqQZXI+789OtcYnHBWQIE+3tc2q9y/FrLixXbiVkDCMhG3
29b4v7V5Txk/UldA8MXcXws88r8m0qKZiLpXQJ3VPw2q2+K/R/hMs5grWEBv
RGFBR0f9vzmv3fkplVhA9i0WwsBF478+GeT4//9YQGdnRtUGj/K/lgniSg==

                    "]]}}}, {
                   DisplayFunction -> Identity, AspectRatio -> 1, 
                    Axes -> {False, False}, AxesLabel -> {None, None}, 
                    AxesOrigin -> {0, -2.}, DisplayFunction :> Identity, 
                    Frame -> {{True, True}, {True, True}}, 
                    FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                    Directive[
                    Opacity[0.5], 
                    Thickness[Tiny], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    FrameTicks -> {{None, None}, {None, None}}, 
                    GridLines -> {None, None}, GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> 
                    Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}], 
                    Method -> {
                    "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
                    AbsolutePointSize[6], "ScalingFunctions" -> None}, 
                    PlotRange -> {{0., 
                    100.}, {-1.82990193881076, -0.4201112850976093}}, 
                    PlotRangeClipping -> True, PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
                  GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "100.`"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Order: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Hermite\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Periodic: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["False", "SummaryItem"]}]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                   BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}]}, 
             Dynamic[Typeset`open$$], ImageSize -> Automatic], 
            BaselinePosition -> Baseline], DynamicModuleValues :> {}], 
          StyleBox["]", "NonInterpretableSummary"]}]},
       "CopyTag",
       DisplayFunction->(#& ),
       InterpretationFunction->("InterpolatingFunction[{{0., 100.}}, <>]"& )],
      False,
      Editable->False,
      SelectWithContents->True,
      Selectable->False]}], ",", 
    RowBox[{"X4", "\[Rule]", 
     TagBox[
      TemplateBox[{RowBox[{
          StyleBox[
           TagBox["InterpolatingFunction", "SummaryHead"], 
           "NonInterpretableSummary"], 
          StyleBox["[", "NonInterpretableSummary"], 
          DynamicModuleBox[{Typeset`open$$ = False}, 
           PanelBox[
            PaneSelectorBox[{False -> GridBox[{{
                  PaneBox[
                   ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquarePlusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                   Alignment -> {Center, Center}, ImageSize -> 
                   Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                  GraphicsBox[{{{}, {}, {
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1]], 
                    LineBox[CompressedData["
1:eJwB0QMu/CFib1JlAgAAADwAAAACAAAAnIW2B5tvvD6Cbf7////vP/BdXF00
Ffo/KXNVU+dy5b/OO7mkBi4LQJUlL2GZnbc/ZDHLW8wwFEBFwI3riP3kP0XB
TstvqRpAx4+lsfz/778alh9oPtcgQBqPpzgzUek/GlLMUc4dJED2DD2I31O2
v6F7LwaTqidA/Xv3Q06Q4L9aI53txCYrQHAP9uNaEO4/nFE/PABnLkD/HLqG
Di/sv7P2yyq49jBACQLQvZ6X2j/chxLr9JsyQD4qnNNjGdg/H1jeROg4NEDC
ZOgoQ1TuvyVfBQT2+DVA55S8JQ4l7j9vqcZ2CJs3QITu8eEvu9i/fSrjTjVg
OUDg6Ul9x5jOv6TqhMAYHTtAV/sPvLGP6T8P7sDlALw8QNWoViGmVe+/PihY
cAN+PkAfzGvTxeLkP9jSRFcFEUBAHCE4Uy8dvD/zLAsplvRAQC15KazJg+W/
miaURwLUQUA8Zv326JbvP+RB6r9wpEJAXYoo0sbp6L+P+O1qbIZDQGU/RBcZ
Xs8/3NC+b2pZREBElGQu1hLhP7ZIUsFDKEVAajd1KsOh77/yW5NFqghGQMAh
pGZn6+s/0JChIxPaRkAoz+ar83jNvxBhXTQJvUdAEOECS6wE2b/c0NuR2ptI
QN9UAD8OPuw/SmInSa5rSUDdKr1RQv7tvxqPIDMPTUpAzgbPJWcW4T+M3eZ2
ch9LQGBgdAnaEdA/i8tvB7HtS0AOZQVea8Hsv+xUpsp8zUxACRrP+zJD7z/v
/6nnSp5NQOZiBs8M4N+/VEZbN6aATkDzPv1Q5Hi+v1uu2eADVE9AKtkH2E+R
6T/4Wo1rnhFQQPA77kfiUO+/c6wEgAGCUEAgkLZi4sDkP7+OYsHl6lBAQZ7O
loYmvj+7PheckFxRQLq+aqFaw+W/fj4tHSnMUUBb7C/cPafvPxLPKctCNFJA
BoxbQJmY6L9XLX0SI6VSQM8QB4tkGs0/bRy3hoQOU0B0jloCxaHhP0lbUqHT
dVNAMbkCMUu877/WZ0RV6eVTQOo4WdRuges/NAUdNoBOVEC0ZIryXezJv0Nw
TLDdv1RAPGMFjY7U2r8YK93QKC9VQBXQTm0gu+w/vnZUHvWWVUCWWTfbM5Lt
vxWQIgWIB1ZACSi3ULcH4D89OtcYnHBWQBy79cLemtI/FrLixXbiVkBB1RHC
5Xjpv7V5Txk/UldAxZ5zNsz97z8m0qKZiLpXQKmLAnCF6eS/R/hMs5grWEBw
oLHnJKexPzmv3fkplVhAoVDrVq6S5T8+GeT4//9YQDU7Gc939e+/wuTRYg==

                    "]]}}}, {
                   DisplayFunction -> Identity, AspectRatio -> 1, 
                    Axes -> {False, False}, AxesLabel -> {None, None}, 
                    AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
                    Frame -> {{True, True}, {True, True}}, 
                    FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                    Directive[
                    Opacity[0.5], 
                    Thickness[Tiny], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    FrameTicks -> {{None, None}, {None, None}}, 
                    GridLines -> {None, None}, GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> 
                    Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}], 
                    Method -> {
                    "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
                    AbsolutePointSize[6], "ScalingFunctions" -> None}, 
                    PlotRange -> {{0., 100.}, {-0.999998423544178, 
                    0.9999999999885605}}, PlotRangeClipping -> True, 
                    PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
                  GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "100.`"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                   BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}], True -> GridBox[{{
                  PaneBox[
                   ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquareMinusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                   Alignment -> {Center, Center}, ImageSize -> 
                   Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                  GraphicsBox[{{{}, {}, {
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1]], 
                    LineBox[CompressedData["
1:eJwB0QMu/CFib1JlAgAAADwAAAACAAAAnIW2B5tvvD6Cbf7////vP/BdXF00
Ffo/KXNVU+dy5b/OO7mkBi4LQJUlL2GZnbc/ZDHLW8wwFEBFwI3riP3kP0XB
TstvqRpAx4+lsfz/778alh9oPtcgQBqPpzgzUek/GlLMUc4dJED2DD2I31O2
v6F7LwaTqidA/Xv3Q06Q4L9aI53txCYrQHAP9uNaEO4/nFE/PABnLkD/HLqG
Di/sv7P2yyq49jBACQLQvZ6X2j/chxLr9JsyQD4qnNNjGdg/H1jeROg4NEDC
ZOgoQ1TuvyVfBQT2+DVA55S8JQ4l7j9vqcZ2CJs3QITu8eEvu9i/fSrjTjVg
OUDg6Ul9x5jOv6TqhMAYHTtAV/sPvLGP6T8P7sDlALw8QNWoViGmVe+/PihY
cAN+PkAfzGvTxeLkP9jSRFcFEUBAHCE4Uy8dvD/zLAsplvRAQC15KazJg+W/
miaURwLUQUA8Zv326JbvP+RB6r9wpEJAXYoo0sbp6L+P+O1qbIZDQGU/RBcZ
Xs8/3NC+b2pZREBElGQu1hLhP7ZIUsFDKEVAajd1KsOh77/yW5NFqghGQMAh
pGZn6+s/0JChIxPaRkAoz+ar83jNvxBhXTQJvUdAEOECS6wE2b/c0NuR2ptI
QN9UAD8OPuw/SmInSa5rSUDdKr1RQv7tvxqPIDMPTUpAzgbPJWcW4T+M3eZ2
ch9LQGBgdAnaEdA/i8tvB7HtS0AOZQVea8Hsv+xUpsp8zUxACRrP+zJD7z/v
/6nnSp5NQOZiBs8M4N+/VEZbN6aATkDzPv1Q5Hi+v1uu2eADVE9AKtkH2E+R
6T/4Wo1rnhFQQPA77kfiUO+/c6wEgAGCUEAgkLZi4sDkP7+OYsHl6lBAQZ7O
loYmvj+7PheckFxRQLq+aqFaw+W/fj4tHSnMUUBb7C/cPafvPxLPKctCNFJA
BoxbQJmY6L9XLX0SI6VSQM8QB4tkGs0/bRy3hoQOU0B0jloCxaHhP0lbUqHT
dVNAMbkCMUu877/WZ0RV6eVTQOo4WdRuges/NAUdNoBOVEC0ZIryXezJv0Nw
TLDdv1RAPGMFjY7U2r8YK93QKC9VQBXQTm0gu+w/vnZUHvWWVUCWWTfbM5Lt
vxWQIgWIB1ZACSi3ULcH4D89OtcYnHBWQBy79cLemtI/FrLixXbiVkBB1RHC
5Xjpv7V5Txk/UldAxZ5zNsz97z8m0qKZiLpXQKmLAnCF6eS/R/hMs5grWEBw
oLHnJKexPzmv3fkplVhAoVDrVq6S5T8+GeT4//9YQDU7Gc939e+/wuTRYg==

                    "]]}}}, {
                   DisplayFunction -> Identity, AspectRatio -> 1, 
                    Axes -> {False, False}, AxesLabel -> {None, None}, 
                    AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
                    Frame -> {{True, True}, {True, True}}, 
                    FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                    Directive[
                    Opacity[0.5], 
                    Thickness[Tiny], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    FrameTicks -> {{None, None}, {None, None}}, 
                    GridLines -> {None, None}, GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> 
                    Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}], 
                    Method -> {
                    "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
                    AbsolutePointSize[6], "ScalingFunctions" -> None}, 
                    PlotRange -> {{0., 100.}, {-0.999998423544178, 
                    0.9999999999885605}}, PlotRangeClipping -> True, 
                    PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
                  GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "100.`"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Order: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Hermite\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Periodic: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["False", "SummaryItem"]}]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                   BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}]}, 
             Dynamic[Typeset`open$$], ImageSize -> Automatic], 
            BaselinePosition -> Baseline], DynamicModuleValues :> {}], 
          StyleBox["]", "NonInterpretableSummary"]}]},
       "CopyTag",
       DisplayFunction->(#& ),
       InterpretationFunction->("InterpolatingFunction[{{0., 100.}}, <>]"& )],
      False,
      Editable->False,
      SelectWithContents->True,
      Selectable->False]}], ",", 
    RowBox[{"X5", "\[Rule]", 
     TagBox[
      TemplateBox[{RowBox[{
          StyleBox[
           TagBox["InterpolatingFunction", "SummaryHead"], 
           "NonInterpretableSummary"], 
          StyleBox["[", "NonInterpretableSummary"], 
          DynamicModuleBox[{Typeset`open$$ = False}, 
           PanelBox[
            PaneSelectorBox[{False -> GridBox[{{
                  PaneBox[
                   ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquarePlusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                   Alignment -> {Center, Center}, ImageSize -> 
                   Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                  GraphicsBox[{{{}, {}, {
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1]], 
                    LineBox[CompressedData["
1:eJwB0QMu/CFib1JlAgAAADwAAAACAAAAnIW2B5tvvD4AgBTDQQvyO/BdXF00
Ffo/BDnVHzeoSL/OO7mkBi4LQDSnECi6Qko/ZDHLW8wwFEDZr4Z/kuk2v0XB
TstvqRpAIUedNsRmJ78alh9oPtcgQN54xWK6hCC/GlLMUc4dJEC/FGteLMBM
P6F7LwaTqidAeEzCTVplRr9aI53txCYrQM0d2VM4jgw/nFE/PABnLkAqurlh
a9n9vrP2yyq49jBAQAaZ6MXKMT/chxLr9JsyQCT1X1al1T+/H1jeROg4NEDO
KFvmt2wxPyVfBQT2+DVA+61r3OOXOj9vqcZ2CJs3QFW/0vq0HzG/fSrjTjVg
OUDKRRaom1EfP6TqhMAYHTtAbL8OBk74274P7sDlALw8QL4oerEIex6/PihY
cAN+PkAocTEuqZc9v9jSRFcFEUBAj2DmIn2bST/zLAsplvRAQEIFCrkUlyq/
miaURwLUQUD1jUvwml3oPuRB6r9wpEJAT8uRIoK/Ib+P+O1qbIZDQC6/q5/H
Zj8/3NC+b2pZREAekBmiMa9Iv7ZIUsFDKEVAlgVZkHJuD7/yW5NFqghGQGB+
y2oj3xG/0JChIxPaRkCAZi0axbpBPxBhXTQJvUdAWbHZJYVGQb/c0NuR2ptI
QELzrYlogTE/SmInSa5rSUBOyi8Ja847vxqPIDMPTUpAZn/Dq3rORT+M3eZ2
ch9LQB8ufzAzkz+/i8tvB7HtS0A8Ua6OfGbhPuxUpsp8zUxAB7XIMYdOOD/v
/6nnSp5NQKP5w8ppeEE/VEZbN6aATkBr7W/D9z0/v1uu2eADVE9AuH8rKnO+
B7/4Wo1rnhFQQKGvnCXRMDM/c6wEgAGCUECCIHOmSTxBv7+OYsHl6lBAOYRW
NYAJIT+7PheckFxRQBIunhumzTk/fj4tHSnMUUAgN6hlj+QpvxLPKctCNFJA
3t/TsGviQL9XLX0SI6VSQBI/7xmXl0k/bRy3hoQOU0ByBwjwYa1Cv0lbUqHT
dVNAgzz839eyQL/WZ0RV6eVTQIb8fMt//QU/NAUdNoBOVED2anwdYkFQP0Nw
TLDdv1RAJ577k7XSTr8YK93QKC9VQNSzUhSmmj4/vnZUHvWWVUCI5V1etwXn
vhWQIgWIB1ZASKgdlWc0Nz89OtcYnHBWQO2qPgj6J0e/FrLixXbiVkCgw+ez
mdJAP7V5Txk/UldAxH80dnbEEL8m0qKZiLpXQNV7VqKSZz0/R/hMs5grWEB8
Lr7QL7c5vzmv3fkplVhAw0TxSPj0Fz8+GeT4//9YQHh0CUvw1Bm/7nCwTg==

                    "]]}}}, {
                   DisplayFunction -> Identity, AspectRatio -> 1, 
                    Axes -> {False, False}, AxesLabel -> {None, None}, 
                    AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
                    Frame -> {{True, True}, {True, True}}, 
                    FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                    Directive[
                    Opacity[0.5], 
                    Thickness[Tiny], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    FrameTicks -> {{None, None}, {None, None}}, 
                    GridLines -> {None, None}, GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> 
                    Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}], 
                    Method -> {
                    "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
                    AbsolutePointSize[6], "ScalingFunctions" -> None}, 
                    PlotRange -> {{0., 100.}, {-0.000940645848427961, 
                    0.0009921510845233828}}, PlotRangeClipping -> True, 
                    PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
                  GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "100.`"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                   BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}], True -> GridBox[{{
                  PaneBox[
                   ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquareMinusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                   Alignment -> {Center, Center}, ImageSize -> 
                   Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                  GraphicsBox[{{{}, {}, {
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1]], 
                    LineBox[CompressedData["
1:eJwB0QMu/CFib1JlAgAAADwAAAACAAAAnIW2B5tvvD4AgBTDQQvyO/BdXF00
Ffo/BDnVHzeoSL/OO7mkBi4LQDSnECi6Qko/ZDHLW8wwFEDZr4Z/kuk2v0XB
TstvqRpAIUedNsRmJ78alh9oPtcgQN54xWK6hCC/GlLMUc4dJEC/FGteLMBM
P6F7LwaTqidAeEzCTVplRr9aI53txCYrQM0d2VM4jgw/nFE/PABnLkAqurlh
a9n9vrP2yyq49jBAQAaZ6MXKMT/chxLr9JsyQCT1X1al1T+/H1jeROg4NEDO
KFvmt2wxPyVfBQT2+DVA+61r3OOXOj9vqcZ2CJs3QFW/0vq0HzG/fSrjTjVg
OUDKRRaom1EfP6TqhMAYHTtAbL8OBk74274P7sDlALw8QL4oerEIex6/PihY
cAN+PkAocTEuqZc9v9jSRFcFEUBAj2DmIn2bST/zLAsplvRAQEIFCrkUlyq/
miaURwLUQUD1jUvwml3oPuRB6r9wpEJAT8uRIoK/Ib+P+O1qbIZDQC6/q5/H
Zj8/3NC+b2pZREAekBmiMa9Iv7ZIUsFDKEVAlgVZkHJuD7/yW5NFqghGQGB+
y2oj3xG/0JChIxPaRkCAZi0axbpBPxBhXTQJvUdAWbHZJYVGQb/c0NuR2ptI
QELzrYlogTE/SmInSa5rSUBOyi8Ja847vxqPIDMPTUpAZn/Dq3rORT+M3eZ2
ch9LQB8ufzAzkz+/i8tvB7HtS0A8Ua6OfGbhPuxUpsp8zUxAB7XIMYdOOD/v
/6nnSp5NQKP5w8ppeEE/VEZbN6aATkBr7W/D9z0/v1uu2eADVE9AuH8rKnO+
B7/4Wo1rnhFQQKGvnCXRMDM/c6wEgAGCUECCIHOmSTxBv7+OYsHl6lBAOYRW
NYAJIT+7PheckFxRQBIunhumzTk/fj4tHSnMUUAgN6hlj+QpvxLPKctCNFJA
3t/TsGviQL9XLX0SI6VSQBI/7xmXl0k/bRy3hoQOU0ByBwjwYa1Cv0lbUqHT
dVNAgzz839eyQL/WZ0RV6eVTQIb8fMt//QU/NAUdNoBOVED2anwdYkFQP0Nw
TLDdv1RAJ577k7XSTr8YK93QKC9VQNSzUhSmmj4/vnZUHvWWVUCI5V1etwXn
vhWQIgWIB1ZASKgdlWc0Nz89OtcYnHBWQO2qPgj6J0e/FrLixXbiVkCgw+ez
mdJAP7V5Txk/UldAxH80dnbEEL8m0qKZiLpXQNV7VqKSZz0/R/hMs5grWEB8
Lr7QL7c5vzmv3fkplVhAw0TxSPj0Fz8+GeT4//9YQHh0CUvw1Bm/7nCwTg==

                    "]]}}}, {
                   DisplayFunction -> Identity, AspectRatio -> 1, 
                    Axes -> {False, False}, AxesLabel -> {None, None}, 
                    AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
                    Frame -> {{True, True}, {True, True}}, 
                    FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                    Directive[
                    Opacity[0.5], 
                    Thickness[Tiny], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    FrameTicks -> {{None, None}, {None, None}}, 
                    GridLines -> {None, None}, GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> 
                    Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}], 
                    Method -> {
                    "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
                    AbsolutePointSize[6], "ScalingFunctions" -> None}, 
                    PlotRange -> {{0., 100.}, {-0.000940645848427961, 
                    0.0009921510845233828}}, PlotRangeClipping -> True, 
                    PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
                  GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "100.`"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Order: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Hermite\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Periodic: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["False", "SummaryItem"]}]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                   BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}]}, 
             Dynamic[Typeset`open$$], ImageSize -> Automatic], 
            BaselinePosition -> Baseline], DynamicModuleValues :> {}], 
          StyleBox["]", "NonInterpretableSummary"]}]},
       "CopyTag",
       DisplayFunction->(#& ),
       InterpretationFunction->("InterpolatingFunction[{{0., 100.}}, <>]"& )],
      False,
      Editable->False,
      SelectWithContents->True,
      Selectable->False]}], ",", 
    RowBox[{"X6", "\[Rule]", 
     TagBox[
      TemplateBox[{RowBox[{
          StyleBox[
           TagBox["InterpolatingFunction", "SummaryHead"], 
           "NonInterpretableSummary"], 
          StyleBox["[", "NonInterpretableSummary"], 
          DynamicModuleBox[{Typeset`open$$ = False}, 
           PanelBox[
            PaneSelectorBox[{False -> GridBox[{{
                  PaneBox[
                   ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquarePlusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                   Alignment -> {Center, Center}, ImageSize -> 
                   Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                  GraphicsBox[{{{}, {}, {
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1]], 
                    LineBox[CompressedData["
1:eJwB0QMu/CFib1JlAgAAADwAAAACAAAAnIW2B5tvvD4A4AJsdUS3PPBdXF00
Ffo/cCNyiBlr+j7OO7mkBi4LQLgAcalEu1E/ZDHLW8wwFECCYobPJn1Uv0XB
TstvqRpAgOgJ+4E/Yb8alh9oPtcgQLUnGQ9UuGI/GlLMUc4dJEAC78SDmrFX
P6F7LwaTqidAjneIXJaIYL9aI53txCYrQJDF3+2wuGI/nFE/PABnLkCh+ymz
mcJYP7P2yyq49jBArFFFRgUBVL/chxLr9JsyQPy6+QbcAVW/H1jeROg4NEDP
KMc0wQdgPyVfBQT2+DVAFg0N/ExVXL9vqcZ2CJs3QFz3PX/ggFA/fSrjTjVg
OUBUKW546mU0P6TqhMAYHTtAVqRy0iKjSb8P7sDlALw8QJcOnqrcdlu/PihY
cAN+PkA26yXd8Y1dP9jSRFcFEUBAl8xpuqxGVr/zLAsplvRAQMqHOfIq81m/
miaURwLUQUBys8Az08FgP+RB6r9wpEJA4OTlfyWzUT+P+O1qbIZDQMXAGQx7
kla/3NC+b2pZREB6eshKD8VOP7ZIUsFDKEVAsFcPZfuAGT/yW5NFqghGQNoT
YZpH5/A+0JChIxPaRkD7t1pt7BkuPxBhXTQJvUdANDKxev0X4z7c0NuR2ptI
QJePC3HLJi4/SmInSa5rSUBys3vISxxZPxqPIDMPTUpAtiWBFyrGJL+M3eZ2
ch9LQKcxEFkJVWS/i8tvB7HtS0CPaHTQO6A1P+xUpsp8zUxANLd9k5VJPT/v
/6nnSp5NQC6efE9pXks/VEZbN6aATkCva9+CSGRcv1uu2eADVE9AvkICVOir
XD/4Wo1rnhFQQNAiZC3iDwk/c6wEgAGCUECKTkRAOFRLv7+OYsHl6lBAmHlR
hFo4R7+7PheckFxRQI1YAhVizim/fj4tHSnMUUDyYeAd8m9CvxLPKctCNFJA
GPPkjEIbWj9XLX0SI6VSQALc16q7mkC/bRy3hoQOU0C6scee4ghQv0lbUqHT
dVNAmpFwTzNJUr/WZ0RV6eVTQL1JgKxGUWI/NAUdNoBOVECXjRcAIFBUv0Nw
TLDdv1RAAV5XVCWGSL8YK93QKC9VQGW7IR8wsmM/vnZUHvWWVUDZz7lOKSZQ
PxWQIgWIB1ZAI2TjillcUb89OtcYnHBWQLjaRBF8cPY+FrLixXbiVkAGbXZ8
0QVIP7V5Txk/UldAcvZXBbcsVr8m0qKZiLpXQG3PYnwa3lM/R/hMs5grWEBy
uaDFalJYvzmv3fkplVhAZngg4VcVPz8+GeT4//9YQLnjukHaEU0/nVWphA==

                    "]]}}}, {
                   DisplayFunction -> Identity, AspectRatio -> 1, 
                    Axes -> {False, False}, AxesLabel -> {None, None}, 
                    AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
                    Frame -> {{True, True}, {True, True}}, 
                    FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                    Directive[
                    Opacity[0.5], 
                    Thickness[Tiny], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    FrameTicks -> {{None, None}, {None, None}}, 
                    GridLines -> {None, None}, GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> 
                    Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}], 
                    Method -> {
                    "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
                    AbsolutePointSize[6], "ScalingFunctions" -> None}, 
                    PlotRange -> {{0., 100.}, {-0.0024819548202740962`, 
                    0.0024043025851407268`}}, PlotRangeClipping -> True, 
                    PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
                  GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "100.`"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                   BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}], True -> GridBox[{{
                  PaneBox[
                   ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquareMinusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                   Alignment -> {Center, Center}, ImageSize -> 
                   Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                  GraphicsBox[{{{}, {}, {
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1]], 
                    LineBox[CompressedData["
1:eJwB0QMu/CFib1JlAgAAADwAAAACAAAAnIW2B5tvvD4A4AJsdUS3PPBdXF00
Ffo/cCNyiBlr+j7OO7mkBi4LQLgAcalEu1E/ZDHLW8wwFECCYobPJn1Uv0XB
TstvqRpAgOgJ+4E/Yb8alh9oPtcgQLUnGQ9UuGI/GlLMUc4dJEAC78SDmrFX
P6F7LwaTqidAjneIXJaIYL9aI53txCYrQJDF3+2wuGI/nFE/PABnLkCh+ymz
mcJYP7P2yyq49jBArFFFRgUBVL/chxLr9JsyQPy6+QbcAVW/H1jeROg4NEDP
KMc0wQdgPyVfBQT2+DVAFg0N/ExVXL9vqcZ2CJs3QFz3PX/ggFA/fSrjTjVg
OUBUKW546mU0P6TqhMAYHTtAVqRy0iKjSb8P7sDlALw8QJcOnqrcdlu/PihY
cAN+PkA26yXd8Y1dP9jSRFcFEUBAl8xpuqxGVr/zLAsplvRAQMqHOfIq81m/
miaURwLUQUBys8Az08FgP+RB6r9wpEJA4OTlfyWzUT+P+O1qbIZDQMXAGQx7
kla/3NC+b2pZREB6eshKD8VOP7ZIUsFDKEVAsFcPZfuAGT/yW5NFqghGQNoT
YZpH5/A+0JChIxPaRkD7t1pt7BkuPxBhXTQJvUdANDKxev0X4z7c0NuR2ptI
QJePC3HLJi4/SmInSa5rSUBys3vISxxZPxqPIDMPTUpAtiWBFyrGJL+M3eZ2
ch9LQKcxEFkJVWS/i8tvB7HtS0CPaHTQO6A1P+xUpsp8zUxANLd9k5VJPT/v
/6nnSp5NQC6efE9pXks/VEZbN6aATkCva9+CSGRcv1uu2eADVE9AvkICVOir
XD/4Wo1rnhFQQNAiZC3iDwk/c6wEgAGCUECKTkRAOFRLv7+OYsHl6lBAmHlR
hFo4R7+7PheckFxRQI1YAhVizim/fj4tHSnMUUDyYeAd8m9CvxLPKctCNFJA
GPPkjEIbWj9XLX0SI6VSQALc16q7mkC/bRy3hoQOU0C6scee4ghQv0lbUqHT
dVNAmpFwTzNJUr/WZ0RV6eVTQL1JgKxGUWI/NAUdNoBOVECXjRcAIFBUv0Nw
TLDdv1RAAV5XVCWGSL8YK93QKC9VQGW7IR8wsmM/vnZUHvWWVUDZz7lOKSZQ
PxWQIgWIB1ZAI2TjillcUb89OtcYnHBWQLjaRBF8cPY+FrLixXbiVkAGbXZ8
0QVIP7V5Txk/UldAcvZXBbcsVr8m0qKZiLpXQG3PYnwa3lM/R/hMs5grWEBy
uaDFalJYvzmv3fkplVhAZngg4VcVPz8+GeT4//9YQLnjukHaEU0/nVWphA==

                    "]]}}}, {
                   DisplayFunction -> Identity, AspectRatio -> 1, 
                    Axes -> {False, False}, AxesLabel -> {None, None}, 
                    AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
                    Frame -> {{True, True}, {True, True}}, 
                    FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                    Directive[
                    Opacity[0.5], 
                    Thickness[Tiny], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    FrameTicks -> {{None, None}, {None, None}}, 
                    GridLines -> {None, None}, GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> 
                    Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}], 
                    Method -> {
                    "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
                    AbsolutePointSize[6], "ScalingFunctions" -> None}, 
                    PlotRange -> {{0., 100.}, {-0.0024819548202740962`, 
                    0.0024043025851407268`}}, PlotRangeClipping -> True, 
                    PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
                  GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "100.`"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Order: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Hermite\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Periodic: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["False", "SummaryItem"]}]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                   BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}]}, 
             Dynamic[Typeset`open$$], ImageSize -> Automatic], 
            BaselinePosition -> Baseline], DynamicModuleValues :> {}], 
          StyleBox["]", "NonInterpretableSummary"]}]},
       "CopyTag",
       DisplayFunction->(#& ),
       InterpretationFunction->("InterpolatingFunction[{{0., 100.}}, <>]"& )],
      False,
      Editable->False,
      SelectWithContents->True,
      Selectable->False]}]}], "}"}], "}"}]], "Output",
 CellChangeTimes->{
  3.715196005734481*^9, 3.715196411904206*^9, 3.715196442289338*^9, 
   3.715196522087208*^9, 3.7151966197440996`*^9, 3.715196651203944*^9, 
   3.7151966919339347`*^9, {3.7151968187124395`*^9, 3.7151968300629606`*^9}, 
   3.7151968898305635`*^9, {3.715196957810219*^9, 3.715196980914527*^9}, {
   3.715217196347955*^9, 3.7152172236012115`*^9}, 3.7152172954306355`*^9, 
   3.715217333696044*^9, 3.715217436564949*^9, 3.7152512003642817`*^9, 
   3.7152663377559943`*^9, 3.7152665926678734`*^9, 3.715266733233904*^9, 
   3.715285086405965*^9, 3.7152852744833903`*^9, 3.7152855964099026`*^9, 
   3.7152856364507523`*^9, 3.715285706294945*^9, 3.715285738425437*^9, 
   3.7152857911378946`*^9, 3.7157706411993246`*^9, 3.715770728605062*^9}]
}, Open  ]],

Cell[" ", "Text",
 Editable->False,
 Selectable->False,
 CellFrame->{{0, 0}, {0, 0.5}},
 ShowCellBracket->False,
 CellMargins->{{0, 0}, {1, 1}},
 CellElementSpacings->{"CellMinHeight"->1},
 CellFrameMargins->0,
 CellFrameColor->RGBColor[0, 0, 1],
 CellSize->{Inherited, 3}],

Cell[CellGroupData[{

Cell[BoxData[{"EquibInputConditions", "\[IndentingNewLine]", \
"NumericEquibInputs"}], "Input",
 CellChangeTimes->{{3.7157707345856457`*^9, 3.715770735489641*^9}}],

Cell[BoxData["EquibInputConditions"], "Output",
 CellChangeTimes->{
  3.7153633547855253`*^9, 3.715770648775491*^9, {3.71577073319316*^9, 
   3.715770736321665*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{
     SubscriptBox["x", "1"], "[", "t", "]"}], "\[Rule]", "0"}], ",", 
   RowBox[{
    RowBox[{
     SubscriptBox["y", "1"], "[", "t", "]"}], "\[Rule]", "0"}], ",", 
   RowBox[{
    RowBox[{
     SubscriptBox["x", "2"], "[", "t", "]"}], "\[Rule]", 
    RowBox[{"2", " ", 
     SubscriptBox["w", "p"]}]}], ",", 
   RowBox[{
    RowBox[{
     SubscriptBox["y", "2"], "[", "t", "]"}], "\[Rule]", "0"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{
  3.7153633547855253`*^9, 3.715770648775491*^9, {3.71577073319316*^9, 
   3.715770736325656*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"{", 
       RowBox[{"X1", "[", "t", "]"}], "}"}], "/.", "\[InvisibleSpace]", 
      "sol1"}], ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", "0", ",", "T"}], "}"}], ",", 
     RowBox[{"AxesLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\"\<t\>\"", ",", "\"\<x\>\""}], "}"}]}], ",", 
     RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"{", 
       RowBox[{"X3", "[", "t", "]"}], "}"}], "/.", "\[InvisibleSpace]", 
      "sol1"}], ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", "0", ",", "T"}], "}"}], ",", 
     RowBox[{"AxesLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\"\<t\>\"", ",", "\"\<y\>\""}], "}"}]}], ",", 
     RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"{", 
       RowBox[{"X5", "[", "t", "]"}], "}"}], "/.", "\[InvisibleSpace]", 
      "sol1"}], ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", "0", ",", "T"}], "}"}], ",", 
     RowBox[{"AxesLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\"\<t\>\"", ",", "\"\<\[Theta]\>\""}], "}"}]}], ",", 
     RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}]}], "}"}]], "Input",
 CellChangeTimes->{{3.715266409030563*^9, 3.7152664367656326`*^9}, {
  3.715266603204102*^9, 3.715266606084166*^9}, {3.715285111197428*^9, 
  3.715285115065485*^9}, {3.7153630226295624`*^9, 3.7153630478972144`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   GraphicsBox[{{}, {}, 
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
3wS9T+NItbq2OvS2ktI2+mkh+cefmIzVYX1GZqsaelCMjfYzWR2cJRidFNC5
god2lO9Uhynp0PAd6OdNIocUHdXBvfpNiTR65MRgWrGbOmRdW06QQdMKZHXI
HFWHC2dSTmzc75V47sx095Q63IxVStz4fFMfIWPxEHWg3dVMNkR78n38LycK
v4949d0aHdt448G2K+qwv6mx8yC64JjDeEayOpDkbN3+Q7fy8IoIZKrDvd03
VpLRP550O1zPV4e0tcDN1WiWo0nxm++rw8ywBfcgWp57d0vCQ3W4MVQayIrz
ZdPA8Y/1iTp83fPgAbGx/r3aNC63qEPhcTrjcHQCV9wJxnZ1GPTdlfccXVZn
dSe6Tx2Y6FbsODCfO48wf17/og5nKy3feqCpHK08ERPqEP++MLoJzV0ba70y
rQ4Rzd9+yjFTCXUPs+jgP+rwH5uVbzZ6Lzt9/fy6OnReoDu6hYVKBNU0zQQw
a0D4lwOqt9GPWInDvls04EKzlUUPK5X4UL2aMSmuAQtn1NfPslGJRbcnXd7y
GsDezOWsxk4ldB/qwWEDDXAXrJV5xkElnA8uBQ+ZaoBS++Nr6ZyYb5sel7va
4vuv3Ys5y0Ulnrhqbnc8qAFcEenOXtxU4gvjnGOvlwbsX7nb6MOD9au8MtHu
pAaUnF+pCeOlEsCgsmYdqQHvoqZHavmpREup3Bfitgb8/S/I+PZWKvFuVTRL
blwDSssf3smVphK/Cr/0FPzWgBdvkq5x7sD8tM9mlVrUAOVJW+9zslRiV8GW
MNFNmhCgWPLmoAKV6NnF58wrpwnLT+7QMalhvVjqSUpS04Td//J+e6tTCb47
ya859DXhjtVKRbMGlXD8w6nLbKMJk9pc3Ue1cT/IZRFc9dWEUIGE+w4GeL3M
rD8mgzThmNaUj5ch5o8/a92HcE1w1hac9jWiEoEmbK4V8ZrQ86jT1o2gEv3F
bIq3UjXhULaxvgVQCWMe9tUr2ZogVnWPS9oE68c39twjpZpwadu+9qckfL8N
h79dtSacyc2hBpvi+x9ymBg90YSx3vUAaTN8vzAnj3wLft/uH6sv0XcvcH4T
aNMEyumn5I37o6y/Oavp32tCvYo33TDafx9XLPWzJtzeJzjraI7z/ZTL8cs3
TTjx9eSn52hDmc073k5pAoOBzSXhjfu1iZuXauY0oc/Y8d1xNPOfzW/u/NWE
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
/+/bOdpCUKDdiJK4D3m1xVspRSsKLJU8MRWPbBLH1Nq/nQJ3/82qK0PeNvxx
RxaFAoVhTH4jMs/K4cAIjQK750o5fEJ2T+o6Z8CmgETTQYkG5JM/nW/72VLA
psPnZxFyOGWwssyRAgbil3WikW9kePYIO1HABW6+YCPnTH8X2uZKgdBF+i3z
kMtYx5UiPSgwS4t7sQjH/yZncsO7wxRQi8oUpyF3iJ11kDtKAYcb4sGtOP9R
B9EAez8KHDQoNecgzxScT0wNoMCNe9b+lRg/6XlSj76cpUDEHvswVWRll5hm
zVAKpJ44+ugoxl+/fPEvrwsUeGr/5XAx5meTbOKiwkgK6HXGzhvFfO5/kUYj
rmL+JntLjTHf1Sf9Tx5JpIDUuIcWZR3uV9ZSM9JuYjyfelVyUR/D16fHRTMp
ULHmmxcN9eR7hJtSU0SBs68OjDTro1+u0n31p4QCHT3v7txei37ZJjam+ZQC
Jabk7MN66I9b8rdGvaTAin8uO0a1+UTosnmj9BYKvFXRKHuijvufhl75kHYK
vIw+nXFoNZ/Yfq7EsqCLAvzowr1LV/EJqe9uV+UGMT5/r416q/KJq9UVFm1/
KPBEJsVUH+trIiDRVeofBV637U/ox/XYTv9IzAYRa1hFW/RS8P0PxaQVfSlz
rGFfY2jNSqzPTG//COdl1vB85vfdQ4v4hKQ6tfCqkjUcKDnfR8X692hf1Vm9
0hquXaEVrEd/0N323mCNtjUM2d9gawjeJ5i+62C31hoOt3y+q4V+8+NB4LkI
I2sI99ycYIp+VLxct3XEwhreKHQWuKOfKTSKiSlZWsPo3Ixfl9D/Tp1v06Ft
sQbPb/k/n6Bfwo8LQfnW1qBVZpZggv5b87JXw2+3NVznMC+HCr4fdLqEkeVk
DRminY6DYnwi0uDyqU+u1rDOw1+chUy7ubHB3Msa1Jbmupjh/veTT6KfUKA1
KJmvrNAUvP+9glp9Mc0aXnYfrebgftorv7rM57Y1fN98sd0e99s/t258aH/X
Ghp9vTIdcD/+10snVeeBNdSrl9nTfpOEdMXck++e4f3thmb/xf28iWuNztIu
a7ik1u9+GvuF0klCTaTPGiruJCds6CcJuFSs8K3fGqJer3Scwv5ix6NMiXLS
Gl6z5m3wxv7DYU5Y994ZvF+QgQ2jgySCci2vZinawCBDdYTehP3R5scRl1Vt
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
7Ri9giRy846Mz8zwYHdn8WWbZyTxP9KQMNQ=
       "]]}},
    AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
    Axes->{True, True},
    AxesLabel->{
      FormBox["\"t\"", TraditionalForm], 
      FormBox["\"x\"", TraditionalForm]},
    AxesOrigin->{0, 0.981},
    DisplayFunction->Identity,
    Frame->{{False, False}, {False, False}},
    FrameLabel->{{None, None}, {None, None}},
    FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
    GridLines->{None, None},
    GridLinesStyle->Directive[
      GrayLevel[0.5, 0.4]],
    Method->{
     "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
      AbsolutePointSize[6], "ScalingFunctions" -> None},
    PlotRange->{All, All},
    PlotRangeClipping->True,
    PlotRangePadding->{{
       Scaled[0.02], 
       Scaled[0.02]}, {
       Scaled[0.05], 
       Scaled[0.05]}},
    Ticks->{Automatic, Automatic}], ",", 
   GraphicsBox[{{}, {}, 
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1:eJwUm3c8le8bx+3sTRLKCNl7c65jnMySJCtUWqgkRaVIKSI0Kb6RUCQjI6Nc
olKykpZj7529zjn8zu+v87pe5znXfV/38zyfz+f9x5E+fMbpKBMDA0MbOwPD
/z9lEmjPn0p9MDtf7vyVa30Wd519wXHqRBqB6sqy50LELO7tU0lQPFFAeCUi
tluSeRZdHv/by3YCCe2WFlMCnDPouuiovXi8hWC+n91Ez3YSa9PmO0JzvxOG
C33aurwn8PdHM4nl9B+EZ+NH63MvjiMT38+n83d+EwTfHBU5XTWKbs8ZMyeP
9xAMRgMaZK8Pob5vdpBuQS/BwExhLO7TINYu2d0Pzu0juNz7Lm3DN4h/tia1
z6UPEJbVaNc2V/bjkXyTRc3UQQLB1m9f09Z+nIZ+kbNJQ4TMiiXfbTf7kPmY
6oF/d0YIhWc5DxWd78X4lbYQtZhRQoiW1tHxpR4Uiw1NPnVjjJDbGetTItKD
zyWlKvLCxwld7v8ZaVh3o1ph3d+JSxOE5pEs4/fxXVhhfnJN6cIkwXnwItvb
sU60/Mm71e/sFOF0reaOU26d2HK8xDgnYJrgezw1WqabjO5rbp6jx/8RtBXa
z4uGkjHoc3j1fc0ZAg5E1V9QIGN5Qttu7YIZgk0to7T/ZAfSXHf0tKnMEnZ8
ipwWqO9Ac5nQM0G5swQR8fSzF992YPREw4aA4hzh2A6dprz3HdhUIplYlDVH
8LQP0HzxtwMFrwZu3ys7TxiusNnszkVG1111hTPp84Spt8cZi5zI+JRflJgo
tUDYX3M9KaqAjAN/T3xXT10geP0pvvdauhMVn1cdatmySFjVGtwy97ITTwfw
zp1OWiTESukH8Vl1YYnuoUhekSVCYZiu2/vFLlxdLxbMv7dECNO0eJ5V2Y1m
X9ieO/AvE27a3w06eb8Hb9x10566s0xwS9HXbCX0YoN7Xl0c1wrhNlXELQB7
kU9uY59KzArhrvXf93bWffikLDPY/8Yq4Xz5nMuX4H7sCV9m4WJaIxiU2Za3
bx5AORvbh7nhawQutQECc90AFpD/lY5dohAywlLFL2oM4UKmOSlmhUKoqj4X
xT83hEanH/5SvEAl7NtzzNmvchg/MhgvHz9LI0zdvHKy9+Aoduy4aTB8fINw
rvrV57uDE0iTu9EjOrNB4BPh1t42NIn8gsQ6WRMG+CbXcrdgbAq1BAh+zh8Z
QG+0b1cM9R+G8hmXl7YzAuFzyKKdxBxy8lVyNYsxQYycofyRzDlM4TX0HvZk
gnuU3M0SKvNYzaPPtnmICc4nafiA4QKycGs7hy4yw3iQjBCP+RI+4nrzItGQ
BXhJRdGT1UuowKVJeXmFBWRjWUy2Gi6jLad6xl9WVhjtzvPeJ7eCnRz5i7M2
rMCu41Hy+8EKnuJQteGMZwVZh37HZ4yrmMiuPGMkygYPj57z5G9ZRRn2XIt9
7mxQ/vdkHFF9DYs37Uzyf8oGhheXq1tur6Hlppfj1/vZQOf4c9lbfWv4i03B
LFV+E0hoZr7U06bgCbbsuyV+m2DY+7lwYTgFV1l3DDXmb4Lnz2Olvnym4G3W
TIOhuU3Q2due4MJORQlW2TiaHjscuyZopmdJxXyWjB6Ry+zgXDh4wOoSFQks
0tpqyA4zpiw2R3Op2MqcfpPEzAEBriyfL7VT8TDztg6vXRzQ+4SyfmqFigtM
T1VDYjkgO4yaoyRKwygmyWsJLRxQ5aI+laZKQ1Gm1PYXQpygHvw3tMaMhi8Z
tyrWHOCEsFXpjEgbGhoxPrn8J4UTxrFwb68DDb8xbGmZ6eEE4+tU7t92NPRk
SJbhkOOCmGt/acctaDi9IXpB+gQXRA0ljSfp0DB84+FXwzwuaM88p3tmGw35
N4QlnWa44IPUrd+rzDTMWL8f6KfDDX+6t7rv6qei9rrgx8hQbmj60N/kV0nF
j7S7m1PeccMWJvs3l+Ko6ELj9y9m4IFuhhmtu65UHKEmVH+z5IHL80W3vklR
MZTKKzgYzQNXHrYG2PZQkJN65yi1kQfuc1DGNJ9QMIXCXSEswAvtJY/HXu6h
YPUap4/VY144w174dDZ3DR3XYooPdvFCUG3+me1717BvlX3TBWk+CAmgKT+e
W0WWVbb87Bw+6PbwSAfFVcy6zLjOfJAfnGFejey7jJEL9XHNYfwQLmy+79f8
Evqcit/6OJUfxKvdfntFLKGE91ZDtU5+eHcweIJ6bxHvmesGu3oIQHoEMWYk
cx4DqyhMspcFgHZu+Ei1/Dw66NTenXoiAHnP/yLTyzlkl99TENkhAG83J1k3
58xiOMfJ8Tw3QXBP8e97ePgfekaqXwy5KAisrRVVDX7TaERZ3GT+WBCqIze9
qj4/hUuTkTt+/xEEFouZv58eTmD7UZuSZyuCYBv6dOzTq3Es6uazCBATAvve
0t1en8cwoDXVh9FVCJobWFXFuUbR1ubIv28hQpAmv+mMmN4IKtTuvPooSQg+
JU1PHzk+jP3FZSnKv4WAp8YgI6R7EGtUrigtLQnBsnBoEuOOQXyaZVFRIyoM
jxm2OXmeG0C3pNZf+13o9ePUg92K/ajHn3R0+wVhuP9HsOdlYh8KxxxcGH8o
DGpqN37HMPbhHKPc9dJSYdhXmrhef7kXWy+NC0T8FAYrO5NU240ezJ8vTLdd
FAZR++8C1eI9GBsQoi4iIgJsQbKKHrbdeGLItLpHRwSyuZfKoun+RPJicch1
FoG9iUn3n490otzvBnJwsAiw8K4W0vZ3IqPjXT/CAxHIA4fdPX/J2P3lwCpH
iQjUPZ3MjTpHxndEqej2HyJwLct/TEaWjE8qB0XT5kWgvpkJekY7MFT7VdZJ
IVGI8Pwn+ftjB7rkndXR0RaFtSvJWhJ0f9LeYVC37iQKP6MFPpViB/I/Xd/7
NUgUTveUbk/r7sBp0U+99++Jgtl62O6vQmRsTIg94/VGFLgFDBu3eJMxl91p
XbFNFBaqo8r8a8gYfU3szvysKKycN5uL1+/Eo2vdW6sFNsOtN6551h870fxc
Vm605mZwXll4ue9YF26f9Dfct3cz1D3nSvOW7MZ1X60vkmc3w5eCY28Fx7qR
3LXiMpq4GU56rfze9LUHy11w6E3hZoiGeyknvHrxUUtU8JXWzRDTVNW11teL
wdb2zNYzm6Gqm8F47XQfOn0QvCfILwavpXoyt7P2I09xWsGLPWIg8aJlrMxu
AC+Iria3nRaDNGFHvo3lAey+6BRJuyMGujFap3peDWIhsO7f1ygGJSG7DAV2
DqNTs9/auvUWmB2RahQ6M4ZVmh8Hdp7YAlM8+WKiu8dR7qFkk/OtLVCfmPGk
QHMCFz1a03I/bYGSnBfXl1imMHlM18rFXBzsqseJDcdnkMEhQe3aIXG4cyB4
OnFgBk8Wjm7OixAHZd6wB13es2gUkjLOiOIQ4BBAlnCbwy4WxsTXxltBKT9A
vHrXApJOuF/8474VuO4p/iZ+WMD8b8WHmS9thf0bSloXDBcx4t4xXbfyrVB6
jO8Yz44llNne2MGiKwG/l46SpvqXMfb6jo/qzhJQ1+HzaMxuBReGr752PycB
fNzE66NFK/jptWZEYZEElObUglrwKqoJxJ4kt0pAQ831abHWVXwUPOjENiMB
tlLJMrsV1/CEcdIOTzVJwJGHaXONa9j6dIb3loMk8MjlfhfaQkFDJtuVogBJ
YH03GzXgQ8GMo8/7OmMlYSpdNp+QSdfLr9SGTa8kYfBawwH2AQqeU3Ep0WqQ
BE//6sptklTsTCj47+CYJLAdybL2c6Ki5Tz7rWh2KWCO13rfHEnF1y6HA4sV
pOB65ht5vXwqilZWuXWTpOBp3dy/WLo/XZUUseA4JgW8TyvG3i/S9TvitIpO
lBQ89DN2eidAQ8fBehHvTCmIPTfUf1GRhuW7pDdi6qTA/FZhx4QhDaVfXRot
6ZcCl+1jsxwkGt7mbf/ew7gN3iT5+TTb03DurGoVp/Q2CDcRXdTdTUOPnzcz
dWEb7DrUygW2NPxo0HvHx3sbGDw3i5wGGqqkGobEXt0GAV5jJVZaNHy4cc+n
7L9t8Dads9Beiobrhydt+t5tg9tejIPcrDQ89tlKm7tzG7jqFhvcG6Ziy840
CX3KNgi2PGc+UUvFVBKVSZNnO4xb5zQpPqEit/fVJ2JS2+HbQ29x8xNUDAth
0GJQ3w6GpM2psRpUnEyI/DpC2A72TbVOcvMU9HzJcqjFcTscogjHqBVSsLHm
5krZoe1QZ1eT13KcgiZ/2ROfBm2HC41kbg1xCkpw8uCpB9tBRP1GafeZNYyT
SXDZn7UdEiM+scUJrSHVSGDapGw7dNRhWNmbVez0F5Hk/rMdUm3GDx0cXMHU
JsnLuVulIX6/iU3A1mXkHk4TvKciDRHfvtucfLaEYevSuRdNpen+KF/cIreE
nuryf629pSFfVEN5Rm4RJe6q6Y9kSMPHtzMORwTn8T9nwryskgxwNqztu/x5
CnlPfbjNZSwDj0h6X/U/TuLVKAuZeTsZENuadY7yaQK9ynbtrT0lA99GO+ya
fo9hc/PX0ZyrMiAoEmH4b3QUzUbsIu4myABseWxLYBhFKTHHAp8iGTg5+ejm
KYthjNdoI1nXysD2PLZei8AhXLd27lb/IQMPUhKJBlmDdD1x5dlYkIGbHzMq
jXcO4O57HZnDrLKQcFO8QupiP1bnepo0i8qCT59hWH1bHz4l+/j/ZyALmkLV
Yb8ze5F3oZ8pykYWyE/VfUcke/Eq99EnAe6y8Nu/e9NWyx6clhvRdPaXhZ/n
Bsckj3Sjl+nJr8ZhsnDAj+fE/sdd2Lx/wkf2jixE7G1/pUn3F7PTp1Y4n8qC
4MUH20UdOjH/5r+EuXxZsBd003D7RkaptLMKHSgLj+4ZDpgfJmP82/nqD62y
kAwPm3gEybject4lp08WTk1HjQ53dODp0eWpxDlZKNpYj59814HdDJeiQpnl
4L12m6ZGeQfu3kKV8BGWgwI16cDixg6s1rxasmuHHCiS2UQC1jpQzZbBXl1P
DrxvxWwjEOm8czhyQHSXHIRc25LD9oyMycu3Xne5yMGS5qbr7/g78X7cnZDM
Y3Kw/v4kW8PDToyXvk/0vyAHQd6jdZPqXRhdlsyldVMOvtwvvEbu7sJIu6c/
Vx7KgaODQDwhoxuv9D5Pwyw5aOCvJFRd7MHQ8zknb5bKQabFwMMgrV4M4izQ
dvgkB0W6FUlZRb0YkFZCE/opBx5PFPsNjPrwuE5lfcegHLgY8o+NfetDT69P
HidYdsDSL6HFKI4BdJlv2KEuvAMetX26+qtkAPdGt/5blN0B9xz7T/KfGETS
G/L16xY74Ne2EvnewSGEXX0Otvt2wBbl7MV3r4fRuHN4s8CRHbCm8lVS4MoI
arDNvXoauQPeC/Bw3VYdQ3F39vaKDzvAXeiyKkfDJE4z6srNEOTB9H1dxiHS
HI4+Mpou2yMPIZkN/IEf53BAGcqveMuDvfvrFUnzefyz386eK1we7p9QUvE1
XsDanEPB8tXy4FFqNc+ybQnfmR03m2qSh3nTHTEX7y/h2x8B7CVd8iD1WaSg
mHUZ82ghqUSaPBx9ElydQvePR3vjP3qaKMBHPp7B0FA6vwzfj5e1VwCS8WaK
489VjL382HXcQwGOmi/tclNbw4iszMmQywpw98CbR3va1/CSUW6ZWawCDDWK
/p3cTsHzLQURrCkKkGq/lbjlJAX9ViuF71cqQMKTC7IPJyjoG1/T7dagAHIZ
v8yydlDRW/bzy+0dCsBxorzskzsV3cu/BY2MKUBZ7Epp520qOjt8N8lfVYCz
Bn2dbaVU3N3/i+08hyJIBnfZ3SdT0Tqks9V4iyJUu3W+4KJS0Zy7/wnTTkV4
f6hYU2UzDU2fjfh+NVCEl7EFWSMqNFxIrd3bb6MIm9TeH91L55Xc5P/MKO6K
sEE1HttN5xWfB6HKwgGKcPsJf+9fOq+IJu4TU72iCG9cPr/+R+eVxlg1VlK8
IpyeDb5wl84rkbc45rzSFKGqNonlI51XDK4PdocUKsL+fXLvEui8Mn0VvyV+
UISctj3VDCw0zLz0pDynTRHSc+vr5Om84n7hfFbtgCIYEkkKInRe4Q9yvEde
UARtWbYP/bFUrD+lHL7AuhOOelz6l3OA7n8n2QJ4Nu8Eez/qjWi6n+oc7XOV
V9wJXQWVRWldFEz3TNJytd0J/7VLz3M7UNDFNWjbWY+d0FFz8VopdQ25nR24
bwfshHnLuHjjF2sYasc8XBW/E+p8JNezpuj5YFd3W3vaTsg/7u2xELOKg+YV
OFW4E2i3x7/MS6/iXqMzj7f92Anf159WLlqtILue7U2DwZ0gK8PbcL5tma4P
O87tXdwJZf4WXc88llFpJ9n++mYlODm/ZZ736BIyie1iGPFQgkReqxwezwUs
F5KZ2ghQArUt7zIKfs7jaT7aX7GrSmA7ccfScvc8ktmKi23TlUCgRVXxsukc
lixKHc8fVAKxGlOlLIkZ9Jtd3Ve/qARFtz4FVqj8w+1T7dDLpgw/g1qcRmSm
MW7wtrjgTmXIwK+inVsm8eiPpabzp5RB57PCXgPzUZRo+V4Zf1UZ2vL2TxZ7
jGBbQ96LFwn034tEh/uGDaNZ7eFrf4uU4RnPZV6vn4O48N709Fwt/aX8HBqc
zDuIuRViHlztysD77bfpuOMAihY165guKcMd+V/V4XN92JiXI+2ySQXs68bd
Yp36MPLlDd4zYirgwea52ex9LxpkelNu7VQBt5Uizim6fv1LMxpNN1KB3XtE
9ZuP92B2isjPCjsVCJeL5R+P6EbPpJkPbZ4qwDrWubmoqAsF73/LnzilAl5S
QxGP1zrxS3x2Cku4CuzULN3N7dmJHzcaSpsSVOBwop/0kz9krAn81/IoXQV+
WlRdOH2Kzh99QuPeRSog7DDX8FGcjG+dDFh21qpAlGzEtobeDnxT5yk116YC
zD/TTz2l80W+zjWDqgEV6NAxLHGm80duVpbTjQUVOK/AwTBT34HZog0BDqyq
kCT/ku3kbAdm3Jq+KSqqCp8+FWi+0CbjfyuCz3rkVSFtSq3mVjzdH07qV73U
V4Wdmb0qvxk78UGHx8+z1qrwqqzf68CdTky0i/hn5KYKM6wmlyo1ujDuXSYH
i58q0C4IXXwxQfcL1a+yTZdU4ZKv2VjZ+268/nTK9FGsKhwRLo4/n92DV/kE
Xb1TVSF4bjazyKkXL0XoBSm+VoXv1mfbVzvpfnE4PLuyWRXC4J7nF/5+PP3j
ec31HlWgZrkEZVX040nLLx32M6rwhqvBiTFgAH3kBfh6BNRAomFp8eXEIP1+
6O58KaMG2dIs2dLlQ+jK7m5xVlsN9Dj/+pyLG8Y94xkhzPvVgP1TU/03W3oe
ydfpVUhWg6eHVhof8U+i0Ta3tZmXatD65eUkkXcK9RKvCFdWqIEnmzj7e75p
VA36bG1PVoNIypLzIs8MSui5FgVKqUPlkHNThtwcir0I+2aorg4H3diefM+d
QyGxZ0NMoA6xFKLrM4155Fwb2/LwkDp8j30YQzNcwNX3lyMrMtUhVH9HX6Xx
Ei6opadGlqrDSd13zMxvl3Am7WOZ3Wd1+HXr7XqR+jKOXuOZ6BpRh+TQxCMm
Yis4OKfJ+mJFHT58supKurWCM5qv+MpZNECN0z3WfX4FJzJadl4T0QA5qn60
Eq7iCXJf2ZCkBvwyPpVTL7WGw0ILFrbyGsAWNrc0cXENfe3ZvueracAO+3+7
j7auYf8NMS8hfQ14K3FIgkWGgj7vlSZCCBpQysQSkHKagt2LJqGduzRgXiFR
mrGMnnfV9rASHTXAsTGXkXeFgh3HDt3LctUAIyVa6n86VPzvYGn5RR/6/mwf
b+Wi52cfZ44ehxMaEBSeuS/sERVl7Q6yygRqgJCExVgHUnGYWKS8FKIBKM2p
ITRIxRwDVqeGcA14PfCiRoiZhgHqbqFPb2nAMwWbyiYJGqrLv34alKAB9b/u
jOlo0vlBgvETKUkDtly8fYxA54NSof0T4mkaQEAG4WG6v4Ry5gj8y9YAO+7K
A3J0vjBmpOnX5WuAgkPE7DKdP9aXHb2SyjQgLPlF/yE6n3yYzrzhX60Booo3
//oa0fDG0Eou4bMG8Pgt/GPbSUPrTvvvQs0a4FbUYusoSEOuH+nLIz/pNfXb
F7slKjZ/XZB816UBCfG6bWw/qXivxtoycUgDGneed7tL56v9b1P9fKc0QPtO
5Hcanb/E8mcSDRY1oF3ViPcQnc/ImZZvuWkaMCkas6dNgopPU5K7elk0wchb
meTfT0G5GFCKEdaEU8k0n5veFBwJf+B4UEITVEi/lXdtpmDuhdELmnKacJRg
0pnXsIYavol1f7U1QSF3UyZFbg3n3QfHXhtrwhjNm1encRXL9hrwR1powsv/
SF0FZ1bRhNDrqbRPE0Q6+x/I5a3ghq7O9XV3TdhiTRO4TPefWpXonLbDmvAr
YYC1lbyM1uIaS5eCNCHWyXIdGJZx/2J4wre7mnDj/fVWUbVFPP1qW21AqyY8
ay2Kd9ozi5oZ50bhjyZEZ/d5XW2bwYXkel6RXk2w0n6cZOgyg5dunvF4/08T
7lQ1vEuqmcabh3CBh08LTBynO29yTqCNq9DWflEt4FVSrH8qP47ce44Ty6S0
gMiuNue/awzvmfDFe6lpgf5bgZHm5BFM2+ytUOCgBZtM9zDVRg1izQdJbxUX
LfDKirn+t24Ae/07H+V4aYEu66SzINcAMoqmNMsf1wIt6+NX2j36UabGjS3z
DH29bZ6ZkWV9aOEnZiYdqkXnb99fF7f2oa/w7/NPI7Rg+Na0n0BsL0ZVP3y9
NUYLJh+zHX7C2ovZJ5yHku9qQXzKYmqNaA/WCwpJij7RgmxuWZ49ht04+u67
8/0MLXhw+6r/wXNdyHE8MY7/lRawy2/0u3/qRCWBPR/vFGtBq4eBSI56J9pV
8VA532nBrmf5/P+9IWPA0Ubt6I9a4P8gTCdsNxnv8MX6szZpwZD5fxXhzGTM
r7B5HvlTC+yt/yl9/96BLUfYyRtdWpB/nm0qrqIDZ3jqBa8Ma8H2TxVXayo7
UKA8ynZtWgu+/WNX9//ZgVqHLSNDlrXgw0Gp5SscZNzHzVy5sKEFtASXOLIL
GYPLPsyeZdcG05QZcH1Pxgc+ETv/8WuDSJtXUKVJJ5ZyEg4FbNEGObdP5yvb
O/FXCS15TFob0i2UC5miunDJ613rMSVt+K5l9EvdoRs3c1xmH9TSBpuzblrf
VXrQoNgQDhlrQ9i07/kSgV50O7gS0m2hDY9cesz1kun+sultgYe9NlxIcG98
trMP33nobHM5qA2VSjg45t+PXazzLj+OaoPz78uj/BIDuF5QFO94Whs+17AE
vv05gMCivm4brg0Slbs1O48M4ce8nV2EZ9ow3Dbr29c9ikMuo8Lvc7ShRPhO
YUzzGLIxvrA3eqMNrT3XsifrxtF6v9w7nTptGCI/9Sx7P4nfaFIpO4e04VlC
RP230zM4+aKrLXuKvn6jPaF0cQa5nVI55Za04epZhQDtK7O4O3vLJalNOtAc
zJD0Lm4O23YLuwnt1AGX/8h8uVkLOL/SlpioqQOswzssBxUXUfj53S88Rjpg
WlfA5ZK7iC7LvAbsdjqwdd/92PfZS9iRxrGZFqADdQfGapaurCCwc46OBeuA
3Xrs162DK5gdyFnxK0wHkm9U23eTVjGIyOVRGKcD/Mp+by4zruGfHC6V/x7o
QPcmhk0U1zU0E+SmxaTqwDdH9T6fvDXkGuBOO5KnA0wh5blmJAoG2fEEOpbo
QFnWVVn/OAr+KeYhmr7TgeydH0xHmihoJsErqPRRB76KeHDf56Ri5g3eAdFG
HZC59vKOozkVOad4S5jbdaAw4VoWy3kqBu7ni5oh60C/5ijxUQYVf73nc+ka
0IEZcpXivwYqmsjzKzRM6MD092vXKVNUzIjnXymb14Eq271CuVw0ZF/m//qc
ogOv6ssDJmVpeNpb4Ekisy6IEh3OlunRsL1ewP8Kly5cqHFU3aDzhJGGoImf
kC682/OrDem8kZ4syHNgqy6QlL06Fug8wsYo1G0hqwsfrqQupNrS8NRJoQIN
ZV3gzRuZqiDS+30XipDU1oWaaCZ+R216PyPhvZzGutBrx3fiGJ1H0jOEZZbN
deE7V+svNjZ6Py6R+QFb+nq90mmmI1QMOCfysdVJF/h/v90iXkfFNrLIw/fu
ulDVd77q9WMqGliKHss9rAu6Qb1befzpfpAnqp/kpwsv3x/u2a1PRRaRzew3
gnThWSEtNW6dzn9XNv8NvKQLdY912fprKKi3W+yy7W1d6NRa8d6jT8HUMjF7
/Xu68H7G82PuxBoybdsiKfdEF3pwU2Nmyhq2/NuCtBxdkJW4lCv0bxX1XMUT
x4t04YUys3HXvVVMrRE/9LtCF6Q140Kmteh54+5W5qKvutCSe9sk+8QKMmhL
7vIdo88j73NwpWAJj6VIiu2d1QUCUZwngp5/GpmlxkxX6f1ShCXmPy7i43ap
2M0cemC4r2/xRtsCal3Y3tKgqAdZIld/DHfP4ZEK2QOaJ/TgqlH1FpahKQzo
/GK2dEYPMnKcmsWWJzF445R8VYge5BU3ZYZxT+JNq/JFy1t6kOmUYTpuPo4J
Jw52cSTogUzNnbZvvmOYHMv0qfmRHpxr4o56FTuKud/tH7hm68FQAWMkdWwY
ixdmL0vm68Erk0vpWjLD+G5z0pH+Uj04rCFxe8ZnCJsP9mkFfNIDPa7G2ID5
AfwdcVNcs0kPOh2fCvzeRfeT58pMS+16MM7wOE86sx/nxs5/Dx/UA6//aim3
zvchhXtrheUkvf9BPi+tiV5k0ahJ51jQA6ayAwt/T/Yiz76j0c0UPTh2/czJ
kIEeFL3AGXifWR+YfP+4bWfrwW2PCw64cunDrf3bYjabdKPiO2eCpJA+ZHkJ
FlTR9VSjZ1W+X1wfjnSe1T4y0ImGTGm8L2T0QUs++q77/k4032G55K+kD2bb
/c4Pksloaz3WpaGlDztVy6uNQuj67h//adFQH+76i0CcAhk947VfVxL1IfYe
UNcnO/Bo0Z8H4Tb6sEfhyIV8On+cbr8SZrlXH5yuMDjk0fkkZFnGl8NNH9Qr
SDwM7zswQvyLXbOPPhyQltJ+8bsDY0xPad8/oQ9NhjTVh5vIeM9HcKtrIH29
Kp2zxfZkTLn+lkkyVB92r/bZ9mWTMTPbc7wvXB8Cp99eXhDpxNdfGduyb+mD
7lY3+/LHnVg2mV3hn6BP97+9rdOaXVjNZ/9MI0kfvhU5HXPs7sJ6rdnoxaf0
/TyaCI592o2t+x8FVmbrA2kf7Z5VUA/+CTV2Dc+nn9d8X8QdlV7sS+klWJbp
g6Oev+OenF4cr45S4KjWh4Q3/DdU1ftwvk+Jr/mTPkxUv2Qce9+HVJbWpXtN
+vBfp9xBs/39yGsn/lmiSx9+N9YUPkwdwM2n8XXfoD7MvbhsRLMbxO13fR9m
T9LP407lgQamIdT6ne+rQdWH7a8F1AyjhtHliAWz5VYDCLN6fVv7xxj+dzkA
/N0MYFCKwbA8dQZZnMIM/x4yAPm/b4InZGbRTzFOa5efAUiOszon58yiwc9X
crKXDcDpCeWX9ts5/KE2wU5ONQDebv7Xu74toBErhdEmywDYmhYfbHdYxHQy
J6XstQHM+zx3km2i57Vopal71QZwYQejY+znJeToP/ndttcAmtpztgUlrWBg
+cWG8lEDENkbd2E78yr+io+pk581gDST9QNjfquYaZxTysRkCLsnLfOGVel+
IViRH8hpCKN+l7vyo9cwaPTLi25BQxD1eHCkonsNCQ9HH1fKGsKVdEn5v5cp
mO2/ck9RxRBKpN+rJNVSkNucPe6RjiGosh10GGOm4jkxsSgWU0P4s36U9IpA
xY5phatBVoaQemRwpIruH8RP+iG9DoYw/ylGj5ZFxZcpuwJ3uxjCZuvF086t
VOQNOnDynZchVG16til3gYrnrY8fVjpuCEp7P7eO0fN8p1SIR/IZQ/jF5snD
rExD88WbzmyhhnBWouzgqAkNc749cgiOMIQfqZ8+JVjTkD8jm9QfbQjaxILW
ObpfhISWERzvGsJB6ytxvPS6e/dng+rHhiBxhjV4wIqGljt+aapkGMJjo/Lg
8wY0fEUZUnqSawg5lEThRjkaCrYtyrLTM8+ls9kac5x0fnnJKnmhyhDsvLYo
LI1TseeqiOhgnSGM3HQpGvtIRdL+HXxOjYYgxHSaoT+Ziq+Vddlr2unz79wf
uHyMisJMVoxqXYbQJX/wnZU6FS/9cV5LGTKEz3v2/Z6YpWBfvu88x7QhaHjv
qOcqoKB1VPBkyJIhDORxPms4RsF8jxtDQ+uG8GhaJM5xCwXD2DN/f+AzgpRn
Kq4+Z9ZwoLu4VV3MCFjnCfethdbQtrTu63/bjeCj1SeHkjeruPnwQNVFTSP4
kVzF8o+eP64azJeMGBrBt+R2JY1QOt/yMufvNzeCAv0Cgb+bVvBNlUy65j4j
YN4I4DkouYwOIodvjAUbwel5P7dT9PyzklMsWh9mBBHaciu9+QuYacaak3nD
CL6OxBZt0llA6vGXTd4PjMDz7MYVT+N5zKucFv1VbATvcg0Hqyxn0XUP5BRX
GUGttWKxRz39fRq8a3y3zgi0Qnsy79rOoCePro/9DyM4niCYcejFNHL7XM6p
nTOCZ8x37/tNj2P5QqNx+poRnDsdZs7IOY6+MVLNV5iM4exdrYBjSmP47s2H
OQNBY/CJr79rc3kET+wSihIVN4ZyjUZaUt4wCnf6bl6QNoZ7VooU58EhDGBl
NynQNIbxfxHLT04MotgTt+Y4Q2ModrX/j1w6gB/VXvn4EY3h2O9iuVXOAQys
o87tsjEGJeII364T/Sjhujtqx15jaFLx2izU3IdfJtM2M7sZQ0pL9c2XJn0Y
fG02p9fHGBK7mwUcSnqxMfdBc0qgMZz2YhyOD+/BUMKwz8VQY4iUcTWWf9mN
cu368y4RxuCx9Q2UDnZh64mYKJ1oY7jlIBiVrNuFYbSOzYKJ9P1420/Kp3Si
4j2V3H9JxvDvcmrOS7o+t8tfNWlKM4YjthP3fLLIGFHV0pz7whg2wfahSFsy
qjhKH4ouMAY2bYZkE1Yy/hkMmj/61hgemzgrFtB548bFj1EWaAxBjzUOzlZ1
oAavqJh0vTEI3viayVfegZ0Zx3PXm40hoPRDJ1dDB0brV5h0/jKG93wKHl2z
HajTyNlS0W0MMTwDcmfVydjr43koadgYCCasfi8jyRi3+Ho+eNoYqJdVDntO
kNHg9kaU05IxLCjdZHA72YmDUnvFNNaNgfQyofEwtRMTizNyedhMwDeIx04z
swtNrBdMJnhM4Acp4nOwD53fOq1avoiYQKXoQG+rRg8+OJt0KFvSBICnc/tZ
zl6cfGJ085CqCUht6K2oc/VhsnqcGEHXBIKN13j8Hveh5ceuXAlTE7igfvT7
TY1+TJ2KaPltbwJFSpN9ZqEDaB3ZdqjU2QR4LM//MFYcxAVRuYV7niaQV1M1
390ziHZQL7Y7wATKfpxWKfQdRufo6+/ag03gnN8Zz0fmI+jVSvDxuEL//oyy
dJnCKAb5lL84EW8CKgEnrj5kHccnETl61wtN4LuG1Y5KhmkcrYl1Ll8wgRDv
+2JfDedxjt16xYxmAgsbrf5rNfNIdWRJ/cRqCtqchx4r71pAvr6wgTZRUxAg
ul48uGcR9RhPB00ZmAL55qvUPtIygo2SaDDRFP5VKmjNvl9G27vDFWs2prDV
S3z0neYKekl7M7J7mIJSaPCf67z0PHlya1b8EVOIeTeQwRhC55Oi39YiAabw
+uCwFpG8ilFEx0SZK6ZwwHWSIPdoDeNjuHVyokwhZeVP2cHJNUz+/uW3erwp
fJJ5/+OGKQUztkRdLntkCs7n9VP8YyiYd4i4zTTNFHS0nNaGWyhYlkOrrXth
CpMLy1+a+alYM1txzLbQFK7uF3Jdt6Nig+EFzu/lphAms3l+3zUqtl/Tyj/w
wRQSew3diwqp2P11em/3V1PYa3U+nfKXiqMCrxZ920xB9vhdt600Ks65HX88
0WEK50dVH1C30JDyTNY0aMAU2kkPB+M1aMgy3tO7MkE/jyWxiE9AQ16t1Bvh
C6Yw0xdhkETnDbFLropsNFO48edl0DrdT2RqhRvjWM3g+zFb/VX69yqc388I
8ZqB2zM+2xg6j+g53RF6ImoGki0unCWaNIQnNm+3bzODYRkP/8itNLTpZ/V4
oWAGnh0brIwbVHRSql1X1TCDfbxRvNBJRc+gqxklBmZw+pSx+b5iKh6rNCIZ
E83gbXJU194bdD5jWh77YGMGav1L8S576H5iW3zH2skMspDzZLgwFW/cO6PZ
4m4GfD2cv6Z+UDC+Q/nn/iNmMBLhcPPzHQomy4yGdvqbgYPrUZKmOf3++GVK
HAk2AwnlLma32TXMe+NTMxZmBo7+vC/86TyC5n83Ld8xA5+cNzc2961igJVR
7f5HZkC1ZkldubqKYtYpYSVPzeDbkX3HqsXoz4vDwdmzBWawq3mJoQNWUM61
r2Oy1QykuA+8mz65hNGnxl73CxFgw+LDSLrbHOoE2p4gShDAa9ePhKofs9gX
9EomXY4AFYk7SVMOs2gUeirpoC4BvjVaJ1RazOBU5GzEHxcCvDF9rd52cRKf
RDkZ63vT67sJIo7hE0iKLl58eJwAh3njuoNixjH9znm/faEEMJ6I1K5+PYpO
yav7mh8TIPCBSMQhyyFcf+LOq5pBgIOcd9K5rgziq/+qvsTmEqAo2tFeo3oA
XdMlro+/IcC0QZWZAfsAsjy/YmpTRQBg8ei46dGPRVndyy/qCLBNh1J1qbwP
vV4S3rA1EoBRzGvzqW19+PY1o8LHTgJ4B+1984i7F30LD/fJDBGAsPE0+4t8
D/IX16VcmyLAu5adPytsu/F9qZxL7yIByLN3fS/SecKvPIqfsE4AoR8mrud+
d2LcwXNDu5kBeHMvzrMRO7G/+7n51U0Aya3/hd2speupT3vaay6Ab7U7jfQ9
yRjfx0Lr5ANwvapDceQl4+BhXXduYQArJ9bO9T8daDRIV38xgAW5yJsH33Vg
4tFHwv4SAA4H2/rD6Ho/Mvz57JPtACUvLV29mzrQ7MRy81c5AHJM6PLKWgc+
GFNQWVUEkDi1R06TSMZxP9cYRVWAcrGHD/rSyAiT0cMHNAGadu2n/RTtxEen
Kixu6QJQn08VNGV14uT0WHqZIYCy5vXTl+y70DxQfH3IFEBXrG04grMbH8/a
eoiYA8yrbPBd7OnGmaDL5ZYkgEbn0FPTDT1IWnglEmwL8I/37XaNY704t8Td
2uYEsI0pYCjsVh/6H+herXABqEtqMfKQ6MfBtwWyz9wBxHyO3K2q6MdfoU4h
Zw4DXCcmE9u4B7FiLUmKOwgg4lvBNkOuEdTyOGk9fx4ghDBHkyOPYG6VUVDH
RYBz7241/CocxdSwrk8vrwF8EDYMnPMfx4h1mVNWdwHyVbt3OYtM46rXwiOV
hwCcyf5pTZv+YRB+qhF6DLCk1PAsg/oPfSNOCPenAwSYue39vDiD1kz5VVcL
AWK7b/tWjs4hH5shZ3kLgNClLHfZV/T35xinTtoPAJ3Th3Pebl1GhnrywZu/
AYjPzzzvjFnGuVtXi5x7APiOaHCze62g/+gesvEAwGWTxWs5dfS8Zy3NKjsC
EPjK9oeAPJ0fOD66zk4D9F6zsb/Su4p7/B5G/pkD2OejW6FgsIZfGo7l4RLA
qCF32UjsGhKVDX5lr9H389zv+EPyGlbGcjDErwPIVtv2cCpQUHuyY+d5JiI4
1whqy52m67193j5PNiJcv5kQi4UUfMqz54USLxH0BAZfbChQ6Xy2/buAIBEi
Lw+W+ntSMbF5dm1FhAhc1tIHRmOpyKFeJ9e7hQhDw5JLXmVUjEx4sLtekgim
zPwBVWQqUv4dDc2XJkKatlnXBIWKwY76GQ93EOH1rq2UXlEaThayN4btJMIr
/16GeBUaHhXoWDyiSgRR4/bo//NE99lX2+w0iRBmdOj36C4aurSF2WjpEoE5
fUdODF3vW7R2n9tiSITwrndOX+i19f1t/zGYEoHhtF1ZJp0/PszPfB4BIpQ2
0aykzWho5Fw702xJhD2Xnqybq9GwuOS+eJk1EX4SL4YI0P1HReSo5X/2RGDv
T6t7tE5F55aJpT+ORNDqkr8yT58nLCYoR3g/EZzms9KN6PqfabHq4ehGhIJh
3/VIuv5/o4Xzxh0kgvaluzhM1/+5t2wf6g8RwUPsgOt1ESqKB905x3yMPt+X
jXMXf1LQb/jJn0unibBVkOEDixUF76VLx5YFESHo7Ycf4wv0++f+0nTuAhFa
faOZGtPWkLOlNONkOBHaPhlyEkdWUSvGZH/WdSK85H+sZXJjFd0t6jb13SJC
gMWFIQbJVcx52xrgmkiEUMf0fa3mK9h69sC2Bw+IMOJE0d3fuowryt3fW5KJ
UFl+ND/JfRmt0yf0dj0jwp3XVl+8ji3haDQbo94bIgye3T4Qd3gB5d1NHgq1
E6EmKkEgWnUGdwvX7drzhwgWW2ixtY7/8EKzzdrtTiJ4On/REbSZxs/mB7yZ
hohQdyCd45fFJE5TuwTMxojwuDWr2X/XBIq+9f14cYoIvne2HunbM45HlYN2
zi7S+9e8cL5/dhTjhlbIKmtEEDEj3SLHjmBJWnj8iXUixLfYXBR/PYwswnfm
e9jMQUBqosSfbQhVmoWyt3KZQ8be3Zf9CIP0vPfE9QAfvU6emzK4NoCZ1Bfv
mzebw9h/zafGtvdjY5laIKeEOQhd5q9JDO/DhcBSGdJ2c9jEWFZzd7QXJZRN
fl6TM4cjvenr4NmLFkO1t94rmsMU60GejtIe9EuzMVpVMYfhrxGR77524z23
1kkdTXPwIc/feb3QhZVCB9ICden9j4TfktPvwv6mrr15huaQ95zkHnu3Ezmj
fVlGTc2hv4J7wYylE7XMJ8pkzc1hidh4Mj6BjO7Usye9SeZgVpIyUqlNxsiy
la0ptuYQNrrtx/JMB+YGhjf/2m0OHLFnSvzqO7BNie2a4D5zOHHI5pvS2w5c
G4zT3n2Afn0KLzOxpgOl04SGYzzMQStr1fxlfwcGGBgfveJtDnxZDe2xW8hY
9v3wYOARcwicMrN2OkZGBv/bR3yPm8P9EcfZn1/IaMvypv+Avzmo2D9dG4ZO
fPDf30N2Z8yBKHa1xra5E3v0GPvMzpnD0ONy23eBXajUquijFWIOarWyrpMK
3Rh80rFnx2VziNFzj742343VTKFeW8LNwTs8LEbsRw9ypKZ1cV83h0pFTh2Z
I73orFvvyXDLHMSL3sjsGu7Fp83T5Pnb5uCXqKJTFdSHo8dFPUbizaE+raPa
kL0ftRnNOjru0ec7XSJ6Kbsfv2jf+fPhiTns7j6Rw0YdQMGmkgOlT80hQqTH
LO/NIB481vnrZYY53NzG3PI5cAjnkpV/JuSaQwvj9N0BxhGUWP/6/WClORxj
IN74EjCOZ76wfVv9aw5eQrFxl5lmsfKQmu1Ulzl8XVdKyoiYRRbK/q+9feZw
/s+9MraNWUxWzaqvH6Nfz6mckkCZw9p7Fh8frppD+dzf/ZOTC8it4m8RQ6PP
3znKRTq2iAc+3asNY7SAWVKX+lLXIk4u99Uc4bAAkuWI3tn6JRQ9GPFec4sF
yNn6vyoIW0GfpRcmOyQt4CMfd+DD/hV8ldBSJSZtAQIdw55SVqsItVKVG4oW
kGCqst9jYxVve5AM51UswOdV3eUSlzX8uXCqfFjDAjKDlPdQctbQT+F9WZOB
BRwQXbtTZEHBkppB3Q8mFnBtUnvjJ50PNty4S0vAAmzfHnF0+kZB23ltnZeW
FnCXOh3Hxk7FB3EexSnWFlBrt1PwJ4Ge/3dc10qwt4AFrU2vM4KoqIi5RZGO
FmAlUpLkkk7FINc2jQvOFvCmbi2q4wsV38+uFpx0tYDVq7dfik9SsWzw19si
TwvYxGVTtYubhoW/i3HVxwLOnvT5uE2ehjkNifXEoxbw6OLo4n1DGma8P9US
c5I+b8sK8TGJhqmFtr+/n7IAlck6aUW6Pzx8rtCzJcgCYqNmGkzodfwjlpFD
FyzgyYnjdr/p10fH9E3nXKKfT/ZfoND7XQurXpq9agESCptWCujrXTqTsm54
3QLayEeTGXhoGHw4lC3ylgW4bDC1Uej7PbV/P29DrAUE+e6tL/5M5wNrLVHB
RAuQ6hrqNntCRR9jPin3BxYwbvNttfQ4Fd3UJndkJNPnGzmZoqdO5w3pr6rj
qRbgTdF63TtDQXvhbF2tZxbgwU/i/pNHQatN100vZVnAuflHbyyOUNBgysSB
M98Cpo0++MnWrKFm75b9Tm8sQDDr0dDCsTVU+rHk+aTMAhaNHW0X2ddQsqIw
QAktoJeR45MnYRVF8+4EB9VZwOcukr1++wryp/mFVdZbgOcd/kMKR1eQKUou
zraV3m9GrsI6bBlHHZNf+fVZQKJo8XbGW4vYb3G++M2QBXx1ylEeZV5Esp5T
1dqYBUTv0RkVCl/AZgnub7fnLMBNtTDF7+w8Fo+Gj+cyW8KgdSHX3d2zmEf2
nJvbZAlB3jqZAp9nMLvZcM2I2xJSyN2tlmYzmFwyz/FN2BJO9V9tnTsyjVcj
ju+c2GEJD76PKvUcHMfQc5aa2kqW8MOG40XJiTE8e0za8LKaJdxr21OSfHEU
fe3J1lz6luA7+LroVcEwHiSUO+4ztgTd0un53p9D6KL10DWFYAliBoRUDZYh
tBHbc0LZ2hK83k4arV0aQHMulcBz9pbg8/5A9P6P/Wiyzh5a5WgJ31Te9cVt
7kfd2aFw5v2WYEq0fMF8vg/VBmtv2blZQsh39BXt6kXF32kJ9w9awvPSv18k
HHtRuiEsiXzIEhJvlD9rSu1B8fduabLHLIHG9EsrvLAbhQv1Xvj7WcKOHImF
H+Qu9GY4Vpl22hJ+72o4cFWmC3MdHzb9CLKEyAjzM00RnbiQ/rF3Uwj9fDaU
hrYuk5EwOz9vfNkSwuUbYkqiyHibKLspMNwSJO3cGH6rkLH9rpN45nVL2G3U
6Fk82YHb+q+p/rllCdO3bk6f+tSBflpFwB1nCQITInz//z9HaWTvPkik7/9q
ad6nDx3I8IPvePADS9B680Pt6FAH2soSLr1MtoTHOQFCw9JkfHju9J3OVEsI
Nq/nVQwhY2/df+n8zyyhpINLgzJIRiXhpmLLLEu4KSBGkvXvxPO+1M+hOfR+
G2+8XTi6sKZEuSPvtSVk8n2LM8Eu5GL1mOotsgSbaSOnoLhudNl/m0GkzBL0
3PafjwrswfSsCiGbSkvwsC5xC9PtxYnFUfkr1ZYgjJG96e97UY8kZlRUawlp
NINBX8c+jHi0y2HosyXMPkh7GjLVh6L62eccWizhr4R3jKLVAB669fPmtR+W
UGb/iJ9jYwDzfrM8Kf1tCRYTnFvefxhEYuiRGsleSyguq3Kf8h7GgIrtPNMz
lrCmS1B9NDeGbzkct8ssWkLvSIK59/A4MrmHa7usWkILCgmp9Exg0lqXWzWj
FeRfsHmX0zWFtcYp2fGCVjB9uGRh78YM8sQ1VNSKWsFnYd/06KhZdO1cbVwS
twL7wJPfGbnncCrMdd5L1gqCTeDnPbF5FKsWAXUdK3CN3j4irriIR3it9h0x
sILn8oGm+14uYr5X8LEkEyuQFS8qi5JfQouNtrgNS/p6s8rydXQ+id/DlK5t
YwVG1gzvSfeW8U+aZvFxBysgjL5bKGVdwdOQ+LdlvxU06I3xutP9pTwRJ5nd
rcCWh4VDxG4VmfumN/S9rEByZF77S8EqJl9zkE8/ZgUfvj6VNA5Yw4HvYYbt
flbg1Snz817dGqrJ5Nmzn7EC9pKKEUFRCtbVcp4LDLGCTfZ7iv+8oqDGXIeT
52Ur+LQY5nZxnM4j0q+0rMOt4ErWuRP75ajItfeyoM51K5jrGRHa60bF0Ai7
uW23rOC8RFCXUwwVhwu2tnHFWoFwpuoPixIq7uuZKFqOtwKdY0kyfB1UrOF9
d3fgnhWsc7wlZ6xRUc0s7mzLIysIjyNJ/ROhYcopz71VT6zgiWn0xrAyDdn/
U9F88ZReH37aHE7nkQuNVP77GVYgbjXyXxGdRwYojTNXs63A8a+BeAjdTxyV
/2v1y7WCWiVh1yZ6Xe1+qtAl3wqeXeHzLaHziPJt00TzN1bQdFE4VI3OI8kV
PIFqZVawWPu5Eeg8wjbWtUe80goMorpX5sRoeE4sX52t2grquhtV99B5pHfX
Vb65D1aQ8pHL7XA3FXeH7P7X9ckKHL5MZBtXULEqW6rl61crqLhmJTQVT/fb
X9P5pU1WsDciafi2NxUfsWL8s+9W8MBD8JeyMhWZdRNO3/lpBfdfiqiOzVIw
0Nd798W/VqBtzr6nu5iC3ffV1Y52WUG1+oTIzrMULJ9rmTIZou/3e/wisXsN
5WXSmxTHrMC5neG5S/wa3t8b+Fp4ygrKa3n+ORit4elC/lOTC1bQdkp6c/TN
Vezs6bX/s2IFFL4bFtIKq2jDV6TykUp/npYzCm0+rqDc6b2TKSwk4BFnIm9a
XMa/yvf87YRJIHncwO+L7hJavhDyy9UmwRfm53dTfefwza8Bm0f6JDB7QXCW
H5nFbWwlOyONSSC3ekmk6uQsrvk6j7lZkEBX/OLFpTMzWCDz8ATHPhLk939I
ucQ7hRJOR60XXUhQnyhT6yA9ibev6Sr2uZNAyTR0y4j+BPr2/hwpP0yC6ZHe
y0pBYyj+VPT4iSASHPI6E/Rafhj1FFJbXl4gAXVoVt5l3xA6FUobjF0iAXFT
pQQpehBja1U4/K6TIPmTgFst9wC+tHtzNvcWCRpSZVvlDvbjx3b9jvFYEqgJ
aW+6/LYPqcPmr/wfkGAr4cjNoNheFAv8IpSXTAK3j7/U37P2os6qQ9hkKgka
Q2+8ShXtQcfIH4Mqz0hw9kTDx3aDbjzF5eZwKosEdmVeUc+CuvD2g+7S1zkk
uBNmv+3sx07MlvSVmn5NggDGxoYXap1Ymz12U+0NCYI4TygnF5GxW/3Mv9Nl
JHhm92zotgMZ18oXDhRUkuDdjePHypjIKGp+qeZfNQk+p//g3PW9A7W+bShq
1JFgx2jwA5eKDtzjHHU3sJ4EuadbXy1U0vmii3Ot8BsJxOvUSVK/OjD6WOLh
2RYSxN8u2PKZk4yZ/0S+abaTYKx57WijKxlrQlO0g/6QYORbCNOmGjJ2Mkqn
vukkwdeO6w2GdN5YvZ3NMt9LgsLJHh6pv50oKqxySnuIBFWKT9o8bneh1n9F
P8+NkUDK+uWlxH3duFte36xkij6PeO2qtQ6d1wreZS/MkuDPlH41s2gvPv9Q
H3J+jQR8z9scVNT7sMbWobd0nQSKNsfZf3/rw84fbdZLTLugylRboD6oH4WH
u7aEcO0C4w/anqtdA6hx5kjkW75dELVbyfH0s0F0WBkdX/4fRdcdj+X7hWWk
pSJUyCgU0TAzyiHb6/VuUiShlBKpUFlJA6WQlFEqqXxLw0h0CmkZGS2vvfee
79Dv+f35fO7nfu5zrnPd5zrXx+fjXWUF5fc9xK4f68KoJZPvAuWsQLfxSdUC
+R7MiA9SfqtoBfrcy3n7F/Tie7l/MXPKVvD3yqEj4QO9OLNliWuwphVQO5LK
uDX9eJiuKHBulxVotKWFXv4zjJGNjw4XmVnB56PLxZvbR/Ce5+YanqUVKNfv
W1ByZhT/ntHLOO9gBZ4hrPicqDG0TSGZh7pZwS1yYCP50QR6qdRmo4cVvL7o
lLR/8yRGPHeUEvC2gqNVh4/p5kziuw/u3WF+VrAxtJQskjuFGl2BlyMirKDl
16FAeDCDR+3Ti4OjrOBqcmxM14pZfJr7adz/qhXsWnYmLDZoFjdFSbgcvGkF
l+UxYfXuOTw0vOPm3ltW0PPppt+tjDnMZO3/TL9jBYel1v6jzs/hho3Z280z
rMDr2zqdCsJ/uF+v9TLOtIIUESVPvTkO3puZvavz1AqeLSU90THnYst+hRqN
51bgZ1n7/f5VLsp/sVio8soKbHkPj+2t4KLLNh+jdXlW8CHOdwYW8zDl9s0T
UoVW8MimOUzHlIdsgbePxN5bQd+2mlCZAB7KeLc0iJRYgfbx6a6/94l5vEZk
5fwnK9AsddLY942Htw00LKa/WkHmC3fX2CEe/r5PCx6utAJBa621+5byUXpJ
0IvuGiugJNxufbuBj0z/9M7mn1YwDTqBd/T4mNDwae3vv1Yg8S3p0+RuPtaa
DZKrm6xgqo4tX2LHR/FnEpGf26wgvqL/8f//fkFZZfAWu6zgTeqcxxNbwp+c
3T+c32cFExmvy0tN+VjZcXFDzpAVzBXc8qFp83EZKdspa8wKFp6W19unwEe7
N7Wx96as4JNPxOYBET5elZsruT1nBceMO3OX9vDwa6TCbBzfCs5I2ItWlvBw
0ZCF5pUF1iAtsEzANJmHVkwf93ARayjPv7z23BEeRhXfTApabA3epd8YiXo8
/KTytsJPzBrmwncYZPK5KHytZcERcWu4MpP4+xtycfe0iL67lDVIHlv5UOk8
FyNcNXyc11rDhiXq+77rEv5xS9AvWyVrCFmclZGZzMFdSelLd6tYg3bzshUq
Fhw89+8TGKlZw3cFz6nrg3PIqZZ4tnm7NSTwrixp3DqH0yeyQ5eZWoNhbZxq
VOwM6v6tfSNsYQ1irSG/49fNYIDpXB/P2hrOn9r8XPbZNI6LWzKGKNbg0/Mw
/BxO4fCrlk1VbtYgV+MyNVQ3gV2TErXXw6xh2Z4XEgolI3i6MFoiINIahJed
MLlUNYwLw4TpTpetoa/uWKg7Ma+pLp2uU4yzhlnw9DYQHsTDSn9/vky3hvmy
nX3hEb04202VvvWAyOeLxY+M5z14OfsbK/ixNRjlkgcSW7vxiX7Rb7MX1uDw
4uDbU45daMjXWbPxtTXElgnGyaV24reS/5yW5lvDz3KW8uL+Duy3T/9b994a
cPpwktDddgxetUamoMQaUvWl+S/+teGSv3HOKeXWwOSlf232acM7aYvvhn2z
ButTu2R/tbfiZo8ItkeVNezNp4f+OtCKRWpcWZtaa8gi55QZ1bcgaeTkPs1f
1lCn6TH9eaYZG98Mpog3EHjlLvj9bksz+gR7Nk01Ee8792YFBDUhz6R5XUOb
NfwJ6p22+dOIMSKOru+7rOHFHlpolF0jyn2vTsvos4bs+UGF43Vs/C/OuiVq
yBoedO76uuMEG3exPiocHbOGMpvqMqn1bKySNXRzmLKGtfdvyKn3NaBr26t7
2nPWkOeixI8j/Mhw5ua21XxraPNzYTsTfiTE56EST8AGPgVxLl1734DLtda5
twrbQI95Wc8mdgOmzSRmlC0i1neOLZETY+PW4uUdWcts4PzBglAKg9CXiEsb
YlfagIOxfdnDHDZSrAU8/CRt4BR3U/WgUiO2igU9ZK6xgXrH3a4TjxvxRN1Y
p4GcDehXjv0XaNaEAslHVOQViff/bKvTHmvCONcOT0FlG4gb9Neufd2Misr7
Mrs32kAHN8V95koLvuyr7/622QaUn+2wTzdoRbMX9htfbLWB/WFle1PyW7E2
oPxQvLYNdOHWl/m72nD8X37vXiMbsD94zs78UDtGfNqmBiY28OHYLTO1RR0o
Ef3EW3m3DSipCa2QfNmB2tJ3+wdtbcB/7cxw3touDNAIGTzvbAPm9zRmk4x7
UXh8WsPd1QaEVn4fU5fsw4R832OW7jaw3Lx2Wc9oH+aaHRhefsQGQpc0X9Er
GMBpJ/PR9CAb2JXRcW+3/wjqBvq//XPeBgzd1XaJE348IOlehHgEEV+GtTKn
dBQnfvIkL1y1gYHXh5/F1ozhKC3XwOuuDfTdrfwaOTCBW/07BNPTbeAZ3WDx
8hOTePyGeMXvBzbwJGzvE8OJSRysPuZqk20Db388LXaenMI+kuoFjWIbEFh+
g8L9O4ObfBgkz4820FaC9Fa7WTwcHSGV9skGJkcFHpsVzmL31+bHK6psIK1Q
Uys6eg5V+pb5WdcS8dyIGuQNzaHHIiPD8F82YMYXlRAicbDdMqlivNkG/lkz
ivmEvih5fUrc3EHwQVvQ/YYNF90uTrh69NjAUbOB1pl4Lt57qLQpdcAG6Jrw
XfQvoT+lDmM/R2zgZsDGZ3fW8FC+43zh8kkC7yyTtbE0HroKZl+wmrUBK2n6
j/dRPExVaiCF8WxghE9BiVweNsIi6bcCtpCaDmt9m3go66bXMiZsC5s37tpf
/I+HzqEeWeqLbUECq8/2y/KJ+3zT76CYLYxLeHzt3s7Hv8UfDFPEbWGfasXU
I0IP1jQNC/2UsoWKp4omCoSeOPHkKsVkbOEHP/WEPZmPSbJ2tyzlbWFwgUvu
FmL9l2HQ/tD1thDfNP6xjNgv5fx4U4GqLZReihmR1OIjI+jn2Ki6LSxYgO0b
5fgYf1vondpWW9hRuOnvYgFCv/K3R7pr2wJK0c5+I+IX/73f/q6+Lfx0y2af
I/KjTMdK1xvZQpt82CH9SzyMkypqWQa2oOz5aWgVnYfVOv1ZFua2EFvx7+TW
tTxczljjH2JtCxGUk9ufEviST1oa5ZNsQTQkLepxAhcrXmZUbmLawkHvrnfl
HA4urflx68AeW2CfjbLblclB29H5/XdcbIFR5Z7ZQdT3y5a940u9bME794tH
eMwcipKvvDM/YgtfOQX9nSpzaHksP/L8cVvgkYxtSO9m8dOzVatHTtvC59R4
aWn2DJZsqjCqvWQLh41BK25qCpU33q0pibaF9vItsjdDpjBK5cih19dtoYRy
QadNZApt1i+KT0iyhVvr11RRV07iD1nzftZjW1i6PkZliew4asmsCrN6Zgss
+uEgXsoYJqxpl9rxwhZy3022rlMg/L1UmOnafFt4oxRe36Y8ii3Li26zy23B
Z9LJc2XwIIJY9JaKb7aQFNV/bu21AcxY6lxWVGULK9UoGwwy+9Fr0exI6i9i
f4tM8dnOXvyy8PPFaw228PSC1o/Apb2oLnJLNrTZFra+nTeGHT04vEDHyq3b
FsKiTs2UPexCioBQE6XfFpjaT2Ytujrx1XyNv+mwLYRwwqlrNDvxFNc3bf00
gceKmI8S9e34a26XzioOgadQhkS7djvumBX7JjRvC88iKzZTUwj/MvlsqlPE
Do7ezBXfdrkVXSeCo38utgPRwaOTKsta8cOYjVK5mB0ImDT8jtVuwfWja/Lz
xO0gqdD6VqJ7M14Y7iE9lrKD/GB17udHTdg5mNeetNYO8hhJb8P4jWg5cDHw
8jo78L1775z4kUbM6mMsD1Kygww90/KPA2xc0rvhobeKHdj+vfe9KoKNPt3j
Bs5qdrB46e8TR7cSetP5sdpW0w4uXRxU/jDWgNs64jyNttvBjMGKP/1fG/BG
237uZl07+N3YXT1P6M14y5YbcgZ2INRsXiVc1ICMZr6q2E47GNZ3u8T52YB5
jRVFfLCDryYbZ+pE2LiGfZc2bG4Hpw0k3ILs2Bj890hvs7Ud+NelKn/NJPzM
b4OQapIdcFqPGyetbsRdvxZJfqDYQddaxcPZqY2YXv/7SQ6DWKcJqX7ZQehN
XabJfSc7+HkhiZ3W24TuNad+3thnB6QAlQB2djOWVZsfjXCzAy/7nS/lL7ag
atWqBSc97ODmwq7foTta8XJF+62Dh+2AR90lsrCgFfu/vdRg+NhBeu3GRZ3Q
hs8/OzjpBtjB8y6ze8nH2nFlufywSiBRnxeL9rWs7ED/sqEL0ufsoNY+LWJP
UQfqfox+MXOByM92Y/od9S60XLuyyviyHUgZWA2Y87uQ5ZcwGB5jB9L/RCZ6
fndjoFKq2rJEO1BtO2W9/kEvFoY/f6CYSdRvRs33ewTBb7OaJJsvdtB2g89V
DBhH6h1m3rUKO7gz7mp6hjeO7uN/6+t+2AGW/wwxjpzACxnt4q5/7cBpgiTU
EjeJ5YKT0f79dvAj0F9D/9Y0/nYOfJo/bAfk/KL1+eIz2PuK94U3bgfXH9mn
0a7O4OKDIgsvce2g8Va+7He/WZR5d0W54p8dxD8dN1FunUX1Vct3iwuTYMug
wckbtnNIKpUOu7uMBM9+hwgXSHDQRfZuWutKElxxz2T+8+Xg8ZMKxSpSJPB5
Usc//YWDId8fsI+sJYF6dmvQoCwXr2/YxHmxjgQyd1sPbjtC6MnZ7DVTSiSQ
XBi/Qvo1F3PqtukbqpIgqHbnyMlpLn7cnMsMVSdB6MHisg06PKy9YBBQtoUE
U9tfWAn68LCDXXxzsTYJTozeezWSysNJbbOXZH1i/fy1m9VfeSgcU14db0QC
Rx+LzssjPJTqtB3+Y0ICq/XyxgtX8FHVuHqZvDkJJneE3tDdxEe9BPrmg9Yk
YHt03F5kxEerwd82WSQSUP8TvR9gReiJ+b7DQxQSdPtvj/Yn/Il3SmuUFpN4
36yka57Ex+BJj0dn9pAgPuG2oMz//38Jqa+0yIUEI8dkaz7v4OPdh8faF7iT
YED/zJ8VKnzM5o0JWHmRgKVzaC9/CR+LGKcVYo6QQHdnuFZ6Pw8rszk7a46T
YLRQuF60jIfNwqH7pE+S4ILHdz37JB4O7xM6u/cMCb6+cvp52YOH/95cSr53
lgQb6iH192YerhRbVtAVSuDd6MfeM8RFRc+4X+qRJPBIfqGm/YSL24slp3wv
k6DoxSenq/u5aCaVvCo3hgQmi5xcrqzk4sFP9ykmiSSwPTc/rHuQg+XBgcEn
kklg7R7+W1SUg5u2OTy8n0qCFYevmZ/InMPBO7wZoUwSVLZ6LGH/mcWAE47p
X/JIIHWDLHBCYgZ/qWz5OldIgvn11klGydO4gy08oY4kSDVreRi6bhp5Fq8s
Yz8T+Zx0lotQmMJIWbFh6h8SrLY6XqMsPoHdPzpWX2gkgdgCg3Mu0eNoHVVo
+qaVBDM31IKtRcZx2dihROk+EnTQmgb2zo1iYnmJMXuOBHuD94Ry64dw9myy
17J5EugclPiYVD+IzttPxO0UtIeaV1e9lP4MoHzKus70JfZQpemroDLUh5l+
gdEesvZw7+GmHz4u3bhoo0NuooI9UK9pPRaI7sIjjSot5RvsgZK+SDHiQydu
sarTUtOwh5yH9V0LLTowjvdkn/M2e2A2ZR9rSGjH8ZdhUdE69nDpzIS88XAb
5sttaRgytoed//3ZJYGtKFMrLKxgag9vZKWlNfVb8dwltibFwh6cp+/HWAS0
YLPxK8dwG3voPpN90TeuGWH8cvgre3s4xly7gVnahBmP9z/roNqDwA/qrUNi
TSjsovdTkmUPGZ2/Wxb7NqKXhNg/C2d7+FglMx/fy8Yvnzs2nXG1h9sCK7vI
wWxUP19Iy3K3h0nP+ptnlNkYo3Xj3F8ve1htuPnAzh7Cf/Qcylxy1B7Y4UJH
P5Y0ICV11w8jX3uYflUkvobQh1c0KY7PSXtQWzTeYlXWgJKLBjeknbGHVFUF
RZv+BjxdXGJffdYebITueYiqsfGvf/IZgTB7IOvEa7uFsdF404n72yPtYQ93
xGTDKBvTmiy/u1+2hw0NV3dLBjaiQPy6qfgYewgXrNfuXk30f+tJ+U9x9sDb
j97m1U1Yxv9mPZ1gD2sEMww/pzaj6uv7/huT7eEVM+P6v4gWvHw4MMUp1R4e
h16S1jch+v86h/Ir9+3h7fINKz99bkXfV+VF/o+I+j+UiHxEacNJy12v9z6x
B76Ug71fexvyfTXvab60B4e5r4tfKHRghPCjW9K5BH7ja8OvfOvAhclysf8K
7OHE0i8HFM934sqSpcE1H+wh892KcbXZLkxkXThRWGYPvb6193uwG2UGOF4P
vtiDurNj7UxsD26Q7Kef+mEPPY2fuRFGfajn9UVzbas9xM3fPP/nxyC+45go
C3baQ8xiszP1OIRwPV9moMceWHX6Td9eDqNNQaZo8QiB/660+qPkUdy35GKb
2z97eGZv4WdpOo7hz00Ts+TJMPdsKldDYhoX7n4bfWM9GaQW1R1ovjiNV39v
iwhWJYP61i0LvGamMUFA0Ze0hQxHjsYcUKibwTWJSZ66WmS4SfFW7DWexVS1
Ffvk9ciQk7hpc+6DWcykzVuP7iSDtng+7/ahOdzcc8rkrykZxP37DWllc5hz
dki3xIIMnVW+7xjrOPj2YeP6BHsyGOmaUWJLObjLgLH2PJUMVeJuUgFE/ymp
/L7Ci0mGP0ORNJE9xPw7XcjTdyHDigMV5umNXKRGa00oHiC+NzO9zns1D38p
PO1b7EkGtiz1x357wj+8UWodP0yGq8HbO7xDeNhinfyL7UOGsXcxab5PeejR
tLKy7AQZPPK+mu6r4WGv3+XS/wLIUBjcPSE3wcNjCwUKbwWSYbf3f9X3Cb0Y
v3MmJ/QcGaYnVgs1qfLxzNaRzMNhZJCt2pJeSvR3XqlXKjWSDNQE2jTJgo9h
Ts3xhpfJMETfvP4koQ8iQ8yrG2LIkLJLKFuL8CNXwyvDlsUR+/WWfbhqy8fl
0hZnpuLJsHLul8p5wo/EPy061pxEhm0WbVuWaxP+xkTH4/NdMtyovJ1jrsBH
kuaBDuF7ZKCFvDhVKcTHUNlr7mYPyfDJkSKh0s7DV4vftYVmkaEptv64ayEP
u2d63IqzybB/Q0DH9RgeynRLtnJyyHBl64BqnRMPyfWm+3fkkkHE1JZuocDD
iJLjzafekiEprfTtwlYu5ubcdXldTIYf6oYthne52Jv2pXH0IxnK/u08tIjK
RbnYqb1byskwwMhdkLyAi5HeDs5Pqsjg2y/6tYDOwQLHc3+7a8lg+8Lw8ZOp
ORyweOKk/JsMKl9yXyvGzyFtvZBjegsZbhsvsgz/OItRK7f9auwgg89Dnyut
tFl8O7+PKdNLhmtHKk1ets6gIjuPnjhKhu8XN8c+GZ/GkfgjlOgFDvBOq9bK
a2YSY0Rqbc5scICvUaedkwh//mFi/subjQ4gWVu0RmYn4dfbNluPb3YA39EH
C7V8R9D5/UXLYzoOsMjQ3/zYgSFUO2Ow+6CFAxg0PGY2ne7DfZ5eJfdsHOBk
sfW+zCu9GEePN222d4DxnBXPmjJ6cHbrkMkelgOojY3rJvd3oYa8DN5ydgCH
HVKTkjJduH+Z1a56VwcQzRH7OkjtxPLee8YOhxzgka6FxvHGduT8qnwXc9QB
/OX8aX1b23HLJ47hN18HcFkbuMIjtg3dX28sFA1wgODlwlSDqVZMvM8wsAh0
gCBoqH9/qBW/XA8viDjnAHl6A2KXv7Ug7/xz/Q9hDnB9i/u/DY3NuM2HnceP
dADXxUpJf4Sb0cN5kZ7RFQcwaxh9LGfRhLetdXMDYx0gZOnUfldi/v6u566T
d8MBqJERl+bEGnFe+frriUQHkNFUWWqaxEatVUVa2+84AOv1hj2nDNjotaDv
5fE0BzAX09ernGzAOyNS27MzHEBk5IX9McJPVDWZ5fRlOoDnmj8PfQm9WFDh
u3XjMwLfxM39je8b0Cl551m5Fw6weSjR9W1jAz73WvpZ/DVRD+Yys6cr2Sis
81dCNN8BaAqbxhOd2ei84LErr9AByEqN+nsK2ZhTFfB07L0D3LqtElG6tREX
pphNd5c4gApzZDKlsBH3ea80ayx3APV9unP3nJvwlV5zbM03B1h7VGVH+Ipm
XCSc/be8ygGYq6NVuv40o2tNkEpRrQMkXpLdfCSvBd+kWfm9/OUA908JjtTQ
W3Gpj1RxZoMDaBr+Xbn8Vyu6G3QsSmkmzi9sKHhyoA0LFr5k3Gh3gA1uZdfc
ptvQ4z5p8Gy/A0gt+GE2a9CBhcdldvgNO4C4TmS5YW8HrjTuveA1TjyvUmvf
m9aJxb8uyFI5BN/yA6tqFLtxaZSLyioRCgz+Obtu+GQf5vmYfxcTpcBPQUmp
h6x+dKdv9lu0mAKRAtXvJHYNYIHiXBF/GQUWGsQP0NYOoce7BEavJAUsNk2e
Mw0exRUZZznt0hQIVb64V2Z2FAsvu99rWkMB6uFJt5Onx3Ala9tgrRwFHrX+
YT0/OY7Fo98vFCtT4OrHzV8ivCfx8O9XagWqFOjbqaZ7p3MSJd8nV7/aRIHr
yWKylq5TeCT6kGyWBgVyaoZfHCNNo7Sq0OubOhSQb1396qXYLH5c1u8Uq0eB
EpnqjnVnZtFn4sf8pR0U+HhkZb1r0yyWfEizPW9MgY6T1Z630+fw2OOLo2d2
UWAoe93wdu4crrnmc8sfKODAemLYTuOg717D9kPmFAjSMQpqmuKgjJnSZXdL
CvwReJ/6B7hYvmnRFhdrChwTEZG1u8RFvxUjdY62FFA+b3FW4ivRv6Z/BtFI
FDgYVx29fCEPPzcWKdiTKWBVHHlUaRcP/UsffLKiUKDWJSRzqx8P1z29etSM
RoFVYZ8tFNN5+CXOT3wngwKle5orGz/zUC5zQbEmiwKbIi4/f0bM8yfe3Tgs
70SBVLdINmsRH8t+KEmucKbAqXkv1x+KfFzd/RL/7aWAyI61L5bp8PEI1/To
qAsFGmiUWkEzPr5fWSvdtp8CMR0l8tmEXkioupfUHKDAkv/oN4QJPfEyGj9W
cpACmi923V1C6E0hJWLta08KBDLs16A5oS9eEp8eHKJAlHhbuAqhV+5nM04k
eFOgPHSkcjehZ3lxWnIXj1LgrccsYz2hd0sySz6fOkbgG8Ob+D7OQ9d3tJNe
vhTwDYlWIxN6+epHu7yjHwW6fb4EFRB6KtLt/83qJAWOvKknrwvloRNX8PSO
UxQ4H+/UGUfmYfbKeCW1MxTQnZ9zUl/LQwHVDZVrgyiQvCn9smALFxlGrwOX
nCXyLdy9RPceF7Mou5W55ygwbUYyaNnHRZ5nXfVACAVuLDTtVpTi4sO4CdXK
CAroxVy8PhHIwdlHF2qLI4n9Md8Fq5Q5SHq3KuR5FAU+JTW8qa2Yw4ku7Z/X
r1LAWv2ojKDEHJoZBVyg3aSAwRV5895TM3iLIrx1dwIFakaqn0yLzmC/Z0KD
9i0KOA9RlTOTpvFG3JvtUncokEB+XluUM4WtXZMtv+9TQEdSsu9b9QSGxp0y
dnlJxLsuq7a2ewRrH4n02r+mwGq5s6YpE8Oo+i4xflcuBX6Zfy8sFRzGqq7c
foW3BJ8SLZJG1QZR3mj6dvsHgh8iJvOfH/eiPyXKvK6EAu/U037G1vVguaf0
aGkZkc+ocOtSkR48Fqdn9egLgYf2MYlXwV344VH5eOI3CrweY3yLx06UfMdK
i6qgwMVfqax7SzuxqOv01KEfFJCz2SR6pbAdex4f6IqoJfj0O09HUrwdJY6Q
fqbWU2DKfXY62q8Nd2nofyr4RYFgT9Fu68ZW9B5Wyq37Q+QHd0mp1FZMyFn2
aLiBuJ+f1J9kP2jBD/4zCYubKPBfk4b+qcJmHNBpj1RuoUAXpcJdqrcJpWcq
AkzaKECK/qMtqNmEpm/zPZw7iHpEW/hkXGlEn7MZjFNdFBD0DPhInWfj7Z2x
5nE9FKh6R+ftjWZj6b8zOs/6KBC3PN9EcDsbhz+6K5cPUOD5DlmLUyMNKBNp
L9k2RIHK8bPHG8ob0MJyhzBvhALihb+uWhF6c2LRhknpcQI/RuK5Tx8a8O43
sc7tkwS/73cbOnQ0YHnMbB1pmgJKNzT5P+TZOE7uKD00S4Gvd778VT/JxnXi
Va8jOBSwp3h/0Whlo3VdwYNUHgUC4jUu3fVsxIDEB/EF8xTgTEqWawg1Ybrj
tQt1AlTw2bRty5WCJvy2NujksCAVAiZ3kkgXm3GaffDgYhEqDHjvKRf2bkGl
NDJdWZQK2gXSZne2tyLJzWC3yWIq3HeaPJb1thUD1ytrOy+lQkW48IUDpDZ8
0Ll8wykxKojvmrAI6GvDqsw5ibgVVBj2K3t9Ja4dVTZXj39aRYVN47VLLLgd
SBl6294qRYWfVxeJrn/fiedePKzlrqZCaO86ixNXurBWO/jVdjkqjBnaZSbr
92CYsYp/qjIVXPTrV5R39mOD/dmxAF0q9BldmfSPGkORlV5t1/WpcE0895KK
2Dhuq6XUPDWgwnv5irfV8eN4iaX6snUnFb4V3Pzcmj6BOvtrTpAsqVCwNpfa
9nQK9ysVuR2ypsLmNfcv7lQj/EdHJiXClgrUh9rPbB9NY9uhc9sKyFRQWDC7
1CtxBq+d2Di6wZEKI97S10PJc2ib4V4us4cKO5VEpu5kz6FofWqK+F4qhPhJ
OgiKcjBMX9LmnysVdB1ST4jmcNDY20Fh2o0KZraUKvo8B+fuXJ0adKdCKXxX
sLHmov+8QEaDFxVI29Ia7ldxccs248Caw1ToNfmRVbaEhwMHzpC/HKGC3RPj
R8vNeJgV/0oZfajQdPtmnmcA4Sc+DXFyjxP1ljjNy7nPQ6WZTTXZJ6jwR/rj
dvZXHjZv8nj8wJ8K0n/nb/8Y5OEd5/TzdwKI/PffOR22hI+OMQ30G6epoHXe
83jjej6hp1LqlwOp0P/6TtkfXT7+GKEIhAZToV2rzM1nNx9jlWJ+nTpH8Ecl
NTPOjo+29M/ZPiFUqN2qlmVK6MHCi4IXDoZRAV3Oq4cQ66V5O/c4R1CJ+Ski
wIrYH9YbuJUaSYXLBeqh94nvG8u8EbGOogIwKptuEufP2o2wd12mgvm/8BJl
Ir7c8+qvdK8S/BTzmHAn4vd/4XlZI4YK+jrqFXuJ/La03XPdcI0K5PiorYpE
/v0SjToycQS+vV8vlJ7k4WPz1UvFb1KBsfFw1l5TAq/TtDbRBCq86TVuFyDw
VcyKzZ9PpMKG6QW8ykouNv79EjuVRAUbhmNbSwwXk5cKewwmU2G3YP8g04qL
Er7BKxtSqVAcG/tx+jkHq+/ldv9Ip0Lc4xsLju7jYEztaNHn+1QQ2y6x45cI
B0X0DnnnPqKC28wQxdB+DksOZZhkP6ZC7ofiXTEDsxiS3CT14AkVfpnd40RF
zeIsj14S9x8V1vKZpkavCT0oBVmfXCK/Ti1L+6EpzJw6O+aeTwW/tev7Lp2e
woMb8z/veUuFEq8CGen5SWy8qhlgVUwF97ALm6UXT2IVVaZy/ScqmJ7K6VKW
GsfXLRMhf+uJ+t48JOMfMIjW768kc35RQcBRICXr1AA2pii8kf1LhTr131mv
z/ajsLNdn0sTFa7G3lh19nYv3t7RJhTaQoUi8QvbbHJ6UGP1Gfl7bQQ+ZsUD
y6u7kVGfQW/vokJ8dXfs2Q1d2Ptqx3GhXioorjo7KelM3P8bVZeV+6mQEEV1
vJJMzJ8nPB5YDFKh5WKltlV7Oz4kc4q9hqng+d154o1OO+7QjPtzaZQK0wdT
lfRutGHFUtWJrHEq+HoPPFKdbUW3/ndi3yapcM/MjdXk3YqTX6ibBqaJ/nFC
v4pV2YKXH/eYLZujgqVy6NTrpmaUizrvosmlgpVP2m4XkWbM8VgVSOYT/ciB
9PCreROa735y0/cfFfb++xzindKIf5RM/otbQIMhba3m5GWEXgj8/PxSiAYC
Du3a/yWyUaDlSHutCA18z0qe79FnY0KxAH9ClAYGFuLFZycacFPKrdVSS2gQ
52yTE/+lAYuCNbT0ltFAYz6z1JzQB8qeEpLjchpsO98edBcbsFPf6VDgShr8
G/+PGtfWgIHSw+HJEjRY0ZhQL7GOjcumLqQUStKgL+DzpXk/Nt6rW5vPlqZB
wqN10yqEPui8elHDW0MDNwGvjdaHGon50GJwnSwNuJd7e2VEm3CfL3uhyToa
XK4vCzLFJhy191NyU6CB1r3bp5jXmzFSQ9Q4XIkGzcILjVtOt+CapamsjA00
2H8sKeq5YStm92n5larQICjKukT+UyvWZ7pmiqjTYC78rBqD04aHL05+UNWg
ATs8dM2Rh+3IO3iVbbWFyE/KNJ3u1IHKSnkrr2rR4InZ41XCjZ146q7Y2eVG
xP59Jdl+lr24JPhB4tadNJDc6HmzQ6sP05wMcigmxHqt5oCfSj+WS3l23dxN
g/gkA8l3MoMoHVfksJpEg3qjc4mKsqOYF3lUWdGFBp++3b1zn0Xch1qqyrr9
RL7dCs7naydxgdIOVZkDxHr+QvEJ0hSSioU3SXrS4ECIsfU742n0WzqwSfwQ
DcoeHmQkvZzGW3tq1JZ702DXJb8kReUZbJtK3bzoGA12xxYN71kwiwvNIzVE
fGmQ+LXoUcrRWdS4eURT0I8GmTvfGL+qncXTW/S38gJosHPs3Hz0rTlMObdu
29xpGjws1fUYGZ/Dj9+Etk8H0sDJ9ATNw46Dyw790Bo9RwO141LcnyMc1MrN
0x4KIfj3Y+BYuBEXHYVSdfrDiPXVLrIpEVw8R72g2xNBg2ttV9iCn7iYke6t
1xlJnC/tV5kgSPiJIQf9tigaKFJ2Zmob8XDQSG9H82WCTwIi9qXHeShxVc6A
fZUGFyot96un8lD/j6Dhnxga2ATYtVLLebhPtc/w5zUaLLd+HKpC+ImIgGqj
2jgapDedvhJP+InHJbnG1TdpoF6qOB6jxMeKlSk7KxJo0JZ28qgI0d/HXSN2
fb1FAxUNR6sJwk+s/u+wSfltGrwIMS9yIPTBmEuG0jsEPh9fxksT+uFuo2v6
IYUGFqYtxy2J9ctJsmbFaTTYrLK+vJXY/1/Xgt2F9wg8vt953Ef4lVrt3t35
GTSgH3YQOEycPxteZf7mIQ0efONHehLxrfvxxuJlJg1OyD0NHu7joZn8Xcvn
WTQYaXCaFifyO+wTbvXsKQ06TZVy2lJ4GFt4yDormwbmgUsE/Ql8Xi0i2zx6
ToPnhS1Nfw15+IelY5uRQ4OYy6UftQh8+Q9l7NJf0cD2Xuh/t8u4uH5CgJTy
hgZJ0uZi6kR9rE17SMl5xP6cs29Eifodu15pf6uAiF84/CuDqG/B5jsOcUU0
6DFgLvxpy8GmoDBK7HsaiLCz/fcQ/BD84kW9+oG4b70zb0YS59DeQ5seWUaD
3sVpOksIfrWnVLACKwg+urkpem6YwUUDrxxPVdHgVnlk8++cadQ0SHby/0GD
TfeFds4aTWPgT09nn3oafJxYy1Mj+C+2/J+LWyNxP1QzxJqcJwj9uOZBb6bB
+f9eBhc1j+NTUfmjlq0Ev3b3KW13H0fLBTsDNTqJ+v9d/qf88BiGTAbfnB2g
QdrGW+l608NI8luSPDBEA1JZE0dbeBhlhpPTm0dosLZzX8tCqSHM6ynILpug
waHq021jMIDDDdPlcVwaZB1wGmFX9mCRY1TlBT5xnx/k6MTMd+PVeqn60/9o
cOSn8adDut2oWqXTtk+IDnJXo0Nk8ztx0rasx0GEDr+f+Zg9EezEks/0YTNR
OnQ7NohUMjvQ9aM/d9NSOniqHreRlWxHjV2CgnJidHgbrXunObQNOYU3Fq1Y
QQe94Ewj78lW/KKvtEJQnA4i9zJO8P1a8dabHKkpCTpcDzn8+OVYC3psB7le
STqYVMwwj0q0oNbz6vVsaTpoH+bzr1s2o8Dm/WpVa+iQdNayJOJaE1Y9Ht76
UYYOOker8m73N2KKcojeGzk6fO30Klfa24hH7ovtfCxPh8TD+y65Ef17h3zq
7juKdHga7rw+LpiNC+9q2Maup8OLgzNdrWpsrF9dRAlTpoMSN8c9cLgBMxLs
HE+q0iFt/R9WAKEvJ8TZLl6b6KDKuprbSejLrmtHPPao02HpyfsNdUUNuGwp
5whJgw7JXiMdxr8bsOHSFT+TLXTYRe6/JiXKxizhtYFa2+hAOvXbxYLExtPh
WSEqWnR4n/rfhexMNprP619co0O8vyboh4J0I0qc/Ry9VI8O0VVLy73vNGLr
DOvmvD4dnLtvtJK0m/BFQPftMQM6cEKCU0NamzBk7FR6pxEdfHmUqOf3m5F0
XCTz9046NGdNCYYReiMzkJD9zYTA//hdEautrdh7SPl1sSkdao4M7c3NbsW8
ztdvc3bTgZl7wthBuw0jD+z+8MCCDjc0LvytL2lDxb3ulVds6KA7FRd0jduO
w7/H6s7Z0SFvUI+r+bADixjhDb72dFDcQQqOY3SiE/leD5NKB1ejuwl237sw
zrR5wfo9dDieXrMwZWEf6h39QjLZS4dj5a2hLtN9yE54lbTPhQ7KejufFwz0
o2pvlGbSATrMCTtRJbsGseja1j3LjtBBbWJFu1v4KLoXrH2o5kPUc/qwWqfo
GIq2C41YHqeDLHNuYvTaGNJ0/0SG+9Phpv9X2aDUcexlh+VMB9Ph78enV4Te
TOI1kaPcVefp8LlokdAtvSnU3sq03B5Kh9Bbtu/25k9hSIRa49ELdGC4Fzi5
v5pG5exVG69cpMProqZxaY0Z/PqT75d5idjPaL/bnTGDkmq1om3RdHAr0SRV
E/NmIa2INh9Lh5XRLrzDE7O4/1xmqmwcHSw3lpEU9s3h0+pgbVYCHdSl18tx
FDlImfMIOXmLDgtTdVNzznFwar3D17jbdNBn7BfMquMgnN6w/3sKHao3xTYm
+3OxO13saW8acf/2r4swKuRi9NeZSZH7dBBKuZbmw+Pitok2kw0P6FDrWK27
yICHv+QqrsIjOvBexhwZ9OXhOcu8ny6P6RCZ1n+Rc4/wNyfuKZ59QvA9dMp4
dQUPy5OvHr39jA70uvMu6mM89CkNyMv9jw5WGvM7FVbyUWLIdUHdCzpsMzpz
tXMTH/OlbUijL+mw359x3MeIj/tAO0nsDR1uBW6+nm3FR8Ej69rV84j+8WJS
Is2eT/gtUU3rAjqwl7o830k82xePnfEspIPH2dG4aEtC37rZJRFFdMhIpJyJ
NuDj7ZXlYvfeE/W+YvbYXJWPuwxznIo/0IEfNtjzcRkfOw7eedBQQodAZnmw
+BAPL8dGDs+U0WHx6s8SFp8JP5N/3EDqM/H9W2pf/e7ysL7VKVLrK1Hff3by
Od48DFqyu9rhOx3EpE+MymrxUF5HU+ZYJR2M4MKW+kkulrms9rxaTdwfWsBG
7ksuHrm0IOdxDR12f5OGPG8urng5wCmro4P/grdFmnJcdBb+EPfvNx2+kfKt
BP05KLDlKVuugQ7D11+5vJfi4CPHBFXDRjo87zNunHwzh6NPDxcFtBL3h6pZ
8ax7FjeaPxg61k6HAfKrRsHwWXRtapI/1EmHMrFV17asmcXvK+jhe3rpEFCj
uL9m5wxmBuy03DVKhzPPOMVbfKbQZZfED1EBBoi1+jd3XRrDhN+kBQsEGXBH
xEC8cfEYfjtxSYsjxIAFvx9I2sSM4o4HvIRBUQaEL0/dN6M6gpKLevbUrGAA
s3HBov8ODqDdfaXob+IMeGO2++2Wc/0YYbivqHQVAw7f2yJASe7DEZ8a+bzV
DFh31DZ8U0cPfqt513FHgQFN9Kdf0j504oKj05IJSgw4n7tQJnlxJ+4Q3m4Z
u4EBX3evMmc5d+Dx1KNnolQY8JMx/9/m1+34SC8zK3QjA1T9SkqOEPrSWN36
N1CNAeujVyW4hbShhLfsUv/NDGge4BxljbVi2N24Yx5bifj/atDSu1swX+d7
mst2Ir/q5rRUkRYcrhT5wdJmADul+9OVHc2ocggWUHQZoLdo4Z3PocT8LnBW
y0afAe0hD8ReshsxPjn3oJkBA0ayHkwlkhrxm9ZogpERAw7tVa98V0v4kwr1
cp2dDEjKilFzPc5GfU/PGU0TBtwKW1XxnwIbj8+nb9poygBOEPfbj+4GfJjU
sEdxNxHPeb01HaUNyN4mFb3WggF3C+9kT+U1oMQ3hyIJKwYEJc1GL//QgDYH
rw4ttWFAGtU1Rq2lAcN4ZfIidgxYeKz7vL4kG/MT/znMkxhgHF1wVX4/G4e3
GIbPkBkwpXNYtxDZqPIl4NUohQEtadQAtm4j7jvwoqOPxoBfl15/sf7YiDc5
fZIdDAZIWq9zfn+gCb/GK1s2shjgfSReelia0FvN/Wd+OjHgsVvW59DWZtQr
T86qcmbAgdcOVPH3LfhwdvnSj64MePro08Xiv634atfDsE43BuTFJRiZ+7Xh
h0iDadGDDPDjVLIPrmrHppUebeRDRH1Xl5lPnerAQdYcy9+bAd/2MDxSdDuR
k3KtIvEoUV+dCzet5jtRWu1tfqMvAxIFugMbsrpR2ZesKeDPgCW/BI2qrvQQ
83tHxoYABjhEla9t8etFB9Pl144EMmCUzjYxZfbj5T0HPWbDGGBt3zfyZM8w
3kqf/St7gQGnd72gWnqM4MOuWAeTiwS/Tiyw+7hjFD/6FRhGXSH2BziteGs9
hpwrYuKSNxnQAN7h4kcncNGPjCj9BAZsMM164TY+gdLSO3jOtxggF/uv7kbg
JGpnuPfcv8MAstUfocNhU+hTmF+89QEDXs4O9BWdmsFgAXtt+iMGZO9+Sx4b
mMHLlu1Zpx8zYK1ymmSJ6yw+ql2WUPyMAf8JnHTXMZjDN2syFrf9xwDpNbcX
7rk3hyWu+qHCOQwo23AhS1GIg839B47YvSHwDtEJfVvIwcFtMy3H8xhw2fdh
hdIKLnJOxzBvFjAg6uz7I3tdubioWOl7biEDvCxNVhhkcXG1UD78LWLA0Vnj
y3GDXFS1IeXx3hN8X5dSaLiZhzrX2zYrfiTqXanctsqDmO9/nr6/u5QBn44t
DePe4iFFdtnqQ58IvlxRPVNfykPXA/djrn4m4m8vULhI+Bmfx3qCz78ygGs4
6DWzhI/BQ9/P1Hwn+o8dv3yNCh+vaB8YmqxkwJMeK9OGHUR/D5p2X/OD2P/r
6I1tRP/PxOg/RrUMSMhtWi1J6MMbESXy/noGKH0t6gojnkvs8kojfhH4tQ0W
nSb05ccNO4PMPwzY3MJaMWfIx5bfrc+/NjCA/3Hp/HJCn4bXnVYeamTA0PoT
B0uX8wn/vPTOyhYG2JfznimP8HDJ03srdNoIPh4s6jH/ysM1o7oXHTsY8PF1
2AcDwr+p6n3nBHcR/MtS85Q7ykPdc24n0noYMPb7X9BibcL/jaYN5PcR/eXi
yBKH6f//XleTV80AA1YFbvWRfsPFPQ2y7f1DDDhee3BHpA8XVzo4uwiPMsBd
WeQ7KnDxc+ntP+vGif2OYQcnKjkYsuM3XX+SAQe7TbRIZ4j6KjFsj8wywPn5
z4wtRXP44NbNTxc4DAiraTyp4DSHzktrIJXHgAf7mq2FRmfxy6S9/g8BJvSe
VqmPlpzFh5+tlPUWM6EioMnjoP407jWOSndYygRhpYcZ6W+nUOJlmYy3GBPc
85MOVP7/99DumIqniDPhsWCKyBrdSdx3zGh+gQwTIkk/a2kK4yi5auufSnUm
DLYp/vURGcTvl47RezSYsHZ/dPLmZQMYwXtWJbCVCaQzE09+re7H0a5Nn7S1
mdD457XRYujFx86HwF6XCXdT3DMSXHrQtfrROy99Jmgnb7u7KqIbKwrWv0o2
YsK7xrz1FW2deEHzgObrnUww0X3B61/XiYYZ6VkVJkxo32jx9LN7B45JN2/o
NmXCv5Rm+a857ZgVLZf+bzcTTmjmv6Euasf9Antl1loygXXRsa/Yuw2lTyUn
alkT539/y/T82YqVfb9XkmyZwBlruZ9s14qRrtIxniQmqErUnbRPbkGjOoZo
KJkJUtROpUcvm3HcKj7iNoUJ5RtvTr4l5u8nRTX8lzQmbPQ6tOyfahO6bV8Z
9J1BxHdxY3JDZCOuziRPdrKI8+9qzj/isLFKJtZ33okJChVq1/+7zMaL17/3
r97LhA3BdXNbt7LRWHiJ13YXAo87XSdcCT8yEWjdZrufCd9cjn7YV96AT4ei
9nkcYELdrptBpoQfOeD+6ff5g0w465XxeNXHBlzzW4ie5MkEy6CZ/dUdDVht
Z1aVc4gJxx/mGbgR+hT1IczmmzeBr0Sfa+ZJ4jxdLOs4yoTMdefe+xN+aeIJ
34R/jAnNJsJPr3g2ovG1mPvjvkywKBLpZc40YqS/rFCvH1H/CylpmNqEFayn
Hk0nie8v/O12xqkZJY0MymtPMcHg5HOrDRtbcJ/Cl41fzjChcOVdmxzhVnwk
5HilOIgJ6zemGx0IbUW9igBS1nmCb9PDOVfj2jAkR+h5aigTjlTcsQ5Tbcfy
hJsr4sOZcGvrEm/BT+3o6JJTe/4iE/7sjlwbJNOJgcMDTvRYJpzyEhAZWdeD
H2qDC62vM+HVyeg3G0d6cFH+YrldN5hwrTY5aGN5LyaHbmzZlMgEM5bejcYL
/Vi48qDnfAqBX8eL56A1jDytBr8n2UxI33vhjC53HM1Xe9elPWfC37hRt+9n
JjCGO6OTkMOEBq/FGtkTE7iuTGo25A0TlnK2Wx/oncRdTGoIo4gJNO2vDjtx
GqMMWlts3jNBn/LZqmLrDFat8zU1+cCEhIArRU2pM7i/O0ZYvYwJL88HkvP8
ZjHszJer/74zQebfY7/q8Tn8stdxcLKSCff3nCzl2nBwJXTb91czIUb20S/N
VA46KZ960VLDhC9yKXU7Bzl4f5Gw+M86JsSqur0W0edi/+BN/28/iftoNvn5
wHkuatUo1eNvJmRBtuo25GJwbo5u7l8mDIdZ+1AJ/1CSbJL0lM2EZ0ZOWlk6
RH8MqZpNb2KC666G8LWHeUhzd3FObGFCW+LvpzGEHtyxHHx3tY3g/zc9nwHk
YYf62XVhHUxI7l07rNTJQ40VS0JPdTEhZfmHWnkhPgZM3G490sME0YXPTevk
+Fj0e6OZWx8TWgtEu7S281G4KO8Bc4DI99FzUR3go7L9PZtTQ0wQcHy4b78t
H82br4wkjDBhR+G2yxpkPnr4nkx8M0bUe4XBvmQ7Pl4QcDGqnyDuy7sr+o/N
+Jhxw7JtYooJdP9npnu1Cf1Yv+3SqlkmTK7VXPV+HR/bX6/V1OYwYegxu5S9
gPArFkJ1NB7Rb3rmtpS18HD9r8FA/3kiH16W79V8Qg8P/ZK/KcCCy7SvhhZX
eOg+i2UvBVkwlvT+wXImD8OvPDlSI8wC7o7Pa4RleXhPJn7l2EIWLG7zs7dk
c/HDs3N5KxezwKE5YsdcIhcFqhwEKWIs2KjB9aRwOai43yDLdwULFnWMVdtl
Ev5vdD35ujgL2JIuUl4kDoZKTCdXSbFgQFfeuezqHM6zUrbby7Ogtd/lLO3X
DMr3Xvzto8gCzbrhS85uM7gryPd8zHoWOF64/mJPzzSev2v29bsqCzatSnjl
MDSFvJZeN9utLCh1t3jd1zqBcn61C49sJ9arPV76OE+gsWBR9hVtFkTa77DZ
XDeOZ5Wvz37RZ0H4W81TMaXEvHRYN84KWJC+/feWIMoIynDk9Q6ZseDuv6b6
AathNIxe1BhlzoIHOaxDiWZDGPQfe2O5NQv0c723/dk9gLNj4WhOZYHsjeLw
exd7cM2Fo54edBaEOOrUOWV24w5J5tJIJgvKigzWJFZ14Rm9TY6le1ig6L3H
56x+J976LM5v38uC6uzz40uCOjDPiZsh6MoCG7Lu197SdpwOrho2dWdBot6s
1/ozRP9fVpBwwIOI582heoPWVtRNvW8Y7sWCkhpLBWlGKzK2RLfeO8yChTs3
motltmAABkR9OMKC2M5l2Y8LmzGB4qrR6sOCC26i0mHdTfimzar233EWiLhe
z1qu3oT1/tsDFfxYIE4qbiy62IgTQrLyJidZYLlc9XvPHBsfCjOfGp5igdvN
uPx3sWxkiVzX0zvDAqOWJ9Nu+mwUXfi1ZHsQCz5pzsUKzjRgwUIhB82zLBBq
mSOabQN6i+5kbzpP4FdxNP2/ggaUWXTmkHIoC2rHup//LGzA74teTiiEs+DP
i1hR/boGPLd4IFT2AgvMHO+//bSAjZpLVJatvsgCf3+dv0cs2di8ZP9tiUss
KA7vfSR8n43XlyYrL7/CghvxkvFe4o0Iy+pyFkezwEQj4MKepEYcWya2UySW
Bd8PPcq5q9WEGWJWXwWus8DY/Oi71vYmpC8PZ/LiWBCh1i5c+7gZhVe8a5u5
yYKkDVz28vAWzF0xdWwigQXlpgr20vqt6LVyK2f4Fgtqen099+a34hfxBxLd
d1gg135xl2h9GwZJNKW1pbDA55yoRrtvO6qvWr25KY0FcbNpXXslOzBGMnp3
fQYLdrw8atx5qhN3Sn2qrn7IAkNJuo2FVhcOS/3b+z2TBfE/24b7prqQsvpk
QMlTFvyUvZQZfKMHJWX2Psp5xYIvMuRfR5cP4CeZxO3Zb1jg23X7Rv7cAJ6W
rS5+nMeCw9vsgsZ7B/GP3O5faYUEH2wHplxqhjFFYbNobAkLBJokJb1dx9Be
0TP+chkL1hleidBrGsN5xXSFyHIWaHw9KCi5bxzd1q/acfYbCyav7xJeuGcC
lVW4h71rCfy0mwwX2EzhTxXdKY96FrCiXp+K/jiFUaq+4W6/WLCehZbGO6ax
d2NHsmMDCzb4cVPUFGYwedM6VXojkc/V2ymT12bQVs3xFbmZBR+GPt0U4s1g
tvr3bxbtLDjPMTy8pnIWXTaLOJp2suAQ+VhK/rY5XK5h0mHczQK7Ebmwyrg5
PKH5mqvdz4Kom0PHMiw4qLRl6NLWQRZ0BkukL7rDwdotGyU3D7NgvmdKWKef
g7rb7mqsH2eB7vqJpSaEvlzbH/J+1SQL9p3XF4l/z8XeawcoItMsOP48zoTE
5aLZe/P26Rmi/saBwmRifk4Z2hjQO0fwq2Gy57wXD6flli5s4LLgo+Dd0tIE
HjqQhpO+81nQkqvzbvF7HmadrVEr/seCQW89O+N2Hgo+e/Pu+QJHKLrr6GJL
9O99DUn294Qc4fawkauKLB/zFp9tuSHiCLOVDpMftvJxpYGr3wVRR9hMyo1Y
ZcJH78OmQqcWO0LkA+8vUjaEPiQpJ3otdQTRCb3pEsJvyH0W3egk5ggxDaGz
a4jn09P9BTYrHOGhySvhNf/3HypVtkbijlDw0ni6xIiP6syXjRqrHKHRTMBQ
YTMfIyMTjstLOYJWYd4NHSk+Nr8+I7BytSM48Y3cxDg81O9wvrlgrSPc6E4+
k/eXh3ESu5QnZBzhR+NjOZM3POw3VcrrlHME5ljvvwJCb8z9hK1/yTuCqdtZ
3R3OPEy71/P3syLxvouzep0KD2ervx19u94Rgp9YpWQQ/o727z/+U2VH2Nrz
IPrjcy6KuAYoXdvkCJfbjrV7qHDRNdbxdai6I9zyt1dTb+BgQZGhhZ+GI9x8
axz24SoHfWQXeDO2OcJ1vRXM2ZY5LLft5FhoOUKZKdO/P3IOFYM/x+jrOMKS
HnIJWXUO6/7E5sjscISxyCUG6/fPouEtmdlWE0fwbnWf1ns+/b+Gyzwe6vQP
4CKiw9EW8VMrtSqqVY6VlM9uapFSjn2eLolCB62tsFFJWmclSqWEIncr1xbl
Y2c1riKSaoaZcR+FMZXBzPD7/v15Xs/r9byfz/VGZQ3TCF9HAo6tn94aCEXo
AVraB3cTyNmZWapwWoTPT07m7HImIDh6jJMlHsWTDZUNJoTA3tuv2ebTQmyN
2aE56UZAu3dw5xWjYTQuN8765E7gtyu6vglWQxg1+J1luweBtabdC2t3fUYr
O86BSi8Cqc8VM8+HD+JDJe+Mv/wI+IQlTtQs78OWzvTgB78TCI3K81lv34tK
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
       "]]}},
    AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
    Axes->{True, True},
    AxesLabel->{
      FormBox["\"t\"", TraditionalForm], 
      FormBox["\"y\"", TraditionalForm]},
    AxesOrigin->{0, -1.9000000000000001`},
    DisplayFunction->Identity,
    Frame->{{False, False}, {False, False}},
    FrameLabel->{{None, None}, {None, None}},
    FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
    GridLines->{None, None},
    GridLinesStyle->Directive[
      GrayLevel[0.5, 0.4]],
    Method->{
     "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
      AbsolutePointSize[6], "ScalingFunctions" -> None},
    PlotRange->{All, All},
    PlotRangeClipping->True,
    PlotRangePadding->{{
       Scaled[0.02], 
       Scaled[0.02]}, {
       Scaled[0.05], 
       Scaled[0.05]}},
    Ticks->{Automatic, Automatic}], ",", 
   GraphicsBox[{{}, {}, 
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1:eJwUWnk0lV8XNmfOPM/z7E6Ge7n3bPM8hGSqJEqSJEUqSRGRKD+phCRjkUhk
OEiRCkkppEllqswh9Pn+etdeZ5/n7P2svfbez1qvYsBBtyAWJiamBB4mpv9/
lS6u3cqVa2UwtezeOa60YmJzqJjrQHAeajGrqtjV+pG+5bPORY3gShQcFLmk
FMTW/I/tsSNf2kPkz+dAzM6hN3te/b2FIxijyqmSQwTfHc1vxdLK/+U/Rge2
E5azqEeaWXap6K1e6EBqCSwGGavnmnXLH91binmO3FxtAi9cvdLsteBKXtjb
g9re1IQoCt1ubsubG4wue4XYXiZpmZ+oah5oZ8j8yX+NSk/+atI40NA8NZ68
/ciVN0jArciUP629mWXzm9y5CwNISOcjW/i9l80SFIVPh86+R23nnw4JPutv
1vPerzgdM4SyDRqo57yHmy1jawPCDn1Ah5XuLuZ//9LsfYu5cGrvR9Tw0uN7
ce1Ys1FgUYRB5SeUS+FxW2373dy26HA5suwz+st77puy1HyzU/JMdfXtL6hM
6tFehtRy8zvpK/2z+V9RoJNSBcfSevPuCtMFYs4oOprmE6L4jQX/gi+ih658
Qypf0y9p93Pg6NfnDO9d+o5cHw2ct9/Kg1n36G77feEHGpV6c8mXJoDTlvqi
9JLHUHxG0USAvDCWSInOPnB2HPlzlm8b3SmGb8nK1d85NYEuYa6RGWYprHfv
8fvJmEmU940kqc0jh+vN961oHZ1C/XGtFxJBEVu+4ZcOOfQTkQN/bVauUcY9
e2tMSkN/odqxOG5qgBr2WfH2G9v7G9VvNnmx21ETRzw91XyZOI2Ics2WqxE6
uO5inzO5cho11mybe/lGH5srRR+MKJtB5ruF9zwvJOOkya5/ghqzKC9OtfZn
qQF+WSObXnV7FrV0vdvt9NQIe9k8vjedP4dcPcfPbzYwxbkCYmbpcvPIaNCD
w/0kA399H/xKP2cerbDzZG4NBBwWyj8bdmUBcd6xCdl92xzXGOyK5xddRCv7
PNdD6izw8nq1UMWlReT9OxRCGy0xo5PjlpPAH2Tu7ba96I4VPpvhTf554Q+i
3KWpWZ21xl0+dx6n8iwhK74MsxMMG7xZ5Z+7TvIS8mR6dvfWWxvs8XPL6HOO
ZZQau9vIw9YWX6stjNx/dhnRitnun75oiz+e+sPGw7KCHgWFaBWU2GIVO/v/
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
940yrs93b8X/A2HWaeg=
       "]]}},
    AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
    Axes->{True, True},
    AxesLabel->{
      FormBox["\"t\"", TraditionalForm], 
      FormBox["\"\[Theta]\"", TraditionalForm]},
    AxesOrigin->{0, 0},
    DisplayFunction->Identity,
    Frame->{{False, False}, {False, False}},
    FrameLabel->{{None, None}, {None, None}},
    FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
    GridLines->{None, None},
    GridLinesStyle->Directive[
      GrayLevel[0.5, 0.4]],
    Method->{
     "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
      AbsolutePointSize[6], "ScalingFunctions" -> None},
    PlotRange->{All, All},
    PlotRangeClipping->True,
    PlotRangePadding->{{
       Scaled[0.02], 
       Scaled[0.02]}, {
       Scaled[0.05], 
       Scaled[0.05]}},
    Ticks->{Automatic, Automatic}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.7152664373056173`*^9, {3.715266597415976*^9, 3.7152666065754423`*^9}, 
   3.715266739610051*^9, {3.715285091942085*^9, 3.715285116461512*^9}, 
   3.7152856430028954`*^9, 3.715285708763*^9, 3.7152857411974964`*^9, 
   3.715285793753952*^9, 3.7153628871927395`*^9, 3.7153629573039036`*^9, 
   3.715363003526906*^9, 3.715363048895875*^9, 3.715363132636359*^9, 
   3.715770740401744*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"{", 
   RowBox[{
    RowBox[{"ParametricPlot", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"X1", "[", "t", "]"}], ",", 
         RowBox[{"X2", "[", "t", "]"}]}], "}"}], "/.", "\[InvisibleSpace]", 
       "sol1"}], ",", 
      RowBox[{"{", 
       RowBox[{"t", ",", "0", ",", "T"}], "}"}], ",", 
      RowBox[{"AxesLabel", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"\"\<x\>\"", ",", "\"\<x'\>\""}], "}"}]}]}], "]"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"ParametricPlot", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"X3", "[", "t", "]"}], ",", 
         RowBox[{"X4", "[", "t", "]"}]}], "}"}], "/.", "\[InvisibleSpace]", 
       "sol1"}], ",", 
      RowBox[{"{", 
       RowBox[{"t", ",", "0", ",", "T"}], "}"}], ",", 
      RowBox[{"AxesLabel", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"\"\<y\>\"", ",", "\"\<y'\>\""}], "}"}]}]}], "]"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"ParametricPlot", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"X5", "[", "t", "]"}], ",", 
         RowBox[{"X6", "[", "t", "]"}]}], "}"}], "/.", "\[InvisibleSpace]", 
       "sol1"}], ",", 
      RowBox[{"{", 
       RowBox[{"t", ",", "0", ",", "T"}], "}"}], ",", 
      RowBox[{"AxesLabel", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"\"\<\[Theta]\>\"", ",", "\"\<\[Theta]'\>\""}], "}"}]}]}], 
     "]"}]}], "}"}], "\[IndentingNewLine]", 
  RowBox[{"(*", "DrawAnimation", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{"Animate", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"DrawSystem", "[", 
       RowBox[{
        SubscriptBox["x", "1"], ",", 
        SubscriptBox["y", "1"], ",", 
        SubscriptBox["x", "2"], ",", 
        SubscriptBox["y", "2"], ",", 
        SubscriptBox["x", "p"], ",", 
        SubscriptBox["y", "p"], ",", "\[Theta]p", ",", 
        SubscriptBox["w", "p"]}], "]"}], "[", 
      RowBox[{"[", "1", "]"}], "]"}], "/.", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             SubscriptBox["x", "p"], "->", 
             RowBox[{"X1", "[", "t", "]"}]}], "/.", "sol1"}], ")"}], "[", 
          RowBox[{"[", "1", "]"}], "]"}], ",", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             SubscriptBox["y", "p"], "->", 
             RowBox[{"X3", "[", "t", "]"}]}], "/.", "sol1"}], ")"}], "[", 
          RowBox[{"[", "1", "]"}], "]"}], ",", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"\[Theta]p", "->", 
             RowBox[{"X5", "[", "t", "]"}]}], "/.", "sol1"}], ")"}], "[", 
          RowBox[{"[", "1", "]"}], "]"}], ",", 
         RowBox[{
          SubscriptBox["x", "1"], "->", "0"}], ",", "\[IndentingNewLine]", 
         RowBox[{
          SubscriptBox["x", "2"], "->", 
          RowBox[{"2", " ", 
           SubscriptBox["w", "p"]}]}], ",", 
         RowBox[{
          SubscriptBox["y", "1"], "->", "0"}], ",", 
         RowBox[{
          SubscriptBox["y", "2"], "->", "0"}], ",", "NumericEquibInputs"}], 
        "}"}], "//", "Flatten"}], ")"}]}], 
    RowBox[{"(*", 
     RowBox[{"/.", "EquibInputConditions"}], "*)"}], "/.", 
    "NumericParametersTest"}], ",", 
   RowBox[{"{", 
    RowBox[{"t", ",", "0", ",", "T"}], "}"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.7151968713813367`*^9, 3.7151969007097683`*^9}, {
   3.71519698944118*^9, 3.7151970217035537`*^9}, {3.7152511387726035`*^9, 
   3.7152511523688965`*^9}, 3.7152512188736677`*^9, {3.7152512626228604`*^9, 
   3.7152512780146103`*^9}, {3.7152640524903307`*^9, 
   3.7152640590455008`*^9}, {3.7152640977274103`*^9, 3.7152641517096634`*^9}, 
   3.715264196061022*^9, {3.7152643599824553`*^9, 3.7152644064611177`*^9}, {
   3.715265504249199*^9, 3.715265607742456*^9}, {3.715265653946825*^9, 
   3.715265656570883*^9}, {3.7152656901205235`*^9, 3.715265705761154*^9}, {
   3.7152657462494707`*^9, 3.715265761777974*^9}, {3.7152658050299215`*^9, 
   3.71526583162175*^9}, {3.7152658688641443`*^9, 3.715265873316239*^9}, {
   3.7152659154247065`*^9, 3.7152659169016294`*^9}, {3.7152659595622597`*^9, 
   3.71526596009027*^9}, {3.7152662612388773`*^9, 3.715266278739915*^9}, {
   3.7152668379580574`*^9, 3.7152668389140773`*^9}, {3.715266904159856*^9, 
   3.7152669127909517`*^9}, {3.7153627834517813`*^9, 
   3.7153627841872683`*^9}, {3.715363285946103*^9, 3.715363326770894*^9}, {
   3.7153633889353848`*^9, 3.71536339863281*^9}, {3.715363429489255*^9, 
   3.7153634408657904`*^9}, {3.7153635089726486`*^9, 
   3.7153635156490707`*^9}, {3.715363563875682*^9, 3.7153635860853925`*^9}, 
   3.715770808320278*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   GraphicsBox[{{}, {}, 
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], FaceForm[Opacity[0.3]], LineBox[CompressedData["
1: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
ibH3y2EDrA/VU9zOVxpiiPWzjMqDWD8u761POaAXQ6rgu6kk1p++NevqCm9H
kZkBucLtWJ80LKjghOxI8ufJjQwFbuZ5cT4BdzMiiIKRZpUb1r/NMdfEhqLC
iELTqukUrJcZBY076vxCye1NEr/qsb5+3jAp5OoWQg6WVmXIY72WCA3sveUS
RC5kvHgehevb8/SaD37+gUSm8sXzNlwPX2LPE6UnBpATFkOp8bhejl4Rcklt
yI+YsfhZf8X1dfTPns3hW/3I2kUeDlPkpW3pshMRNCLIn/61kXm+xKYfAQ9H
fcm3M7pO+5FDr/JG1zr6kicsl1rLcX3vtXf350c/fMi6z2doO5DLrniLX1b2
IS79d+8UMfdPXP6Rc7ram6Q9bXoqjVzAXVToZ+ZN+KInRIpZsF8J81metcGb
+F5S2bQLeab9o1Inhzcx/Pbez+4fBTXP7uQ48HqTWf68xw5/KaA7c65yUPQm
7otv5Z0WKbhprHLtdow3CX5Qxea4QIFPuPddxidv8mA42dX2DwUfuAbEKAMf
cnFZUdOxefx9pglXDTt9yCb7ut4TcxTsNnZ6a7PTl7BoXc+z+k3B3ndhPRxB
vgReDloazlDQ071BIoKXRkKNVk+pTVPg9t1xYdNJGnHuP5gh+4uCbAmbLOdK
Gtlb+2f54k8K9vVVz2mb+hHtjeG/exkUKBxc/9Qg1494QZ58DUWBhIbUtuYJ
PyL1jzDO/aDgjeKzIS55f+L2xNjaeoKCcvdts0lh/uShnnud9HcKQrV1w548
9CdWr3SMf41TsDFF++zOGX9ypbnR5+FXCjIGONMddwSQmL3vXSP/o+Dqhn+1
rNYB5GPOuQzlMQo4tFSkC08HkB1sPFZ/vuD4dd/2XlEcQATXeAvVjlBwkuVt
+vuWANLMMaVIG6ZA/+yj4fbBADJc+m6H9BAFufsNp+sYAWTjvYvWQ4MU6OaK
ltnPBRAhp7lDmQMU/Jv8/jZtPoBE3F171LifAraQAB/pXwHEfaJlbuUnCorZ
KuPYRgPIlLPy02e9FAT/YtD/vQkg7K3zIjEfKdia/FRy5b0AYmsymKL8gYLp
662M1UkBJIC7+MLiewoEMr13L7cJIH1mBblPuimwuXw++eu2APKe20z19Dsc
n9u1kVVfcTy+8Xw36qIg3WP5Qe9b/qRoR7XYpk4KDhrx3t5k5k8mSg2tptsp
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
       "]]}},
    Axes->{True, True},
    AxesLabel->{
      FormBox["\"x\"", TraditionalForm], 
      FormBox["\"x'\"", TraditionalForm]},
    AxesOrigin->{0.985, 0},
    DisplayFunction->Identity,
    FrameLabel->{{None, None}, {None, None}},
    FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
    GridLinesStyle->Directive[
      GrayLevel[0.5, 0.4]],
    Method->{"ScalingFunctions" -> None},
    PlotRange->{{0.9823695501895718, 
     1.0177087782907088`}, {-0.010702732683603285`, 0.010718059882382992`}},
    PlotRangeClipping->True,
    PlotRangePadding->{{
       Scaled[0.05], 
       Scaled[0.05]}, {
       Scaled[0.05], 
       Scaled[0.05]}},
    Ticks->{Automatic, Automatic}], ",", 
   GraphicsBox[{{}, {}, 
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], FaceForm[Opacity[0.3]], LineBox[CompressedData["
1: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
hgWbW9gi9VFkeKkjT/MDGw67lGUb/cOhC/LX+0ds2bD255lNZ+ljKCFN8OmO
zWwIu74lYUx0HHnFwPmtjctwsXLWIESRgBKZ6ltn/ZYhlGj64avaBDqS+SO8
ddcyCH84Zjt0YBJdSFU70tXCAtmeJsk0FSJa2j8avO8+C8SKFTUCpEgoj2gY
yy/Bgpncc5fXLpCQzKtxxWc/luDjuWGz9mYyen30TSLOdAmGNK/+fZhAQWsq
aHnGY4ugGf3hcZolFV24Rs0m+i7C8oEDfykCNGQkXLN+Yd0iEJb73q7PoqFX
t34HZSYtAN9X1Z15OnQklNBH26e8AMNUL4U3NXS0Q7dlT9nPeQgN48/2PcFA
wd7X5l8dn+fla/MT23MYaOvPPNpwNS+PWGLO2woxkfsvM/sR0zkocLRi811i
osDJK0eb2mcBW3zJmBTPRKQxkXHMxdn/VXTn4VB9fxzAoxVFi0jIEiolUiiq
04IQiihbiUKiRUQppfS1VbSQslR2IUtEiI+d7PsyY5kZg9mvfZsZfvP7a54z
18y995xzz+f1ftxnLug5Le+aqcHQOpHV2kb9U0Dcnnl/E4Xnl4fiduZXpyDI
KuSwAs83vl3SMSrESRijeruprmBo6tzoVTGnSbhZtnO/ygyGtkYZ8p2jTkDz
1J/v8jgMWRnm/Vu8MwHO/wUJSuViSPnzIdf2MQzSetT6DjzGULLia1z0NAs0
34vL3lPHULC48JVKfhYsSIifXDPIQm/fJMsWiTIh31I7QPQxC4mcYOlgvPX4
7Zq44pZ1LDTEDJXtPEOHBz67i24FMpEk7tejdnsa6GxPWiezwECD2fbSli+o
oHRjzu6IHQN9Lg4qqU2lQK+Nv9LULzr64J4Y/aZznJe/GHJpHBpKdnT8Kbh2
HO5Q7pAyjtFQpcs24YTjYxCSsVbV+jYVvWo+PZXjy8tBRvE/t4RTUN+eU/kf
gAwvxcYMjqeNo1WVB85/EyLD2KE7xXoFY8hLuNF8v/0IJIXbkL4VjaKG6++3
BheTYBfnmUvFLzIakLQz2baFVx+fqsm9CuXN18cu0q89iCBMvNvneYWEdujX
7jQYIEDEqUQX7Z1EFCur/C7WjACKISqVIqnDyOB0l2lG4jCUyuXWy20YRBd+
neV4Fg8BvxelZZc1DrWukTQQpQzC6/9CLQNietFA1C5tPpVBsPsdW9rZ1oWE
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
NPlPHpuCS665JmQuBoqpW422VE5BVKEqtYeBQUGzL7PCcBpsh0R6fv3jfV/8
m4CCtmnYpHnc/HUEBmG9y5EJl2fg2R0K/pkJBi+WT1961jEDZooxXvJsFlgn
3V4/YzwLpox5JZ8vLPjvjenpuppZ6Ikm1P3cywLHtFytv8fnQNss3YqbxoRT
Henoc+4caI4+Lk7eyYRDXtueySnMw8tya1+GHwOOKPT7ykTMw4DW3gqZTjpU
Rv1usOFbgEoszvPjTjq8kil8Eue2AM5SloQECxocrTy9Ma9jAVaRj/Vm83JS
n2da2C3NRbDYrREln0ABdYspePNpEX5xzT65FoyDG1q3a2JqEbZNbjm3WDYG
5QI6a5zOL4HL7mT6+b+jwHr/vAC+LYH+/bcXiVlkmPwCMT3YElzaEVJ8MmoE
YkoD1r7UYUP9x/F1rIckWFB9/yP2JRuU13Kdn50nQtXKpuura9iwQ3vfiYAd
BNj7l3Mukp8Dmu0ntfaWDIL+rrdiR3Q4wApN/fpFEw9nBfC/qu5y4ORPpabP
SX1wVMu1WDmOAypC0xJu63qgSCVQzfz/v0fS4ehve7UTRK0bqxVpHNjdJxpW
nN4GDSU2VR83cOHR8i128XAj3EffZd/KccFQ7u0hHbtauJ16P2wtzw8dr6yV
spvLQcL9z7XpM1zY9zUqK+NOAXysmau7wPNHe6tXab1rCmyTTvsoxvPJqRjX
OsF+ecQJ33JDn7ed5jBwxSM8BYkkhmUReJ//la+76YF/AbqN6b2iHuHCoTN/
o9b1lqNHr8+0u/D27/C+d+tLp1q00G1g5MQ7vjd9gq0MSiM6lOB4hEXlgOcO
te/62W3ovmZ00hbe+UknTnj1OXSiq0EbLxFjOVAuLverR7AHpdyr/eLB658t
ubPDE2l9CDo/3+7X5oA34RIFr41HnvUZZ9V5/Wv8+WKxOQyi6LAWhc/VbMgU
//Ho9U4COvlV03cfb3zOhDv+fGRCRAsbLMTX88Yvsy/Ust+HhMbjAuUteOO7
g7h63c4vI0gpqoitwRt/0qeamowcMhJ6/s24y2gJut3HE9aUjaKH/jtyrHjz
573q3Olv5WPI9uIwlRW5CNdFNmziFI6jHve5lGqNRZiLiOv/nkhByre+WQvw
5ue/wEPLOwKoKLTEwop1ewGG77fqzlnS0Gtd248pqxZg8KaDf5skHXGjRV84
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

       "]]}},
    Axes->{True, True},
    AxesLabel->{
      FormBox["\"y\"", TraditionalForm], 
      FormBox["\"y'\"", TraditionalForm]},
    AxesOrigin->{-1.8, 0},
    DisplayFunction->Identity,
    FrameLabel->{{None, None}, {None, None}},
    FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
    GridLinesStyle->Directive[
      GrayLevel[0.5, 0.4]],
    Method->{"ScalingFunctions" -> None},
    PlotRange->{{-1.8316168212237955`, -0.4174169669303882}, \
{-0.9999814160211211, 1.}},
    PlotRangeClipping->True,
    PlotRangePadding->{{
       Scaled[0.05], 
       Scaled[0.05]}, {
       Scaled[0.05], 
       Scaled[0.05]}},
    Ticks->{Automatic, Automatic}], ",", 
   GraphicsBox[{{}, {}, 
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], FaceForm[Opacity[0.3]], LineBox[CompressedData["
1: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
Tg2tMiPoV6fMYaLmwbfiWRV8l/TIbqLRFlzF/hzueq2MmXrL+1+HOoISGE/N
3ZXHJbIQleUMZxBTUm8csZXCH1ZDMjMEV7gyfli/4LwofmYoPjzp6QaHrBZC
fCW58QD/hOmhNTeg08kr9yKjwRhtETNqJnf4atCxeru9nxhCZFIvvuwGgoyu
SmZx9CB9+YD+XJkrlF8bDhGi5YaWMM8cRmMXOKg+t3TNUgQWY0wGktKdID27
YqenWAIsjn/8WR7jADyfKH7tdZeGZ/s1j1Zz2wDdrUtej4/IgfiNV3mfP5pB
i6Fa4eyyAryTr9GRtTCEa7ya4+uPlICl5MvCu00NqJPjGtYIUoaV4zU7EWck
4VxlhflcjjJUxq0FiTKOkLJPONW+9lUGAv/eWUthKfy6ig+iG5XAnJLMpF9U
AwMd0/EhrSIU3M65vj4AGE79IGGnRw6cfovoaauZYG7cgTxWbhnoqSdyr34w
x734ivjw3z5Qoq5ke9tuhW2dVBL1WWJQfCErcm7GBnNy1lMu9wiCMA/1iSqC
HQbVeFPU2XOBREgWm3G5HYrzMVR4Ve3d9XkUV7ysHab4X5gz1tgmLlsk/JR4
b4PVUs9PpHa/Jp7Ob+Ijq7dCWXbHA0Jbf0nN5wIcNB+bI+8vXmvedmrsKs4+
UURhgnttOxt/nGfC8eO308zMds/vIeDz+QwbFvwhl/vio46R7seCYo5x4Ad+
exavFQmsILTzmLByYrU6d8u/yl9EQ+GeRW9FDrw1udwT1SQLxSn73y+1s6J2
fmbshQ/aEGVxPP5cFSM2Z9D4MWgaQ32A+PeFO2QoO9R9QzzWErR++n16EzxM
SmhNCDI+ZA95iqEVj6I3iVYbm+Gpl53g1QlW2unvLBAytXz4lLEruHt8//zh
Hz/cVnjg+6PBHeSDXFVG2SXgYsJPsYpBT7hN5xgfcFsWJB4epve87g2z/vPe
2/3KsOorc66YyxeCHlayUR9WA0Vlon+XtB9UPYmjPaihBexJpbT73/rBzake
V0tqPVCaqyOdZvOHG03X88SHAZYYd3oqvvjB2McdHbVuQ4h5WdDUYOoH1gsd
Dk8qd/lGmT6SS9sXQi4vBAQHmsIl/9fc1egNWjnfrYtozcGGePDNzTFP6Izr
gJ0cCxiYlzRcKnSHHuLHzfx5S1j3lm/P/ukCT4bXn78RtIYsneJDbsuOcDVi
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
34z/YsjYz5xYwPVHG0uCFDir4wm4Ndu3/w1JB0nut7tz3B53DXJPttJQ6eDF
VZ15l1IVOJed/lIetDFmq7SknUyCln9Tbs9ptbBay1WwLNsUyjlkTlL8NXDG
wjdznN0GIllkusFHDeeiShVthuyhtDVW6QEzAcPKFCWfMjjBQqbVuME/BXzn
2+0/VecMdN+8Y/WypfF9dJtXVr0LvL6h9G/HL1HkblVSSqJ1BSvzerr9bbzI
fWz6zPEmFwhaNp+uvMOIBn2R98TuO0PmWTZ113ffusaCidZCPE4g1exE79+7
Rjy1cLTeZdweVmhmh0bTGWHk2136GUUb6H+Q/+3gPi5gsJr3M7plCilSFs1J
RnxQFXw8M9yVBN5rtk+vWwmCnUWa5YPHKuDzJiKj2GkvULUX7pyovdDF+Op9
SKzJ9vce5Wn0MNpel/LmrVcCfJC5mfAz15SMt7543Dv4jhP2jHaVrLWZ4/T9
qvTHovTwbHlLUHPaDklpdHcJ/F+JAyf2jj3Kd0KZQqFLxgx/u4SKhmNEvrni
n4eWutfnObHqQ/bvH93bvtQZpsj6VAQN15jSL9Duw9MCh2ZWeGRwUe2ueFut
N6ZGkwvkW5Xx6qnhu9+qfPDvvNmP3Q/UcFFasbh/yQepdzN48V/Xwi3nQB+B
ZB9kWP0SmnBID+2i9/WbenljtTmbvP5uQGXO6bnuVC9M6uycEFImI+vR9T+t
9B6466d05FI9BT0Pj3WNrLjgSJdzrvSGIZ7bJflD1dER9Tt4KujojfFsZAje
O2mDlve6JVTfGKP5sf9OUIqMMdmE5lGHuwnaeSpoUQ5qY+PQloJjrglKCB7I
SP7EiawPnC4YxZvgf25ZPAG2KjAncnzpBL0Jzijne4mWbvcJq53CZSRjNPpj
H/vphhXkFau3FEga4YfrH1webziA/kJW9UmkoMqeO5vHZVyBJ9T/uzMPGUXY
r4vndXvARgv/zpuHiTgya8szV7MPFmpXWPg9dJHqVJW/xjsf+FfpQtam00Ru
mxdbzoW+EF3IfzTrMgFDhQ8zSkz7QjorL/sBfTm0P3ti/y/0hY8Fn61/xYvi
lMQ0s5qGL0zw/+V/SuTALK740xrZ3nDWLUjpU+bnrktvE0NEdngB081JxuFq
WqC0TTWsvnQDrTe7VnrO8MBIf0LlDQFnIDNcZ5p4IQJTb9t+5W3YQXDnycHZ
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
       "]]}},
    Axes->{True, True},
    AxesLabel->{
      FormBox["\"\[Theta]\"", TraditionalForm], 
      FormBox["\"\[Theta]'\"", TraditionalForm]},
    AxesOrigin->{0, 0},
    DisplayFunction->Identity,
    FrameLabel->{{None, None}, {None, None}},
    FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
    GridLinesStyle->Directive[
      GrayLevel[0.5, 0.4]],
    Method->{"ScalingFunctions" -> None},
    PlotRange->{{-0.0010420694688948284`, 
     0.0010671942559337495`}, {-0.0028687159089355557`, 
     0.0028243150245531004`}},
    PlotRangeClipping->True,
    PlotRangePadding->{{
       Scaled[0.05], 
       Scaled[0.05]}, {
       Scaled[0.05], 
       Scaled[0.05]}},
    Ticks->{Automatic, Automatic}]}], "}"}]], "Output",
 CellChangeTimes->{3.7157708100043116`*^9}],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`t$$ = 42.905893325805664`, Typeset`show$$ = 
    True, Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{
      Hold[$CellContext`t$$], 0, 100}}, Typeset`size$$ = {8., {0., 8.}}, 
    Typeset`update$$ = 0, Typeset`initDone$$, Typeset`skipInitDone$$ = 
    True, $CellContext`t$61062$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, "Variables" :> {$CellContext`t$$ = 0}, 
      "ControllerVariables" :> {
        Hold[$CellContext`t$$, $CellContext`t$61062$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> ReplaceAll[
        ReplaceAll[
         Part[
          $CellContext`DrawSystem[
           Subscript[$CellContext`x, 1], 
           Subscript[$CellContext`y, 1], 
           Subscript[$CellContext`x, 2], 
           Subscript[$CellContext`y, 2], 
           Subscript[$CellContext`x, $CellContext`p], 
           Subscript[$CellContext`y, $CellContext`p], $CellContext`\[Theta]p, 
           Subscript[$CellContext`w, $CellContext`p]], 1], 
         Flatten[{
           Part[
            ReplaceAll[
            Subscript[$CellContext`x, $CellContext`p] -> \
$CellContext`X1[$CellContext`t$$], $CellContext`sol1], 1], 
           Part[
            ReplaceAll[
            Subscript[$CellContext`y, $CellContext`p] -> \
$CellContext`X3[$CellContext`t$$], $CellContext`sol1], 1], 
           Part[
            
            ReplaceAll[$CellContext`\[Theta]p -> \
$CellContext`X5[$CellContext`t$$], $CellContext`sol1], 1], 
           Subscript[$CellContext`x, 1] -> 0, Subscript[$CellContext`x, 2] -> 
           2 Subscript[$CellContext`w, $CellContext`p], 
           Subscript[$CellContext`y, 1] -> 0, Subscript[$CellContext`y, 2] -> 
           0, $CellContext`NumericEquibInputs}]], \
$CellContext`NumericParametersTest], 
      "Specifications" :> {{$CellContext`t$$, 0, 100, 
         AppearanceElements -> {
          "ProgressSlider", "PlayPauseButton", "FasterSlowerButtons", 
           "DirectionButton"}}}, 
      "Options" :> {
       ControlType -> Animator, AppearanceElements -> None, DefaultBaseStyle -> 
        "Animate", DefaultLabelStyle -> "AnimateLabel", SynchronousUpdating -> 
        True, ShrinkingDelay -> 10.}, "DefaultOptions" :> {}],
     ImageSizeCache->{333., {43., 50.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Animate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{3.7157708100683146`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"dataset", "=", 
    RowBox[{"Flatten", "[", 
     RowBox[{
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"x", ",", "y", ",", 
          RowBox[{"f", "[", 
           RowBox[{"x", ",", "y"}], "]"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"x", ",", "0", ",", "1", ",", ".1"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"y", ",", "0", ",", "1.1"}], "}"}]}], "]"}], ",", "1"}], 
     "]"}]}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{"Export", "[", 
    RowBox[{"\"\<mydataset.txt\>\"", ",", "dataset", ",", "\"\<CSV\>\""}], 
    "]"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"dataset", "=", 
     RowBox[{
      RowBox[{
       RowBox[{"Flatten", "[", 
        RowBox[{
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"{", 
             RowBox[{"t", ",", 
              RowBox[{"X1", "[", "t", "]"}]}], "}"}], "/.", 
            "\[InvisibleSpace]", "sol1"}], ",", 
           RowBox[{"{", 
            RowBox[{"t", ",", "0", ",", "T"}], "}"}]}], "]"}], ",", "1"}], 
        "]"}], "\[IndentingNewLine]", "dataset"}], "=", 
      RowBox[{"Flatten", "[", 
       RowBox[{
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"{", 
            RowBox[{"t", ",", 
             RowBox[{"X1", "[", "t", "]"}]}], "}"}], "/.", 
           "\[InvisibleSpace]", "sol1"}], ",", 
          RowBox[{"{", 
           RowBox[{"t", ",", "0", ",", "T", ",", "0.01"}], "}"}]}], "]"}], 
        ",", "1"}], "]"}]}]}], ";"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"datasetAllState", "=", 
     RowBox[{"Flatten", "[", 
      RowBox[{
       RowBox[{"Table", "[", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{
          RowBox[{"{", 
           RowBox[{"t", ",", 
            RowBox[{"X1", "[", "t", "]"}], ",", 
            RowBox[{"X2", "[", "t", "]"}], ",", 
            RowBox[{"X3", "[", "t", "]"}], ",", 
            RowBox[{"X4", "[", "t", "]"}], ",", 
            RowBox[{"X5", "[", "t", "]"}], ",", 
            RowBox[{"X6", "[", "t", "]"}]}], "}"}], "/.", "\[InvisibleSpace]",
           "sol1"}], ",", "\[IndentingNewLine]", 
         RowBox[{"{", 
          RowBox[{"t", ",", "0", ",", "T", ",", "0.01"}], "}"}]}], "]"}], ",",
        "1"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"Export", "[", 
     RowBox[{"\"\<./GitHub/quad_docs/mydataset.csv\>\"", ",", "dataset"}], 
     "]"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{"Export", "[", 
    RowBox[{
    "\"\<./GitHub/quad_docs/myDatasetAllState.csv\>\"", ",", 
     "datasetAllState"}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.715770796131239*^9, 3.715770796139242*^9}, {
   3.7157708354177823`*^9, 3.7157708358097887`*^9}, {3.715770987552852*^9, 
   3.7157709939640865`*^9}, {3.7157710492086477`*^9, 3.7157710565328083`*^9}, 
   3.7157710947216587`*^9, {3.715771164595806*^9, 3.7157711763768845`*^9}, {
   3.715771207134165*^9, 3.7157712175149755`*^9}, {3.7157713034503145`*^9, 
   3.7157713577814655`*^9}, {3.7157715003952007`*^9, 
   3.7157715225945835`*^9}, {3.715771564791038*^9, 3.71577164322436*^9}, {
   3.715771727638898*^9, 3.7157717455105405`*^9}, {3.7157718116457386`*^9, 
   3.7157718417520876`*^9}}],

Cell[BoxData["\<\"./GitHub/quad_docs/myDatasetAllState.csv\"\>"], "Output",
 CellChangeTimes->{
  3.7157708604058475`*^9, 3.71577105912886*^9, 3.715771165387824*^9, 
   3.7157712245631275`*^9, 3.7157713068503895`*^9, 3.715771363321562*^9, {
   3.7157715018592067`*^9, 3.715771523142593*^9}, 3.7157716463964076`*^9, 
   3.7157716811688066`*^9, 3.715771748182582*^9, 3.715771878793653*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"ListPlot", "[", "dataset", "]"}]], "Input",
 CellChangeTimes->{{3.7157714058887334`*^9, 3.7157714150369577`*^9}}],

Cell[" ", "Text",
 Editable->False,
 Selectable->False,
 CellFrame->{{0, 0}, {0, 3}},
 ShowCellBracket->False,
 CellMargins->{{0, 0}, {1, 1}},
 CellElementSpacings->{"CellMinHeight"->1},
 CellFrameMargins->0,
 CellFrameColor->RGBColor[0, 0, 1],
 CellSize->{Inherited, 5}],

Cell[BoxData[
 RowBox[{" ", 
  RowBox[{
  "add", " ", "both", " ", "a", " ", "driving", " ", "force", " ", "and", " ",
    "damping"}]}]], "Input",
 CellChangeTimes->{{3.7151971026862116`*^9, 3.7151971026962166`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{"NumericTestParams", "\[IndentingNewLine]", \
"NumericParametersTest", "\[IndentingNewLine]", "EquibInputConditions"}], \
"Input",
 CellChangeTimes->{{3.715361485702137*^9, 3.7153614859301543`*^9}, {
  3.7153615235511284`*^9, 3.7153615237791424`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"\[Kappa]", "\[Rule]", "1"}], ",", 
   RowBox[{"\[ScriptCapitalL]", "\[Rule]", "1"}], ",", 
   RowBox[{
    SubsuperscriptBox["\[Omega]", "s", "2"], "\[Rule]", "100"}], ",", 
   RowBox[{"\[Alpha]", "\[Rule]", "11.881188118811881`"}], ",", 
   RowBox[{"\[Gamma]", "\[Rule]", "0.04905`"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.7153614771090717`*^9, 3.7153614862221403`*^9}, 
   3.715361524023139*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    SubscriptBox["k", "1"], "\[Rule]", "200"}], ",", 
   RowBox[{
    SubscriptBox["k", "2"], "\[Rule]", 
    SubscriptBox["k", "1"]}], ",", 
   RowBox[{
    SubscriptBox["L0", "1"], "\[Rule]", "2"}], ",", 
   RowBox[{
    SubscriptBox["L0", "2"], "\[Rule]", 
    SubscriptBox["L0", "1"]}], ",", 
   RowBox[{
    SubscriptBox["m", "p"], "\[Rule]", "2"}], ",", 
   RowBox[{
    SubscriptBox["h", "p"], "\[Rule]", "0.1`"}], ",", 
   RowBox[{
    SubscriptBox["w", "p"], "\[Rule]", "1"}], ",", 
   RowBox[{"g", "\[Rule]", "9.81`"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.7153614771090717`*^9, 3.7153614862221403`*^9}, 
   3.715361524039139*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{
     SubscriptBox["x", "1"], "[", "t", "]"}], "\[Rule]", "0"}], ",", 
   RowBox[{
    RowBox[{
     SubscriptBox["y", "1"], "[", "t", "]"}], "\[Rule]", "0"}], ",", 
   RowBox[{
    RowBox[{
     SubscriptBox["x", "2"], "[", "t", "]"}], "\[Rule]", 
    RowBox[{"2", " ", 
     SubscriptBox["w", "p"]}]}], ",", 
   RowBox[{
    RowBox[{
     SubscriptBox["y", "2"], "[", "t", "]"}], "\[Rule]", 
    RowBox[{
     SubscriptBox["y", "1"], "[", "t", "]"}]}]}], "}"}]], "Output",
 CellChangeTimes->{{3.7153614771090717`*^9, 3.7153614862221403`*^9}, 
   3.71536152405114*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData["d"], "Input",
 CellChangeTimes->{3.7153626746684732`*^9}],

Cell[BoxData["d"], "Output",
 CellChangeTimes->{3.715362675472006*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"\[CapitalOmega]", "=", "2"}], ";"}], " ", 
  RowBox[{"(*", " ", "Hz", " ", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"d", "=", "0.82"}], " ", 
  RowBox[{"(*", 
   RowBox[{"NonDim", " ", "magnitude"}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{"EquibInputConditions", "=", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{
     RowBox[{
      SubscriptBox["x", "1"], "[", "t", "]"}], "\[Rule]", "0"}], ",", 
    RowBox[{
     RowBox[{
      SubscriptBox["y", "1"], "[", "t", "]"}], "\[Rule]", 
     RowBox[{"0", "+", 
      RowBox[{"d", " ", 
       RowBox[{"Sin", "[", 
        RowBox[{"\[CapitalOmega]", " ", "t"}], "]"}]}]}]}], ",", 
    RowBox[{
     RowBox[{
      SubscriptBox["x", "2"], "[", "t", "]"}], "\[Rule]", 
     RowBox[{"2", " ", 
      SubscriptBox["w", "p"]}]}], ",", 
    RowBox[{
     RowBox[{
      SubscriptBox["y", "2"], "[", "t", "]"}], "\[Rule]", 
     RowBox[{
      SubscriptBox["y", "1"], "[", "t", "]"}]}]}], 
   "}"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"(", 
     RowBox[{"SymetricEOMtoInvestigate", "=", 
      RowBox[{
       RowBox[{"EOM", "/.", "greekTermsSymetricCase"}], "//.", 
       "EquibInputConditions"}]}], ")"}], "/.", "dispNoTime"}], "//", 
   "MatrixForm"}], "//", "TraditionalForm"}]}], "Input",
 CellChangeTimes->{{3.7153618507732964`*^9, 3.715361893492193*^9}, {
   3.715361929364276*^9, 3.7153619320760736`*^9}, {3.7153624001963778`*^9, 
   3.7153624010669546`*^9}, {3.715362678973327*^9, 3.715362701647498*^9}, 
   3.7153627989496217`*^9, 3.715362871520816*^9, 3.715362977318166*^9, 
   3.7153631171951294`*^9}],

Cell[BoxData["0.82`"], "Output",
 CellChangeTimes->{3.715362075953139*^9, 3.7153622810257874`*^9, 
  3.7153624015923023`*^9, 3.715362702911334*^9, 3.7153627995590224`*^9, 
  3.7153628725414934`*^9, 3.7153629777374434`*^9, 3.7153631177695074`*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{
     SubscriptBox["x", "1"], "[", "t", "]"}], "\[Rule]", "0"}], ",", 
   RowBox[{
    RowBox[{
     SubscriptBox["y", "1"], "[", "t", "]"}], "\[Rule]", 
    RowBox[{"0.82`", " ", 
     RowBox[{"Sin", "[", 
      RowBox[{"2", " ", "t"}], "]"}]}]}], ",", 
   RowBox[{
    RowBox[{
     SubscriptBox["x", "2"], "[", "t", "]"}], "\[Rule]", 
    RowBox[{"2", " ", 
     SubscriptBox["w", "p"]}]}], ",", 
   RowBox[{
    RowBox[{
     SubscriptBox["y", "2"], "[", "t", "]"}], "\[Rule]", 
    RowBox[{
     SubscriptBox["y", "1"], "[", "t", "]"}]}]}], "}"}]], "Output",
 CellChangeTimes->{3.715362075953139*^9, 3.7153622810257874`*^9, 
  3.7153624015923023`*^9, 3.715362702911334*^9, 3.7153627995590224`*^9, 
  3.7153628725414934`*^9, 3.7153629777374434`*^9, 3.7153631177755117`*^9}],

Cell[BoxData[
 FormBox[
  TagBox[
   RowBox[{
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {
        SuperscriptBox[
         SubscriptBox["x", "p"], "\[Prime]\[Prime]",
         MultilineFunction->None]},
       {
        SuperscriptBox[
         SubscriptBox["y", "p"], "\[Prime]\[Prime]",
         MultilineFunction->None]},
       {
        SuperscriptBox[
         SubscriptBox["\[Theta]", "p"], "\[Prime]\[Prime]",
         MultilineFunction->None]}
      },
      GridBoxAlignment->{
       "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
        "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}], 
    "\[LongEqual]", 
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"sin", "(", 
              SubscriptBox["\[Theta]", "p"], ")"}], " ", 
             SubscriptBox["h", "p"]}], "-", 
            RowBox[{
             RowBox[{"cos", "(", 
              SubscriptBox["\[Theta]", "p"], ")"}], " ", 
             SubscriptBox["w", "p"]}], "+", 
            RowBox[{"2", " ", 
             SubscriptBox["w", "p"]}], "-", 
            SubscriptBox["x", "p"]}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{"1", "-", 
            FractionBox["1", 
             SqrtBox[
              RowBox[{
               SuperscriptBox[
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"sin", "(", 
                    SubscriptBox["\[Theta]", "p"], ")"}], " ", 
                   SubscriptBox["h", "p"]}], "-", 
                  RowBox[{
                   RowBox[{"cos", "(", 
                    SubscriptBox["\[Theta]", "p"], ")"}], " ", 
                   SubscriptBox["w", "p"]}], "+", 
                  RowBox[{"2", " ", 
                   SubscriptBox["w", "p"]}], "-", 
                  SubscriptBox["x", "p"]}], ")"}], "2"], "+", 
               SuperscriptBox[
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"0.82`", " ", 
                   RowBox[{"sin", "(", 
                    RowBox[{"2", " ", "t"}], ")"}]}], "-", 
                  RowBox[{
                   RowBox[{"cos", "(", 
                    SubscriptBox["\[Theta]", "p"], ")"}], " ", 
                   SubscriptBox["h", "p"]}], "-", 
                  RowBox[{
                   RowBox[{"sin", "(", 
                    SubscriptBox["\[Theta]", "p"], ")"}], " ", 
                   SubscriptBox["w", "p"]}], "-", 
                  SubscriptBox["y", "p"]}], ")"}], "2"]}]]]}], ")"}]}], "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"sin", "(", 
              SubscriptBox["\[Theta]", "p"], ")"}], " ", 
             SubscriptBox["h", "p"]}], "+", 
            RowBox[{
             RowBox[{"cos", "(", 
              SubscriptBox["\[Theta]", "p"], ")"}], " ", 
             SubscriptBox["w", "p"]}], "-", 
            SubscriptBox["x", "p"]}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{"1", "-", 
            FractionBox["1", 
             SqrtBox[
              RowBox[{
               SuperscriptBox[
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"sin", "(", 
                    SubscriptBox["\[Theta]", "p"], ")"}], " ", 
                   SubscriptBox["h", "p"]}], "+", 
                  RowBox[{
                   RowBox[{"cos", "(", 
                    SubscriptBox["\[Theta]", "p"], ")"}], " ", 
                   SubscriptBox["w", "p"]}], "-", 
                  SubscriptBox["x", "p"]}], ")"}], "2"], "+", 
               SuperscriptBox[
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"0.82`", " ", 
                   RowBox[{"sin", "(", 
                    RowBox[{"2", " ", "t"}], ")"}]}], "-", 
                  RowBox[{
                   RowBox[{"cos", "(", 
                    SubscriptBox["\[Theta]", "p"], ")"}], " ", 
                   SubscriptBox["h", "p"]}], "+", 
                  RowBox[{
                   RowBox[{"sin", "(", 
                    SubscriptBox["\[Theta]", "p"], ")"}], " ", 
                   SubscriptBox["w", "p"]}], "-", 
                  SubscriptBox["y", "p"]}], ")"}], "2"]}]]]}], ")"}]}], "-", 
         RowBox[{
          SubscriptBox["c", "1"], " ", 
          SuperscriptBox[
           SubscriptBox["x", "p"], "\[Prime]",
           MultilineFunction->None]}]}]},
       {
        RowBox[{
         RowBox[{"-", "\[Gamma]"}], "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"1", "-", 
            FractionBox["1", 
             SqrtBox[
              RowBox[{
               SuperscriptBox[
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"sin", "(", 
                    SubscriptBox["\[Theta]", "p"], ")"}], " ", 
                   SubscriptBox["h", "p"]}], "-", 
                  RowBox[{
                   RowBox[{"cos", "(", 
                    SubscriptBox["\[Theta]", "p"], ")"}], " ", 
                   SubscriptBox["w", "p"]}], "+", 
                  RowBox[{"2", " ", 
                   SubscriptBox["w", "p"]}], "-", 
                  SubscriptBox["x", "p"]}], ")"}], "2"], "+", 
               SuperscriptBox[
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"0.82`", " ", 
                   RowBox[{"sin", "(", 
                    RowBox[{"2", " ", "t"}], ")"}]}], "-", 
                  RowBox[{
                   RowBox[{"cos", "(", 
                    SubscriptBox["\[Theta]", "p"], ")"}], " ", 
                   SubscriptBox["h", "p"]}], "-", 
                  RowBox[{
                   RowBox[{"sin", "(", 
                    SubscriptBox["\[Theta]", "p"], ")"}], " ", 
                   SubscriptBox["w", "p"]}], "-", 
                  SubscriptBox["y", "p"]}], ")"}], "2"]}]]]}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"0.82`", " ", 
             RowBox[{"sin", "(", 
              RowBox[{"2", " ", "t"}], ")"}]}], "-", 
            RowBox[{
             RowBox[{"cos", "(", 
              SubscriptBox["\[Theta]", "p"], ")"}], " ", 
             SubscriptBox["h", "p"]}], "-", 
            RowBox[{
             RowBox[{"sin", "(", 
              SubscriptBox["\[Theta]", "p"], ")"}], " ", 
             SubscriptBox["w", "p"]}], "-", 
            SubscriptBox["y", "p"]}], ")"}]}], "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"1", "-", 
            FractionBox["1", 
             SqrtBox[
              RowBox[{
               SuperscriptBox[
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"sin", "(", 
                    SubscriptBox["\[Theta]", "p"], ")"}], " ", 
                   SubscriptBox["h", "p"]}], "+", 
                  RowBox[{
                   RowBox[{"cos", "(", 
                    SubscriptBox["\[Theta]", "p"], ")"}], " ", 
                   SubscriptBox["w", "p"]}], "-", 
                  SubscriptBox["x", "p"]}], ")"}], "2"], "+", 
               SuperscriptBox[
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"0.82`", " ", 
                   RowBox[{"sin", "(", 
                    RowBox[{"2", " ", "t"}], ")"}]}], "-", 
                  RowBox[{
                   RowBox[{"cos", "(", 
                    SubscriptBox["\[Theta]", "p"], ")"}], " ", 
                   SubscriptBox["h", "p"]}], "+", 
                  RowBox[{
                   RowBox[{"sin", "(", 
                    SubscriptBox["\[Theta]", "p"], ")"}], " ", 
                   SubscriptBox["w", "p"]}], "-", 
                  SubscriptBox["y", "p"]}], ")"}], "2"]}]]]}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"0.82`", " ", 
             RowBox[{"sin", "(", 
              RowBox[{"2", " ", "t"}], ")"}]}], "-", 
            RowBox[{
             RowBox[{"cos", "(", 
              SubscriptBox["\[Theta]", "p"], ")"}], " ", 
             SubscriptBox["h", "p"]}], "+", 
            RowBox[{
             RowBox[{"sin", "(", 
              SubscriptBox["\[Theta]", "p"], ")"}], " ", 
             SubscriptBox["w", "p"]}], "-", 
            SubscriptBox["y", "p"]}], ")"}]}], "-", 
         RowBox[{
          SubscriptBox["c", "2"], " ", 
          SuperscriptBox[
           SubscriptBox["y", "p"], "\[Prime]",
           MultilineFunction->None]}]}]},
       {
        RowBox[{
         RowBox[{
          RowBox[{"-", "\[Alpha]"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             SubscriptBox["w", "p"], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"sin", "(", 
                 SubscriptBox["\[Theta]", "p"], ")"}], " ", 
                SubscriptBox["x", "p"]}], "+", 
               RowBox[{
                RowBox[{"cos", "(", 
                 SubscriptBox["\[Theta]", "p"], ")"}], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"0.82`", " ", 
                   RowBox[{"sin", "(", 
                    RowBox[{"2", " ", "t"}], ")"}]}], "-", 
                  SubscriptBox["y", "p"]}], ")"}]}]}], ")"}]}], "+", 
            RowBox[{
             SubscriptBox["h", "p"], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"sin", "(", 
                 SubscriptBox["\[Theta]", "p"], ")"}], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"0.82`", " ", 
                   RowBox[{"sin", "(", 
                    RowBox[{"2", " ", "t"}], ")"}]}], "-", 
                  SubscriptBox["y", "p"]}], ")"}]}], "-", 
               RowBox[{
                RowBox[{"cos", "(", 
                 SubscriptBox["\[Theta]", "p"], ")"}], " ", 
                SubscriptBox["x", "p"]}]}], ")"}]}]}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{"1", "-", 
            FractionBox["1", 
             SqrtBox[
              RowBox[{
               SuperscriptBox[
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"sin", "(", 
                    SubscriptBox["\[Theta]", "p"], ")"}], " ", 
                   SubscriptBox["h", "p"]}], "+", 
                  RowBox[{
                   RowBox[{"cos", "(", 
                    SubscriptBox["\[Theta]", "p"], ")"}], " ", 
                   SubscriptBox["w", "p"]}], "-", 
                  SubscriptBox["x", "p"]}], ")"}], "2"], "+", 
               SuperscriptBox[
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"0.82`", " ", 
                   RowBox[{"sin", "(", 
                    RowBox[{"2", " ", "t"}], ")"}]}], "-", 
                  RowBox[{
                   RowBox[{"cos", "(", 
                    SubscriptBox["\[Theta]", "p"], ")"}], " ", 
                   SubscriptBox["h", "p"]}], "+", 
                  RowBox[{
                   RowBox[{"sin", "(", 
                    SubscriptBox["\[Theta]", "p"], ")"}], " ", 
                   SubscriptBox["w", "p"]}], "-", 
                  SubscriptBox["y", "p"]}], ")"}], "2"]}]]]}], ")"}]}], "-", 
         RowBox[{"\[Alpha]", " ", 
          RowBox[{"(", 
           RowBox[{"1", "-", 
            FractionBox["1", 
             SqrtBox[
              RowBox[{
               SuperscriptBox[
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"sin", "(", 
                    SubscriptBox["\[Theta]", "p"], ")"}], " ", 
                   SubscriptBox["h", "p"]}], "-", 
                  RowBox[{
                   RowBox[{"cos", "(", 
                    SubscriptBox["\[Theta]", "p"], ")"}], " ", 
                   SubscriptBox["w", "p"]}], "+", 
                  RowBox[{"2", " ", 
                   SubscriptBox["w", "p"]}], "-", 
                  SubscriptBox["x", "p"]}], ")"}], "2"], "+", 
               SuperscriptBox[
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"0.82`", " ", 
                   RowBox[{"sin", "(", 
                    RowBox[{"2", " ", "t"}], ")"}]}], "-", 
                  RowBox[{
                   RowBox[{"cos", "(", 
                    SubscriptBox["\[Theta]", "p"], ")"}], " ", 
                   SubscriptBox["h", "p"]}], "-", 
                  RowBox[{
                   RowBox[{"sin", "(", 
                    SubscriptBox["\[Theta]", "p"], ")"}], " ", 
                   SubscriptBox["w", "p"]}], "-", 
                  SubscriptBox["y", "p"]}], ")"}], "2"]}]]]}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             SubscriptBox["h", "p"], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"cos", "(", 
                 SubscriptBox["\[Theta]", "p"], ")"}], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"2", " ", 
                   SubscriptBox["w", "p"]}], "-", 
                  SubscriptBox["x", "p"]}], ")"}]}], "+", 
               RowBox[{
                RowBox[{"sin", "(", 
                 SubscriptBox["\[Theta]", "p"], ")"}], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"0.82`", " ", 
                   RowBox[{"sin", "(", 
                    RowBox[{"2", " ", "t"}], ")"}]}], "-", 
                  SubscriptBox["y", "p"]}], ")"}]}]}], ")"}]}], "+", 
            RowBox[{
             SubscriptBox["w", "p"], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"sin", "(", 
                 SubscriptBox["\[Theta]", "p"], ")"}], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"2", " ", 
                   SubscriptBox["w", "p"]}], "-", 
                  SubscriptBox["x", "p"]}], ")"}]}], "+", 
               RowBox[{
                RowBox[{"cos", "(", 
                 SubscriptBox["\[Theta]", "p"], ")"}], " ", 
                RowBox[{"(", 
                 RowBox[{
                  SubscriptBox["y", "p"], "-", 
                  RowBox[{"0.82`", " ", 
                   RowBox[{"sin", "(", 
                    RowBox[{"2", " ", "t"}], ")"}]}]}], ")"}]}]}], ")"}]}]}], 
           ")"}]}], "-", 
         RowBox[{
          SubscriptBox["c", "3"], " ", 
          SuperscriptBox[
           SubscriptBox["\[Theta]", "p"], "\[Prime]",
           MultilineFunction->None]}]}]}
      },
      GridBoxAlignment->{
       "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
        "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}]}],
   Function[BoxForm`e$, 
    MatrixForm[BoxForm`e$]]], TraditionalForm]], "Output",
 CellChangeTimes->{3.715362075953139*^9, 3.7153622810257874`*^9, 
  3.7153624015923023`*^9, 3.715362702911334*^9, 3.7153627995590224`*^9, 
  3.7153628725414934`*^9, 3.7153629777374434`*^9, 3.7153631177955265`*^9}]
}, Open  ]],

Cell[BoxData["\"\<Because of energy conservation one can clearly never get \
chaos from the motion of a single degree of freedom. We therefore add both a \
driving force and damping, in order to remove energy conservation\>\""], \
"Input",
 CellChangeTimes->{{3.7151968713813367`*^9, 3.7151969219088144`*^9}, 
   3.715196987772071*^9, {3.7152162305628853`*^9, 3.7152162320189114`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"EOMtoSolve", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"SymetricEOMtoInvestigate", "/.", "NumericTestParams"}], "/.", 
     "NumericParametersTest"}], "/.", "NumericStructuralDamping"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"numericEqs", "=", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"X1", "'"}], "[", "t", "]"}], "\[Equal]", 
            RowBox[{"X2", "[", "t", "]"}]}], ",", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{
             RowBox[{"X2", "'"}], "[", "t", "]"}], "\[Equal]", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"EOMtoSolve", "[", 
               RowBox[{"[", 
                RowBox[{"2", ",", "1"}], "]"}], "]"}], "[", 
              RowBox[{"[", "1", "]"}], "]"}], ")"}]}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{
             RowBox[{"X3", "'"}], "[", "t", "]"}], "\[Equal]", 
            RowBox[{"X4", "[", "t", "]"}]}], ",", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{
             RowBox[{"X4", "'"}], "[", "t", "]"}], "\[Equal]", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"EOMtoSolve", "[", 
               RowBox[{"[", 
                RowBox[{"2", ",", "2"}], "]"}], "]"}], "[", 
              RowBox[{"[", "1", "]"}], "]"}], ")"}]}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{
             RowBox[{"X5", "'"}], "[", "t", "]"}], "\[Equal]", 
            RowBox[{"X6", "[", "t", "]"}]}], ",", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{
             RowBox[{"X6", "'"}], "[", "t", "]"}], "\[Equal]", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"EOMtoSolve", "[", 
               RowBox[{"[", 
                RowBox[{"2", ",", "3"}], "]"}], "]"}], "[", 
              RowBox[{"[", "1", "]"}], "]"}], ")"}]}]}], "}"}], "/.", 
         RowBox[{
          RowBox[{
           SubscriptBox["x", "p"], "[", "t", "]"}], "\[Rule]", 
          RowBox[{"X1", "[", "t", "]"}]}]}], "/.", 
        RowBox[{
         RowBox[{
          SubscriptBox["y", "p"], "[", "t", "]"}], "\[Rule]", 
         RowBox[{"X3", "[", "t", "]"}]}]}], "/.", 
       RowBox[{
        RowBox[{
         SubscriptBox["\[Theta]", "p"], "[", "t", "]"}], "\[Rule]", 
        RowBox[{"X5", "[", "t", "]"}]}]}], "/.", 
      RowBox[{
       RowBox[{"D", "[", 
        RowBox[{
         RowBox[{
          SubscriptBox["x", "p"], "[", "t", "]"}], ",", "t"}], "]"}], 
       "\[Rule]", 
       RowBox[{"X2", "[", "t", "]"}]}]}], "/.", 
     RowBox[{
      RowBox[{"D", "[", 
       RowBox[{
        RowBox[{
         SubscriptBox["y", "p"], "[", "t", "]"}], ",", "t"}], "]"}], 
      "\[Rule]", 
      RowBox[{"X4", "[", "t", "]"}]}]}], "/.", 
    RowBox[{
     RowBox[{"D", "[", 
      RowBox[{
       RowBox[{
        SubscriptBox["\[Theta]", "p"], "[", "t", "]"}], ",", "t"}], "]"}], 
     "\[Rule]", 
     RowBox[{"X6", "[", "t", "]"}]}]}]}], 
  ";"}], "\[IndentingNewLine]", "NumericTestParams", "\[IndentingNewLine]", 
 RowBox[{"NumericParametersTest", "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{"startValues", "=", 
    RowBox[{
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{"X1", "[", "0", "]"}], "\[Equal]", 
         SubscriptBox["w", "p"]}], ",", 
        RowBox[{
         RowBox[{"X2", "[", "0", "]"}], "==", "0.001"}], ",", 
        RowBox[{
         RowBox[{"X3", "[", "0", "]"}], "\[Equal]", 
         RowBox[{
          RowBox[{"-", "1"}], "-", 
          SubscriptBox["h", "p"], "-", 
          FractionBox["\[Gamma]", "2"]}]}], ",", 
        RowBox[{
         RowBox[{"X4", "[", "0", "]"}], "==", "0.01"}], ",", 
        RowBox[{
         RowBox[{"X5", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
        RowBox[{
         RowBox[{"X6", "[", "0", "]"}], "==", "0.001"}]}], "}"}], "/.", 
      "NumericTestParams"}], "/.", "NumericParametersTest"}]}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{"startValues", "=", 
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{"X1", "[", "0", "]"}], "\[Equal]", 
       SubscriptBox["w", "p"]}], ",", 
      RowBox[{
       RowBox[{"X2", "[", "0", "]"}], "==", "0.00"}], ",", 
      RowBox[{
       RowBox[{"X3", "[", "0", "]"}], "\[Equal]", 
       RowBox[{
        RowBox[{"-", "1"}], "-", 
        SubscriptBox["h", "p"], "-", 
        FractionBox["\[Gamma]", "2"]}]}], ",", 
      RowBox[{
       RowBox[{"X4", "[", "0", "]"}], "==", "0.0"}], ",", 
      RowBox[{
       RowBox[{"X5", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
      RowBox[{
       RowBox[{"X6", "[", "0", "]"}], "==", "0.00"}]}], "}"}], "/.", 
    "NumericTestParams"}], "/.", 
   "NumericParametersTest"}]}], "\[IndentingNewLine]", 
 RowBox[{"T", "=", "12"}], "\[IndentingNewLine]", 
 RowBox[{"sol1", " ", "=", " ", 
  RowBox[{"NDSolve", "[", " ", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"numericEqs", ",", " ", "startValues"}], "}"}], ",", " ", 
    RowBox[{"{", 
     RowBox[{
     "X1", ",", " ", "X2", ",", "X3", ",", "X4", ",", "X5", ",", "X6"}], 
     "}"}], ",", " ", 
    RowBox[{"{", 
     RowBox[{"t", ",", " ", "0", ",", " ", "T"}], "}"}]}], " ", 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"{", 
  RowBox[{
   RowBox[{"ParametricPlot", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"X1", "[", "t", "]"}], ",", 
        RowBox[{"X2", "[", "t", "]"}]}], "}"}], "/.", "\[InvisibleSpace]", 
      "sol1"}], ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", "0", ",", "T"}], "}"}], ",", 
     RowBox[{"AxesLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\"\<x\>\"", ",", "\"\<x'\>\""}], "}"}]}]}], "]"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"ParametricPlot", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"X3", "[", "t", "]"}], ",", 
        RowBox[{"X4", "[", "t", "]"}]}], "}"}], "/.", "\[InvisibleSpace]", 
      "sol1"}], ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", "0", ",", "T"}], "}"}], ",", 
     RowBox[{"AxesLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\"\<y\>\"", ",", "\"\<y'\>\""}], "}"}]}]}], "]"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"ParametricPlot", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"X5", "[", "t", "]"}], ",", 
        RowBox[{"X6", "[", "t", "]"}]}], "}"}], "/.", "\[InvisibleSpace]", 
      "sol1"}], ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", "0", ",", "T"}], "}"}], ",", 
     RowBox[{"AxesLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\"\<\[Theta]\>\"", ",", "\"\<\[Theta]'\>\""}], "}"}]}]}], 
    "]"}]}], "}"}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{
  3.7152162336237745`*^9, {3.715217538821905*^9, 3.715217572815819*^9}, {
   3.715362523926157*^9, 3.7153625572602434`*^9}, 3.7153627376406403`*^9, 
   3.7153628577566977`*^9, 3.7153629352092657`*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"\[Kappa]", "\[Rule]", "1"}], ",", 
   RowBox[{"\[ScriptCapitalL]", "\[Rule]", "1"}], ",", 
   RowBox[{
    SubsuperscriptBox["\[Omega]", "s", "2"], "\[Rule]", "100"}], ",", 
   RowBox[{"\[Alpha]", "\[Rule]", "11.881188118811881`"}], ",", 
   RowBox[{"\[Gamma]", "\[Rule]", "0.04905`"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.715217574811864*^9, 3.7152852457777696`*^9, 3.7153625429727755`*^9, 
   3.715362599864308*^9, 3.715362707103405*^9, 3.7153627379738584`*^9, 
   3.715362802421919*^9, {3.7153628588874445`*^9, 3.715362874233613*^9}, 
   3.715362936237946*^9, 3.715362981476921*^9, 3.7153631208735657`*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    SubscriptBox["k", "1"], "\[Rule]", "200"}], ",", 
   RowBox[{
    SubscriptBox["k", "2"], "\[Rule]", 
    SubscriptBox["k", "1"]}], ",", 
   RowBox[{
    SubscriptBox["L0", "1"], "\[Rule]", "2"}], ",", 
   RowBox[{
    SubscriptBox["L0", "2"], "\[Rule]", 
    SubscriptBox["L0", "1"]}], ",", 
   RowBox[{
    SubscriptBox["m", "p"], "\[Rule]", "2"}], ",", 
   RowBox[{
    SubscriptBox["h", "p"], "\[Rule]", "0.1`"}], ",", 
   RowBox[{
    SubscriptBox["w", "p"], "\[Rule]", "1"}], ",", 
   RowBox[{"g", "\[Rule]", "9.81`"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.715217574811864*^9, 3.7152852457777696`*^9, 3.7153625429727755`*^9, 
   3.715362599864308*^9, 3.715362707103405*^9, 3.7153627379738584`*^9, 
   3.715362802421919*^9, {3.7153628588874445`*^9, 3.715362874233613*^9}, 
   3.715362936237946*^9, 3.715362981476921*^9, 3.7153631208795695`*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{"X1", "[", "0", "]"}], "\[Equal]", "1"}], ",", 
   RowBox[{
    RowBox[{"X2", "[", "0", "]"}], "\[Equal]", "0.`"}], ",", 
   RowBox[{
    RowBox[{"X3", "[", "0", "]"}], "\[Equal]", 
    RowBox[{"-", "1.124525`"}]}], ",", 
   RowBox[{
    RowBox[{"X4", "[", "0", "]"}], "\[Equal]", "0.`"}], ",", 
   RowBox[{
    RowBox[{"X5", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
   RowBox[{
    RowBox[{"X6", "[", "0", "]"}], "\[Equal]", "0.`"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.715217574811864*^9, 3.7152852457777696`*^9, 3.7153625429727755`*^9, 
   3.715362599864308*^9, 3.715362707103405*^9, 3.7153627379738584`*^9, 
   3.715362802421919*^9, {3.7153628588874445`*^9, 3.715362874233613*^9}, 
   3.715362936237946*^9, 3.715362981476921*^9, 3.7153631208835726`*^9}],

Cell[BoxData["12"], "Output",
 CellChangeTimes->{
  3.715217574811864*^9, 3.7152852457777696`*^9, 3.7153625429727755`*^9, 
   3.715362599864308*^9, 3.715362707103405*^9, 3.7153627379738584`*^9, 
   3.715362802421919*^9, {3.7153628588874445`*^9, 3.715362874233613*^9}, 
   3.715362936237946*^9, 3.715362981476921*^9, 3.7153631208885756`*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"X1", "\[Rule]", 
     TagBox[
      TemplateBox[{RowBox[{
          StyleBox[
           TagBox["InterpolatingFunction", "SummaryHead"], 
           "NonInterpretableSummary"], 
          StyleBox["[", "NonInterpretableSummary"], 
          DynamicModuleBox[{Typeset`open$$ = False}, 
           PanelBox[
            PaneSelectorBox[{False -> GridBox[{{
                  PaneBox[
                   ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquarePlusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                   Alignment -> {Center, Center}, ImageSize -> 
                   Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                  GraphicsBox[{{{}, {}, {
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1]], 
                    LineBox[CompressedData["
1:eJw9yX1Qy3EcB/BJWZY6a00qS2tPHvPUTXrw/ajlaVqHo2QqTUgxQ7oc8pSE
VedEOZ240xka7jaG6g+1iPN0csRiym+kra1bpaWV329m77v3ve91b2aGdE2m
G4lEisZLrPWp7Ev2qjOLSY5YUMQ8wXMGpQX990rVrFyV/yeXB3tj2r0yOl3e
51W8Jruiy2UbJSb+xQyLy3z1SdGbRKvL/UmsRVGaAZdPPaZ6108ccjlAsFqk
nGN3+UKHTOO2ggSGUSJmdEUtIW1tHwMvnfbNGqlrzRoLKqebK2J3DPh7QKXT
tpQ5rxIV46DA6Z2V2lCx2BNSnBZq3I17yRSgOX0jy5jdWO4FOfZ/XnrxkE4b
7w05+hGHJUkPxpLafIDfNOywfsVL+cDSidDWMOhwXDKtdQ+DChvoFocNd2r7
T2NUqLlbbSes0F4uPdjgC6JHqt+Eb7P17pRiGoQE/+4l/N2aF16V6Afirg9G
wtFHt+jG8+hwKTT2J+HWpOtpvhY6iD3HYYTPGiM39rVMgmJaeQfh/F42VXfF
Hygz+/WEa5DkWtq2yZCTV/KVsFU4cKsOBUCVu1pHuOBqe5l6fCAoH+S9I7xk
W8Bc1Wvc+fwbdtysbsWyszVB0PZdiWy4BZqSSJJ0CuxKp+f34T4Z9+x6wnIG
VA41FfbgJk9eb+TTguH4CZP8B+56cYSJ8ykYWvwEnTrc59OkW3vuTYW5tGMy
Ne736w5tUsSEgJspt3DzHzOypJjint0MgfADtaZbfWbErSgi/6IzodNyDlgm
Mxq2vdC05TMh2kM7LMfMqONRJJdvYEJi1ecjKToz2l699mi6MBQUYUHTmG/N
yLPhwkO5MhTuJUe5PakzI02ku5IXyAKGd97xjwz81wWVlR5mAfmitqd6twlt
120K29LNAm6moFEW3406/Z4rotazQVgwaiVv7kIjMr3vt4dsuH0CqxVRf6Lp
YcwIK4cDmQnzytHCH8jqM0H47jQHinL3+Oz/ZUCvRMzAkEEOTBeGBWY0GVBj
c3qzVMKF2Zwv8yXzDShZsjJd/pQLPgsmkYPqMGRPTb3vH86Djez2Uo9UDMUW
TBmSVvKAPFQvK5qBIU9slm10lAeXw1cnJMzG0F8/BtcL
                    "]]}}}, {
                   DisplayFunction -> Identity, AspectRatio -> 1, 
                    Axes -> {False, False}, AxesLabel -> {None, None}, 
                    AxesOrigin -> {0, 0.62}, DisplayFunction :> Identity, 
                    Frame -> {{True, True}, {True, True}}, 
                    FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                    Directive[
                    Opacity[0.5], 
                    Thickness[Tiny], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    FrameTicks -> {{None, None}, {None, None}}, 
                    GridLines -> {None, None}, GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], 
                    Method -> {
                    "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
                    AbsolutePointSize[6], "ScalingFunctions" -> None}, 
                    PlotRange -> {{0., 12.}, {0.6614415380025215, 1.}}, 
                    PlotRangeClipping -> True, PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
                  GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "12.`"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                   BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}], True -> GridBox[{{
                  PaneBox[
                   ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquareMinusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                   Alignment -> {Center, Center}, ImageSize -> 
                   Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                  GraphicsBox[{{{}, {}, {
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1]], 
                    LineBox[CompressedData["
1:eJw9yX1Qy3EcB/BJWZY6a00qS2tPHvPUTXrw/ajlaVqHo2QqTUgxQ7oc8pSE
VedEOZ240xka7jaG6g+1iPN0csRiym+kra1bpaWV329m77v3ve91b2aGdE2m
G4lEisZLrPWp7Ev2qjOLSY5YUMQ8wXMGpQX990rVrFyV/yeXB3tj2r0yOl3e
51W8Jruiy2UbJSb+xQyLy3z1SdGbRKvL/UmsRVGaAZdPPaZ6108ccjlAsFqk
nGN3+UKHTOO2ggSGUSJmdEUtIW1tHwMvnfbNGqlrzRoLKqebK2J3DPh7QKXT
tpQ5rxIV46DA6Z2V2lCx2BNSnBZq3I17yRSgOX0jy5jdWO4FOfZ/XnrxkE4b
7w05+hGHJUkPxpLafIDfNOywfsVL+cDSidDWMOhwXDKtdQ+DChvoFocNd2r7
T2NUqLlbbSes0F4uPdjgC6JHqt+Eb7P17pRiGoQE/+4l/N2aF16V6Afirg9G
wtFHt+jG8+hwKTT2J+HWpOtpvhY6iD3HYYTPGiM39rVMgmJaeQfh/F42VXfF
Hygz+/WEa5DkWtq2yZCTV/KVsFU4cKsOBUCVu1pHuOBqe5l6fCAoH+S9I7xk
W8Bc1Wvc+fwbdtysbsWyszVB0PZdiWy4BZqSSJJ0CuxKp+f34T4Z9+x6wnIG
VA41FfbgJk9eb+TTguH4CZP8B+56cYSJ8ykYWvwEnTrc59OkW3vuTYW5tGMy
Ne736w5tUsSEgJspt3DzHzOypJjint0MgfADtaZbfWbErSgi/6IzodNyDlgm
Mxq2vdC05TMh2kM7LMfMqONRJJdvYEJi1ecjKToz2l699mi6MBQUYUHTmG/N
yLPhwkO5MhTuJUe5PakzI02ku5IXyAKGd97xjwz81wWVlR5mAfmitqd6twlt
120K29LNAm6moFEW3406/Z4rotazQVgwaiVv7kIjMr3vt4dsuH0CqxVRf6Lp
YcwIK4cDmQnzytHCH8jqM0H47jQHinL3+Oz/ZUCvRMzAkEEOTBeGBWY0GVBj
c3qzVMKF2Zwv8yXzDShZsjJd/pQLPgsmkYPqMGRPTb3vH86Djez2Uo9UDMUW
TBmSVvKAPFQvK5qBIU9slm10lAeXw1cnJMzG0F8/BtcL
                    "]]}}}, {
                   DisplayFunction -> Identity, AspectRatio -> 1, 
                    Axes -> {False, False}, AxesLabel -> {None, None}, 
                    AxesOrigin -> {0, 0.62}, DisplayFunction :> Identity, 
                    Frame -> {{True, True}, {True, True}}, 
                    FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                    Directive[
                    Opacity[0.5], 
                    Thickness[Tiny], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    FrameTicks -> {{None, None}, {None, None}}, 
                    GridLines -> {None, None}, GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], 
                    Method -> {
                    "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
                    AbsolutePointSize[6], "ScalingFunctions" -> None}, 
                    PlotRange -> {{0., 12.}, {0.6614415380025215, 1.}}, 
                    PlotRangeClipping -> True, PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
                  GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "12.`"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Order: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Hermite\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Periodic: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["False", "SummaryItem"]}]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                   BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}]}, 
             Dynamic[Typeset`open$$], ImageSize -> Automatic], 
            BaselinePosition -> Baseline], DynamicModuleValues :> {}], 
          StyleBox["]", "NonInterpretableSummary"]}]},
       "CopyTag",
       DisplayFunction->(#& ),
       InterpretationFunction->("InterpolatingFunction[{{0., 12.}}, <>]"& )],
      False,
      Editable->False,
      SelectWithContents->True,
      Selectable->False]}], ",", 
    RowBox[{"X2", "\[Rule]", 
     TagBox[
      TemplateBox[{RowBox[{
          StyleBox[
           TagBox["InterpolatingFunction", "SummaryHead"], 
           "NonInterpretableSummary"], 
          StyleBox["[", "NonInterpretableSummary"], 
          DynamicModuleBox[{Typeset`open$$ = False}, 
           PanelBox[
            PaneSelectorBox[{False -> GridBox[{{
                  PaneBox[
                   ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquarePlusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                   Alignment -> {Center, Center}, ImageSize -> 
                   Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                  GraphicsBox[{{{}, {}, {
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1]], 
                    LineBox[CompressedData["
1:eJwBEQPu/CFib1JlAgAAADAAAAACAAAA88dx3mtMiz4AAACu/JmIuDgxRMod
Csk/0hoblaYBn7tKtCx1tBfaP/q5evW1a+G7+PE93Qti4z+gM58uDEDuu3QL
iVJrmOk/QlMtNYNUEDz5Cj1FyyrwP7F/PHhfwyY8NrWGTtBP8z/Ysr4Kuoos
PPVXIzk7uPY/tMNqk4yRIzyIuxENvRD6P7Af5nygULo7GURRTq4v/T9bMnts
xBrQvJbicbgCSQBAyNV/+DSXEb2ftWMAZt0BQMYMtWWIkw+9Emn+vNRpA0Bs
kNpw9YAOvcaYQmr2FwVAfHYJqV2ID735Wi/OT6kGQBXoJ8PMaBK9bZnFIlxc
CEBEa8b3k9sbvUu4BOxzBwpAV5IBjPkHMb2oaexrw5ULQJ9XidjDA3a9Rpd9
3MVFDUB+LemCBczPvWNXtwMA2Q5AUGiqlyqp273gSc2N9kYQQITUj/Gohum9
Q1gT1HIdEUBGT52WrbUBvuavrfWK5RFAH1kRTYZbab6pxZyPfL4SQGmgst3H
Vm2+rCTgBAqJE0CgiNf3oCBsvuTzdzSdTxRA9LpUaWtnaL48gWTcCScVQFJ/
Q6tjEWO+1FelXxLwFUB7BsB+WuBbvozsOlv0yRZAPj+Dop6AUr558SQR3J8X
QLwD8pr4M0u+pj9jol9nGEBTOdQUkwBRvvNL9qu8PxlAh0bQTXTOZb5/od2Q
tQkaQDlF+G6Ox4i+QWcZMLTPGkDfW7eE/d3iviPrqUeMphtA5wzPCzji5r5E
uI46AG8cQO6rhBcd7em+hkPIpU1IHUDl7DVmlrHuvgcYVuw2Ex5AdiRIXfi0
9L69XDjtJdoeQBJFYK7bBQO/lF9vZu6xH0ACjao+TDc0v9VVfV2pPSBAzTXn
EzX/a7/wWu1DyKogQC+Ijh2+H3G/JpiHB+oVIUDrOQxCLcByv/z5y7jZeSFA
R+dkvuw1dL/iujomNuYhQPuoULRG73e/aKBTgWBLIkBacONeJoyBvwi+lrmN
riJAzUACKjkelb9s0SCWccoiQBRqZOqlDLG/jj9tWA==
                    "]], 
                    
                    LineBox[{{10.623129497959024`, -0.06659924480883489}, {
                    10.771143288824055`, -0.017308409189724122`}, {
                    10.984619919362924`, -0.06526922849160396}, {
                    10.998676985455782`, -0.06659924480883489}}], 
                    
                    LineBox[{{11.359670814091146`, -0.06659924480883489}, {
                    11.389750489311766`, -0.063235904731689}, {
                    11.60174341108313, -0.04466189137842666}, {
                    11.799682441691065`, -0.016343692996444236`}, {
                    11.999999796610169`, 0.018692530344613607`}}]}}}, {
                   DisplayFunction -> Identity, AspectRatio -> 1, 
                    Axes -> {False, False}, AxesLabel -> {None, None}, 
                    AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
                    Frame -> {{True, True}, {True, True}}, 
                    FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                    Directive[
                    Opacity[0.5], 
                    Thickness[Tiny], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    FrameTicks -> {{None, None}, {None, None}}, 
                    GridLines -> {None, None}, GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], 
                    Method -> {
                    "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
                    AbsolutePointSize[6], "ScalingFunctions" -> None}, 
                    PlotRange -> {{0., 12.}, {-0.06659924480883489, 
                    0.018692530344613607`}}, PlotRangeClipping -> True, 
                    PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
                  GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "12.`"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                   BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}], True -> GridBox[{{
                  PaneBox[
                   ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquareMinusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                   Alignment -> {Center, Center}, ImageSize -> 
                   Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                  GraphicsBox[{{{}, {}, {
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1]], 
                    LineBox[CompressedData["
1:eJwBEQPu/CFib1JlAgAAADAAAAACAAAA88dx3mtMiz4AAACu/JmIuDgxRMod
Csk/0hoblaYBn7tKtCx1tBfaP/q5evW1a+G7+PE93Qti4z+gM58uDEDuu3QL
iVJrmOk/QlMtNYNUEDz5Cj1FyyrwP7F/PHhfwyY8NrWGTtBP8z/Ysr4Kuoos
PPVXIzk7uPY/tMNqk4yRIzyIuxENvRD6P7Af5nygULo7GURRTq4v/T9bMnts
xBrQvJbicbgCSQBAyNV/+DSXEb2ftWMAZt0BQMYMtWWIkw+9Emn+vNRpA0Bs
kNpw9YAOvcaYQmr2FwVAfHYJqV2ID735Wi/OT6kGQBXoJ8PMaBK9bZnFIlxc
CEBEa8b3k9sbvUu4BOxzBwpAV5IBjPkHMb2oaexrw5ULQJ9XidjDA3a9Rpd9
3MVFDUB+LemCBczPvWNXtwMA2Q5AUGiqlyqp273gSc2N9kYQQITUj/Gohum9
Q1gT1HIdEUBGT52WrbUBvuavrfWK5RFAH1kRTYZbab6pxZyPfL4SQGmgst3H
Vm2+rCTgBAqJE0CgiNf3oCBsvuTzdzSdTxRA9LpUaWtnaL48gWTcCScVQFJ/
Q6tjEWO+1FelXxLwFUB7BsB+WuBbvozsOlv0yRZAPj+Dop6AUr558SQR3J8X
QLwD8pr4M0u+pj9jol9nGEBTOdQUkwBRvvNL9qu8PxlAh0bQTXTOZb5/od2Q
tQkaQDlF+G6Ox4i+QWcZMLTPGkDfW7eE/d3iviPrqUeMphtA5wzPCzji5r5E
uI46AG8cQO6rhBcd7em+hkPIpU1IHUDl7DVmlrHuvgcYVuw2Ex5AdiRIXfi0
9L69XDjtJdoeQBJFYK7bBQO/lF9vZu6xH0ACjao+TDc0v9VVfV2pPSBAzTXn
EzX/a7/wWu1DyKogQC+Ijh2+H3G/JpiHB+oVIUDrOQxCLcByv/z5y7jZeSFA
R+dkvuw1dL/iujomNuYhQPuoULRG73e/aKBTgWBLIkBacONeJoyBvwi+lrmN
riJAzUACKjkelb9s0SCWccoiQBRqZOqlDLG/jj9tWA==
                    "]], 
                    
                    LineBox[{{10.623129497959024`, -0.06659924480883489}, {
                    10.771143288824055`, -0.017308409189724122`}, {
                    10.984619919362924`, -0.06526922849160396}, {
                    10.998676985455782`, -0.06659924480883489}}], 
                    
                    LineBox[{{11.359670814091146`, -0.06659924480883489}, {
                    11.389750489311766`, -0.063235904731689}, {
                    11.60174341108313, -0.04466189137842666}, {
                    11.799682441691065`, -0.016343692996444236`}, {
                    11.999999796610169`, 0.018692530344613607`}}]}}}, {
                   DisplayFunction -> Identity, AspectRatio -> 1, 
                    Axes -> {False, False}, AxesLabel -> {None, None}, 
                    AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
                    Frame -> {{True, True}, {True, True}}, 
                    FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                    Directive[
                    Opacity[0.5], 
                    Thickness[Tiny], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    FrameTicks -> {{None, None}, {None, None}}, 
                    GridLines -> {None, None}, GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], 
                    Method -> {
                    "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
                    AbsolutePointSize[6], "ScalingFunctions" -> None}, 
                    PlotRange -> {{0., 12.}, {-0.06659924480883489, 
                    0.018692530344613607`}}, PlotRangeClipping -> True, 
                    PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
                  GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "12.`"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Order: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Hermite\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Periodic: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["False", "SummaryItem"]}]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                   BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}]}, 
             Dynamic[Typeset`open$$], ImageSize -> Automatic], 
            BaselinePosition -> Baseline], DynamicModuleValues :> {}], 
          StyleBox["]", "NonInterpretableSummary"]}]},
       "CopyTag",
       DisplayFunction->(#& ),
       InterpretationFunction->("InterpolatingFunction[{{0., 12.}}, <>]"& )],
      False,
      Editable->False,
      SelectWithContents->True,
      Selectable->False]}], ",", 
    RowBox[{"X3", "\[Rule]", 
     TagBox[
      TemplateBox[{RowBox[{
          StyleBox[
           TagBox["InterpolatingFunction", "SummaryHead"], 
           "NonInterpretableSummary"], 
          StyleBox["[", "NonInterpretableSummary"], 
          DynamicModuleBox[{Typeset`open$$ = False}, 
           PanelBox[
            PaneSelectorBox[{False -> GridBox[{{
                  PaneBox[
                   ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquarePlusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                   Alignment -> {Center, Center}, ImageSize -> 
                   Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                  GraphicsBox[{{{}, {}, {
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1]], 
                    LineBox[CompressedData["
1:eJwB0QMu/CFib1JlAgAAADwAAAACAAAA88dx3mtMiz7njCjtDf7xvzgxRMod
Csk/XEQWsUPu8b9KtCx1tBfaP+XytsRme/G/+PE93Qti4z8NXyEDsX3wv3QL
iVJrmOk/pXiflN3r7b/5Cj1FyyrwPw52YLihs+m/NrWGTtBP8z+WofZ+LYvl
v/VXIzk7uPY/02xW28Cw4b+IuxENvRD6P57o0rm+8t6/GURRTq4v/T8y8hs3
7+Dev5bicbgCSQBAtcoOPQAh3r+ftWMAZt0BQObidR4MTtq/Emn+vNRpA0BT
qTZI2gfVv8aYQmr2FwVAkSH4lmTHzL/5Wi/OT6kGQKoT5KgzsL2/bZnFIlxc
CEDwZkjKpSqWP0u4BOxzBwpAh1FGMTLcxz+oaexrw5ULQM4ls37j5tc/Rpd9
3MVFDUCPLQciKyXhP2NXtwMA2Q5AHIEc5Hnf4j/gSc2N9kYQQMKzL6lqG+I/
Q1gT1HIdEUDcE906FVneP+avrfWK5RFAeY00KcOW1j+pxZyPfL4SQL5QUdGp
/tI/rCTgBAqJE0DQhW90BCrTP+TzdzSdTxRAcWAf+yif1D88gWTcCScVQEOU
g0ym7NU/1FelXxLwFUDNR0hOn/nVP4zsOlv0yRZAhP9CG9aj1D958SQR3J8X
QCnZ8Qd1ntI/pj9jol9nGEDIL036VzXRP/NL9qu8PxlAeMwci9eY0T9/od2Q
tQkaQGSI4gys49Q/QWcZMLTPGkDgWAhISJ7ZPyPrqUeMphtADfTLgDHt2T9E
uI46AG8cQMtARgNortY/hkPIpU1IHUDQZ0EaYHjQPwcYVuw2Ex5AqogZLf8s
wT+9XDjtJdoeQHA1GxZMr5G/lF9vZu6xH0ACWUfrByLMv9VVfV2pPSBA40O5
zsp62L/wWu1DyKogQKXPz1vnfN2/JpiHB+oVIUBL4ZOmnRDev/z5y7jZeSFA
VO+j6lP+27/iujomNuYhQJ4+2xDYlNe/aKBTgWBLIkBvlVOl0H7Rvwi+lrmN
riJAvw98ugLUwr+4OgSuJxojQDyvjAUdMo4/CNwbkI9+I0DcrAfKC6O+P2jc
XS5k6yNA1AewhrWYyz/jFMqpO1YkQGYYiDmTo9M//nHgEuG5JEBpCkRRiwTZ
PykuITjzJSVAryXycPhW3j/zDgxL04olQJRVZLctAeE/zk4hGiD4JUAIPQb+
nMXhP8PGYMZvYyZA2Q8YY5Yr4j9YY0pgjccmQBEDEdCRV+I//V5ethc0J0A6
FFzYGrPhP0J/HPpvmSdAfqNAjl0d4D8I5Sz5//8nQJlnm03oeNs/48DLTQ==

                    "]]}}}, {
                   DisplayFunction -> Identity, AspectRatio -> 1, 
                    Axes -> {False, False}, AxesLabel -> {None, None}, 
                    AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
                    Frame -> {{True, True}, {True, True}}, 
                    FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                    Directive[
                    Opacity[0.5], 
                    Thickness[Tiny], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    FrameTicks -> {{None, None}, {None, None}}, 
                    GridLines -> {None, None}, GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], 
                    Method -> {
                    "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
                    AbsolutePointSize[6], "ScalingFunctions" -> None}, 
                    PlotRange -> {{0., 12.}, {-1.124525, 0.5897798018741329}},
                     PlotRangeClipping -> True, PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
                  GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "12.`"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                   BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}], True -> GridBox[{{
                  PaneBox[
                   ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquareMinusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                   Alignment -> {Center, Center}, ImageSize -> 
                   Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                  GraphicsBox[{{{}, {}, {
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1]], 
                    LineBox[CompressedData["
1:eJwB0QMu/CFib1JlAgAAADwAAAACAAAA88dx3mtMiz7njCjtDf7xvzgxRMod
Csk/XEQWsUPu8b9KtCx1tBfaP+XytsRme/G/+PE93Qti4z8NXyEDsX3wv3QL
iVJrmOk/pXiflN3r7b/5Cj1FyyrwPw52YLihs+m/NrWGTtBP8z+WofZ+LYvl
v/VXIzk7uPY/02xW28Cw4b+IuxENvRD6P57o0rm+8t6/GURRTq4v/T8y8hs3
7+Dev5bicbgCSQBAtcoOPQAh3r+ftWMAZt0BQObidR4MTtq/Emn+vNRpA0BT
qTZI2gfVv8aYQmr2FwVAkSH4lmTHzL/5Wi/OT6kGQKoT5KgzsL2/bZnFIlxc
CEDwZkjKpSqWP0u4BOxzBwpAh1FGMTLcxz+oaexrw5ULQM4ls37j5tc/Rpd9
3MVFDUCPLQciKyXhP2NXtwMA2Q5AHIEc5Hnf4j/gSc2N9kYQQMKzL6lqG+I/
Q1gT1HIdEUDcE906FVneP+avrfWK5RFAeY00KcOW1j+pxZyPfL4SQL5QUdGp
/tI/rCTgBAqJE0DQhW90BCrTP+TzdzSdTxRAcWAf+yif1D88gWTcCScVQEOU
g0ym7NU/1FelXxLwFUDNR0hOn/nVP4zsOlv0yRZAhP9CG9aj1D958SQR3J8X
QCnZ8Qd1ntI/pj9jol9nGEDIL036VzXRP/NL9qu8PxlAeMwci9eY0T9/od2Q
tQkaQGSI4gys49Q/QWcZMLTPGkDgWAhISJ7ZPyPrqUeMphtADfTLgDHt2T9E
uI46AG8cQMtARgNortY/hkPIpU1IHUDQZ0EaYHjQPwcYVuw2Ex5AqogZLf8s
wT+9XDjtJdoeQHA1GxZMr5G/lF9vZu6xH0ACWUfrByLMv9VVfV2pPSBA40O5
zsp62L/wWu1DyKogQKXPz1vnfN2/JpiHB+oVIUBL4ZOmnRDev/z5y7jZeSFA
VO+j6lP+27/iujomNuYhQJ4+2xDYlNe/aKBTgWBLIkBvlVOl0H7Rvwi+lrmN
riJAvw98ugLUwr+4OgSuJxojQDyvjAUdMo4/CNwbkI9+I0DcrAfKC6O+P2jc
XS5k6yNA1AewhrWYyz/jFMqpO1YkQGYYiDmTo9M//nHgEuG5JEBpCkRRiwTZ
PykuITjzJSVAryXycPhW3j/zDgxL04olQJRVZLctAeE/zk4hGiD4JUAIPQb+
nMXhP8PGYMZvYyZA2Q8YY5Yr4j9YY0pgjccmQBEDEdCRV+I//V5ethc0J0A6
FFzYGrPhP0J/HPpvmSdAfqNAjl0d4D8I5Sz5//8nQJlnm03oeNs/48DLTQ==

                    "]]}}}, {
                   DisplayFunction -> Identity, AspectRatio -> 1, 
                    Axes -> {False, False}, AxesLabel -> {None, None}, 
                    AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
                    Frame -> {{True, True}, {True, True}}, 
                    FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                    Directive[
                    Opacity[0.5], 
                    Thickness[Tiny], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    FrameTicks -> {{None, None}, {None, None}}, 
                    GridLines -> {None, None}, GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], 
                    Method -> {
                    "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
                    AbsolutePointSize[6], "ScalingFunctions" -> None}, 
                    PlotRange -> {{0., 12.}, {-1.124525, 0.5897798018741329}},
                     PlotRangeClipping -> True, PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
                  GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "12.`"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Order: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Hermite\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Periodic: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["False", "SummaryItem"]}]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                   BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}]}, 
             Dynamic[Typeset`open$$], ImageSize -> Automatic], 
            BaselinePosition -> Baseline], DynamicModuleValues :> {}], 
          StyleBox["]", "NonInterpretableSummary"]}]},
       "CopyTag",
       DisplayFunction->(#& ),
       InterpretationFunction->("InterpolatingFunction[{{0., 12.}}, <>]"& )],
      False,
      Editable->False,
      SelectWithContents->True,
      Selectable->False]}], ",", 
    RowBox[{"X4", "\[Rule]", 
     TagBox[
      TemplateBox[{RowBox[{
          StyleBox[
           TagBox["InterpolatingFunction", "SummaryHead"], 
           "NonInterpretableSummary"], 
          StyleBox["[", "NonInterpretableSummary"], 
          DynamicModuleBox[{Typeset`open$$ = False}, 
           PanelBox[
            PaneSelectorBox[{False -> GridBox[{{
                  PaneBox[
                   ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquarePlusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                   Alignment -> {Center, Center}, ImageSize -> 
                   Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                  GraphicsBox[{{{}, {}, {
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1]], 
                    LineBox[CompressedData["
1:eJwB0QMu/CFib1JlAgAAADwAAAACAAAA88dx3mtMiz4AAIQnTxNTPTgxRMod
Csk/Ijm/LTCOrT9KtCx1tBfaP3XiXpESDsw/+PE93Qti4z/+0iqShRLaP3QL
iVJrmOk/+S98Fx884j/5Cj1FyyrwP/xCDBieQOU/NrWGTtBP8z/aGsmcqmjk
P/VXIzk7uPY/BqBWUVsB3j+IuxENvRD6PwiJAKRycMY/GURRTq4v/T/nSrXt
mGnAv5bicbgCSQBADmr94baeyj+ftWMAZt0BQCdnKNW3Otg/Emn+vNRpA0Ay
CSCnQ67dP8aYQmr2FwVABbij1ya/4D/5Wi/OT6kGQFlqIils9+I/bZnFIlxc
CEARQGfvYsXmP0u4BOxzBwpAa8oo0XkA7D+oaexrw5ULQPoPJXgVy/A/Rpd9
3MVFDUDIlm9ay37fP2NXtwMA2Q5AnCmd/cfUsj/gSc2N9kYQQHg7D7pHQdK/
Q1gT1HIdEUCzzGQN6bPiv+avrfWK5RFA9+mEfDZE3r+pxZyPfL4SQJjuLWjm
JLe/rCTgBAqJE0BVcn20MQa3P+TzdzSdTxRAGH2vFr7vvz88gWTcCScVQNjX
CQhkdqw/1FelXxLwFUA+yUnvuPiov4zsOlv0yRZAVHRRRuGrwb958SQR3J8X
QJmfmyf19cK/pj9jol9nGEADkvIjV7avv/NL9qu8PxlAYwWpMM5pwT9/od2Q
tQkaQHTYjJuQOtk/QWcZMLTPGkDZvbMPFAHLPyPrqUeMphtAuOG6RdMQwr9E
uI46AG8cQDwSfUvaSte/hkPIpU1IHUB3mjP8tWzhvwcYVuw2Ex5AscOnSmBf
5r+9XDjtJdoeQOTUugudn+u/lF9vZu6xH0AdVkO/BP3wv9VVfV2pPSBA0PlG
FaaO4r/wWu1DyKogQADTaESfMce/JpiHB+oVIUAMzuzf5sqzP/z5y7jZeSFA
rkdAvQGWzz/iujomNuYhQBwD83cX29k/aKBTgWBLIkA4E6pLtADiPwi+lrmN
riJAl2HK9jLf5z+4OgSuJxojQBA3eFNVkOQ/CNwbkI9+I0C5dCRKVkveP2jc
XS5k6yNAy7QaDAIb3D/jFMqpO1YkQNoAqfyg8ts//nHgEuG5JEAv4QYEuwHb
PykuITjzJSVApVaXKruo1j/zDgxL04olQJCCuHTHY8s/zk4hGiD4JUArO5Ao
d6qnP8PGYMZvYyZAjI9EVmmlrj9YY0pgjccmQEo5HAo3MZS//V5ethc0J0Bi
qtUKI3zGv0J/HPpvmSdACRJL4tRw1L8I5Sz5//8nQJpwn8myQdq/B/i/nA==

                    "]]}}}, {
                   DisplayFunction -> Identity, AspectRatio -> 1, 
                    Axes -> {False, False}, AxesLabel -> {None, None}, 
                    AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
                    Frame -> {{True, True}, {True, True}}, 
                    FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                    Directive[
                    Opacity[0.5], 
                    Thickness[Tiny], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    FrameTicks -> {{None, None}, {None, None}}, 
                    GridLines -> {None, None}, GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], 
                    Method -> {
                    "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
                    AbsolutePointSize[6], "ScalingFunctions" -> None}, 
                    PlotRange -> {{0., 12.}, {-1.061772105332586, 
                    1.0495810216098094`}}, PlotRangeClipping -> True, 
                    PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
                  GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "12.`"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                   BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}], True -> GridBox[{{
                  PaneBox[
                   ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquareMinusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                   Alignment -> {Center, Center}, ImageSize -> 
                   Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                  GraphicsBox[{{{}, {}, {
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1]], 
                    LineBox[CompressedData["
1:eJwB0QMu/CFib1JlAgAAADwAAAACAAAA88dx3mtMiz4AAIQnTxNTPTgxRMod
Csk/Ijm/LTCOrT9KtCx1tBfaP3XiXpESDsw/+PE93Qti4z/+0iqShRLaP3QL
iVJrmOk/+S98Fx884j/5Cj1FyyrwP/xCDBieQOU/NrWGTtBP8z/aGsmcqmjk
P/VXIzk7uPY/BqBWUVsB3j+IuxENvRD6PwiJAKRycMY/GURRTq4v/T/nSrXt
mGnAv5bicbgCSQBADmr94baeyj+ftWMAZt0BQCdnKNW3Otg/Emn+vNRpA0Ay
CSCnQ67dP8aYQmr2FwVABbij1ya/4D/5Wi/OT6kGQFlqIils9+I/bZnFIlxc
CEARQGfvYsXmP0u4BOxzBwpAa8oo0XkA7D+oaexrw5ULQPoPJXgVy/A/Rpd9
3MVFDUDIlm9ay37fP2NXtwMA2Q5AnCmd/cfUsj/gSc2N9kYQQHg7D7pHQdK/
Q1gT1HIdEUCzzGQN6bPiv+avrfWK5RFA9+mEfDZE3r+pxZyPfL4SQJjuLWjm
JLe/rCTgBAqJE0BVcn20MQa3P+TzdzSdTxRAGH2vFr7vvz88gWTcCScVQNjX
CQhkdqw/1FelXxLwFUA+yUnvuPiov4zsOlv0yRZAVHRRRuGrwb958SQR3J8X
QJmfmyf19cK/pj9jol9nGEADkvIjV7avv/NL9qu8PxlAYwWpMM5pwT9/od2Q
tQkaQHTYjJuQOtk/QWcZMLTPGkDZvbMPFAHLPyPrqUeMphtAuOG6RdMQwr9E
uI46AG8cQDwSfUvaSte/hkPIpU1IHUB3mjP8tWzhvwcYVuw2Ex5AscOnSmBf
5r+9XDjtJdoeQOTUugudn+u/lF9vZu6xH0AdVkO/BP3wv9VVfV2pPSBA0PlG
FaaO4r/wWu1DyKogQADTaESfMce/JpiHB+oVIUAMzuzf5sqzP/z5y7jZeSFA
rkdAvQGWzz/iujomNuYhQBwD83cX29k/aKBTgWBLIkA4E6pLtADiPwi+lrmN
riJAl2HK9jLf5z+4OgSuJxojQBA3eFNVkOQ/CNwbkI9+I0C5dCRKVkveP2jc
XS5k6yNAy7QaDAIb3D/jFMqpO1YkQNoAqfyg8ts//nHgEuG5JEAv4QYEuwHb
PykuITjzJSVApVaXKruo1j/zDgxL04olQJCCuHTHY8s/zk4hGiD4JUArO5Ao
d6qnP8PGYMZvYyZAjI9EVmmlrj9YY0pgjccmQEo5HAo3MZS//V5ethc0J0Bi
qtUKI3zGv0J/HPpvmSdACRJL4tRw1L8I5Sz5//8nQJpwn8myQdq/B/i/nA==

                    "]]}}}, {
                   DisplayFunction -> Identity, AspectRatio -> 1, 
                    Axes -> {False, False}, AxesLabel -> {None, None}, 
                    AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
                    Frame -> {{True, True}, {True, True}}, 
                    FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                    Directive[
                    Opacity[0.5], 
                    Thickness[Tiny], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    FrameTicks -> {{None, None}, {None, None}}, 
                    GridLines -> {None, None}, GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], 
                    Method -> {
                    "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
                    AbsolutePointSize[6], "ScalingFunctions" -> None}, 
                    PlotRange -> {{0., 12.}, {-1.061772105332586, 
                    1.0495810216098094`}}, PlotRangeClipping -> True, 
                    PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
                  GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "12.`"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Order: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Hermite\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Periodic: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["False", "SummaryItem"]}]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                   BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}]}, 
             Dynamic[Typeset`open$$], ImageSize -> Automatic], 
            BaselinePosition -> Baseline], DynamicModuleValues :> {}], 
          StyleBox["]", "NonInterpretableSummary"]}]},
       "CopyTag",
       DisplayFunction->(#& ),
       InterpretationFunction->("InterpolatingFunction[{{0., 12.}}, <>]"& )],
      False,
      Editable->False,
      SelectWithContents->True,
      Selectable->False]}], ",", 
    RowBox[{"X5", "\[Rule]", 
     TagBox[
      TemplateBox[{RowBox[{
          StyleBox[
           TagBox["InterpolatingFunction", "SummaryHead"], 
           "NonInterpretableSummary"], 
          StyleBox["[", "NonInterpretableSummary"], 
          DynamicModuleBox[{Typeset`open$$ = False}, 
           PanelBox[
            PaneSelectorBox[{False -> GridBox[{{
                  PaneBox[
                   ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquarePlusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                   Alignment -> {Center, Center}, ImageSize -> 
                   Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                  GraphicsBox[{{{}, {}, {
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1]], 
                    LineBox[CompressedData["
1:eJwBEQPu/CFib1JlAgAAADAAAAACAAAA88dx3mtMiz4AAAAAAAAAADgxRMod
Csk/nE7Kezvu/DtKtCx1tBfaP1AGnbckxkO8+PE93Qti4z90a1kvv3NoPHQL
iVJrmOk/JpFvj7Izfjz5Cj1FyyrwPzvIH2bcpoM8NrWGTtBP8z/r2In80zGA
PPVXIzk7uPY/dlo9tZnRbDyIuxENvRD6P6xbo081nVi8GURRTq4v/T97yO4m
4TO7vJbicbgCSQBA5WGViK6TGL2ftWMAZt0BQPRVisgcCwu9Emn+vNRpA0A5
QTcJYZP7PMaYQmr2FwVAnDWW6KVcEz35Wi/OT6kGQAwhgneN9Qs9bZnFIlxc
CEDMp00uXmDRvEu4BOxzBwpAb8U+UHY4+ryoaexrw5ULQG027i1vvCc9Rpd9
3MVFDUBH3EtkauiiPWNXtwMA2Q5AaANWwogNtT3gSc2N9kYQQFL8YBpItMA9
Q1gT1HIdEUBJoNynuEbQPeavrfWK5RFAJ1jWvye/NT6pxZyPfL4SQGKkknsD
WEs+rCTgBAqJE0BYD/DMdTFGPuTzdzSdTxRAHGE5MhrVFT48gWTcCScVQIEI
HayuNkC+1FelXxLwFUB7k/iHNV5DvozsOlv0yRZAQOgy4l9UL7558SQR3J8X
QGPtBWuYtSo+pj9jol9nGEBISDyvwcY6PvNL9qu8PxlAjRcwjnQzPT5/od2Q
tQkaQKA7QvZSPFE+QWcZMLTPGkBCqkat9+m3PiPrqUeMphtAG/ajr29DyT5E
uI46AG8cQJqxQyJYL8c+hkPIpU1IHUB4RvC3+v+0PgcYVuw2Ex5ANGMmIdu7
mz69XDjtJdoeQFJA7YRi1cE+lF9vZu6xH0BohbLEYPLyPtVVfV2pPSBAAiS+
J3fISz/wWu1DyKogQFD8XEoUVVM/JpiHB+oVIUBQmSd3SzVFP/z5y7jZeSFA
jSRaHOooEL/iujomNuYhQKuEvwGk4zK/aKBTgWBLIkCbzNB5A/E2Pwi+lrmN
riJAfZkL1xVXYT+nVC3QYK8iQDcsIoMDV2Y/NA5TNA==
                    "]], 
                    
                    LineBox[{{11.182759969210563`, 0.002727038249820814}, {
                    11.184418795160221`, -0.001636222949916391}}], 
                    
                    LineBox[{{11.964616214907934`, -0.001636222949916391}, {
                    11.966917888771675`, 0.002727038249820814}}]}}}, {
                   DisplayFunction -> Identity, AspectRatio -> 1, 
                    Axes -> {False, False}, AxesLabel -> {None, None}, 
                    AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
                    Frame -> {{True, True}, {True, True}}, 
                    FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                    Directive[
                    Opacity[0.5], 
                    Thickness[Tiny], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    FrameTicks -> {{None, None}, {None, None}}, 
                    GridLines -> {None, None}, GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], 
                    Method -> {
                    "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
                    AbsolutePointSize[6], "ScalingFunctions" -> None}, 
                    PlotRange -> {{0., 12.}, {-0.001636222949916391, 
                    0.002727038249820814}}, PlotRangeClipping -> True, 
                    PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
                  GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "12.`"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                   BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}], True -> GridBox[{{
                  PaneBox[
                   ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquareMinusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                   Alignment -> {Center, Center}, ImageSize -> 
                   Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                  GraphicsBox[{{{}, {}, {
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1]], 
                    LineBox[CompressedData["
1:eJwBEQPu/CFib1JlAgAAADAAAAACAAAA88dx3mtMiz4AAAAAAAAAADgxRMod
Csk/nE7Kezvu/DtKtCx1tBfaP1AGnbckxkO8+PE93Qti4z90a1kvv3NoPHQL
iVJrmOk/JpFvj7Izfjz5Cj1FyyrwPzvIH2bcpoM8NrWGTtBP8z/r2In80zGA
PPVXIzk7uPY/dlo9tZnRbDyIuxENvRD6P6xbo081nVi8GURRTq4v/T97yO4m
4TO7vJbicbgCSQBA5WGViK6TGL2ftWMAZt0BQPRVisgcCwu9Emn+vNRpA0A5
QTcJYZP7PMaYQmr2FwVAnDWW6KVcEz35Wi/OT6kGQAwhgneN9Qs9bZnFIlxc
CEDMp00uXmDRvEu4BOxzBwpAb8U+UHY4+ryoaexrw5ULQG027i1vvCc9Rpd9
3MVFDUBH3EtkauiiPWNXtwMA2Q5AaANWwogNtT3gSc2N9kYQQFL8YBpItMA9
Q1gT1HIdEUBJoNynuEbQPeavrfWK5RFAJ1jWvye/NT6pxZyPfL4SQGKkknsD
WEs+rCTgBAqJE0BYD/DMdTFGPuTzdzSdTxRAHGE5MhrVFT48gWTcCScVQIEI
HayuNkC+1FelXxLwFUB7k/iHNV5DvozsOlv0yRZAQOgy4l9UL7558SQR3J8X
QGPtBWuYtSo+pj9jol9nGEBISDyvwcY6PvNL9qu8PxlAjRcwjnQzPT5/od2Q
tQkaQKA7QvZSPFE+QWcZMLTPGkBCqkat9+m3PiPrqUeMphtAG/ajr29DyT5E
uI46AG8cQJqxQyJYL8c+hkPIpU1IHUB4RvC3+v+0PgcYVuw2Ex5ANGMmIdu7
mz69XDjtJdoeQFJA7YRi1cE+lF9vZu6xH0BohbLEYPLyPtVVfV2pPSBAAiS+
J3fISz/wWu1DyKogQFD8XEoUVVM/JpiHB+oVIUBQmSd3SzVFP/z5y7jZeSFA
jSRaHOooEL/iujomNuYhQKuEvwGk4zK/aKBTgWBLIkCbzNB5A/E2Pwi+lrmN
riJAfZkL1xVXYT+nVC3QYK8iQDcsIoMDV2Y/NA5TNA==
                    "]], 
                    
                    LineBox[{{11.182759969210563`, 0.002727038249820814}, {
                    11.184418795160221`, -0.001636222949916391}}], 
                    
                    LineBox[{{11.964616214907934`, -0.001636222949916391}, {
                    11.966917888771675`, 0.002727038249820814}}]}}}, {
                   DisplayFunction -> Identity, AspectRatio -> 1, 
                    Axes -> {False, False}, AxesLabel -> {None, None}, 
                    AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
                    Frame -> {{True, True}, {True, True}}, 
                    FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                    Directive[
                    Opacity[0.5], 
                    Thickness[Tiny], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    FrameTicks -> {{None, None}, {None, None}}, 
                    GridLines -> {None, None}, GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], 
                    Method -> {
                    "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
                    AbsolutePointSize[6], "ScalingFunctions" -> None}, 
                    PlotRange -> {{0., 12.}, {-0.001636222949916391, 
                    0.002727038249820814}}, PlotRangeClipping -> True, 
                    PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
                  GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "12.`"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Order: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Hermite\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Periodic: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["False", "SummaryItem"]}]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                   BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}]}, 
             Dynamic[Typeset`open$$], ImageSize -> Automatic], 
            BaselinePosition -> Baseline], DynamicModuleValues :> {}], 
          StyleBox["]", "NonInterpretableSummary"]}]},
       "CopyTag",
       DisplayFunction->(#& ),
       InterpretationFunction->("InterpolatingFunction[{{0., 12.}}, <>]"& )],
      False,
      Editable->False,
      SelectWithContents->True,
      Selectable->False]}], ",", 
    RowBox[{"X6", "\[Rule]", 
     TagBox[
      TemplateBox[{RowBox[{
          StyleBox[
           TagBox["InterpolatingFunction", "SummaryHead"], 
           "NonInterpretableSummary"], 
          StyleBox["[", "NonInterpretableSummary"], 
          DynamicModuleBox[{Typeset`open$$ = False}, 
           PanelBox[
            PaneSelectorBox[{False -> GridBox[{{
                  PaneBox[
                   ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquarePlusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                   Alignment -> {Center, Center}, ImageSize -> 
                   Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                  GraphicsBox[{{{}, {}, {
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1]], 
                    LineBox[CompressedData["
1:eJwBoQJe/SFib1JlAgAAACkAAAACAAAA88dx3mtMiz65FZWcRTEruzgxRMod
Csk/bhbHRklOYTxKtCx1tBfaPyhjUz+tnGk8+PE93Qti4z+a/BjhWzeVPHQL
iVJrmOk/XTotsywDlTz5Cj1FyyrwPwAu+LQU9zS8NrWGTtBP8z8T1193F8aL
vPVXIzk7uPY/LWbnLVkoj7yIuxENvRD6P1hHdFENUZO8GURRTq4v/T90eeHI
jQYwvZbicbgCSQBAxmz7F/jvAD2ftWMAZt0BQPB/utoavDg9Emn+vNRpA0Da
3y/2WV84PcaYQmr2FwVAmduMc5eNCz35Wi/OT6kGQBK1L+jAqi69bZnFIlxc
CEAAG29MJhgwvUu4BOxzBwpAMGtga3TnGz2oaexrw5ULQOwghh1LEXk9Rpd9
3MVFDUBHNoDwQ9HMPWNXtwMA2Q5AedfM8uN/zD3gSc2N9kYQQIuM3B5TNdE9
Q1gT1HIdEUC0nCSJoq71PeavrfWK5RFAqVxsJ3F0az6pxZyPfL4SQF4uOhU+
w0w+rCTgBAqJE0CwDpRkDtRivuTzdzSdTxRAZtiNmpaha748gWTcCScVQJGT
yAxzmVy+1FelXxLwFUAESt12nRZIPozsOlv0yRZA2FmsWhFWYj558SQR3J8X
QLexKZr8CVw+pj9jol9nGEBCfQR/nbE6PvNL9qu8PxlABf8I+PYDPj5/od2Q
tQkaQAOamVNy74I+QWcZMLTPGkCBomDTCrvmPiPrqUeMphtA7uMleIz/yj5E
uI46AG8cQDhpN7vE+NW+hkPIpU1IHUA9ssnENrPevgcYVuw2Ex5AwEMmGvPf
nT69XDjtJdoeQKYO3oCeW/U+lF9vZu6xH0A/ApLbt+s0P343iKFFFiBAbZV5
JRBRYz+W3yYu
                    "]], 
                    
                    LineBox[{{8.18358113282793, 0.002357989822302889}, {
                    8.333559153293635, -0.0007530701725335946}, {
                    8.380174396137848, -0.0014239587978449719`}}], 
                    
                    LineBox[{{8.816855318490354, -0.0014239587978449719`}, {
                    8.949631876630011, 0.0010508792106293137`}, {
                    9.007909808056013, 0.002357989822302889}}], 
                    
                    LineBox[{{10.288507556379548`, 0.002357989822302889}, {
                    10.28891285507134, -0.0014239587978449719`}}], 
                    
                    LineBox[{{11.54940756381125, -0.0014239587978449719`}, {
                    11.549843953937263`, 0.002357989822302889}}]}}}, {
                   DisplayFunction -> Identity, AspectRatio -> 1, 
                    Axes -> {False, False}, AxesLabel -> {None, None}, 
                    AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
                    Frame -> {{True, True}, {True, True}}, 
                    FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                    Directive[
                    Opacity[0.5], 
                    Thickness[Tiny], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    FrameTicks -> {{None, None}, {None, None}}, 
                    GridLines -> {None, None}, GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], 
                    Method -> {
                    "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
                    AbsolutePointSize[6], "ScalingFunctions" -> None}, 
                    PlotRange -> {{0., 12.}, {-0.0014239587978449719`, 
                    0.002357989822302889}}, PlotRangeClipping -> True, 
                    PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
                  GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "12.`"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                   BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}], True -> GridBox[{{
                  PaneBox[
                   ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquareMinusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                   Alignment -> {Center, Center}, ImageSize -> 
                   Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                  GraphicsBox[{{{}, {}, {
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1]], 
                    LineBox[CompressedData["
1:eJwBoQJe/SFib1JlAgAAACkAAAACAAAA88dx3mtMiz65FZWcRTEruzgxRMod
Csk/bhbHRklOYTxKtCx1tBfaPyhjUz+tnGk8+PE93Qti4z+a/BjhWzeVPHQL
iVJrmOk/XTotsywDlTz5Cj1FyyrwPwAu+LQU9zS8NrWGTtBP8z8T1193F8aL
vPVXIzk7uPY/LWbnLVkoj7yIuxENvRD6P1hHdFENUZO8GURRTq4v/T90eeHI
jQYwvZbicbgCSQBAxmz7F/jvAD2ftWMAZt0BQPB/utoavDg9Emn+vNRpA0Da
3y/2WV84PcaYQmr2FwVAmduMc5eNCz35Wi/OT6kGQBK1L+jAqi69bZnFIlxc
CEAAG29MJhgwvUu4BOxzBwpAMGtga3TnGz2oaexrw5ULQOwghh1LEXk9Rpd9
3MVFDUBHNoDwQ9HMPWNXtwMA2Q5AedfM8uN/zD3gSc2N9kYQQIuM3B5TNdE9
Q1gT1HIdEUC0nCSJoq71PeavrfWK5RFAqVxsJ3F0az6pxZyPfL4SQF4uOhU+
w0w+rCTgBAqJE0CwDpRkDtRivuTzdzSdTxRAZtiNmpaha748gWTcCScVQJGT
yAxzmVy+1FelXxLwFUAESt12nRZIPozsOlv0yRZA2FmsWhFWYj558SQR3J8X
QLexKZr8CVw+pj9jol9nGEBCfQR/nbE6PvNL9qu8PxlABf8I+PYDPj5/od2Q
tQkaQAOamVNy74I+QWcZMLTPGkCBomDTCrvmPiPrqUeMphtA7uMleIz/yj5E
uI46AG8cQDhpN7vE+NW+hkPIpU1IHUA9ssnENrPevgcYVuw2Ex5AwEMmGvPf
nT69XDjtJdoeQKYO3oCeW/U+lF9vZu6xH0A/ApLbt+s0P343iKFFFiBAbZV5
JRBRYz+W3yYu
                    "]], 
                    
                    LineBox[{{8.18358113282793, 0.002357989822302889}, {
                    8.333559153293635, -0.0007530701725335946}, {
                    8.380174396137848, -0.0014239587978449719`}}], 
                    
                    LineBox[{{8.816855318490354, -0.0014239587978449719`}, {
                    8.949631876630011, 0.0010508792106293137`}, {
                    9.007909808056013, 0.002357989822302889}}], 
                    
                    LineBox[{{10.288507556379548`, 0.002357989822302889}, {
                    10.28891285507134, -0.0014239587978449719`}}], 
                    
                    LineBox[{{11.54940756381125, -0.0014239587978449719`}, {
                    11.549843953937263`, 0.002357989822302889}}]}}}, {
                   DisplayFunction -> Identity, AspectRatio -> 1, 
                    Axes -> {False, False}, AxesLabel -> {None, None}, 
                    AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
                    Frame -> {{True, True}, {True, True}}, 
                    FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                    Directive[
                    Opacity[0.5], 
                    Thickness[Tiny], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    FrameTicks -> {{None, None}, {None, None}}, 
                    GridLines -> {None, None}, GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], 
                    Method -> {
                    "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
                    AbsolutePointSize[6], "ScalingFunctions" -> None}, 
                    PlotRange -> {{0., 12.}, {-0.0014239587978449719`, 
                    0.002357989822302889}}, PlotRangeClipping -> True, 
                    PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
                  GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "12.`"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Order: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Hermite\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Periodic: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["False", "SummaryItem"]}]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                   BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}]}, 
             Dynamic[Typeset`open$$], ImageSize -> Automatic], 
            BaselinePosition -> Baseline], DynamicModuleValues :> {}], 
          StyleBox["]", "NonInterpretableSummary"]}]},
       "CopyTag",
       DisplayFunction->(#& ),
       InterpretationFunction->("InterpolatingFunction[{{0., 12.}}, <>]"& )],
      False,
      Editable->False,
      SelectWithContents->True,
      Selectable->False]}]}], "}"}], "}"}]], "Output",
 CellChangeTimes->{
  3.715217574811864*^9, 3.7152852457777696`*^9, 3.7153625429727755`*^9, 
   3.715362599864308*^9, 3.715362707103405*^9, 3.7153627379738584`*^9, 
   3.715362802421919*^9, {3.7153628588874445`*^9, 3.715362874233613*^9}, 
   3.715362936237946*^9, 3.715362981476921*^9, 3.7153631210817018`*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   GraphicsBox[{{}, {}, 
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], FaceForm[Opacity[0.3]], LineBox[CompressedData["
1:eJxV13k0Vd//P3BDCmUohQaSIVOSQoh2SEUJCdEg85gQQpKxRISKBiVCIpll
yHnJmCEZbqYy5l6za0wZf/u+P+/ve63f/YP1WPeuc/Z57ed+7X32mF8/Z8VA
R0fXg//Q/v/vM4Xo/r/PFCpPqlGOkHIv+T/33HLlCC9K+8+JLAqeOb2f/rPn
wlKJYNHkf7YHw8cz60b/szr/ulrvqqUj/+dKEnfog7dCyv/ngQ4m440bJf7z
jFrns6TN+/5zwt9Hz8fuiv3nhhGnpNV3u/+z3/rny9NbKf/dzyS+1fyXvvR/
3+d+WR0QZ2v6NLNG+1BRoKxizEs2rtK+f01sELwb/5uztPlfmyxT7Ro4OEs/
/+uCzRlR3YPspdn/WikxfO96X/bSxH+tV8bw5Ggfe+mjf/2qf3Ob8H7O0sB/
fVxgU0QgaXOpy78uCjuYTrBsKzX+13fpeDgF+HeVyv/rLwvbtu84u7d0afV/
3iF3LGajrnzp8X+9c7r6z8qccalGyv+8plzyI3m0onRH8+o/dpuv4j55pqlU
6fHKP07jHyN4jdtLB9uW/rGwtM5u0TN9pXaP//5jXqmcx2vNlNJMrd//2O5+
WN0R8+nSg1un/vFArtrXhY/0hLCi2j/2bnc5rMZrTRjX6yz/M74wF/GoNXvC
y3PhD80iilu947muEbHvDs3T3EvsvyOArhFv6oOmaTY+vMGVnexAcHwVmqRZ
yME7lD7SjmjYsH2MZpRf3fn5hTXxLOnlMM1t1+aG+B9aECYpdyg0D7Iqn5Vx
vkqwvo4bpPl2dYX55FUTwkSH/xfNBlI6auvjzxOTC0wDNDcPOVypsdAlNvAI
9tMczfGUmZR7mpCYMeyjOSKCSST5/Wmi2cWll2ZrRr32sBw9Qu/jWjfN7QeW
TE3rLxPrf5/6QbP6LSlvN3cnIuHt5k6aE/xiv2gtexAcgQ+/05w9t9GWujOQ
mBT61ULz+T0cBhkRocT+Y52NNKtkfvfXuPiEeNqXVU9zXO4OtZt3XxGStzfX
0BzunSKVeD+NmKfKVP3jkskFK+Y8QnZEpYTmJKuuW5paP4k8usiMf+a7qKjL
1LWb+HvVK55mJ635QVHBHkI+ZkcUzWd3L6w9TekhKqL9A2g2XzgjGsjVS6wV
FN6gWUsswyX2Ri+RslxpSfO1w9sG7Ot7CVYni/M09x/9K1i6uY8o1mpTp1l7
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
       "]]}},
    Axes->{True, True},
    AxesLabel->{
      FormBox["\"x\"", TraditionalForm], 
      FormBox["\"x'\"", TraditionalForm]},
    AxesOrigin->{0.65, 0},
    DisplayFunction->Identity,
    FrameLabel->{{None, None}, {None, None}},
    FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
    GridLinesStyle->Directive[
      GrayLevel[0.5, 0.4]],
    Method->{"ScalingFunctions" -> None},
    PlotRange->{{0.6607065829974189, 1.}, {-0.07884096079541772, 
     0.018692560130567835`}},
    PlotRangeClipping->True,
    PlotRangePadding->{{
       Scaled[0.05], 
       Scaled[0.05]}, {
       Scaled[0.05], 
       Scaled[0.05]}},
    Ticks->{Automatic, Automatic}], ",", 
   GraphicsBox[{{}, {}, 
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], FaceForm[Opacity[0.3]], LineBox[CompressedData["
1:eJwsl3k01d/Xx6XBnJAhKkMSSaWihDaiiKJSUYjKkKikTF8RmTNlDJmHjIWQ
+Rgj8x25hovLNU9XMkT1fH5rPfefu17rfM45e+9z9j77Lf7g2Q1LZiYmJo9d
TEz/+58Mlp7n+stATP//Uwvro/+P+ddP1129unbB+VtJ8f/4o9ywTvYFQbiv
xy/9P7axESfG7j8Kj9VshDkxll5MVRiXOwshvfFm7Bh/0+85WcWvAUFiOT9Y
MBa+M5bFxHwFxI+GndyB8REvx1WxguvAs13H5t8fBlqRMFHy3H0HbjsxtDYw
Vln6ZmEsaQp+ikbJDIwthqYEGasWMLUn5MoUxueuXXM+VGoJat3JB4YwDn8R
+fxux2O4rpyy0I3xjReQeUzlKTiYJUXWYeyhJG4i5O0AQTPfv8ZjzF2ybz20
0wmicxSH3mK8rPvgXUSJKxwocla0xfinoexw93d32GdwiiSHMXUm/jx7mRek
V1f+YMc4+8OAtKHnWxCnleuNbzGQAxuP23dTX/DjqrsfjHF9WrVjrnEgKC4k
ptzFuID50elhp3dwb7UaJ4mx0cqkdUN2CARnFdnmbzLQxpeyK+yH30Pxs/eX
fX4zUGQ2OeAzxEBuOB9FDuO3rjbXIDkWFqT3y+I3GEjTdOVWBmscnLKI8GTH
WLHKVCJzPQFemHYxFNYwlhesbD+cComZEFa0ykAdchm7ljZTwbeYv10K41MX
1K+Xk9Ng1ikx+s8KA2lFRepwx2cAh8P7DqNlLB7hJK+O29nQscn5OZHBQKTf
w74s13NgYf6i+MASAz1y/hgfr58LvN47z8IiAwXzo6E043x44pyQnj3LQBWT
2q68BoVgoshbT6cxUMsjhaZ/qyUwIRRTEDjKQH9fuO/pSy0F27m7qRIjDNTA
KJwbvFYGITnsfKeHGOjf4OUqgy/fQPO1+LU2MgN59x91EA2sBErunU+8JGx+
bWh2vGYVDHCYr18jMNCzlOlwduZqiLikw5LezUDNhSdf53nXQO3Xox6lLdj6
p0zf8F2tgxzfz8rxzQwk1yj/+kJxHRw4Qv7j0MhA5XU+zZeE6mHIrFPqdy0D
8USEHB2ZqIeLlGtytqUMxMlMG+gIaQSHoaOxxcmYf+dMuy/8+w49hnZfqj5i
95HUfcHleQu4uPbqlcUxUCfpL+46rQV+t2Q0e0YykHsasYHU0goXrB1eWvgx
0Msm+cdf49pAZtvvvQaPGUidN1LI4FYXiFtvo9tYMtBdsZMfiru6QPPfrtMv
LLD11ZLzX2l3A+umz97bxgxEl+1Hfgd74Fp2xRsLbew+3CVEs/Hj4M3+mAee
hxiIrZgjaoWFABJbne0LBxnI6cKKT6gGAQRM/ygbCDNQ+l8uS8XXBOgqLTg4
vYeByHZyN3OWCVBpZ+Hx4s8SGn1g/mp+iAhnxqQGxghLqFrj9Fn3EjI0GbQx
OXYtoVvsdV7HF8lwub5PZqV1Ca1X81whyvRChe3ku46aJRRV+6DqZ1IvjPt+
HiBlLSEDgXtMhgF9cOwYT5iB0xJqOev/9vjtfuijDJ1lfr6EHko/QYZh/SBx
NVIz6/ESSpDScDZs7QcnnPmnZpMlZGUxP0ZRGoBeO6akBxpLyI4/Cd8tPAjB
q32pYhxLKFgKptkIQ9DjHvn9z/YlpBk4IcbORoU1TT+JjxuL6KzvenHbBSp8
7b+aED64iK7fbc/1y6HC8LG9JldSFxG19NYt9N8whE1lUsSlFlGLZu2llYAR
uMgnlZ8isIjWhszzxVNHwC36wDIryyJySBHhOFwxApuXSVYxkwvoWhN9Ondq
BAK5SiJzPi0g7/FlvxStUZgdqhSiHFpAh8U8zNJXR+HGA3bL7XwLaP70eftR
DhrsTOaY38e8gCjnk3fPitFAmHnAmnNkHu09f9/F7AoNTH069TkT5lF/cpRa
STwNoseZeLK55tFav7pU3Mkx8Hjua/95cw5JH+LeuKwxBl1b9g8ypudQ0JD9
YvnNMQj58+PX/eY5xCNUtUV9NQZOStEzIu5zaOzQoQ+y38bA8W8DZD6eQy2v
cUkD38dgRKV9h9gdbL1jog90yGNwm8+eNiM/h/R2LEmZrIwBPX0769DELArg
6xgzkBuHwCLe9XXCLKr3prCNnh8HFT4mc9b6WXRVQ+HPUe1xEK1zTmBOmEVX
Tp4wnLEYh22qU4NPrs0iDaX3f1gjxuHBsGH2UeVZ9KgmvNU4cRwO1PFuUI/M
IlUNspt59jicvpOnJ7NtFv0tUF8LqRkHFuO2HL2vM6g8qG+P2fg4jNqV/hRI
mkGrd5w+8CyMQ4xrcHxvwAwSyX+533ZtHOa89jioms0g7c50TlY2OlR7fjce
055BtpymL/R46NDo5sbjdXoGpZf5t5zeRwec3cL9TNYZFH5S4/T0ETrssvr2
5djPaWTy4u7FsuN04D86rFYwNI1CZUQVJRXoIMHH8upI6zTyO/M26pQyHTTW
HxUmFE+j7ltjGyNqdIjcuesOe+I02igT2H7iEh3OWK91OPpPoyivFb39unS4
qHPJqc9hGp0cvvkyW58Oo73/ys6ZTCOzDQ4Bwk06yIH8z6hL0+jzxs+uhDvY
+nmTofMnp1Eh25gy8z1svvbJBQ2RafTrRuHGTjM66GkIvYreOY24/p3KzDKn
g0dzvj99cQr5n9UYGHtAh9U/vwNP90+hX4dLz9U8ogNRcM+IZ9MUmvj54O4p
Kzqcg435ts9TaLZNYkjDmg4XUhoF+eOmUBSx3XQBYxZr93qzt1PI4byC6xkb
OpCVea9n20+h5Hf7evZivPFJ7+TynSm0vyx8Xxj2/eszca0qGlPI3Ml1bzq2
/luTR28Djk2h55lfPQ0s6SCbINxGEphCV/eLCsc+pEPUE+ldh7dNoa2vCWlO
FnQY1v6d4jQ7id5osfUtYP4d+7y1vZ00iQZzLrv+w/yPF/j4QaJuEvFVKmpl
G9Hhyh/N1te5k0hav+z3lCEdTIYebg1GTSJRjSyjegM6LMhbJql5TqKtJxMH
5PXosO9wPU7AcBI5tJIpJHU6LFWsKARdmER7Ci5dY1ehw48v1QXbZSZR2jG/
wyTsvO3aTniz/51AsRtibHLSdDBXDiv/MDWB+iR1myvEsPHAN8XHCRMoxSVZ
YVCIDiVrZ9IdsydQT1dK1SgLHSwVdjkeipxAtbOV0U1/x0HgnW/54OsJdMGK
kq/yaxwsKnJv29+cQEw5f4TnRsbh+RezAK0LE6j13XPFQ+RxsF4fHJWWmUDH
tzUILraNw3qNYS3vPzqi9vWXaH4dh11GJsLCM3T0+Ra3QlfWONA9rxgcJ9HR
kfit7XNx46B30OePRx4dxSTtERj3GAet7xqWnUZ0NGudeqb54jgE5/7+lKlF
R9trGd+2KYxDl6v5nuBTdNT2SP7uyOFxUETPS3046eiZnZagz65xeHpCjeVE
/Ti6O3hC0apxDAxKtx/3/jyO5E/aOpYUjcGB5Rm1iYRxbL44S2byGDx1uh9K
cxpH+uc6r9q7jYHcwI83pXLjaMe4gkyC7BgcPqDVECcyjjT2DQn9ERiDm56+
pe/ZxlGH/gX6NuYxMNrK5aqlj6E/4U1fV8g0CFSnsvMmj6EU/g2ft+40UFR5
/+Qn/xgaK20ZsSkbhUcEswTlnWNI1zpRn+PjKHDMXlr4uEJDf+/67LvpNQrx
fIN38wk0dMrhzlPClVHolZIMZYmkoXTuOJskyggYhysckXhLQ//4uS69qB6B
Axy5PkaONHRWISZ4PmkEThK8+/YZ0lCjasPLgQcj0L7jweqaAA1NTf4SU+oc
hkL9300bLDRU+Z+ErHXIMJhOey/u2xhFFjDmN6U3DO2fZDPKBkaR5C3yi8kf
VJgqlUuyTRtFmumyf+hVQ9C/TrRhVhxFrnt4ZnzeDACfZnTH5pFRdIDXPXbt
xACwU+pyDwqPInbjv2wF1H44VtJyj/Z3BHFeTTIYV+qHn7+jFO3aRtCL6bTx
lMk+GLxfyFddM4JU5UWVL73vA68GKadzRSOII4H2n+L5PnDklb1Y/mEE3b3k
/2QrsBc2zFxfDz0eQUc6zqpqiJPBjfZYK8FsBJkKU/9aNJOAvUvgesDNEcSV
EjdEtiHBr4rzIQzVEXS2hy7eXEAEo/lqDnZ+bP65ad6+EwTIr0h7pMsxgj6V
6bM3d+FB79PTktptI+jW49XXPPZ4kPZLkHSlDqPY6Ti2rk84cPf+l6oSN4xE
+7nStvh7gL/ItnEpYBitGxUmCJl3w+kH6dVcrsPowGvfw7sju2A0fYeHz91h
NEW8IRvwqwMejCw9HtYdRsdwm0Tewx2gvSb/KlN1GAlRL3G+udkO0pzn5V9J
DCOpKknP3QU/gKesaecb/mE0cdNmSqGvFdQjZNXXWYdRYOiX83rMrXBLif/M
aQYVVbrl/rp+8zvIFN7jXqNT0cTK7uDLbs1wuGhn3NEBKjqV1md1LqUJdPAO
v2jfqYhy52GY0HQDEKsnm2xqqOiLYUr5bs4G+PCWWdO8hIrY8vYlcx2vh+D0
+/QfeVR0/d3+70L6dZAV91EkK52KaLpzFtbUWhik3Tb+lUBF2bcnmxv314Dk
lixPeRQVtcQ21V41roL6iI8Vcf5UZKUWFrir8xvsYHcMq/CiotDHRTYXd5TB
Sa3+nGvuVPRQT3Tth1IJqNY/+8/YGfNHx1E51b4YxDd7nPpfUJF1w2WVnuRC
wD9L2I1/SkX/HX/KVJ1SAFof7UrVnlCR9I1vIul/c8Dhz+iQlA0VuRcl9z40
zgK9PXG/fSypSGK3iTpnURqUfsnyevQQ80dceFeWXBK86FrzKLegoiZ72fgX
P2Og3u7GJS9zKmJK/tegaB0Gw7Eyh9B9KmLtKeH5b/ANmFxcNH+BMdNUasfD
szeg9QG/bgLGdbEBRq+KXVDJNJfceWz+nr9lu+q2v0OF7Vdu6GPri+26mXRm
MArpbanuGniA2Ud0/f1a+SMSemYcNfSIila9Ul51d6eiTEFu7TvWVJRG5pRQ
9clEb6d77LRtqajo5Xm7jfM5SKNvz7UieyraOT1a8+tnPnrRq3Y2wgHzb8S0
7v2dQpTZj3ecfUVFwRfVuM8rFqPHpHP6NW7Y+Vu+fDPHX4IMqsb3sr6hoivv
yK2pq6Vo2lN7T4cvFbFvaSTe6PuGmgXIwWzBVDT+J7p4rbICSb85RKqLoCLD
I3KVgUlVaEybf/dyHBWZmQ53Mr2tQUuca6aJqVSEW9LkvWWDkMHHvQIPi6kI
tOSMquLrke4L/qnXVVS0/z7OMj60AX0ao+TyNVNRwYZiT593I/J1kPxd2EVF
K0vXZIveN6DbZ9g0WnqpiK75vmDWtx7JCCbr3hnB7oPuh1O+7nVo8e5u7QdT
2P1tupe7NlOLDjzypsyvUlGg6qINY7ASfRba1vH8DxUV58iv/RosRw7XLOwc
tw+jtmrbuYzRMtRprjy5iuVP/1n3479nShB7f+6TLa5h9DxmTxtjvRgNZ7wW
9+UdRsGFJ038OYoQ776E4xECw6iG+d4PO63P6GnoTLmk8DD6zFL4fcU9F1WZ
3JxQPTCMdlsxFybWZKHGgepBqugw+sO34mPGko6uPtzdwIrlsxL3tSCTkiQk
oXuiuvoQlu9P3UZY7GIR5+wuxqbkMLI5WcRRoBCOZqSP+rYcHkYfRXOuOUp4
o1c+idFiUsOIKROnkTh9H+VZ96qwYmx0SDBCmO0lBB24Fu2JfR8Qtf3nGs0f
9jCcK/yx9VLifSyEuyNAVa69URzbL2JGl08xIQ64D9R2XRMfRmalbWmMoyng
w9Gywo3ZK2AVJpjgmQ6JF00MrPYPo9DhG29T27PgYmj95o19w8gt79hubu5c
YDp1naMXq0fmxjJOCzoFkNSuEfKTZxg9a/F9cvhCIbSRgsNysHju+UvMEiQU
wfH2w2K/sXjXZdv/R3j4FV5J7bg6gZ2Hu2iVs9lSCeg+OCj57C8VXayUPlrr
Ugb3Nmy/Rq9TkQZOXHx96xsYWI2w3lvG6kU1zyzP6wqI3919/vs4FeX/nTfe
fF4Nu68E2y8OURGvVYPsRnsNtLf3BrWQqShqdYrmeAgBmjzf7N+C5ecro9qN
sTqol3zo7YCoSPNC0G6voHrInD9vy/WNinouHwkzONEABTbCv80yqcj7iuUw
zrERRNjkNQQ+UtGzzwdCA/iagPUVleGN5YOKucP590VNcIytI8HTg4p2pPWM
p001w/28U6EiN7H9hS327rnYCq7EstDIy1R0p8fobDKpFZ7U7tvXokxF+KNf
eKOtfsDYCzbKw0NUpH5IwBS9bYPFrVeOAYtDaK2Xv8M4rwPUovmeMUaHkMf2
dz6P5Tuh60FeqwhxCB1UdA34VdoJcU4SL799G0JZdeLGIZVdcDUVig+6D6H6
QzImO4x74MV0u0uW3RBazTlKORTTAyvbXCV/mQwhqxBGYjC+B0aC2FqnVYbQ
i6/YYejg4Idud6DG70FU6ZDIZ3gcDxZWco1804NokFz8g26Jh7mDhiJFvYPI
UrrndMdHPNzZbGq6UTKIVusj+j+yEqD2cLLWxSeDiINvm5lTHwF22P3u9zMa
RIoziU/J7EQI2fxilqA1iCQlwxdjVIgAxivuSqKD6ObbgychiQh1DbZH7vYM
IBEtf9nbd7H3W+ZhYt7RAVT7Q/XEbBkZNFGbgQPfABK4TD/sNEYGZ2/qBNtW
PxJ0Ov7dgrsXnkcVqZZ19CPbiF3lDyx74dRKjDSXXT86YPlCX529D3S2E97+
d7MfpduIe7Oc6oPgYpea+vP9aP6mcaeqcR/EZL+c7GXtRxNueU+Ys/ogctyj
VCmdglBbPlFciQIX1XU/vwqkoH6GFz3JhAJbl2JKQp5R0BOhg94JnhRIj7Jl
MlSmIPH5e4IiTRTQFlkV18b1Ict7TxofX+4HGV6HqDNrvciYm6Vl+dwA2H4S
+WY70IsWgyck9W8NwECItJQP6kUXfYe+6DgMQK3M76gH/r0o1FlzRix7ADjv
OJr38fciySan8WCeQeCJFfZZlCOjQyFjIxvEQSiJYUv32UNGXjbsHvvmBkF0
ZK8t808SusDLw/6LeQj+Xtm3s+IbCXuPK5UnTwwBQ44aKqRGQvefZr+d9hsC
sdZEZ5weEdnN/RexdJQKrhqpakInicjdO1zltioVWLcFfrnKR0TRgp174/Sp
oHbrxKAPhYCqWkPSqxyxfjHtz5aUJQEtcvT7xFVS4aowoeaaKx69u7Ajn3Zx
GHYxD8tkRfcgn6OzhcNSIxBuF+NKd+pBC0esXaVPjIBXUggLv1EPshbauf/l
2RF4X+pH0xTuQRN8268LaI/AdN9boS7lbtR161FCzOMRkBsreq2n2YnO02pV
NwtGIMLjpwGXyg+UU5ViSYVRUIlV4czebEXNblGKhjqjkCqcoyNa1Yo0sizG
B26MAuvFRs00pVa0crDmsYTVKHzRGtzz80wL4k+eEY8NGQXx25LDXpLN6IhY
iLfjyCj4uM3dWBqvQ9dZbtyT/ECDoAuCm17JdSjaLcHVM4MGUkrn7tKN69Cn
efUHq4U04M/PFoWPCLnKeJiea6PBcoTj6XybGjR+M8mf9y8NBHd13R9YKEcB
kcmsek/G4C3bWfZOwy9I+wv7z0mTcahjem1YwP4ZOWZ6Rz9/Og4L8UvoOcpH
o9tFLou+GQeiorxc7OFcVPyqUXoxfRyqj1BUD45nILkBiV6j+XEYz69mWtaP
QjnR/zav+9OhmLs4ff7dB9jVvFsmo3cCtvfJ7vyvuhbGSAKhpqPToCn6ofzi
GwT/qRSPT25Mw6KKldhDiTrQ+BXLG8Q7A2/XOFL/TNZBfnJn6F7NGWiv38af
4NwAKtmFGueyZ+DjjZpr1dnNIMveYWX3chY8Xv8VzjTsgIfnnM9uF56Hy/en
JsoaOmCn5+NQ0pl5GLEImJTD6trQWwPPr/rzIBOwqaDH3QX3arztwn3nwTr8
EO5aTzcQ08UPNTDmIZRDvra1GAddsiWk1PYFiDAeZt45jwNl3Qjj9YkF8LeQ
n3l5BA82GQX8N5kXYSt8M2MRq1M3FzaO8iktwlP25imDIAIMaLu5fMlaBFYd
npjGpyToLsCz/VRbgnHz/exWRSSQKRK/16K/BFJr9apaKyRwyxa6EWe2BJF1
grQKNzIcjRQfPeO+BJ77donr15LB5QBv/Z+gJQjdPE0RY+4Fd1PfkYa4JdgT
cMXBNagXlAd43dS+LUEHt+gJpu5eaPpzVmO9Gfv+ctXBRr4+WMiVoecSl4Av
utW0xqgPuF/fOEMhL0FPz5koSOyDhtYRuTMZSyC22LHz50gfCLTVqHc4LMEY
njm/7xAF2KM5jFJhCeRrE9wufKJAQ3Pp1R3li5AwtSe6bpICqoKmt0VuLcLN
10wtLkf6oewuLjRveQEkdIWuhWX0g9iFRx8UTyyAz7dr88+iB2C1+7naUsEc
1Lm8tSLdGILVt0cefq2fhlsKjAVZ/yHICItSUbWaBsK0UWtL5RDg8RqpyhzT
EHpHUIYgSoUup8e5UbenYPWpsM2NUSq0ZFOPFyxPQG+VQcZ98RGQ/3HHV1Rt
HK7HHrSZUxiB8RbjtsbZMej/LM1/6MoIVNrnipFjx2BstHYyzGEEIiNdRS4y
aMDjF/7BEdO9rYEft8nnjMJBs3i3Ro1RELtCvDpsTAWfkXjZgeujcMKRX0C3
fgj+vbe2yzIfBWe+3uT/ZIbglVngMePXo6BWKL4htTUADW+dzc5/HYUWks/3
wFwK3CguvLSBRkGW+23pX0EKdNS6Nz3tGIU3a4z1E3598BYns+UxPgoCtpEy
jY964fwrj8wLPDTYkZGfFXKUBAI7Q/+rFqGB3kffmO+JRJiwE2v7eZgGRizM
v4t5iKAroHkuXIkGN4T4w1I38TAbsH4oyJQGMYpLm6W9PeBTOO45ZEkD8Z7O
/2wNeiBbXZRv3p4GR5ILjSMiu2Gkp/SUxmtsvemdHUyvO6Hk0vb4TqwO7bjK
z2V7/wd8Mleb40imwa1tR7JO32uFtD0i3GyZNEhnyL25YNQCFXxNO9SxujTT
OnJ2922sX+lNdnIvpcEfg0WFrttNsJ/3zJpzJQ3gTnlps1EjPK9VfVDYSINz
paddr5vXA5mUPTnfQgNLkaCeEUusnxK3L5xrpwGnWWC6MqUWhjvydhV0Y/7I
hDFzTldD/za/MycINGinzX+X26wE89n9Po5kGoTj7TcSuCvgQMl7cKPQoFO9
N+261Deo9dtZdHGQBmOuy+06UArF4XESPVQa1O/2fe159yvc9n42JDpKA4ug
g5XzzkWQ5bL9yOkxGoic/LVx8MQXyDX6c5GdTgOfLx6+6EUe2LLsdM2coMEa
/vCer5WfgPG4gX3nFA08KYqRi7syQNtySFVmmgbSzH9ZntxJARfqn9u8MzTo
2xfWrWgUB4GV7fF1GPs4ojvzbBFQFW947cwsDVzal+Xa/X0hI9C/wh5jtbxW
rbsn7WB6qFvkf5yCb71T8NoeTTdoFp/CODt/fwSt0hftePSnohZbT7PTOUZ5
ewRKmNvznAfjqXypD9LicYgrIIZHFrPHm8dPJkskBVVaZA5wYPaKfOG0GkpL
R/cS/2x1YP7sDrQebp7OQmpz9XtNMX8H05k4LOVykcWip2E1Fg/nMXOWRvsC
VHG5eX4Gi5dmdMCG461CpBYjyjs9TAPe41dX7ZeL0MJ/+3+WDdGgqEAjkBDy
FX0KP1PU0Ie9a0fwnxmoDPmePsdgws6rMEnnYfHtcvShnvyFGzvPXW2P1xZm
K9AN3UmD5A4aNEhyZMzy1KATC0f9xX7Q4MxRj5yvabXIL6pj7EUzDQK2ZMq2
76tD7Oc7v72rwc6/eyezfFY9shv5432jggYnsxYflD9pQCV9J/bPlmDj39zD
Qk42ontcyuYReVg8zV+ckylvQowlullqFna/x27m/XRrRuSXCgTvVBr0OrWR
+VS/o808y6aaGBpcy7LRNEUtqEWKL1rwPQ0+b1d+HeTZiuxjQ95ovsPWv2Nr
yg8/kHqgymkhTxrsXXhUpFvdhph3GnbmPsL2U2Kxf/alE515Y6GaiuWn0412
Qq1tF/o4njr45DYNQithy+1wN3pdW3LK4zINVEi7Q1P0epAt5wpzwhEadH17
9Xl/DQ6pHbEtVhSlQXfx2fb3Qnh0cpQz45MADcKGthOaHPHI3HAEse2kwS//
N0o2MgTk2xo/iBsehTPLtzqr3xOR0OUXOcLkUTh5XXtSaZaI7jHtiFHC6tGM
75uF/zRJKKXQSeX3t1GYo5ep31glIYUp9/pArG+JKJ6xNL/Ti2iX00PWT2J9
zp/KSw3c/WgxfrUg/dAo6O1li1e170dMa/F3RQVGwa+HV/ptWz9Cbn+aAn6P
wJbfjeXnPgPok885glT9CATsNZT/+WsQ5XV9IWZqjYD7nfw2255h1Kd694Ml
Vr8niv/98uAfQQnpJ+6vSY6AlKuwUKnGCBr6y3Tp/fYRWN4292Pq4wj6YPBO
V/31MBjUrK+4GoyitU4PLjcjKiRF4MYTS2ho64vk1JVTVPhzgjlpdISGZPcM
9dVzUGH4TpiYENcYijnz9UlazRCUTonOmVmOoaXHJibyB4bAgXTM3ZR/HE2L
vRhQWBkEFSNTFXX1cbTzbq7iaNsg7LWqfSxsP47ShK+TjzkPQi03Hj43jaPV
a5WTce0DoCCxjf7QkY4cjka79SYPgObZV9KbSXTkE8X8ttpxAMKNXwkEtdER
VVpc8bXwACw/zlgOE59AP4bVtxnP94Pfk93mLFcnUHpaldcg6odx+g5HZ5cJ
dGJM9TtLRD8YFDyyGkmfQF8c2Yf6H/aD5pkER43uCWTeepvJWaEf+t2cUlwq
JtBtjgdjqSz98B/HwO9LDydQ7Xn1Z//1U2AqnHslkmsCVci+zWH+TIHiNmlV
83I6KjE64KXoTQHnD3KR+Q/p6KmS2SL/HQq8O63wyZWbjo5lP3YjMFOA9ehq
6QebceSvZPfXerAP6LQyZluRcUStqnEOLesD3Ws7ywu6xtBBpWe0ELs+GOx5
ZBGqOIZwarxxF4Z74XfjjecNHDRkxvfTOYNKhhcUnfSyD8NI17/VcqmODO3U
4jsCmO7XGSy8XJdOhvyQAys23lTEoNVcnbIlw3vufR3Tz4ZQTDR9E/6R4JOn
7Zbd7QFkYHamXg1IkFDjmsd8oxd9d7Z2MZMhQXMSt+0QiYy8wzefM/hIcFJa
70nJXTKac2R77DhDBB2ehV9G1iTEsavtZOdHIpzivLnqF0xA3Dbfi92CiHDu
HIV+TYiAdq+KMaJdiDAuHMgskIlHVU8l+3huY7qTv2QkrR6H7F68/L5DgAjF
rpg039WD7J9qJ+9kIcLNyw8+cyl0I/Oj3R/t1gmgYHLFIcWsC3ER6xQfDxKg
cugSW+e3DtT3w+sUcw4Btls5ZF32/oGeXvzsvS+RAA0dzzkXKlrRjZrl22Hv
CRDBwtMQ+7MFWe/fVhHxHwF8TghSV+y+IxvDB9+GbhIg7cmtLIJzI9peJfd+
zxUCxP176nSxsAGxI/U7OWoECNJdF+CerUcOGco9LCcIkBzDblRuXYf+jIoK
tksRIMUt2OPoTYRO86EXiwcJsO7HTfgwUINOTn+Our2HAPSbt+RCf1eic+k3
GDFsBMjqUK3ifV+BXvy6EnZ6OwFSO+zHLx0rRx4lu2vd1/AgfYS9tvx5KYq1
tZiWWsZ0/rIe/899JWjlcWig9Dwe/oU8zSK3FGP16vB9uXE8XG14di1CvhA5
2UyeOD6CB+ErdWmd/QXon29IvtcglmtqCQmV9/KQXVFuphQFD3u5O9Ym6Nno
/ti3OREyHtgyXH9edc1CznuP3zQn4MFtrq1thj8D3VD1y13uwYMZaaKivCoV
vb+t1ITrwkNL/NSGJSkJLRtUO2x14CHh34/kHK14FLHB4uvQjoek1DjNU63R
aIewK+FEG9ZnqQRdWzF5jyao6qcVf+DhGfcXUgtLECK8jHJ724oH5OQWMuPq
hR6zpnsKYKxxblD1hdgLdPF7stBCCx7U3sqFu99UQgIaJSJs2HjPV/J5PhN7
+BltZ26FsQvldbJPjgcczRdu2IGt7/ZX2aX8uD9ktIfsH8OYl5Z0Zzs9FC4r
R+syYfYld+R7DCtHwpY6k+w9zP59e55Vv/0ZA3lSSTHLnXgwVum2c4+LB9XL
OrbN3Xg4pcWc0SuXBMobyT54HB4yMrFetS8FyjO7W4SIeOBwcQ7ZCE+DCJKS
QCwWT8mXtp3TahmQxaN2Qw+Lt9ZLDV7ZqUzA0y6ancXOQ+Zm2NNmv0+wgsva
f2cYDyYzIyt1+3OgP4zzeS4ND4dNL34/nJsLypwqcHICD9d8KhK2jueDlo/9
ehd2/k+j4tIkRb/An0X1MjoDD/gg8t+LWoXwTuRV7NFVPDRuuvbWrRbC+oUl
34+/8SD3NtWSK6MICJW1T87/w8MOGxbl41eLocn++rntOwhwzP7ZeenlYhB5
5Ef9xUoAL56jz5kiv4JzhPlbQz4CsIa5Fd5vLQEVvzbrWiECPN3LTFwyKYWJ
M+aMq9h9/xmO7r+cLwVVyc/1FBkCnLitx2LN/A0ISV4bBCxf+p9E9I74Yf2l
W9+3RQUC+J/iuv+ApRy0ZgJq/DUI4PhVqj1iqxw+R+wPGtMmQHqGQorCswpY
uzfw/Z4+Aa5d8JURplZAAOl0Q6IJAVx23UysKayEbQHLmZYPCcCx0FDkv7cK
nmpfV7tkSwC1ztCEnJdVkKbEx7jqgtmvT6rmOFoNmSEBpx09CVB0/8C9O57V
sE+xwafAjwCGmiYfeXDVoO8+X2waTYCptb4j049r4MOBvk7cRwIM7Td7y1tU
A1nKr+3vZBDg1Bklm4aVGqhQTayP/EoAWfrvC10OtRCt86RCu4oAJoZWjxXz
sH5cPL6ao5EAf8zlQ1VHa8HlZuH8QBsB3g3oE6f5EKQQ/ziV4wng/ulIqvpF
BAcK3/ul9GP6eE/Fc91nCI6me1yJpBEgw4wTcX1AsGnbuxQ2Q4D6XhnWsBoE
35s+f4peJsDBxn2tpGEEzfaCiem/CVBhPe429RfBeuihf+XMRLibo9NlxVUH
IY11f4jsRFhcsh9q3lcH8uyVuFVeItzZut0VJVkHS7rqZQdEiLB2X5O9V64O
SA4BE9qHiHCm8NXvMAVs/FF9orMsEVy9jrI2KteB/u6DgjmniSBnk/bRUa0O
mO70hAwqE6F8fb945sU6aFxnUeXRJIKx9vrfu1p1ULNs+vCSHqbL1PjzP2C8
UmWt/Z8hZl9hYqmFZh1MjwgofDEhwqa2Zl6Feh0cXDB5MfqICLtrqvZnqNYB
73NZHR57IlBqy+Ikz9WBzk9H5guviJDENFV0Qb4O1HZIT1q9JkLGGeZfv6Tr
QOqLjto7XyLsK9H6eVW0DloeK5nkhhDBfP6i3pW9ddDaE/a+MZoInVcsCxdY
sPHwoLNkTDe2qgykvl5B8PC2deZoJhG0X6rXupMRDGXUKIyUYv5LyvGVRiBY
8yveha8hghK9fs8fOwS550hbFc1EqHGPd6rXRPDtlP3AYxIRejMsc4bmamGs
rTDs5BARfgy8L9CsqYV34isbM+NEYFHWc7z0rhYCuIMCzq0QQTozoPicWC28
yhl3adskgqdO3MNzkzXwXlap/Op2EoxIJ1xh5NWAm/6D6cO8JNjZ09hccLwG
nqz1TXCdIMH7/UlZssLVMOMU4ZSmQAKyfX3CILEKPse7/CelQoJTyfOHW0Oq
4Mzhgiub2iRgiH4tsfldCVw3G/V09Ukgr++RePRzJTBFmpwMvEWC5+vGw2rm
lXD5cw5HpwUJJnTSFX1QBRxVkVLGW2Pj59VP1tpVwOzXyapGexJI//LRsxKq
AHdjL7B1JUFdQvea8JNyWLb6garCSEDTbvvX8bcM3gxUVe2LJkHa7pv1x1PK
QMvs7mWLeBJodf0aPqVWBjvfUVFeBgmye+1fqriXAtN5CcHPOSQw6NUR1Bcq
Bdmi5dYPn0lQvTRic/BrCZiIDvFLlZNA+Ie8Ixf9K3Dkth5orcb8O/3I+Lz7
V1CWHDe+Xk+CO3su6lzg/QoGNG4doTYS5FeFpNPPF4M4TWD+eT8JQpRzzZ54
FgJXaYG+FpUEuixZnmy7C+Hf5uLc31ESFJV+5rI++wUItYGzYtMkGEjvcXhn
UwBU3DI5YI4EK7d6lJw88iGO3UCAtIjFUyigvCAiD7TdOIf2rZJAr/xFytmy
HNhRm8zBu0GCGtM8m4zmbAiy7hqY3yTBYQHb7AjCJ/DaafVFfxsZ/ur76knP
ZkLVru13SdvJsC1ukntmJQPEzqavqO4iQxfbMOuDP+mwpRdo/I2dDAp3Qm/k
sKfBivFBegsnGU6ueBEjuFMhflsEpXI3GWLWZ5it+VJgWvG3UPgeMhQuSI1a
HksC6pyd72VeMuB2vTNnOfkRnASYto3ykcHaLCanQz4eCrJ+2Jvwk+GS8NBo
t/wHeBM+XFAhQIZb5j+Py56Mgejgb+nrgmSwq8yuWD8WBTY0ZaV9+8gg+YPL
74Z0BJjdzTYTESbDbt+HJjckwkErznLHP4yLWT12SCoGw+zFQeEmETI8rbR1
u304AA7+exlhu58Mr7S/ZT7j9YHcZx/uLWNsUCty6NKmJ5id/2J17wAZem/J
R2h3OQPLDomMTIzf3GQxS1B5BnUC6hoEjE/OXinImb0L/TjVoEGMRwYPyGw3
Ukdfh1Zc6jHWk7PzHDtshUxobpzeGGfkP5ix2XJEU/7jGgcxphKOyNIn3JGt
0yXhGGx/zoVt48tT3ujnrdLwaczezhC37a/M/FFsl1aGEMZ3V7ZiygnvkHUA
581DmH9tkk0pFyTD0Wn9rwlsWDwScI9uqptFoOnyh37tWLzmZLw/NsVGoWCd
9xKPsXh+8AuSyOmJQSXzFE/aXjL0tT0K62aNQxvvBwrOYudBo6wFC6klIPUQ
r8pX3GQwHRkbjcpLRi9rLMrNuMggqu/7vWkxBbnbvWg+xEGG0B1QzsOWhhTG
35hrYPflhGvFJUulDPSKFnDsI3afmi5tc7xqkInuGz92wTNh9j+Z3KZrlYUs
YpR5Sb9JwPrBMFMnLBvx6zukpq6RsHel1uZYWg7KtGQ5rbtCAuuq4LnJr7no
FjeJrjBPArGCwOp8Qj4Kd1IPfDpEgt6PtjM2XoWIasCEP0IhASVLYs5+ZxEq
zIgMREQSKAevemcEFKFxJ172d+0kqN1+3SAwuBiN+TsB+k4C7kzGERmuryhj
qLcej+XvH3ON30PBX9Hpt8GFH76RINbWtdk2sAQNTpkk6RaToNE4jXJmVyli
QZKD1HwS4DOZRNe9SlHh7agrn1JJEOfV53jNqQwpzf/51BJIgqSS+37/XS9H
vrPlDT5vSdDB+981g+ZyVFsr6SH5mgSWJxjvps5WoICRan6u5ySQ0soW0dlX
ia7d/dL7zhCrv66lE3s7qpDicWkh66tYfFJClQ0UqlHuI9aSI5dIwPXw2In9
idUoc2rh5d2zmL5CV3Wu2tSggsJk/3AhEhDxY/9s5mqRsUFNhjQPCQS1YobM
LiKU3y17Pp8Nqx9PExRmPyB0+MyojPNvInw4HmbUL1qHaraET6FlIvideKr+
UrsODT95t3sF02e9LWX8Bs/r0PYI3U+HB4jQnVt7tammDj3heCB+iECEUZ2H
hkZjdSimqZS+u50I9PiMF4dZ65HE5+c9xZVECNzGZfNAvx75fmtvVowjwvTY
mqEssR457lKWKwongu1GuY7ez3rECBZb3h9AhB7Bgx7RPA1ox7cs5TYnItzq
Ikx80G1ArdE/IzmfEmGXQIayvnUD8pbgZqhbYnqvWZBHyrsBHatmt/C/SQSV
6ikPudIG1O8ce/nDFSLMtZSdvdvZgIbPqA4mqhNBqF+7Onm8AZE1xokBJ4jA
6f7+2NM9jcgysnr/MylMT247lflTshE9Re4U3QNEOJYmsBV0rhGJ5DxwncH6
HUmJN2ZTJo3IzOq+WsE2LH6rC6u59o3I8C/jog2mLxNxr/xdXjeiYUX8qsgi
AZjSuu7qBzeijQ7znlY6AZSe1gzLxTciTYFcnWeY/ixi5Yzm/dSIAgYqB7gJ
BCB9CN7YLG5Eb+nJ/3J/EEDoEk/wVE0jWt+yPK5eR4DZs3bt5JZGlD+zbxRf
RoCq6GeKzT2Y/c6t4eYFBFj1m9ct7mtEY088ymbSCcB5ujzo43AjMjkR0O4Q
j9nDj3vhTW9EofUxeqvhBHgk6pL6YKYRCb/pLHfxJ8CFneQu5YVGpORlGrbx
mgDvSQtfORmN6MiAs77rSwI8TP7ORlxuRPszrrqsY/3xNweLwPCfjUhvmTvQ
2YIAkfcaZ9UwXh1YZFq7Q4CNJ0vTY9j8684H7ztfI8BS0ZyKyyJmX3yfxIYm
AfR2tyVuzTaig77Wne7KBJBs3UN5NtmIdL0macynCDDq2DbcM9qIppJyJt9J
EyA2MT/r4EAjcp//e19IlACmODsJI0IjCnI/15PNj62XUHfZva0RRd77VK3K
SQBXf1OOoLpGJBD/MaeXGYuP+IbFm9JGFHf5sYjzBh4GVrXVzHIaUQ7NLGb/
Eh74hDfjJT42okf1hei/IUz/tZpN3/VoRBTR+J2WmD6jGvXKHnraiNLcdoje
xvTfs5iHIRTsPuSEOnZdr8BD0dncdK6zjShp662laSEeUo+aEQIlGtHdnmP4
F5/wcGVaSIjBidkrHHu8JhoPYves+l5TG9BcS6L4z2A80P2EllObG1CLpzXj
jA8ejlHfOH7Oa0BjYc1nqC/wIOvR987jZQPKyRb+cskW06t/N3jU7zSgCb0S
vhoLPGjuU6ROn2tAuHLFHJIBHvxDHhyZW69HYzLjIy7aeBDwdovU7K1Hxrtk
eY6p4WGXlMcpr5J6lFim+7zpBB6G+kPqMp/UI+EjH3Jyj2B6sGCGL0SrHunu
MV5KE8VD4A0O0zsH69FJvwNV7dx4cI5WiovsqEORXyJ1/rDgoeJX7NKOtDrE
/e7hbw0mPKzl3dtl5FSHOsGJwsnAAZOmqGWaSB3a89DjbA4BB2x5jhZBRbVo
ssjQI6gDB4pl7Q1vrtQi22dPBH2acUDrqCSdG61BTSnJRg3fcFAeo+w8z1KD
7K6f4WItwsHNNG3qdGw1chd5f8wmFwcvdVYWPx2uRlPf5RpdE3Egn4O7anu+
Cv3gOn3pWCwO9noZnX1WX4kOK73T3QzHwZPT0rvOXqpE11nRypIPDmIt9UL3
6FSgx63khzpPcTBhjw/6dfob6rbyjluwwcEhj4zS/TllKDk/0b3kIfb9u+mf
7PvL0P66VdMMYxzoBWmWwmYJirqdZNltiAMrh5gaf+sStFcqUO6AAQ6G1Alj
cbivKFg0Y8+hyzjIcmduFE0uRkSTllODGjjYJa+aEM1cjEZoNocqL+Dgvx58
NuVhEZJ/esVtQhEHqj++nsWJFqJJrY90hdM4yFdJ19r96zO6whEuk38CBxcK
qHJiWQVoc7uXFrcMDmpwSQOwmYsePK+8Wn0Yi+dNxe3xXjmYoLjhESeBg2v+
Ex2jzNlILX7B9ZMoDjpwwU9EPLNQSf+psYn9OCCm7OLVXc1AC0pNJkbCmP0W
8j9f2qQjddfLgVuCOPB+O6OeSEpFf40tOIj8ODjnyC3fqpqCnBPLfIf5sP1U
Nid+qiciHhwjXpQXB3fdn7vY/43DBE/eXNQeHGyrSxbeVRSDQu+OC6lx4+DV
va1TrcaRiFV6e434bhzc1jXJcWeEoa/Bz53Oc+HAd6Hi8IRIIIorjaIFceKg
5brFNtopb1Tf3ZvEh/HuS5rN7PZO6DRrmjaJAwcuaidRdII5Wnt373UPxgcK
Av20hu8AuD3u34l937GhHpT88CWclvL6/QpjyQGZ8HI3LyC3dr8Ux/Yzs2f8
CCQHAPHojRFWzJ5/wVfZo7F+c2DvTuIxzF5rqcNsamOREKtPnwjB/Bk49/6U
UkEslKUvfjmG+evhnN7r+CYBxili39n24kDtg73OmEkydFW+qjssgIOQ7Dd2
qqmpkHglUsFLCLNf0L035kM6MAT8v+0XwcH9xRCyU1Qm8EIDaf0ADnTtFnaT
oz5B9kiRqIA4DhbafA8XxOUAftfDlwLSOCg58vtNZmEBVHz/m/hbFgfsaZ+4
yxu+QKnTdnmJkzg4/59AQMRcIczl53erKuHA8+roQxe2r2B7JZhxCrtv32P/
UEVFSiCoUzPH/iKWbxrvBsaPl4JuyK1fpddwMHqhu7jM5BucvXYutgm73yTc
s/NVTuVw/w/rjPA9HFTr3E7siKgAa1pATQqWL/PpS1d34qpAVPTqXVF/HBxp
+FWVcwrTx++jcK5hOKj6qGif1lIHwuIZW6IfcNB7Lj43zLQeGoutHlzH8vl8
6qd3F4IbwFC3o/UWHgdFk2sOeStNEMc7ckpkCNv/+jRj5/tmCJ+4zXpyCgd5
LwPeqB//Dsd1mZDOPxy8iOz+fP1JCyxJPCrUkccDL/VnWejiDzhVqpZbqIqH
Gtomo8a/DX6Fxdbcv4KH4uL9bMli7dAkN+AR+wgPhIDzC/aGHXD3fp+v00es
fu+oNWNq6oKoogMjCsIEEFiNuucygsWtvf/NRVkC5OvuI0Vj+/wqDl5LVCGA
rUNI7IY3HkIt3C3Om2PvW+HCr1ApAvSF6TAL5RFA+t1Z7q7nREgcUCyI1yfC
spJ3rteeXmiTX/3+HutvYt+6oCeWvSCGb9ai/EeEm3fSP/hX9kJ3nI3C3Rwi
UE/G6+hb9kGa0xs9aVas39Ok+65XU4Dh46L5SYwEcibXZ6/w9cMIp9mcsxIJ
njVJnmt63A/RT+and9uRwIf1FY+U4ACMB5RdECSR4OB3ZZKn4yCIPQ11PLJE
gvv1mVm0tkEof791PQjr/1ck009ZSAzB3HqOi/ZFMrCI+ZLycEOQ+6P5X/p9
Mjh9nxZ5JUOFre744BvuZPjEreRg6EWFTflDSoZxZCj/jX+sTaFCWOi7fTll
ZBj35w7Slx8G8ux3vetEMhyk/2djEzgMCzTCRb5lMoRdzqyhKgxDSSJr21Xu
Xnjl2Tm7P5EKQ1Yb99ZleyFwpq712k4qvChf6+XT7oV6gm2549MhcNo2xp36
sBe0cuUk3/UNwl8jPr+9cb2gU/ozJfTLABzbUyUoUdoL+rfFTU7uGQAqx9fJ
4J5eGCI+TZ116IejLdfrPHb2Aa+si1TeOQp8CL2btGzdB5eCiGunCWQIPn72
KZtnH7xcaJ72VyHDoswZC7/oPjBSia2Zz8Lins3J+62uDw50qS7PeBDB+yad
mXcPBZ7Zx0+GKOOBe1j4nosEBS5qFtjdLMCBYH+Jy9UzFBBkkZWXEMNBfVea
mvZtCuBajoyQWXvAJU+G7bkVBUYLo/6+/NMFZ0PFetidKGAatfON1mwn+P3i
ckuMpMCIOd/r9Y52qD9w1D42lQKGa/O7yXVtEG4p6cn6BZu/f5Xna9kPMCXt
ETRspUCz9vxbi+wWiDvpqF2wQoHw7p5D2umN8NKd4e3+lwJzqTns/VkNsBjG
TGtj6QeFioJvt/PrYdD/1OqUUD/EDpkd4nBD8JPZNblSrB8UX43kPgqvgbp7
V29yS/fDFVsObo/cKjjR9yFTS6Eflh9dWKFMf4O0sjxpGeV+ED0sfIyHuwy+
4/a9iVTrBz+lL2WMsyXQzx6d7KvVD+c6DDZfPSqGzfOWLkxX+kEFJ2T0IaoQ
lG4UMXZc6wdBz30NmeEFYOMssBx5Hfv+Face/MuBezh588+G/eDZWWPPeJkF
E34pErfu9ENIz8ilQkYaUGv/iQYa90N40PWF4ZkkEEyZu6B7rx8u0N+r6DB9
gEfXd1h9NOmHhxrT33wOvYf4jbH/Xpv2wwMrd/iV7QP/9XNZL2Lck1FxO+6D
HfQda2D5ifHzu121BrseI2LyNoVAjNcp3xXtQt+ifUl7m4ux9U79ukfQMQ9H
hhEXQ59j+83lGZ8+OBeDTk6SrRoxewQpy8c7bBOREYvg4XzM3uoRqoniQipy
MdVLlr3VDwuG2Q+DxTKRiiHK07jRD/vmUzJf6mWja7fLxZaxeDzpiPy46ZCH
xOSeEs/r9sPtpJuNcu8/I/Vhn5gDl7HzMQpc4iAVIuINP+kijX7Ax77RV7lT
jPgFjVfHVLE60RIr+YL8FV2KXqouO4f517kZ9vVGKcpUVFM6erofhMIoRbs6
ytCLR8rSINcPkwzTXAeNcjTtT7q0KtUPdoOlcb9LK1C7/pcd1/Zh+4e1jHlE
VaMJugzPEk8/pGU4pPr9q0FKAs+PnGXvh+TfpsLN1ggdtTKS/7ZBgQ6H1NR/
gvVISGDNh7FEAXPhxcrtrfVo4M3dNMIkBZxS35R8cWpAMryhG++JFDj/4nAn
B6Z/9ou1Bj5ro8C+H63nG9ya0HQshKwhCkg/mZOUk2xG7U+3ubHlUuDjgRcS
co7fUZmEcU5UEgW+rRSHtQq1IJkZ1r6OCCw/M+TlDte0oH2ME+iSGwX2LOsV
HGf+gTrMrpYF2lNg+ePxpdG0H0iU6i7pbk6BsmOykg812lAq66saBy0K7Hxv
KDf4uh39KbfRKuSggDZzhSXzZCeyj4q86bnVB3r3ikkeHl2o8PjAK+b5PmCt
M+il7e1GVwQU9h3p7IOU7efkz4r2oKP+6h3rgVg9GXL87KSBQ3nrlx87u/TB
p1dEbqYgHFKOMzD4bNUH9G5VTnYcDs02bp+5pNEHlmU/zmaZ4lGhlnz7ydVe
kGo8uPOYAwFRud6AJ60Xfm/TXJwoISByivRwYFcvRJzKuHBinYBey/1TJ2X2
AmdmgsHT10S0/HH3P/3rvUC+8WYf3puEtlWypp78SIZ7ByWZwtx60c/ztLdc
fmS48psgi772onj//qWSZ2T40hF7LXWuFwVfeGr/SIMMjyT8br8x7UMXVHi4
r9JJcFNexr1dmYKOqNWOvRYnwZMhumfWbD8a5n4yJY69X/07T7MGiA2gH1r3
PKIWiHCqFrd+/NYAknbOE5qoJAKjJSMdVzOA1v5GiahdJ8JRpqtzgcGDyFxk
6O8apk85d+740iRGRbV5TaPxRgQ42msh7nuDitwZ7irc2HuczL4hc8CHitIV
I0fsMD14eqfK9b4JKnL+Li74D9NfnEe9pmJzh9Fmp33/hzgcJPk11/PEjKAi
i11ZnyS64XF4d5sSNw29MzUMWOrrgiyrbSl+0jRUVXY0CB/aBf55rke61GlI
/AjV/sFGJ5hkKyTov6QhKZ/jH4t/dEDL67/BRyk0ZPyl8y//nTbwU9zK/pw2
hr6oqzs0SjbD4ebwPWfP0dH+nXNJZVhf1qGz6U30mkKPvdK9BfSLYUjnBl49
YQqFFKQySiKLYMQ153NNyRTSCTnekSdcCEIdJ2NGJ6cQ1yvz/JkLuaA94aoz
dG0a8T8Dz4t7PsJK+KzrZ9EZlOLCbil7JBbZMPErTnfMIj/+L43jr+LR6W2p
GTA1i1LJ4StDLYmIjQcOZm6fQ6v7O9zbz6ehm91dSx/PzyGD4UvjR7ey0f5R
9ksX/q/i8o6n+v/iuOwiklGRRIUQUmSko6KyIvGV0SSKhlAhpYyMkJKszOy9
N29773Xd6d4rMzsykn6f35/Px/sz3u9zzuu8zyt9FvmFRcoetS1EXHqsaqf9
51Cg470dtnO1yEq51mveaAEx2ySl69yrQ4ONzBnmTxdQnnjWxQjMh168gOvo
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
GArPE9D/AK/YsJ4=
       "]]}},
    Axes->{True, True},
    AxesLabel->{
      FormBox["\"y\"", TraditionalForm], 
      FormBox["\"y'\"", TraditionalForm]},
    AxesOrigin->{0, 0},
    DisplayFunction->Identity,
    FrameLabel->{{None, None}, {None, None}},
    FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
    GridLinesStyle->Directive[
      GrayLevel[0.5, 0.4]],
    Method->{"ScalingFunctions" -> None},
    PlotRange->{{-1.124525, 0.591238844263263}, {-1.0703297854567058`, 
     1.0524532359921215`}},
    PlotRangeClipping->True,
    PlotRangePadding->{{
       Scaled[0.05], 
       Scaled[0.05]}, {
       Scaled[0.05], 
       Scaled[0.05]}},
    Ticks->{Automatic, Automatic}], ",", 
   GraphicsBox[{{}, {}, 
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], FaceForm[Opacity[0.3]], LineBox[CompressedData["
1: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
akFFiqz9c0lMaQGsAhK/H7hPRWK0/4L9eRZA4knZwRtPqUhk5+0HFZvz8Jqs
EO4YSEWSlYgsmW+dB6X3hx6YRlCRLgjXL+/LmgfmCgpKoTgq0pBhxCP23fn/
wlIkqzxpF/9JzmM3nweL2wO14mlUJJ3AiGPMMA/qqwFZTh+pSDfiVxko2OZh
JiWixPsLFamB2XJpfH4OVon2Rne/UZFK1u5fafg9B4fTgsdYMqlI2sY5Zvlp
c7BUoE+M2D1fjX5CTPaag3/4twx517/nXllxqN4cmLt+n97ejV/N8LjbV3IO
wpmHJf/t3k9/ZNT92f45sHv3IjAjmYrEazxEHzI2CxTBbInS8VSkWq/Bf2kl
szCqn2MbG0lFyunrDavf3auSSm05a4KoSFQjxrr7HszC+9x8wQYvKtLeFO8U
I81ZCGz9Jf/VlYpkI9rUWC00C8cVX5qaWlGRLmuryl2nm4U3Mj6t8/pUpNKN
TOve4hnIOi4tZqRGRQKR62yGD2ag7myu7qeLVKRpYwNmrjMz0FhT8aFTmIok
bTDaJTA4DRLPD0TPslORBk9njHq8noaGoHbZOXoqkqOYURSXxjRQ2M0xkhco
SWp1ItSWxClIevGvKLmKknRi/5fvve5TMB4zSnEgh5K0Ja0inCE9BejgtnFy
AiVJVvURm2L2P5gPdPJVtaMkWTymkln8NAnelaXP3GgpSXwin4IMbCbBqrIm
qnycgqRTR/QSE5qEvi+n9FzrKEiFqwnSPJ8nQH5ZP5YnkoIk/t11WD9nHIIF
hX2OslGQnhU+otVw291ra/VjXy/s4Jm5kYjC8+NAjmWM+py7g1V9c2vXi8dg
QPHle1epHXy6r56duX0U/t4/QKOMtvG9jePSP3f3AbuGxd5Iqm38uvpveJP5
KJCIt+/eq9rCvKKsSteWRiA3UqnpuN4WNnPRHU74NQJ5zbcSG/m2MGa7K63u
PwIvOmIYfy5v4lUpnYjb6iPwVPKwnW7NJh69Zuyae2wE4lVjLS6+28SRVs+5
dQaGIXTyzCjN003sdoTrk/TnYUhKe1t4w2QT8we8m1B2G4bvfvvNO69tYgnd
p6a+hGEgxi6fUDq/if87nKHYyjgMZ/Ypb6qLbuIr5ZwPxFqGQPGO8cs3IptY
5E/lG7/EITATkF6ok97EjFel1YqthiC7Unzg3m685T2q0o0SQ3Cy7Jxkndnu
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
/T/AUvzKtMCwP8cL174j9Pw/W6uXcA==
       "]]}},
    Axes->{True, True},
    AxesLabel->{
      FormBox["\"\[Theta]\"", TraditionalForm], 
      FormBox["\"\[Theta]'\"", TraditionalForm]},
    AxesOrigin->{0, 0},
    DisplayFunction->Identity,
    FrameLabel->{{None, None}, {None, None}},
    FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
    GridLinesStyle->Directive[
      GrayLevel[0.5, 0.4]],
    Method->{"ScalingFunctions" -> None},
    PlotRange->{{-0.0016975864979491303`, 
     0.0028293108298726223`}, {-0.0015995380433887255`, 0.002649732880294996}},
    PlotRangeClipping->True,
    PlotRangePadding->{{
       Scaled[0.05], 
       Scaled[0.05]}, {
       Scaled[0.05], 
       Scaled[0.05]}},
    Ticks->{Automatic, Automatic}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.715217574811864*^9, 3.7152852457777696`*^9, 3.7153625429727755`*^9, 
   3.715362599864308*^9, 3.715362707103405*^9, 3.7153627379738584`*^9, 
   3.715362802421919*^9, {3.7153628588874445`*^9, 3.715362874233613*^9}, 
   3.715362936237946*^9, 3.715362981476921*^9, 3.7153631212718296`*^9}]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.715216176116166*^9, 3.715216176148164*^9}}]
},
WindowSize->{1350, 685},
WindowMargins->{{-8, Automatic}, {Automatic, 0}},
PrintingCopies->1,
PrintingPageRange->{32000, 32000},
PrintingOptions->{"Magnification"->1.,
"PaperOrientation"->"Portrait",
"PaperSize"->{612, 792}},
FrontEndVersion->"10.1 for Microsoft Windows (64-bit) (March 23, 2015)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[558, 20, 102, 1, 30, "Text"],
Cell[663, 23, 192, 3, 31, "Input"],
Cell[858, 28, 537, 16, 31, "Input"],
Cell[1398, 46, 103, 1, 30, "Text"],
Cell[CellGroupData[{
Cell[1526, 51, 1721, 44, 68, "Input"],
Cell[3250, 97, 33644, 864, 302, "Output"]
}, Open  ]],
Cell[36909, 964, 273, 9, 5, "Text"],
Cell[37185, 975, 1734, 50, 76, "Input"],
Cell[38922, 1027, 271, 9, 10, "Text"],
Cell[39196, 1038, 108, 1, 30, "Text"],
Cell[CellGroupData[{
Cell[39329, 1043, 440, 11, 125, "Input"],
Cell[39772, 1056, 3231, 98, 226, "Output"]
}, Open  ]],
Cell[43018, 1157, 185, 3, 41, "Text"],
Cell[CellGroupData[{
Cell[43228, 1164, 1464, 43, 133, "Input"],
Cell[44695, 1209, 4221, 115, 218, "Output"]
}, Open  ]],
Cell[48931, 1327, 243, 8, 39, "Input"],
Cell[49177, 1337, 1893, 58, 270, "Input"],
Cell[CellGroupData[{
Cell[51095, 1399, 4009, 106, 215, "Input"],
Cell[55107, 1507, 3552, 94, 112, "Output"]
}, Open  ]],
Cell[58674, 1604, 271, 9, 8, "Text"],
Cell[58948, 1615, 1182, 37, 57, "Input"],
Cell[60133, 1654, 264, 6, 33, "Input"],
Cell[60400, 1662, 271, 9, 8, "Text"],
Cell[60674, 1673, 273, 9, 5, "Text"],
Cell[60950, 1684, 271, 9, 8, "Text"],
Cell[61224, 1695, 273, 9, 5, "Text"],
Cell[61500, 1706, 118, 2, 31, "Input"],
Cell[CellGroupData[{
Cell[61643, 1712, 19805, 617, 817, "Input"],
Cell[81451, 2331, 745, 17, 33, "Output"],
Cell[82199, 2350, 574, 10, 31, "Output"],
Cell[82776, 2362, 749, 14, 33, "Output"],
Cell[83528, 2378, 1568, 43, 56, "Output"],
Cell[85099, 2423, 1568, 43, 56, "Output"],
Cell[86670, 2468, 3164, 94, 55, "Output"],
Cell[89837, 2564, 3165, 94, 55, "Output"],
Cell[93005, 2660, 485, 6, 31, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[93527, 2671, 69, 1, 31, "Input"],
Cell[93599, 2674, 96, 1, 31, "Output"]
}, Open  ]],
Cell[93710, 2678, 126, 2, 31, "Input"],
Cell[93839, 2682, 1264, 31, 72, "Input"],
Cell[95106, 2715, 273, 9, 5, "Text"],
Cell[CellGroupData[{
Cell[95404, 2728, 1278, 35, 52, "Input"],
Cell[96685, 2765, 902, 25, 33, "Output"],
Cell[97590, 2792, 14031, 379, 200, "Output"]
}, Closed]],
Cell[111636, 3174, 273, 9, 5, "Text"],
Cell[111912, 3185, 271, 9, 8, "Text"],
Cell[CellGroupData[{
Cell[112208, 3198, 977, 25, 31, "Input"],
Cell[113188, 3225, 805, 23, 33, "Output"]
}, Closed]],
Cell[CellGroupData[{
Cell[114030, 3253, 650, 16, 25, "Input"],
Cell[114683, 3271, 17994, 479, 200, "Output"]
}, Closed]],
Cell[132692, 3753, 273, 9, 5, "Text"],
Cell[CellGroupData[{
Cell[132990, 3766, 4206, 121, 397, "Input"],
Cell[137199, 3889, 987, 25, 33, "Output"],
Cell[138189, 3916, 872, 23, 33, "Output"],
Cell[139064, 3941, 1273, 35, 54, "Output"],
Cell[140340, 3978, 744, 14, 33, "Output"]
}, Open  ]],
Cell[141099, 3995, 273, 9, 5, "Text"],
Cell[141375, 4006, 271, 9, 10, "Text"],
Cell[141649, 4017, 271, 9, 10, "Text"],
Cell[141923, 4028, 273, 9, 5, "Text"],
Cell[142199, 4039, 271, 9, 10, "Text"],
Cell[142473, 4050, 271, 9, 10, "Text"],
Cell[142747, 4061, 273, 9, 5, "Text"],
Cell[143023, 4072, 209, 3, 30, "Text"],
Cell[143235, 4077, 2072, 57, 126, "Input"],
Cell[145310, 4136, 92, 1, 31, "Input"],
Cell[145405, 4139, 271, 9, 8, "Text"],
Cell[145679, 4150, 271, 9, 10, "Text"],
Cell[CellGroupData[{
Cell[145975, 4163, 1081, 23, 72, "Input"],
Cell[147059, 4188, 14084, 369, 200, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[161180, 4562, 9506, 260, 461, "Input"],
Cell[170689, 4824, 839, 12, 31, "Output"],
Cell[171531, 4838, 2516, 61, 83, "Output"],
Cell[174050, 4901, 1115, 19, 33, "Output"],
Cell[175168, 4922, 1355, 30, 33, "Output"],
Cell[176526, 4954, 1273, 26, 31, "Output"],
Cell[177802, 4982, 785, 11, 31, "Output"],
Cell[178590, 4995, 69040, 1320, 221, "Output"]
}, Open  ]],
Cell[247645, 6318, 273, 9, 5, "Text"],
Cell[CellGroupData[{
Cell[247943, 6331, 163, 2, 52, "Input"],
Cell[248109, 6335, 165, 3, 31, "Output"],
Cell[248277, 6340, 604, 20, 33, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[248918, 6365, 1595, 43, 72, "Input"],
Cell[250516, 6410, 152306, 2534, 139, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[402859, 8949, 4815, 120, 132, "Input"],
Cell[407677, 9071, 192319, 3185, 233, "Output"],
Cell[599999, 12258, 3099, 66, 110, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[603135, 12329, 3383, 86, 192, "Input"],
Cell[606521, 12417, 387, 5, 31, "Output"]
}, Open  ]],
Cell[606923, 12425, 137, 2, 31, "Input"],
Cell[607063, 12429, 271, 9, 10, "Text"],
Cell[607337, 12440, 217, 5, 31, "Input"],
Cell[CellGroupData[{
Cell[607579, 12449, 265, 4, 72, "Input"],
Cell[607847, 12455, 454, 10, 33, "Output"],
Cell[608304, 12467, 697, 21, 33, "Output"],
Cell[609004, 12490, 633, 20, 33, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[609674, 12515, 71, 1, 31, "Input"],
Cell[609748, 12518, 70, 1, 31, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[609855, 12524, 1651, 46, 92, "Input"],
Cell[611509, 12572, 246, 3, 31, "Output"],
Cell[611758, 12577, 841, 24, 33, "Output"],
Cell[612602, 12603, 15760, 405, 186, "Output"]
}, Open  ]],
Cell[628377, 13011, 385, 5, 52, "Input"],
Cell[CellGroupData[{
Cell[628787, 13020, 7137, 203, 391, "Input"],
Cell[635927, 13225, 669, 13, 33, "Output"],
Cell[636599, 13240, 912, 24, 33, "Output"],
Cell[637514, 13266, 830, 20, 31, "Output"],
Cell[638347, 13288, 340, 5, 31, "Output"],
Cell[638690, 13295, 70262, 1356, 148, "Output"],
Cell[708955, 14653, 96526, 1614, 233, "Output"]
}, Open  ]],
Cell[805496, 16270, 92, 1, 31, "Input"]
}
]
*)

(* End of internal cache information *)
